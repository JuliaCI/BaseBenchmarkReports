cset: moving following pidspec: 21443
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.399192419 seconds)
loading group "string"... done (took 0.597723821 seconds)
loading group "linalg"... done (took 7.636919393 seconds)
loading group "parallel"... done (took 0.17498965 seconds)
loading group "find"... done (took 1.204981307 seconds)
loading group "tuple"... done (took 2.110720634 seconds)
loading group "dates"... done (took 1.338552229 seconds)
loading group "micro"... done (took 0.245215444 seconds)
loading group "io"... done (took 0.976695532 seconds)
loading group "scalar"... done (took 42.032922324 seconds)
loading group "sparse"... done (took 13.924234167 seconds)
loading group "broadcast"... done (took 1.045100279 seconds)
loading group "union"... done (took 15.130594054 seconds)
loading group "simd"... done (took 4.862052563 seconds)
loading group "random"... done (took 9.826605858 seconds)
loading group "problem"... done (took 2.017842725 seconds)
loading group "array"... done (took 22.889010394 seconds)
loading group "misc"... done (took 2.059593023 seconds)
loading group "sort"... done (took 3.497588198 seconds)
loading group "collection"... done (took 19.804634262 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.574153096 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143824932 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150611761 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.131317558 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.205067062 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156417589 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158847094 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099333967 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.964863587 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.18232255 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154556719 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.529584321 seconds)
done (took 5.188745059 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.315594627 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095265704 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105067064 seconds)
  done (took 0.879080305 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078077669 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146982456 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095357993 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078887563 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09600113 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078043682 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.099416356 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.093031091 seconds)
  done (took 1.371676425 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087901749 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098279471 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082372327 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.098176666 seconds)
  done (took 1.047724869 seconds)
done (took 4.38397956 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.739453771 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278307285 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.206208875 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.467650436 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19836445 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.218328583 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.68305968 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.363460952 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.255299308 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101420232 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.145269691 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.394172378 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139147202 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687485835 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09345213 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126674704 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.17861889 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.479774752 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083028301 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111374825 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117888621 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142459524 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.136504701 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093219916 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185980304 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082547733 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194970451 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109219581 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081513539 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.277270887 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202444067 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.694005057 seconds)
  done (took 10.98964181 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.1120432 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13532559 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097607261 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138659525 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134831099 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099976971 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085476059 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097634045 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122889389 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176717266 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130320989 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121664983 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095564054 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082638405 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115506405 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246570001 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124066902 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102250545 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103884334 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090245099 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.14152612 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113962607 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109281666 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094485456 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167632609 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224942157 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111069007 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126521899 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100010991 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113899814 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143833564 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145880846 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096322197 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081312508 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173439487 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124787017 seconds)
  done (took 5.180165905 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.055773881 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190821986 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121625605 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.17087629 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081736393 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143859874 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095309716 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113675583 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258258749 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.109266905 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176593138 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145283942 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100111629 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098043422 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082972547 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097622317 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.619784444 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.123055402 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150756916 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115302952 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103113143 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084329344 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365123359 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107189698 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080091028 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09888878 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066247215 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1618795 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099454168 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.16480559 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125915373 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080904058 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136035107 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.217387265 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.132660566 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108707919 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137479811 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09905895 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078943354 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177460286 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105794323 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096403744 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103978128 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13521986 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13510235 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098810542 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08165169 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.202096308 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097433394 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114666473 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.997304036 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182788091 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091554292 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098393001 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079056875 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.332827859 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116102027 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080964226 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.096684597 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.299453189 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.208356822 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097365794 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080901769 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096386452 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082275929 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385233383 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098284168 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.032794021 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082818134 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108692598 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084161599 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099156308 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109160647 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086730237 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11608949 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079788592 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.10001562 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079587505 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097495679 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082227294 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108054189 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10172567 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081503737 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165504465 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082060694 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118409641 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128160637 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084181174 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09633217 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130912617 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083017043 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097378271 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13399346 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081697275 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108832378 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09955506 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142586512 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08238378 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.18570193 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081311866 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.126161762 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078917681 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126350236 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100831776 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129698462 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112074895 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082883152 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102506565 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078666932 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096247282 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148577258 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096298653 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083161081 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.102520871 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111264027 seconds)
  done (took 22.989471369 seconds)
done (took 40.898643789 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.320241173 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103381136 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10320475 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102956779 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10079417 seconds)
  done (took 1.490181395 seconds)
done (took 2.223970279 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.165485392 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116410545 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095506598 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.128326752 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077861684 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.133803283 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.132516295 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09470639 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.132884294 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094031533 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.126935114 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078479407 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09304451 seconds)
  done (took 2.226010059 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095557028 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114978504 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084110491 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112247531 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079070799 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113828746 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09494224 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12108962 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11492956 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087545935 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09532044 seconds)
  done (took 1.837125553 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094452578 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114125764 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084499737 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112181609 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078195254 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112863267 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094177385 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119038682 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112177405 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087560148 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095518617 seconds)
  done (took 1.834534215 seconds)
done (took 6.618904096 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091029588 seconds)
  done (took 0.815810125 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.926702879 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.946827781 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113720006 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.152743635 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.317661269 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.194606908 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.487319387 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126613183 seconds)
  done (took 11.182552182 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.147092428 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085800711 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.102433767 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086278615 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.106807574 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084509601 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103093092 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100088689 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087713541 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104736583 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084181972 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104356899 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100809792 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087298107 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103841089 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085657405 seconds)
  done (took 2.368759637 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119251311 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118119956 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106427222 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108923211 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086077169 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103843823 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106093168 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088245986 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103875155 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105736351 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092332376 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108102857 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105213996 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081141189 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108005317 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110728206 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088607563 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107946272 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10874469 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091979398 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10931253 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097387914 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089827551 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109065287 seconds)
  done (took 3.294613845 seconds)
done (took 18.393190461 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159456906 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108139924 seconds)
  done (took 1.001594441 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095093675 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115666155 seconds)
  done (took 0.948557671 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097309691 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095639639 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.125079974 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111634713 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082278007 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098806332 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122257471 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082431469 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099451985 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098534081 seconds)
  done (took 1.755205334 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08245763 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110194573 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100826533 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097111105 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10831779 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096829461 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.092080797 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101477957 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112294107 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078926355 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104720513 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116498318 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08827293 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118174074 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.108230066 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.102029437 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087588705 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101886501 seconds)
  done (took 2.548650165 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080578033 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096590816 seconds)
  done (took 0.917369969 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082194572 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094214814 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083608833 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099695691 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096139793 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078874722 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096795053 seconds)
  done (took 1.370044722 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.436786761 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135513174 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.265700744 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086371023 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122604007 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.304820132 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096578995 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08425042 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102581308 seconds)
  done (took 2.436206916 seconds)
done (took 11.718020603 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093825134 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115229976 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114216354 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.466136759 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107370948 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097746962 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158649222 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.255116167 seconds)
done (took 2.157942981 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.148086422 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.594428148 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.427105679 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.234456582 seconds)
  done (took 2.00270412 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.404095495 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.100481045 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084272312 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084027068 seconds)
  done (took 1.422083332 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080770166 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102110297 seconds)
  done (took 0.930924342 seconds)
done (took 5.254369511 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081795734 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098791953 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080426672 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099903244 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.113308348 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.09878408 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079997664 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.098268791 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082385452 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.102068106 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098562482 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.082838889 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098609177 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08093249 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096619042 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08289539 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09936216 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08019773 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096967385 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079732304 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.099847272 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082428359 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096983777 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080685278 seconds)
  done (took 2.97752439 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100072243 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098273421 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10271086 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087859077 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105082129 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087595039 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104578407 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100138162 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088405663 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102340951 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103149896 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087834606 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102336023 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087102679 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102233091 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10431658 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088409284 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100928751 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084836135 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105459543 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104724494 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083776187 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104495051 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088258339 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.103473955 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104565422 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084729334 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100592587 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105095314 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086215115 seconds)
  done (took 3.660808684 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.0859053 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094245149 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080115216 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103750884 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080517858 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099674853 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079439259 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098403932 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080625554 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097829349 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08149475 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097790269 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079837498 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099191189 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.099185542 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08429892 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114636261 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080972851 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09797458 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080651059 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.10118115 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081145977 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097882401 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079250525 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09783409 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079301993 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097923022 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079987181 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098295538 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079528533 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101458117 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100989684 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081126747 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.104511893 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084120113 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096979358 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084611395 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096842395 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.081246875 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096897185 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079625277 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097563967 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080576484 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104522199 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080065507 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100416123 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080451208 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09966483 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080787019 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101754219 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.097212991 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.081160664 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.100236387 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081460991 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.10183519 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079448377 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098813154 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079201881 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099738587 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080804904 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097618183 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.07942639 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099958553 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082678945 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114221986 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10444706 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080417259 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.099763352 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081611298 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.1008624 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.082958888 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.113079255 seconds)
  done (took 7.33949348 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083005343 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106947607 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080133436 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098185503 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078154388 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099331596 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102033048 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081603477 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100316789 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087586591 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098961273 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081883521 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101159635 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110223781 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081584164 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100099509 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087459981 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097483809 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081407208 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10258729 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081006585 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102704061 seconds)
  done (took 2.805065533 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20842083 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105023842 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142638446 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107468796 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084405704 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107464878 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103470585 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086616635 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105780583 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08581669 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104784876 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105565303 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085822266 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103857107 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103300246 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086151631 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106043065 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085999054 seconds)
  done (took 2.682558156 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093534523 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099545835 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.213630688 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09817035 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098256705 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083969947 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1041854 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107350412 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084295146 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099121425 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091534512 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101021662 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100497854 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081594064 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101603768 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081328078 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101072494 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081575589 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109410772 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104843863 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103576627 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091281552 seconds)
  done (took 2.997752632 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096933528 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100949851 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118693077 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084732158 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095700061 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079662507 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106786739 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081739143 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10475119 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100369658 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082269446 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097008417 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086685999 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098670711 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104729965 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081931963 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100821966 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081727163 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100420004 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077410595 seconds)
  done (took 2.649267579 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102990562 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100355616 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099816984 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092492759 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099995996 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082632811 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108733121 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100626104 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08263604 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125877207 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099904527 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082998647 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109516928 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106269523 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099241142 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092319345 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109305641 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109348539 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0827044 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100144082 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12554775 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083925602 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111168553 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102281638 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085207793 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103617348 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102697659 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091132722 seconds)
  done (took 3.562276607 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080972687 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098187585 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081958779 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097101209 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079314965 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096714959 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079425192 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095748637 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081369094 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095897143 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081755578 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097883667 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081750314 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100709197 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083403455 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101513318 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0836437 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098833452 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080584154 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099208077 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083412759 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101785741 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083105317 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099250316 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080445291 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101105123 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080874042 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099414626 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083274141 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099010533 seconds)
  done (took 3.478532205 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091447047 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106631728 seconds)
  done (took 0.969544953 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079221838 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115090677 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079134548 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103440654 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086547524 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100248464 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107597101 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087257875 seconds)
  done (took 1.527711383 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097058193 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110878724 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083391926 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11236043 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109881327 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099931123 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17432447 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104355621 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109004315 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082627541 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.115737266 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082856197 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108926078 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084150205 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108324217 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089550159 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.10141798 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10761573 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087014818 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101290542 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086056671 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114876699 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10382224 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.079630954 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102214073 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093139732 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114359477 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100661395 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085354396 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107798829 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08762206 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093782263 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082604347 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099973733 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097449188 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.091580135 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116645463 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085697334 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109859733 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100626607 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094063701 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094963842 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.104314987 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.088900896 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11054509 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083007565 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10142381 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076724324 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097632796 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084362202 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096343223 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099199273 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077550756 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107047393 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085384828 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111686162 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080461187 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101165084 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.101841284 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085934387 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107084212 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084624973 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102208097 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082193806 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109907287 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.103512753 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092848418 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095456778 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.076171876 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098460388 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092927112 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12379957 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.107610608 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084040374 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102511179 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080773577 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103920265 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101682751 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08882778 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106908523 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082262134 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107606139 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108266565 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082883953 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102862433 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108920503 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.081330295 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102318732 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.07985084 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118887098 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081186206 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098135672 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097455407 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093593734 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.103292947 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081828268 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098534627 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090570413 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09719937 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103043573 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086200459 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102063621 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094299181 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106515601 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107230496 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091825041 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107638293 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082659858 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104643299 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097281367 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084127308 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099602194 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089772435 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094066131 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085573981 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.100724935 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083237683 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109300284 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097748005 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082951899 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108998601 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088306301 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100064028 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078980175 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102988552 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100165022 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086701993 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.109723365 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080846661 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09640114 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.07811403 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103691251 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10104497 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086213426 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10640277 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086129429 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095480794 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098361574 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088391195 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110513695 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083103235 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102389231 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107054666 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083542459 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099239821 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.089655247 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.103552981 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081895888 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107106931 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101065903 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078443883 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103773299 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085135753 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099295212 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086446922 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105384713 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102560221 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.084607733 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099663407 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089238384 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102291008 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081040443 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100483427 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081101381 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110816742 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10364252 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078424651 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097337334 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090348464 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.09920733 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099552969 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081883819 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10264955 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084257643 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098637112 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082151481 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.10262369 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113951639 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089163629 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102309289 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088354198 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112355462 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100564707 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085544944 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100959214 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084012409 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102744865 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091728524 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10711976 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106654594 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084915189 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098099098 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089013836 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109414642 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099892827 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080290417 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099226064 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086614201 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106391459 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086862751 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102273897 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099116902 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083000822 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105017518 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085663056 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101062996 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082299315 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107012887 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100109416 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090210565 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102695696 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.1114934 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086369301 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096417337 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086872749 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099269733 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088911842 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096544515 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080415439 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100820578 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101922768 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082353653 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103898777 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077344407 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10832264 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09077456 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101552624 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082540367 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101412042 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107645199 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084159413 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105955739 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086870897 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108409014 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112108438 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082429594 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103753241 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094057047 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102663298 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077049361 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107245597 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099486809 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082962954 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100000363 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081897006 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104770493 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092576033 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108807609 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096026001 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086006734 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099679582 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.0826572 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096736738 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087460312 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104339526 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084237223 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109471898 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102620559 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087176906 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106581504 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08264087 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103453801 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103284052 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086061013 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102691882 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085320013 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100723384 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086569516 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100469718 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080704058 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103183946 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101508214 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083380882 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107195539 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082880309 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101753028 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086102771 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103260961 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101660033 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08337641 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100546751 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086731392 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101920183 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082918579 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104431152 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078546557 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10894007 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100591189 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091319185 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102121052 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079897893 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108598388 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085475413 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108856662 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10226065 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084356948 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103435201 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083228078 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104769679 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090097895 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099345372 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112981477 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09220673 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102587524 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086897725 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102202156 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102979753 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082205795 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102376817 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085478565 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101532591 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084357097 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107116305 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086122112 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101979268 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103728931 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084491503 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.101791784 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084983132 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.098059113 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084554706 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.105267082 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085583184 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116358952 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107679603 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085389761 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.104355908 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087886516 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104797495 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.08286516 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.114443611 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114666276 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084440528 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110058606 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101297911 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085776383 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113632437 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077625264 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100174613 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08117026 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.10069019 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109737338 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084578186 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112228489 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.0829149 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101627256 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081684364 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103461823 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.089799564 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096144646 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099102543 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087636503 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.101179498 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082683042 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10277751 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086210063 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103573773 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112903052 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083537599 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102475422 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084557862 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099274172 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082948932 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101220794 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086740287 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10471455 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080738253 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.1006665 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102638629 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084535248 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102823453 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084474751 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104232682 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091860187 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102752105 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105210704 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088272992 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097042343 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086215849 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102901326 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083670142 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101275086 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087890036 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106197667 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103861121 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092648878 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102537785 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083816487 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102706247 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099892553 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083433701 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102038541 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083978495 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101252338 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085606089 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110999108 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081446607 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.10554375 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101702379 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084790207 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110152995 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085582369 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.10604354 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109988169 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.084207843 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103845345 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091639885 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106711428 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105349466 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085304187 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103382112 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090800624 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101579213 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090100848 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103051173 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08472656 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10381304 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100071586 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084152572 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102659575 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083272541 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109291418 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084515316 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101749541 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100734357 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082074848 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103305178 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088260396 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110848464 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085785373 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10540964 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078376206 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.10015031 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103401244 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081666218 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104313937 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.087046298 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109401691 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086104279 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104066641 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101506473 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093271202 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110001101 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087278995 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100528692 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087613826 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104195079 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105417038 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085109762 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102108479 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085085929 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107030558 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085077475 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102129016 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11027127 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087674218 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104555062 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08579154 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103546449 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083417253 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098919828 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084474793 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105708176 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108670694 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087005787 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10332801 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095345723 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100538582 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084018839 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10652331 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101586863 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088321526 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097949865 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08558455 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104268841 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085041507 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09788428 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101808975 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081901735 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104964075 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082800589 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098363119 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095449221 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112348437 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105750598 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083813846 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101777783 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079739639 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09798601 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083222771 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105003012 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.086206414 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114127702 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102204529 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083623003 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098897955 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085016036 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106149609 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087063648 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101472372 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.078944139 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.101705783 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106365937 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089910585 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101142603 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.084417451 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106779799 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086686614 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101483223 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106800263 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080797945 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106759271 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097947713 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104943806 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084488501 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109724676 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111786561 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085249934 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098930495 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08506396 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106540591 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103509522 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.0851585 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105359628 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100415265 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107797227 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102042722 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083102815 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105315106 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083454177 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112227633 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085350071 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104119116 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10785731 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086078326 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113027754 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086591492 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112452198 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106033577 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088047769 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10287004 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083940491 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102098711 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082934305 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104722618 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103901429 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090158306 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112998075 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084018461 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115212126 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114114829 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.0859133 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100302069 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08383867 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102910907 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079743047 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10923637 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084026941 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102656424 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.103480211 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085141851 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107939687 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09285798 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.108257251 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086679289 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106371172 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078043821 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107932684 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105944583 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08500905 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100232165 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084702894 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105088675 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088330104 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107856596 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.080976058 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105778663 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105060025 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084772842 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098268093 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090928971 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102748002 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.0866711 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103433443 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084118652 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104768304 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107065349 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089925089 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10474592 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086368905 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.112881045 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106485356 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08149574 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100546507 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089839268 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101265461 seconds)
  done (took 58.204866348 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146141398 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081495748 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099262659 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080257673 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112924999 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099858003 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080420318 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099447212 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08165857 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102265922 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080023446 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098908499 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109798987 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125060424 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093698725 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104633077 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098726252 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081624547 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098845361 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081382185 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110598453 seconds)
  done (took 2.890362834 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10598651 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118072432 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115719642 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119088882 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089953899 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115336563 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114811669 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116379879 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099573775 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111946047 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118373769 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115462811 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092010361 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111034623 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111718901 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094606029 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119612047 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11003843 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116331315 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096012367 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113794787 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11469536 seconds)
  done (took 3.241173554 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084501991 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102712457 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085766854 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098034386 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084365504 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098558828 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087950915 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100839966 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086550301 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101956333 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.102337149 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.082783064 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104302133 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079385787 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102115032 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082435138 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151357592 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107542353 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083257244 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105153829 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.099364399 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088435395 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102780529 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08347965 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.106425568 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.09198425 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.109500495 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085265557 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107734486 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085048805 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.108316336 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.104788 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.089385543 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107750885 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086167031 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.11135146 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087155158 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.107802356 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.083122568 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.105663865 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08797946 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.103977056 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087069171 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108767749 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.102576612 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.081934656 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.105398074 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084034296 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098488759 seconds)
  done (took 5.566678176 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105053986 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161178811 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085805897 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143941605 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121437923 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112941672 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088291251 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142533809 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103077583 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082545224 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122486344 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120462595 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10390594 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08954872 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111093857 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103299597 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085688446 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103414953 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10780548 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084041901 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109371021 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091460094 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120896653 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117932936 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108699792 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083131326 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103773194 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108355994 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099388685 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110040854 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109595402 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090626546 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12187428 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109771174 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083739215 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107061874 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122076683 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105054877 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087233765 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10188487 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087135119 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109298989 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110877245 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10223181 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104568381 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109332058 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084403931 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101197096 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117883149 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086952348 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113596497 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119580697 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108376839 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085263944 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110419819 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120281579 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085267433 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103036415 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088479267 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118913147 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102069949 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088898181 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120293614 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106736023 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112850952 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100155446 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110234394 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108741335 seconds)
  done (took 8.154860875 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094905132 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112269463 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121169145 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12154517 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091283482 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111542963 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111037349 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091694619 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112655276 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116057775 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110977877 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134362053 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086979125 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114856069 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112196734 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092358565 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111259498 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1117475 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091990411 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111840425 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111535751 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120898357 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092785406 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120407363 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142082097 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106866145 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11145059 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092227516 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12096282 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111457361 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123873689 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091624784 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111970572 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122359511 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.1244907 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.0911108 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104459603 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111473832 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091825458 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11231707 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106540568 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120708962 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092076831 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106137149 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111720648 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09213245 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121429303 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124449891 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115565662 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117802072 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.092163257 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122406008 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11136622 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111849488 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10111059 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147495198 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121936559 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121758254 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112049312 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121631547 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12040929 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.109313472 seconds)
  done (took 7.716209948 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10865917 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116265308 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118426013 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100707556 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083355352 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110048238 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083856728 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103344768 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114695122 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095784413 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117619579 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109689816 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092383131 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118330165 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110176296 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112931485 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089423952 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110335364 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116223803 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110412898 seconds)
  done (took 2.961263492 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095567661 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124865337 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086041012 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112478524 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10909685 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091550991 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108213694 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108440425 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086816849 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108208743 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096335243 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116675041 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106589358 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091980571 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117545011 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115342196 seconds)
  done (took 2.510638901 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098379504 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11834704 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121118254 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085075452 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105817695 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.102637664 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.085163514 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101318222 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082534148 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122252492 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085442802 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109945032 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105616342 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083180487 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102350458 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08875488 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102153254 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083150217 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105100681 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120488604 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096909578 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104283803 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106079341 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087939657 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106382564 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091237229 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106869809 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104985626 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083878 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106300795 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085876229 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114068277 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102432162 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08417332 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10440535 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082699862 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105471148 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.106274824 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.089230177 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105620341 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084194468 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106504884 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085460677 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107067404 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101364316 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.086678831 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101720689 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09166665 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104864857 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085155726 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105941385 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107075514 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087530612 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117853161 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110124 seconds)
  done (took 6.306870389 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099196266 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111179922 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080556721 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104602799 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088216815 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108442358 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109134839 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086929881 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107538743 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083203775 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107994962 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08919957 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108291133 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109670242 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088418145 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110775292 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081151586 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107954798 seconds)
  done (took 2.624866075 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091897999 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105452174 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092615204 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106262714 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085235329 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109306745 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081226149 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104596186 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103759261 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085888917 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105733098 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087960822 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10445858 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088507324 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106110233 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086508296 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108395709 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10481189 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085787458 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102023286 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088275342 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103661279 seconds)
  done (took 2.982630556 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.114568279 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.122101508 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092387185 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.227217809 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103027066 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131582604 seconds)
  done (took 1.636005598 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10953289 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121632589 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107514301 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10782255 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116575395 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107950496 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087933936 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109154222 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118395448 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103168173 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109057216 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119050145 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118594007 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097779768 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114597934 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115751882 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108633501 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088227074 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106810325 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129485784 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088370126 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119122127 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108691248 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087856467 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108224544 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117856125 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119585239 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124792442 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08798272 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118416192 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115378028 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088935694 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118921636 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123705786 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111182839 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098264794 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109628787 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129436881 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115369941 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118062891 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088860353 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116057894 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119434191 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093711849 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119297339 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109042865 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113962873 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088938997 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10849214 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136553963 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115770863 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098359133 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116282364 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1189887 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11943367 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136574822 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123786301 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098182402 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11594822 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123349774 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118934765 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114878391 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098077028 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124448986 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116505471 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118615021 seconds)
  done (took 8.208046303 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102763856 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126140486 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10892992 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123519481 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097403844 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108049024 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1092681 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087789263 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108329407 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107667734 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153599951 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0883154 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119648452 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11800895 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109586139 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087824596 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108750369 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118344453 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088027444 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135811018 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108518059 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1191242 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119303003 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098020712 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123992547 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115642767 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10884941 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089373598 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108886177 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108014707 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093598904 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10920506 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118407619 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087637333 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119499784 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109320645 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108427054 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093558857 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109051614 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116401261 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118364467 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10854714 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109781371 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110682669 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123772143 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088795967 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109025346 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108232145 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089191967 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10897736 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124806072 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102244221 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123931548 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119072379 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109576614 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109141912 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088038471 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109477981 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088278993 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116842108 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118933194 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109355571 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136058509 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089011057 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109267927 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118862284 seconds)
  done (took 8.074607894 seconds)
done (took 156.474991634 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.233706985 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.200422973 seconds)
  done (took 1.28275736 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099033103 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136924083 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097061736 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170206227 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10766355 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119947036 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139126232 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098036668 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107144249 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085559719 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108481033 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087822006 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173492975 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086654124 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107249023 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109638477 seconds)
  done (took 2.690012115 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119630634 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255727896 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125486171 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106352981 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089696948 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109890476 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084915894 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112739824 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089622057 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.107285271 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088685263 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107171817 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.085926222 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107970567 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11059487 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089022945 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107138671 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088863703 seconds)
  done (took 2.843784585 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110818894 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152418867 seconds)
  done (took 1.123983398 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.242698494 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.161487016 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.229078366 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.470250046 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.276879015 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.357656585 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.200017605 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.210222101 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.163938311 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.208860441 seconds)
  done (took 3.37611208 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120166464 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180557322 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317738464 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156250248 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10791015 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131148438 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157101076 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132817005 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123701796 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102292986 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122938142 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118543336 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139192771 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095973863 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116044769 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118500183 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121003962 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114759843 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115342753 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095817036 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138755387 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106252459 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096107583 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114558992 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.119887548 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.09977005 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106933664 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08542804 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117838126 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115263507 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.093198975 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127078116 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119461214 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156411234 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123733916 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.158099356 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119050158 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091155379 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116601528 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090980201 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119436475 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11965498 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125268709 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097142471 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106034712 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097642893 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106233253 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084854543 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115616853 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.1201799 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094008698 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11425734 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156266451 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120563132 seconds)
  done (took 7.422680385 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.787940457 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157386808 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091732163 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.877035573 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137678258 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104242882 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.76998354 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112562787 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25681666 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.752935579 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133490844 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120816082 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207242968 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260465375 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.013055468 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.293055513 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.664266664 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123788205 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151883853 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156196435 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118552358 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136908035 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108630352 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454734616 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117910847 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111817602 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096828443 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119618029 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160182772 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125928788 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114985443 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177027767 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249993209 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205152922 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115711907 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089358626 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11080439 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169520814 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267459295 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195063492 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179480902 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10863259 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11073241 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10056335 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1327768 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108435431 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163238331 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175433715 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169763855 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114910463 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118693621 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097644003 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120315434 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164857691 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121768448 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.321677466 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310895648 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089542237 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121882166 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126722069 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261976593 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101482938 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226575083 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138810071 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21241152 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090044868 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802965355 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170133174 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111488245 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095441178 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119433982 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116867228 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099436103 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167434163 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392031313 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124976852 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115897474 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089364919 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227879857 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125138792 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090587919 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162116281 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117622041 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120747028 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102236561 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122798716 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169413598 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.256039859 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101342906 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121007235 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115743571 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103099057 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117272468 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211535506 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220782051 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.184351902 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209925182 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100478723 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18605546 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170183698 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119228762 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173575329 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120313716 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101458082 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122255805 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217554224 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146012815 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123922179 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093449586 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11904896 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148197709 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128046473 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09699941 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.193204676 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.482842692 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168044031 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109617742 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128583594 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097362031 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184479265 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095720972 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260066606 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122266037 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170130664 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12097768 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087620476 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120986037 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163999979 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122487679 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121495089 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100605928 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119226027 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236144645 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218750476 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121572709 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220930641 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183877375 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118459251 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171756001 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121189061 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167450681 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120139199 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120827514 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09484759 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797895067 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123937056 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.0984568 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115801951 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.197530665 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111344336 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103630911 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125515844 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108575764 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756393175 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127886913 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.1223195 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10320938 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118559644 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121251188 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096610177 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115693066 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162213678 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229927989 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120257704 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120285481 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104125135 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182748871 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096115359 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126387395 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125757197 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10373848 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121982066 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116046183 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102534693 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19258469 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164275675 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220650641 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568622906 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112630612 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124448246 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226990889 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090575917 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288357817 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119730793 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223591129 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16397072 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099577552 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306523821 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18661173 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.19817634 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105865208 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195177165 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088162613 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118613512 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165657162 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112434769 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095988824 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.185091722 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102904427 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123666387 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.962771584 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089582298 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247217224 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087684017 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.193658829 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09709168 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120557752 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298410191 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090564721 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128569232 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165176484 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115832531 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125265048 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.701143487 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125616309 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121738954 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096145499 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220998299 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163034535 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12041385 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119640277 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097519804 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185339519 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208219272 seconds)
  done (took 44.119787023 seconds)
done (took 63.71540148 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.281550517 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219431835 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.271786721 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172819884 seconds)
  done (took 1.907386908 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172736835 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150987245 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123080226 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.1079388 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152114917 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085981067 seconds)
  done (took 1.680897542 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.364162751 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278085186 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244583918 seconds)
  done (took 1.779232807 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.320438637 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252517824 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473236627 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.3286135 seconds)
  done (took 2.358062291 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210772162 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133265262 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112341957 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103847397 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.199713346 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.24867213 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143615067 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203550348 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099737016 seconds)
  done (took 2.390742834 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198239342 seconds)
done (took 11.205174687 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.259442583 seconds)
    (2/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.160938969 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.184257955 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.233826474 seconds)
    (5/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093451153 seconds)
    (6/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.12607179 seconds)
    (7/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114029145 seconds)
    (8/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.220753188 seconds)
    (9/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.16227826 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.196329429 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127855482 seconds)
    (12/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.172486471 seconds)
    (13/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.126885394 seconds)
    (14/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08202665 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122076713 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.138658614 seconds)
    (17/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.262454554 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094005647 seconds)
    (19/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.124574508 seconds)
    (20/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.214982951 seconds)
    (21/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169252727 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.099257466 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.15437446 seconds)
    (24/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.211064046 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.198154341 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066053066 seconds)
    (27/309) benchmarking ("sort", Int8, false)...
    done (took 0.191075329 seconds)
    (28/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.20646386 seconds)
    (29/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.131198617 seconds)
    (30/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118913502 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.259390403 seconds)
    (32/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.082560925 seconds)
    (33/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.199128125 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.151351258 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092899527 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.18089598 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.141213328 seconds)
    (38/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114877594 seconds)
    (39/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.161336885 seconds)
    (40/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.121321088 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094103566 seconds)
    (42/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117588386 seconds)
    (43/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.12642958 seconds)
    (44/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.222809598 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.109466651 seconds)
    (46/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.172456498 seconds)
    (47/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.152038078 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.138957765 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.16517825 seconds)
    (50/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.223752157 seconds)
    (51/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.218448441 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.187132175 seconds)
    (53/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066998625 seconds)
    (54/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.172732824 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117793469 seconds)
    (56/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.09904692 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134583261 seconds)
    (58/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.141637476 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095071285 seconds)
    (60/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126505989 seconds)
    (61/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094901831 seconds)
    (62/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134245806 seconds)
    (63/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.11019855 seconds)
    (64/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.144654899 seconds)
    (65/309) benchmarking ("sort", Float64, false)...
    done (took 0.171683017 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111807933 seconds)
    (67/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.203000857 seconds)
    (68/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.116492302 seconds)
    (69/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.204737398 seconds)
    (70/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.095340006 seconds)
    (71/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11005917 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118755434 seconds)
    (73/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.099535401 seconds)
    (74/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.113352725 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.111410589 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.138243877 seconds)
    (77/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126497198 seconds)
    (78/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.121324965 seconds)
    (79/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.191298073 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.235324394 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.137313716 seconds)
    (82/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.144459637 seconds)
    (83/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.100585341 seconds)
    (84/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.189171501 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.187126145 seconds)
    (86/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09113877 seconds)
    (87/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136957079 seconds)
    (88/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082351887 seconds)
    (89/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.118644391 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175665743 seconds)
    (91/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097096553 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.197411238 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.183749177 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 0.087357057 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.170115247 seconds)
    (96/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.151204444 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.227269085 seconds)
    (98/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.078112729 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.118075158 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092731127 seconds)
    (101/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111705572 seconds)
    (102/309) benchmarking ("sort", Float32, false)...
    done (took 0.150546911 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.201710183 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.138897082 seconds)
    (105/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.1748264 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115995186 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.192635898 seconds)
    (108/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090204481 seconds)
    (109/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108878973 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.092198614 seconds)
    (111/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.139902294 seconds)
    (112/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.091340117 seconds)
    (113/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.149448016 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.141059462 seconds)
    (115/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068174621 seconds)
    (116/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.121232956 seconds)
    (117/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067746444 seconds)
    (118/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.09016445 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086664422 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.150033028 seconds)
    (121/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.114070954 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.137506075 seconds)
    (123/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.349212064 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.152927227 seconds)
    (125/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117838784 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.192098946 seconds)
    (127/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.123889818 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110951236 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.13086363 seconds)
    (130/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.150440038 seconds)
    (131/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118845854 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.116592307 seconds)
    (133/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.109766091 seconds)
    (134/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085975264 seconds)
    (135/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.091222705 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.146960644 seconds)
    (137/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.217143893 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.111070239 seconds)
    (139/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067212663 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.19516764 seconds)
    (141/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.101173857 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.113168198 seconds)
    (143/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.09128223 seconds)
    (144/309) benchmarking ("sort", BigInt, false)...
    done (took 0.221729506 seconds)
    (145/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067424618 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.140351052 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087083754 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.160601365 seconds)
    (149/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126811442 seconds)
    (150/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102586497 seconds)
    (151/309) benchmarking ("sort", Bool, false)...
    done (took 0.181349142 seconds)
    (152/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119021697 seconds)
    (153/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.218500218 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.09707914 seconds)
    (155/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117773095 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.180575974 seconds)
    (157/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.125198227 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116011642 seconds)
    (159/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094043791 seconds)
    (160/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109713561 seconds)
    (161/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067944751 seconds)
    (162/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.133653148 seconds)
    (163/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118113623 seconds)
    (164/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078160456 seconds)
    (165/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067223214 seconds)
    (166/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.1197044 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.182693637 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.120402286 seconds)
    (169/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110080911 seconds)
    (170/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09440698 seconds)
    (171/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134122616 seconds)
    (172/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.175634643 seconds)
    (173/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.089833961 seconds)
    (174/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.101813028 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.09575448 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112146156 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113071832 seconds)
    (178/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.092365392 seconds)
    (179/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085751069 seconds)
    (180/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.140514901 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.213888059 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086780723 seconds)
    (183/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.100754581 seconds)
    (184/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087560797 seconds)
    (185/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.176984446 seconds)
    (186/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.115872784 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.091985099 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087764585 seconds)
    (189/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.108075171 seconds)
    (190/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089358388 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110293638 seconds)
    (192/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067246555 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.110513213 seconds)
    (194/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06724265 seconds)
    (195/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115794499 seconds)
    (196/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093565603 seconds)
    (197/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111043245 seconds)
    (198/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067721226 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06685629 seconds)
    (200/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118156923 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097220404 seconds)
    (202/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.090764797 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.155785207 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096702007 seconds)
    (205/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.0762267 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.120539977 seconds)
    (207/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.110596628 seconds)
    (208/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098207343 seconds)
    (209/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.091833314 seconds)
    (210/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089627823 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.196665977 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111016832 seconds)
    (213/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.117183553 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087257708 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.1881541 seconds)
    (216/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118206683 seconds)
    (217/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087729692 seconds)
    (218/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109691636 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.21492969 seconds)
    (220/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.068112155 seconds)
    (221/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.102014952 seconds)
    (222/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.06755736 seconds)
    (223/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067809805 seconds)
    (224/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.092071866 seconds)
    (225/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.161145898 seconds)
    (226/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.216776629 seconds)
    (227/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.09400592 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097283717 seconds)
    (229/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.11995616 seconds)
    (230/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114950569 seconds)
    (231/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.101474183 seconds)
    (232/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.068230101 seconds)
    (233/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117691797 seconds)
    (234/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092059569 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.137951167 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.087683986 seconds)
    (237/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068962346 seconds)
    (238/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.122012434 seconds)
    (239/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116764153 seconds)
    (240/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067342527 seconds)
    (241/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.193755637 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08689789 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.141455224 seconds)
    (244/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078721434 seconds)
    (245/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.123794336 seconds)
    (246/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.068409677 seconds)
    (247/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118730995 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.190807028 seconds)
    (249/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089210225 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.191643945 seconds)
    (251/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068391965 seconds)
    (252/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.113409124 seconds)
    (253/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068408997 seconds)
    (254/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.092125534 seconds)
    (255/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.112580951 seconds)
    (256/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.094661924 seconds)
    (257/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076899374 seconds)
    (258/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069711594 seconds)
    (259/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126360326 seconds)
    (260/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.0766389 seconds)
    (261/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.102938122 seconds)
    (262/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067461714 seconds)
    (263/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.092461571 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.109512538 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110627394 seconds)
    (266/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068764691 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.184485857 seconds)
    (268/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112679449 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.092369802 seconds)
    (270/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066661938 seconds)
    (271/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.072589186 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118564223 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086608019 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.111335194 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119220879 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.11277848 seconds)
    (277/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.113842888 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087456841 seconds)
    (279/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122616942 seconds)
    (280/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.086178141 seconds)
    (281/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.112840598 seconds)
    (282/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067767508 seconds)
    (283/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.092159365 seconds)
    (284/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088643178 seconds)
    (285/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.068184429 seconds)
    (286/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.091211899 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095046467 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109804866 seconds)
    (289/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098319891 seconds)
    (290/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.118612675 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085740066 seconds)
    (292/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.110403921 seconds)
    (293/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094195615 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.177811569 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111545593 seconds)
    (296/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089174842 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119832779 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087969059 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.145333508 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117588148 seconds)
    (301/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095466416 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068349614 seconds)
    (303/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.112580915 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.133249961 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092799357 seconds)
    (306/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.068542672 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.11069326 seconds)
    (308/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.116862504 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.114973157 seconds)
  done (took 39.970580955 seconds)
done (took 40.868006883 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100703421 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137090511 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09715337 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136531087 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124285293 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092555789 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119780558 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103871663 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125444435 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126501139 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100124113 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093731843 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097590947 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122024817 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098580803 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.136388484 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125085806 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094337364 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120087003 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086598642 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.12048015 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087271846 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113469056 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069884525 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123663874 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095273045 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11828189 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120745428 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087421228 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111731367 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090839246 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118598138 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086696632 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125585285 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093883715 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.12093619 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097897373 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121481557 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113151831 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088071923 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119859696 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088179369 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11828135 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094569963 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118022968 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092326569 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120934056 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099567242 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.136265999 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114591338 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095896404 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122791107 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097132493 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119205534 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091339715 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120793988 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.11951061 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112484579 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.122712971 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091178601 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.121765952 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09593098 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117650257 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.120927696 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.096717331 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122679079 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098717064 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117174118 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098015654 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117177553 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086969868 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119604032 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114912369 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087607642 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.120615364 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.099096058 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.11057715 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093423796 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11888871 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092511929 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111120949 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089210497 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.114380092 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093482175 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113727643 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070580512 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115782493 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094274127 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111414749 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096499115 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.1183559 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09458102 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113867649 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.123394759 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086937013 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.116942743 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087918537 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.11216641 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090200894 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.115630421 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.088794791 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119575783 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.096315076 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.113675328 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093782671 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124643104 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087957054 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118147828 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087225804 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111698837 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126235167 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098492888 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.112002893 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090413523 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.11117085 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.095179546 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.11179769 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.087457029 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111406776 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087571537 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117881062 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.088104296 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11426185 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095285077 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126013393 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087776137 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115852504 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113739068 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087350717 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.117711492 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088285254 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.112002534 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.090423662 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.102589934 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089682638 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.112469082 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.094845021 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11371569 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.096152493 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114453092 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097477423 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.11612128 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094264427 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.118067162 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.087065152 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099622109 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090600924 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113889863 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089657177 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.112871261 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.089808033 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111767589 seconds)
done (took 17.092514306 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087432318 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185980366 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153116737 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143548412 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108700129 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112685801 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123211547 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120947643 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114609682 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145479959 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111194726 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133237741 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149810903 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087339671 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113380315 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092058196 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114409978 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103953741 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146255885 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134984534 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166033712 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087793682 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.150923549 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13671025 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122663291 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115087448 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113411195 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091947383 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116353189 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103989806 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133014202 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116473025 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088868021 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136344075 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10546698 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121259899 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.112601645 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095605173 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.112591057 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087707187 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143428467 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13576825 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093481815 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118846478 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091735746 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116274226 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089526146 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122164251 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123430254 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.092601636 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128589074 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159242987 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092516053 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123098872 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.112059602 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.098885415 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.123334927 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090196124 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.114498177 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091319791 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113474636 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091443213 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128725633 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14410171 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.117173404 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.098630606 seconds)
  done (took 8.699850407 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105336552 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141986063 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131032214 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10740298 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11431725 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088796665 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11370986 seconds)
  done (took 1.765817562 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088704205 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135863712 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128486371 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.138159058 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133301334 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109877977 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.1241058 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089544994 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133732907 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090019474 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135483074 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15374122 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090865884 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121701606 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138949496 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089680446 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138999788 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089206597 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11865675 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.139086297 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092594554 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136759503 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091358561 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115037015 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103447118 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115353893 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162947459 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094224617 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116184067 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092680233 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113437622 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.169642382 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103367389 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126611036 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114822414 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104547803 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130108011 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087873841 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131474165 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094400274 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128687847 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115649983 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090254849 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.113262747 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.094354295 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125704722 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090588201 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116422736 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092371611 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135175002 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089919647 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129071693 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115123372 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.093764253 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.117211244 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095693773 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125512515 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090539079 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135632544 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091310609 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13268361 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132333916 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105926279 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132435909 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092242503 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129272692 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.129934926 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092313048 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116356656 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.093095632 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131319067 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087012886 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117183981 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100936014 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116638918 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.138216515 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112638316 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116723618 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099979391 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115572208 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089870041 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115411487 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.139494961 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093245452 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11564065 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094306039 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118456728 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.087354336 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114191347 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093733842 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113706367 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090971524 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119330906 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090628695 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118839707 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131937735 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.090269591 seconds)
  done (took 11.944689071 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090879477 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115985237 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092290828 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.117910484 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095181968 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.117118505 seconds)
  done (took 1.600662791 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116109101 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119425701 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104867706 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121195766 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.1581917 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.130211189 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.105493057 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125389448 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108736141 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128883186 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131103948 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10678571 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137630358 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12370188 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104552971 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12274173 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130513555 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100880577 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129019167 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09789906 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138489446 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123447086 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097497204 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134595271 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11994493 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09632538 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128337974 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103873418 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128761463 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126399994 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096464867 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119906814 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121770817 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.099694012 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131341161 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096169017 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121661762 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12103813 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101128542 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119617078 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.1312965 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09720762 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129025062 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094838617 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12544236 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.123239114 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095132216 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127126312 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.130510781 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095831261 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121079305 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096288022 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120391437 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120855735 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.097217159 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125756646 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095464655 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13053747 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123048272 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097050071 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119800978 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093763173 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124383067 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121110074 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105496263 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120416266 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123317111 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097309879 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124263979 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096048066 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120170281 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118883021 seconds)
  done (took 9.341805584 seconds)
done (took 34.307373319 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686843268 seconds)
  done (took 1.652826679 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.748980455 seconds)
  done (took 1.717076359 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.934728067 seconds)
  done (took 17.902932881 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.506917588 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.585190833 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.886890165 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.183267646 seconds)
  done (took 3.131084376 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.941631135 seconds)
  done (took 1.927873408 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.247468199 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233036096 seconds)
  done (took 1.454663894 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.78732782 seconds)
  done (took 1.768106595 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.353565135 seconds)
  done (took 2.330543281 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333824653 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185833243 seconds)
  done (took 1.503623494 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.556137284 seconds)
  done (took 1.540897455 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.768823642 seconds)
  done (took 7.758179209 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268948309 seconds)
  done (took 1.267417087 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302772432 seconds)
  done (took 1.291205934 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.537000905 seconds)
  done (took 4.528660686 seconds)
done (took 50.753089448 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099133242 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128427245 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102064679 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125275597 seconds)
  done (took 1.439045404 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102314552 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122709037 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101651729 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122188259 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126978237 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096953594 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124434018 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101617695 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121895016 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097170454 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121916914 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121257746 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098558615 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124246813 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094009813 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125071108 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100516561 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121249904 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124489957 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097037209 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120963796 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098922004 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125943247 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094771677 seconds)
  done (took 3.679261159 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100727495 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120454748 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096770787 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119730832 seconds)
  done (took 1.436647112 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100606036 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143301047 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139645797 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101663793 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144181232 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137457877 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093221198 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118479824 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094343205 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12712623 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091991357 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15112591 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139225252 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100871682 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128900033 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.090246041 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117939712 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.140689328 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100581683 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126610049 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093690872 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12640916 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091226064 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141026577 seconds)
  done (took 3.830598174 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171077727 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129023238 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140336492 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095597965 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161647367 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142268145 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088923565 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142420296 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088915914 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133503376 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119743035 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134436955 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130856186 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08901017 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114186783 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08820755 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131272818 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130736862 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091786299 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129731555 seconds)
  done (took 3.451102678 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097502408 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118153634 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089114492 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116787208 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.09981712 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121280724 seconds)
  done (took 1.639977735 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091252625 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116084083 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090124739 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115566764 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095217104 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115736836 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088976547 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116369941 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090799328 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115560774 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090568706 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114305325 seconds)
  done (took 2.238584029 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.465936106 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094167671 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12197903 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11252025 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097553406 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.116287498 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104749783 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119919032 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141151116 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089391441 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11653841 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092644229 seconds)
  done (took 2.670780717 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242475654 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1267141 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296207649 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197901464 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160776113 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173511107 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155542313 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169097491 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.228696282 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158828558 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211455564 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223672576 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126717858 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223030815 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13858006 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120138618 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230076907 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250032909 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15656584 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209396907 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228717737 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168157034 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179188454 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152830129 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113758142 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196267049 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096058772 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131303027 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212328144 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208640769 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192436468 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164238942 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148446953 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246113398 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25153797 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198491826 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220144366 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109450423 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.171447083 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169444297 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269190835 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112657946 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238537744 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15945329 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131188191 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199886431 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167178376 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.20118226 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.126015094 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139762568 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226609602 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215701081 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.222016613 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112094713 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193824891 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160116748 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169763171 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157087057 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225744827 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227585215 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183288715 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119891352 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12357987 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219543856 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185441839 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168152439 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.208362909 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121353957 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221680428 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18889798 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16783276 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220301183 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185258791 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138906601 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172830589 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175001313 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172351656 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260712026 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179096999 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122691949 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170233652 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151163593 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132159977 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169651909 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125679303 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24271467 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124797109 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135161641 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171722409 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162476709 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163419124 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201860315 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221875599 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149540492 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084700766 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159918578 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156213159 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192305042 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140413023 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161873327 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162510205 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130695516 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180439095 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097779016 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205036954 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092390876 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17928811 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211734939 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101290914 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16177137 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153666927 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15086194 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181103809 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201276015 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14149537 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134208011 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209975611 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205043494 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150302456 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180556478 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202724885 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.144558106 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149952572 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201297347 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249557157 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140752507 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206904253 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155583512 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135679517 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.107527322 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208826419 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156733999 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.134862831 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134356642 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.211131308 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213271887 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125575963 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112440368 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21838778 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107152237 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132541457 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163281062 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150192215 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.13939132 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147527565 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151958345 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18420741 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182514851 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157176528 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168993222 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15227179 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253130376 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141752519 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151625848 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12210323 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121767075 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195797586 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226185917 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105787073 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233959329 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.175645026 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162797538 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173478483 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13507819 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178055642 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103962884 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121402177 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195178731 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169584373 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162571156 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.22657205 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161517926 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.184815708 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183948952 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174552219 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203369367 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.138565758 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186033748 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112703411 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1621026 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166870817 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124367737 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143114304 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107826984 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158143953 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145626536 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135037514 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202433259 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199517844 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124139339 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161067511 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151004664 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183344684 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128730464 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180672203 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178442715 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147804477 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.2256444 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197758086 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189703083 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144608515 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234937856 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094649616 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126806297 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142565025 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174110771 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107539933 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137505623 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167533917 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182082906 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214192659 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178917679 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170760463 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180766797 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192430871 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122674838 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169682694 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187363635 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179540902 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.189461869 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141956544 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.124915819 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178778784 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157233623 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257597892 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168570897 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205394353 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209516729 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151084374 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133474354 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124478069 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216915107 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155606168 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177976849 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147967162 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141482967 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163697635 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.107371441 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161186754 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213760824 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163721383 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192577144 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150850484 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187557391 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128542888 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167775452 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161391529 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166262078 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10855199 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180388715 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205676447 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14880976 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171264897 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221223539 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105385547 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.180422723 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24478821 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198525098 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138906143 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160635522 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162194627 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16568963 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174777349 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179618686 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161679828 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191410187 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159355535 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138261943 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140341853 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152581901 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125478374 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.135281286 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149794335 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176962313 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140130675 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19044628 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162303098 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159555333 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173270008 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150960494 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145550468 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152330785 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220444296 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177130203 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245501907 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151727681 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.18065859 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234415304 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099558333 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13311628 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133657319 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179506413 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109981496 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221237075 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.12281068 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162778414 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210123707 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19486348 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13989702 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093311899 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159357014 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174378862 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171096865 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152711973 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160326074 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238409308 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.116242894 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134244385 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174648539 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163141262 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147059767 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199903225 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.07969241 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151217637 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128539699 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106747512 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16512379 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240482226 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138197872 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182247771 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174182178 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170440754 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165677363 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150909243 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123756568 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170871104 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230985739 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186994555 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132440479 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159446292 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182079551 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196717453 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161179731 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141387946 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204646721 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224054262 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.199736216 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144233121 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170719214 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168995812 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158604051 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212281219 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109449061 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233975107 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107523195 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228451015 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155824878 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144654898 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17874687 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.149971046 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141902458 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189753394 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177976124 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136063577 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106626261 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195861839 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179009937 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157017218 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100484548 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210636482 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.09878411 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220046792 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233958899 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134692261 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157035915 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148808715 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136822453 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15674666 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158351559 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11291349 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.165825256 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206526813 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136093437 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219247605 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205617106 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173349404 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203388087 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117315636 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694292201 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131486196 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196461514 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156318085 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235190205 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153419287 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1742708 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15923004 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169531295 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197644661 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160870302 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233134744 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221016788 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180067884 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106192604 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186321468 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163482147 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117406944 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154442566 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170385474 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161460382 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154303701 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179118261 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198429537 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107152267 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142696387 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200763391 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156929484 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215015198 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180233506 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112419612 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174333796 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215823136 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134268563 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.183610275 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237890884 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114973958 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152025868 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135516278 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156344181 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262867964 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09851517 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229913157 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179143612 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159217979 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170593778 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148902472 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193481287 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158775267 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180001067 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146423462 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160568698 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157706304 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138394861 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130318124 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155043454 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167449835 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12141611 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187836284 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138804608 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196148001 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124989526 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145709464 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162092503 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192662117 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216241133 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139057424 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136822385 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163678145 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151841424 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176897747 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17992891 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136054215 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108952361 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137759858 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157214832 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113205049 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156956316 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159867376 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165744939 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232721575 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110537108 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281159962 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13918501 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155942571 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089347089 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132870165 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150436007 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146133012 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157577391 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125233776 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264036314 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147293576 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132119384 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149017622 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099032318 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135884864 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165991619 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166227915 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177366247 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145880988 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081532031 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15888993 seconds)
  done (took 81.839596578 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174729063 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149211233 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167580217 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222822089 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195549697 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.288754051 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.232685032 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272312693 seconds)
  done (took 2.786670926 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093976984 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145970637 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156841996 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133485105 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091614934 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.12010376 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.347620652 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13189372 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117024273 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.1216982 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174019567 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094903613 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.522112042 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.11808151 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119609924 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.08367479 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116231559 seconds)
  done (took 3.770621965 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.480862272 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.715323302 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.506900077 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098066641 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.127610384 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.11396224 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.677365703 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.196735451 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.115315628 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.482633109 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.77507788 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159862007 seconds)
  done (took 18.533038811 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.100078978 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.122687786 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109305876 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136437867 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.097789532 seconds)
  done (took 1.660604956 seconds)
done (took 129.963752302 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105532076 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405641754 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.0730335 seconds)
  done (took 1.601873281 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108714665 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138067553 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110496821 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137222175 seconds)
  done (took 1.593111162 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099306912 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131213238 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110014873 seconds)
  done (took 1.433711225 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.32646661 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191238694 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.14465027 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107304437 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13057485 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103856926 seconds)
  done (took 1.432243659 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098198494 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128540865 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100050876 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131078468 seconds)
  done (took 1.552677645 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095544493 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07216976 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102092369 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075675842 seconds)
  done (took 1.435756871 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115608713 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132624016 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105708017 seconds)
  done (took 1.45129392 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130587345 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.140087096 seconds)
  done (took 1.368133319 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.107389735 seconds)
  done (took 1.199646782 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119215883 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.171174853 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.191097137 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166303358 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.229422834 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166854286 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142780761 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115710568 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132568206 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145399971 seconds)
  done (took 2.678077824 seconds)
done (took 17.608755255 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104574701 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.426102958 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.415196015 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118482661 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723906717 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382481182 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.066322608 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147355415 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167019165 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094777473 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140883676 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673301491 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.026103388 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.374753917 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.986124576 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.372454615 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705856307 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093709336 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121943806 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09452213 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.056086069 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093305073 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12263453 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093740711 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703647908 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427342424 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096144877 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.372953547 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093648569 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128439464 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.412124161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096244357 seconds)
  done (took 17.019569974 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096078342 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176438038 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099813323 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139133678 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123958973 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096115602 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126334558 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094472774 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180870738 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124232077 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140754299 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094719462 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127186742 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096851154 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143654312 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093423191 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126215083 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121517832 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094300412 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123639255 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113503159 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121549227 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094889866 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123884233 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095191173 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136593737 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12405824 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093905724 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121647025 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099417702 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129371318 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095705427 seconds)
  done (took 4.869962152 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14311842 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184983989 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130166804 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128314114 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.171135333 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125719924 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201006156 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148182094 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156140074 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124023486 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141527092 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094384359 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157669115 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124637259 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116663524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12238576 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098249086 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123655623 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09379928 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123311382 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141863935 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093727461 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123922969 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094343088 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124374597 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138410697 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096720194 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122944118 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094284818 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12878083 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101295716 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125397454 seconds)
  done (took 5.199871598 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098619365 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129325457 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110110303 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140670764 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096261158 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127021735 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09845627 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126790192 seconds)
  done (took 2.031425971 seconds)
done (took 30.217399915 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.104960524 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124617528 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100054037 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136278235 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098168075 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13314897 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092430312 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.129443034 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.100892687 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.128075514 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130303903 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093023392 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125542868 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093488782 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.12956704 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.094746443 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133871672 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097578172 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134853257 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.134210489 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095764617 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.129813516 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100134631 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13455885 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105035301 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134430937 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134712086 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099842516 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124118309 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096402722 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125216385 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104490296 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123067436 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.1045811 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12335659 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.093319864 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122540787 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093505265 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.135158348 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100800765 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.125890731 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.130414027 seconds)
  done (took 5.947510574 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108842773 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141132925 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105919498 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081959311 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117920259 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081790727 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139428326 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080352746 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111721387 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109631979 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074692189 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107131035 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080000405 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102895539 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077702916 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.0761407 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109639922 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077038544 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077969875 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107664144 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080223462 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073225827 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109786975 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079915988 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105072944 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082309068 seconds)
  done (took 3.606187997 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101950332 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137003877 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113408128 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186352754 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162761238 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.10082623 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133951199 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141673696 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110586406 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12143715 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097161345 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151305758 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112074106 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.13038716 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09338675 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139067959 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137606093 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09549673 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129986644 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114064641 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.143119283 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103800986 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144581362 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134756568 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093589005 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123991155 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097905815 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136696626 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098450447 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13300395 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.127350236 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097231762 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124299571 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106589764 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128176885 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095443364 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.144534889 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133514256 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.102987736 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123098934 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097526557 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.12349423 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11415511 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169314678 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.122105754 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.10160815 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.138699964 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103955001 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.124184833 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112629475 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132880599 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.122073029 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097667121 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.121281222 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094020108 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137274915 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.095674814 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.126143611 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103518709 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126610721 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106220292 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126881857 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139175705 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.09391797 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130226259 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.093325966 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.123805441 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093382735 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145983776 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094965965 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.166452633 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.12446996 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095103934 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.133223754 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101164417 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130607536 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094303921 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140330198 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132306484 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098016637 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.132935341 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.097620139 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.126383201 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111707892 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.126416192 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095327252 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124612579 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129017594 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.096944659 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.12397658 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108540944 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.12327898 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096181335 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141506192 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.092751902 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.125393391 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129687577 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100114757 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.122449548 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107340584 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.129515566 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.094614516 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.135148342 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094835254 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.127104541 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.132652537 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.099326527 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.1216922 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.098863371 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129761257 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.094216073 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.125512619 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096502047 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125684824 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103968268 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130335534 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128962769 seconds)
  done (took 15.032304176 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.23125115 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.220048782 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.126362706 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.21177524 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.106365663 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.135359071 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.216553122 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157203541 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.095058167 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.125750127 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.095547636 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.164028181 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.157460315 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.168352499 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105800991 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.12311714 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113381743 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.167582416 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215707508 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.210135118 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14526242 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.132801297 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.096764591 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.125062218 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.09642836 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132934496 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110803583 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135367086 seconds)
  done (took 5.242248212 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109282363 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158347903 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.100435404 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146254398 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149461056 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094175096 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128824166 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09577625 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137463791 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136903917 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094172034 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.13041369 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.10153765 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13334435 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.1244895 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103976534 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134180251 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096245098 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127445505 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098975644 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131125997 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.133526384 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.098540175 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123278762 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104404228 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123126122 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087060498 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143371918 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123887632 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116862238 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122547251 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101439659 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134939364 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094610765 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124911036 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096947271 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126245511 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096922083 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125602085 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122105905 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093995407 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078247524 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123590582 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.138825494 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100867386 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110930164 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.101171177 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129871773 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09625505 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122651328 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097405714 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126770641 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097661161 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13221343 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099742518 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125870621 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097332655 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116974771 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101442438 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.127140156 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085566153 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122713103 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099440681 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.120296595 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102031357 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128737349 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093056571 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126279074 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.128148037 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101665998 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.127151853 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.098109327 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.122673307 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.096661673 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.126827401 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098907376 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.127863345 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093207068 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.124191046 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095371717 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.10664762 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.094566902 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.105182217 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.09882502 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.122377093 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.09381426 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.126038591 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.100728828 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138981542 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.126159346 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103174882 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.125136406 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.094113052 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.127722706 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.084603882 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.127385251 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.109810018 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142780082 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094835575 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122591808 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.137689702 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.09725124 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123795467 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077927417 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.13142429 seconds)
  done (took 13.116857749 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.118393939 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150175172 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097030228 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.138889903 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.151140897 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.118846617 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.13206625 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.101740096 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.125961417 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.111107137 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124900621 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.102778638 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128504013 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.133087048 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.117740209 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.132516303 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.096899234 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.13501124 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.102585592 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.160580578 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.13805459 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.109526562 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.135927835 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.0953738 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129341443 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.106671954 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.151565088 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.134962914 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.104880682 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.138229945 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.106503899 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.15131095 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.110356917 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129133495 seconds)
  done (took 5.352162609 seconds)
done (took 49.403538091 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.214056687 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.42174488 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.199325124 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.132541372 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.233513721 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.223066016 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.213273149 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.200266561 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.841844919 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.200986178 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.472472002 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.837349661 seconds)
done (took 60.323645261 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.346800643 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.334348492 seconds)
    (2/2) benchmarking "String"...
    done (took 1.514365902 seconds)
  done (took 3.987526082 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.596936395 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.143848238 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.461970331 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.199279865 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.206725971 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.49077097 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.862395654 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.582155613 seconds)
  done (took 28.076360011 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.21145822 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.597447664 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.9057198 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.910349484 seconds)
  done (took 18.754402443 seconds)
done (took 60.891484939 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.182943883 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.220269178 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.2179456 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.180897429 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.314536102 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.231058353 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.469450939 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.32734924 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.220645498 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.186444687 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.223323831 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.200656583 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.219164188 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.451223362 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.218020157 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.204787506 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.227377817 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.906075846 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.621562222 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.214983216 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.206469905 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.227012259 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.225926981 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.205261987 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.205395536 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.203076056 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.217713486 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.211226481 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.796248209 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.208518443 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.217742046 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.600462147 seconds)
  done (took 190.694176648 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.20419498 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.181808368 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.314877261 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.22289933 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.631588181 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.403073277 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.340001253 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.692078057 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.222554638 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.234876265 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.416773521 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.208970279 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.480305382 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.17843604 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.212250091 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.305185468 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.386854109 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.486580848 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.224540804 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.478148615 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.210106953 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.47745844 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.337446552 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.381310813 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.227229426 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.311358843 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.228331883 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.244977481 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.394098917 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.329908073 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.246759703 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.229992177 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.838620705 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.066581766 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.230841731 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.234866083 seconds)
  done (took 149.945458709 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.492915565 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.203255193 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.203910186 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203106922 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.235891328 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.204505486 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.787552011 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.787550912 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.751225434 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.352243583 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.63293728 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.490759664 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.205129092 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301100677 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.218565105 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.205923485 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.220211307 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.245996372 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208508201 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205972021 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.772842068 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.218945872 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.545844975 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.38199188 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.221219111 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238104711 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.595947246 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206625094 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238547393 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.540330433 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.255127532 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204803025 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.572141459 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.936081326 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.206168628 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319772361 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207954041 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238393203 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.20704142 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.488457359 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206767801 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.207385016 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.210014471 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.848611572 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.207459031 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.791337714 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.212538129 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.159681446 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.207110425 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209673158 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.759411241 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.823879293 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.223966576 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.207172391 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.206720939 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.210279693 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.208643821 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207840006 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.240734753 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.655805918 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.303352913 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.225055203 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.211971574 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.240466076 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.208241262 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.539537036 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208563864 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.650705311 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.281940013 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.315065463 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.777173524 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207839426 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307210758 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32936201 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.207889732 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.2081155 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207827262 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.209127464 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.320744469 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.209334416 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.643377572 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.38643472 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.227281846 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.57162033 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.308184568 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.209596324 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.590475864 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.208999274 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.208511523 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.996102643 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308076841 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.209176263 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.209249599 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.209195782 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.646838862 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.79390164 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.496146817 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.212168505 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.662361271 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.21518593 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.210589961 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.209153444 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.665060718 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.773500829 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.887720962 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.212171073 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323097786 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.388215809 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.227505677 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.2117744 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.567035829 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.211308003 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.269525085 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.210727889 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.608582322 seconds)
  done (took 367.862737667 seconds)
done (took 711.125536556 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.863867887 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.853416718 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.967422069 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.846599667 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.809078982 seconds)
  done (took 10.477707285 seconds)
done (took 11.615697037 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.398830755 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.398326356 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273205538 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.399989296 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241001576 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.419179604 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.378588237 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.232299446 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.313795844 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.294684969 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.313143301 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265357954 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.240782705 seconds)
  done (took 18.306209781 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536040858 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.515427122 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277970961 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.577221532 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.252067978 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.542294355 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.416249737 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.422634857 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.428953526 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24699296 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227543014 seconds)
  done (took 16.582699648 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.547198378 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.544065459 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282117063 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.552839596 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.254575934 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.533935917 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.420415799 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.432436801 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427891115 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247473365 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226396693 seconds)
  done (took 16.609205585 seconds)
done (took 52.636791167 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.221656999 seconds)
  done (took 2.362735446 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.258502427 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.421416882 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.241632845 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.227395804 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.222796595 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.224396655 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.227994835 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.22360763 seconds)
  done (took 11.189110006 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.222622898 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.220714302 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.218456532 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.219267728 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.223531286 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.221433532 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.223144215 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.219820554 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.222623035 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.223241494 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.220818563 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.224090341 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.221059398 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.223067508 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.223307292 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.221196944 seconds)
  done (took 20.689964356 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.224058632 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.22176048 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.221599076 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.221470637 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.221802276 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.222060228 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.222989723 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.220312956 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.222077286 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.221905177 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.222371314 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.221645252 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.222118676 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.220780345 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.221961034 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.223312046 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.222755472 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.221837004 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.226650391 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.222291593 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.222813842 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.222053701 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.222705315 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.222359149 seconds)
  done (took 30.479880952 seconds)
done (took 65.861838781 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.346853375 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.943648186 seconds)
  done (took 9.43303172 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.224855619 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.224832024 seconds)
  done (took 3.594277681 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.224870446 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.224321137 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.225651987 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.225170946 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.226189002 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.225742827 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.226213402 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.225698538 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.224844542 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.225668999 seconds)
  done (took 13.39822389 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.226313381 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.225666287 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.223652738 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.225335538 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.225968179 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.224479836 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.226296813 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.226851147 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.225246701 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.223516459 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.227722962 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.223483548 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.225733136 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.224451946 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.225780832 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.22447374 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.224882625 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.224092972 seconds)
  done (took 23.198447053 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.227036931 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.225743183 seconds)
  done (took 3.598358805 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.225169649 seconds)
    (2/7) benchmarking "second"...
    done (took 1.224070354 seconds)
    (3/7) benchmarking "month"...
    done (took 1.224445828 seconds)
    (4/7) benchmarking "year"...
    done (took 1.224660992 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.224807158 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.224948132 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.224040827 seconds)
  done (took 9.717388831 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.227791176 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.402437233 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.483536843 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.832377112 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.228140007 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.231981168 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.100621434 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.230414633 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.232796154 seconds)
  done (took 14.114254607 seconds)
done (took 78.197757599 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.250193658 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.237193081 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.463572982 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.241725838 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.240642819 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.568517022 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.22720497 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.348961065 seconds)
done (took 37.724879201 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.238953653 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.985091017 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.978861247 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.223748841 seconds)
  done (took 11.335386601 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.210893789 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.171210952 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.216298429 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.266741786 seconds)
  done (took 18.01303431 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.28514337 seconds)
    (2/2) benchmarking "read"...
    done (took 1.55794588 seconds)
  done (took 4.990356902 seconds)
done (took 41.72499402 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23071923 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.230260537 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.227588096 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.228981629 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.225415928 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.228090172 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.22711356 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.22709122 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.230038581 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.230481362 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.230543589 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.230017234 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231261458 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226539259 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227140127 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.229921929 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229043202 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.226631827 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227416402 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227271655 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.229665547 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230312181 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.227915746 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.227889208 seconds)
  done (took 30.635143327 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.230969915 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.229481846 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.230455289 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.231675757 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.22748106 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.230312012 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.230088126 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.229117826 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.231294725 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.231435036 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228037879 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.227607881 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.230717967 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.229126917 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232140865 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.228237628 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.232028612 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228573766 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230740824 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.228851827 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.232430003 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228588712 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.229656646 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231244537 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.22930742 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229446811 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.231718933 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.230912278 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232182445 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.23031353 seconds)
  done (took 38.053582115 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.236914212 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.23937816 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.231100314 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231644573 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.232535607 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.232287507 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.232436911 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.232969788 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.232502117 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.233178717 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.232934581 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.232761977 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.233773231 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.232807226 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.233021755 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.233186062 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.233511569 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.234262757 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.234417248 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.233445233 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.233637209 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.233749207 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.23482678 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.232369121 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.233386937 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.234023697 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.23281111 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.234146197 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.233991137 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.234097827 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.233702696 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.233627979 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.235675995 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.234344834 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.234839274 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.233860128 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.239861203 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.242027211 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.233875209 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.235152786 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.234682499 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.234348731 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.234579439 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.234423824 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.234840272 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.235565145 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.234699725 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.234008225 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.234771325 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.236888953 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.235873196 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.235035259 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.23665361 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.236225819 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.235631849 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.236179029 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.236120758 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.236487374 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.23454832 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.234368726 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.235797773 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.235864066 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.23566079 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.235386518 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.237069496 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.23686027 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.236259638 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.236424939 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.235902113 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.237800713 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.236362993 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.238052105 seconds)
  done (took 90.058529858 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.238540056 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.23506651 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.234165327 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233380198 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235855221 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.237323597 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.234665867 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237573499 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235289599 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.237945729 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237885108 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.235858622 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235241688 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.238048849 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237920086 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.235557787 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.237814974 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235550061 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.23843043 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.239961162 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237584902 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.235772207 seconds)
  done (took 28.361270462 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238013147 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.239316472 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.234819409 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237880498 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234243493 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.242425145 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.238134098 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238177189 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238105218 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235586838 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236059554 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239645434 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.236189819 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235791964 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236604327 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236844858 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238534926 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236796569 seconds)
  done (took 23.429294314 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.237055275 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.238195017 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.23892997 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.236829645 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.236615983 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.240147544 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236027609 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23963448 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.239024062 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.236677548 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.239491398 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239812364 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.239376314 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237206808 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240063604 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.236433954 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.239905412 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23729449 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240383575 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237186679 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.237893448 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.239421441 seconds)
  done (took 28.399202045 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239478833 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.239626605 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.237827736 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.237646922 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.237510831 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.240622403 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.24008711 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.238617373 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.241283759 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.242539167 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238862919 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.241800245 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.23879966 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.239548869 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.238837442 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238310499 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.241242298 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.240095051 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242039783 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.2386982 seconds)
  done (took 25.950838382 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241757445 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243741195 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.242058358 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242279944 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242852627 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.242201135 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242843694 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.242382076 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241933345 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.242728018 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.242572367 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.242431086 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24300732 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242600901 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243412447 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243691725 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243420113 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243404708 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.243758277 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242757333 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.243574026 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.242562911 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.24339625 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.243171568 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243845229 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243901903 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242852496 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.244295192 seconds)
  done (took 35.964584976 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244209751 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.243538812 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.24100405 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.240977663 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.241421347 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.242167042 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.242148361 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.2411333 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24487505 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.24114611 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.244963046 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.245585044 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244801895 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.244256558 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.244506931 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.244088312 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243967959 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.242620038 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242020587 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2421965 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.245876522 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245337094 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.245282849 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.242112332 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242925145 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.245486672 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.243340629 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.242022704 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245419408 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.24212645 seconds)
  done (took 38.464179804 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.263632222 seconds)
    (2/2) benchmarking "in"...
    done (took 1.264503889 seconds)
  done (took 3.691070499 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.242752966 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246084904 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.247836596 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.243928519 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.244507245 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.245815627 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.247477494 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243881316 seconds)
  done (took 11.125002259 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.247876315 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.246183518 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.245778104 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.246540995 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.246382149 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.246614394 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253558007 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.266767401 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.245786319 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.247846646 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.254740006 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.255176249 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.248539642 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24870165 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.2464512 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251414916 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.248103412 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.24783876 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.247152793 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.247225843 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247320943 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250216371 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249531393 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.245278802 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.249037119 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.257697589 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.271508307 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.248008372 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246655011 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.252069177 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.248577147 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.246944614 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.248727647 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.247619577 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.248234752 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.247893614 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256293067 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267612642 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.255026841 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268158872 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249344556 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.246098605 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.249193369 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.25019783 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251057396 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.249624504 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.249511104 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.246250582 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.249002053 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.2528531 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.255270415 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247366677 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.248956519 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253245561 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.2508649 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256522723 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.269267393 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.253657973 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.258744782 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.260483221 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.282443966 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.27553996 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252043586 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.248981787 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261431159 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.275046744 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256878764 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.267467259 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.248883029 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.25164404 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.257194427 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281839321 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.277399949 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.251024807 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250487816 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.251357208 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251302615 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251282908 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25922789 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.272976726 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.251688937 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252383255 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262670663 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275736114 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.25098587 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.251549862 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.251815938 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.25227255 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.25375145 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263692049 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.27168426 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.253224752 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.251791016 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.253524353 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.25322981 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.253623706 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.251804689 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254064861 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.251226561 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.252808497 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251791497 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257907082 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.262530646 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253090639 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252494637 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.259151416 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.273289826 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252849001 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.259575573 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.254324377 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252018995 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.253603952 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.260098036 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.252131719 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258482746 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.263883195 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.253890493 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.25499491 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.254235291 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.254159444 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264911472 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.281443204 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.254467605 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.255412092 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.260139824 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.266813973 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255749127 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.25670557 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.256492636 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.253303058 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.253262354 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.255565009 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.256160629 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.255826666 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255659535 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256664157 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.252912512 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.256483359 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.255417034 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.257055903 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.256311804 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.256355142 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.256968558 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.257886162 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.25595603 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.258000065 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.26093313 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.276042223 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.257293576 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.255611043 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.254080328 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257579409 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.257385276 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.256769596 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.256816444 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257179582 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.255873951 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.256643737 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257465273 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.258020222 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257214667 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.257951913 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261582013 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.258397716 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.26050644 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.257716815 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.254187696 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.25755236 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.257414982 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.256845408 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.257975286 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.255812367 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.261506901 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.266032187 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.258529385 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.25758615 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.259482732 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257359597 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25790512 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256579242 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.261834608 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.266596699 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.258035298 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.264754051 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.277999396 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258460427 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.25876069 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.258726916 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.258222454 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259636256 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.262525056 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.267044556 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27066294 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284038242 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.259967713 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.263382684 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.259963403 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.263046678 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.262623601 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.258843849 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.260670813 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259650302 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259375196 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260017086 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.260910271 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.260771613 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.258431037 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.260328579 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.261054098 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.259296933 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260335875 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.259942596 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261737636 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.257897594 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261455694 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260908359 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.260257239 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.257837484 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.260151992 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.260309449 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.261507659 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.260949584 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.265032069 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.259079548 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262193956 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2618967 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.261458501 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.260813341 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.261769681 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26336972 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.260796894 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267760718 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.280335781 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.26191658 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267925381 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.279725847 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.26081678 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.264899782 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.261914972 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.261783897 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.265631342 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.271511043 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.262714464 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.26195624 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.263722316 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26275245 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263294429 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.269060545 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.280439116 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.262391964 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.263158785 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.265145488 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.260654213 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.263697731 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.264117674 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.263710784 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265536874 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.264505082 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.26443992 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264012617 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.262797646 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.264697963 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.263559173 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267333024 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.272342211 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.267929571 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.263955951 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.265129919 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.265647831 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.268370178 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.263703631 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.265659521 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.264283393 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.277462744 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.289127862 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269306457 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.283834528 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.26541743 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270126371 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.285601327 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.268842021 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265406474 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264731196 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.26466036 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.264216491 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.262287077 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26470941 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.265098998 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.266484559 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.266336557 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.270034778 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.265649801 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.265732557 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.266471716 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.265246401 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.266085103 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.265260378 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.266754494 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.267993415 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268191377 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.26498183 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.265316442 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271806765 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.287816227 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.267975106 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.266859306 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.266334425 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.266757652 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.268917715 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.267294619 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.270932472 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.273837782 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.269543141 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.275263863 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.268598745 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.276279158 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.267180892 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.271375598 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.275843294 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.265394403 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.26645847 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.267968717 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.268145342 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273567872 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.287553442 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.269128247 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.27309464 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268320761 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.269545826 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.268620516 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.268086585 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269171651 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.269230591 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275779671 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.288027126 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.272019167 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269132286 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.265503173 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.267461566 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.269000387 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.267780742 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27163728 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.269431073 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.26936919 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.269338997 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.267727646 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.270299644 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.268709776 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.270798305 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.267816685 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.270138725 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275257148 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.290673083 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274078358 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.270401542 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.275309723 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289288982 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276402468 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.290420927 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.27036388 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.270143562 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.270077699 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.271671634 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.270852395 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.271183009 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.271611294 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.272079954 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.274785114 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.270756555 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.272416919 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.271441012 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.271458324 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.269809969 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281938801 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295034269 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.272871122 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.276534003 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.269749081 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.272997012 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.275604153 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.27143986 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.270122941 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.275118217 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282935249 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.280388819 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.272146824 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.272557798 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273455658 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2731454 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.271495049 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.273075011 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.273216851 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.272779851 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.272420713 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.275500441 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274091089 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.272561325 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.273991054 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27416576 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.274422881 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.281210947 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.29370275 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.273984137 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27355629 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.274497584 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.274011676 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.274117232 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.272481382 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273502999 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275183285 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.276079669 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280900376 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.280153434 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.275416993 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.27205579 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.274281114 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.274290199 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.274252919 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274708513 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.273677759 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27445565 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.275779494 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.274318767 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.27375194 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.273404404 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.27483141 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.27572976 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274476624 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277905228 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.281280851 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274957944 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.273456418 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.275299951 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275155747 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.272742399 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.274759857 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.282074953 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.299632654 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.286593383 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.284081918 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.279927793 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.275888853 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278627096 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.282628215 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.275316566 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.276149871 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.274973062 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.276340265 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.277827119 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.278578542 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275873362 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.281204498 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.296356811 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.275106673 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.283794307 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.2970368 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.277072218 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.278032133 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.280500845 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.276145719 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.275305498 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.277511884 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.276820013 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284203586 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.297061227 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277774086 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278912369 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.275731926 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.279076132 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.28177854 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278838386 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.278371444 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.275978915 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.277614541 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27902916 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278267875 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.2761238 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.278479389 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.277269173 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.281878217 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.285475008 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.277252259 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279683558 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.277898466 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.279181641 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279919191 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278058638 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.27709138 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.27719471 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.277025253 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278858254 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.27964888 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.280402701 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.278620315 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.28053952 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.282031291 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280285913 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281374698 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.289656541 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.288135696 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.278088847 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.279457258 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.280044452 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.28252051 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279914692 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.27960462 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.279523379 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.28065785 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.280671137 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28000504 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.281141583 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.283960494 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295369222 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.30115362 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.279561007 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.280136063 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281411434 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.281065274 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.278653342 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.281316317 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.282885792 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.284263372 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.288828536 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.281207022 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286915426 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.299987075 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.283432805 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.284833462 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.284711218 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.289290784 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.282926877 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.281906911 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.28165017 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.286922213 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.297892196 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281997364 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291436934 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.31349537 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.301294292 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.28319651 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.281564556 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281866273 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.282377869 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.284032802 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.282412801 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.283800889 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282483149 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.283339108 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.284622271 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.289056575 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.28427623 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.283757035 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.285144029 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.282899828 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.283637721 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.282826618 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.282692199 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.284491074 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.284469683 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.283255407 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.284399476 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.284083874 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295323785 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.309567434 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.283722132 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.283403979 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.282009361 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.286786913 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.287426271 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295149517 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.293426816 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.284086005 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.285068524 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.284830514 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.283313454 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.281893318 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.284737452 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.283921751 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.283484924 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.283471492 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.297089842 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.312094504 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.29016977 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.284708542 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286263875 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.285720439 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284924137 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285190691 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286013593 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.28600847 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.286397374 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289542975 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.287374818 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.28655877 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.288655228 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.294825106 seconds)
  done (took 757.606534589 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.285023583 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28428313 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284461586 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.284891919 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286177539 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283904609 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284053515 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.285119233 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.284201587 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.285100711 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.284929249 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284557177 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284956163 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28530404 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284715681 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.285082986 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285622583 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284732764 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285597785 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286165063 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285791352 seconds)
  done (took 28.184490302 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.288835797 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.285041881 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.284831446 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.289182818 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286028568 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.287839284 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.287057812 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288822828 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286021439 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285824123 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.289422344 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288784433 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.286310733 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.286336962 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286538739 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288414663 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.289899433 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287361304 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.289181663 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.285915516 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289255721 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.287649146 seconds)
  done (took 29.526691799 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.289675086 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.288397487 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.288758326 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.286805435 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.290247196 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.287848936 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.289233596 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.289451589 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.290811846 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.29082567 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.288267104 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.291993063 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.29793948 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.295415728 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.291315507 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.291026109 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.434278366 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.290007491 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.289589198 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.289168039 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.28706699 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.295930827 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.309007257 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.287500332 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.28972008 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.289567567 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.290257295 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.290673084 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.291081267 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.291332289 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.294969614 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.290803705 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.28991667 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.29306437 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.291113723 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.291564995 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.294762292 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.291050698 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.289421621 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.291731016 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.301766287 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.313144567 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.291547203 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.297008697 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.311717107 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.292740807 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.296143427 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.298515349 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.289091742 seconds)
  done (took 64.686590435 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.291959469 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.293086769 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.290020739 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.292741523 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.291650497 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.292787136 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.293417708 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.292073167 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.28974477 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.28984403 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.293414431 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.289693222 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.289253687 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.292944043 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.293488858 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.290903942 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.289976842 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.290632179 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.290543649 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.291015838 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.290255348 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.293736205 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.294556926 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.291445115 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.292780737 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.290894351 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.291155148 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.294377134 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.290685161 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.292915992 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.292649017 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.295255285 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.295382425 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.291465974 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.291285854 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.293137012 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.294823628 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.293121065 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.295019206 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.291681434 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.294988004 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.295689678 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.295065263 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.295733901 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.290419265 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.293290448 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.292600437 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.292134529 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.292831433 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.295346784 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.295713363 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.293990944 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.295790062 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.293202334 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.294989961 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.295956338 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.292943791 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.293176978 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.295761582 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.294168766 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.293681018 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295851314 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.294030809 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.297030035 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.296280394 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.29361496 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.293158816 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.296831881 seconds)
  done (took 89.137726383 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29496717 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.295717933 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295781015 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295823168 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295415451 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.297599054 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.295812105 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.296657091 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.296470504 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.296491304 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296112253 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.29642284 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.296215958 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.297413988 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.296057021 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.296802689 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.297234835 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296492631 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.296333029 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297492971 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.297500978 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.297805032 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.296447951 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296458066 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.298225973 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.297757101 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.296300909 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.29769283 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299087397 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296171794 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.298166192 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.29919231 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.29752399 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.297582736 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.297180125 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.297953117 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298438227 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297260047 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.299336695 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.298280348 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.297687944 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297709613 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.298087192 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.298722634 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.297102271 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.298478679 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.298693937 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.30007766 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.299952246 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.299200139 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.298115011 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.299051025 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299052795 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.298673908 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.298487753 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.30063435 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.298268467 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.298280006 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299935348 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.299849806 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.299624231 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.30015817 seconds)
  done (took 81.668900186 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.300708257 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.300283842 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.298888981 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.299078917 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.300501963 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.297732581 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.299544207 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.300313677 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.301027229 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.301037396 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300968531 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298446602 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298048908 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301371697 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.299843103 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298790768 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29941737 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.298994202 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301409084 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.298953885 seconds)
  done (took 27.207417927 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.299337896 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.302398837 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.299266492 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298859704 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.30223383 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.298718628 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.301871425 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301118668 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299953336 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3025643 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.302055015 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.303149112 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300522894 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.300074731 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.303947938 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.300408111 seconds)
  done (took 22.030007223 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.299246076 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.302520651 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.302336205 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.301760453 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.300925686 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.300735459 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.303095458 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.300359332 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.300655899 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.304717618 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.30328879 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.302569494 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.304318911 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.302848264 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.301835854 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.30317657 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.301283421 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.302138105 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.304350331 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.303753111 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.302493793 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.300861691 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.3039652 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.303455158 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.301735171 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.302813653 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.302392047 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.302116126 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.302326865 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.304836077 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.302687101 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.302238289 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.301861016 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.301428044 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.304018012 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.301962085 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.304341823 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.304771055 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.306019351 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.306555609 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.305215454 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.30253556 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.30460665 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.305502208 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.302504234 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.30454446 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.302680444 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.303921217 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.304054051 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.302414938 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.305098013 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.305156788 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.306953411 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.306231338 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.307251675 seconds)
  done (took 72.893411537 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.305161246 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.307424452 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.303955179 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.304828835 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.306275418 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.304947838 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.306569057 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.303780398 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302925294 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.30615512 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.305141506 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.306875835 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.303815297 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.306572628 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.305893332 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307166071 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.303801133 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.305225555 seconds)
  done (took 24.714337177 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.305594594 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.305674698 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.310282397 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.306876628 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.305447094 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.308200915 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.305797434 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.30921462 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307557831 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.305708562 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305094348 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.307834484 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306930333 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.307498729 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.305764523 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305374621 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.308586391 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.308205383 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.306386293 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.305670129 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.308871342 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.308648083 seconds)
  done (took 29.97376417 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.307040221 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.306782362 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.305782139 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.325107702 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.326211932 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.33221812 seconds)
  done (took 9.122392387 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317533237 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310050157 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.306821064 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310487281 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308820257 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306117468 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307212427 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306412746 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308983401 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30895165 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306368107 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310895885 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310048427 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307833279 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310224546 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310495048 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30760674 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308284502 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30852491 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31056993 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308153163 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310963291 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308234836 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309020454 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308333049 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30884953 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310620544 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309755704 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308730299 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310363114 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311466798 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309275369 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31302659 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309017905 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312461648 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311528069 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309656962 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312186668 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312239312 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309519194 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.313206136 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312753488 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312561722 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309836396 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312425706 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308351433 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310332818 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310335588 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310513857 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312731445 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313880365 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310127707 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312276113 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313749784 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313623011 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314411674 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310821855 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311434565 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313625482 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312257672 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311206648 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313041448 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311336303 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312257972 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313004642 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311217763 seconds)
  done (took 87.745232098 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31165393 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.311449207 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311861624 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311898818 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311703725 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312087188 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311560557 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311419065 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312211569 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311005605 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314777419 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312559168 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312502989 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312649282 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311407585 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311982884 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312471236 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31226493 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313038074 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314926517 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312336399 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31222423 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312254987 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313446871 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314043695 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314929752 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312728231 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313339316 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31436144 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312751058 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312491218 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314085304 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313202901 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.313299798 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31347379 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313958499 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31508224 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312751302 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313007052 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317382501 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314820316 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317823455 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314365528 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313801007 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315085333 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317098212 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315823166 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315775917 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31482323 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314259897 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315879138 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31531327 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31449325 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315310636 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317120608 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317957659 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314905572 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314056083 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314803627 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318103262 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315408474 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315191574 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319146118 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318499371 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317432337 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315582788 seconds)
  done (took 87.956771777 seconds)
done (took 1767.734424735 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.326420485 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.40437336 seconds)
  done (took 13.960106371 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.479010277 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.433484514 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.315765234 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.315649143 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.316910623 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.32554919 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.31560319 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.316751351 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.3167364 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.316215375 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.316656795 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.507228345 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.368901814 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.316584293 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.316911377 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.410380084 seconds)
  done (took 42.924119752 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.346967052 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.324736614 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.444119421 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.340723177 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.34614906 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.519005112 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.382156499 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.322120338 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.509771869 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.368279484 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.005483016 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.346487838 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.321608072 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.517378768 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.341327209 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.517517142 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.586710527 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.010738817 seconds)
  done (took 30.782458987 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.819812727 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.315156674 seconds)
  done (took 9.366062531 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.320788842 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.346729382 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.360219719 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.327974387 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.36705588 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.407927144 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.346650077 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.352319893 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.365981333 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.384567598 seconds)
  done (took 64.819002032 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.342898626 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.322574817 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.323103107 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.321066993 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.314580262 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.314763278 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.32163755 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.315683849 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.354893564 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.463378037 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.32432791 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.331209474 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.342696988 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.326268202 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.323076761 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.363429659 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.498449246 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.32341834 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.322418067 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.329304478 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.324949952 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.410607284 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.369037255 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.322208106 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.458771943 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.3726836 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.33105608 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.330745608 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.477997957 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.323297115 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.322954473 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.323630675 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.325439856 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.950783325 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.818067821 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.333020682 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.368191801 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.333462519 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.323214202 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.465943418 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.324780806 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.33208707 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.317245154 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.830409879 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.460101962 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.445268142 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.680877409 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.344452585 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.326592504 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.389991991 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.32675362 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.32542291 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.355474782 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.122165015 seconds)
  done (took 111.981616594 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.326099885 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.710718458 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.487299081 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.340767748 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.169700498 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.049092785 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.336276333 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.639439729 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.406282375 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.319571118 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.661137526 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.864431708 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.346976846 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.33205952 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.866137801 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.322781086 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.319329096 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.206253911 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.34330909 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.326187558 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834655948 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.329658883 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.320344221 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.351521552 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.358889748 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.811006433 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.955495441 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.889664978 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.342961757 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.320129847 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.826495718 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.350654751 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.356231587 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.32198198 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.595508189 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.704307037 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.701404048 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.34397038 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.343873523 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.322717579 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.330352804 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.809078022 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.723563533 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.341647971 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.339990235 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.815657889 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.346242676 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.329256573 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.328814939 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532893109 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.158534345 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.324782314 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.917743049 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.327706063 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.628418096 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.418401918 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.407940186 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.840871346 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.343260459 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.536421919 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.360129231 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.323279326 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.32998821 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322071408 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.326653772 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.712457482 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.729423871 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.325066508 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.710857851 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.85010494 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.34673174 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.884943716 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.259489535 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.34681363 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.372450002 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.331310876 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.036413821 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.865475895 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.368701792 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.323774655 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.70291473 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.348327518 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.658930533 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.341272238 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.330079556 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.847041163 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.324727488 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.376409568 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.324073017 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.325072226 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.099166722 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.324833626 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.630833319 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.351927523 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.324713127 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.324596441 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.340037627 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.3242295 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.3479571 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.330924823 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.883685724 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.348773072 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.307827781 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.343444589 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328008454 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.330431546 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.327845689 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.32434268 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.554549996 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.775688834 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.350456083 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324197637 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.324248886 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.347228403 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.615969293 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.328075563 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.676414214 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.349623124 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.33167798 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.325953452 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.110301714 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.393064743 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.325873768 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.329698452 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.261151332 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.533099691 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.346343858 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.34966858 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.327817994 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.348332873 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.684076951 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.348606058 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.354276212 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.331081012 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.066589993 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.356424656 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.355357287 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.827528866 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.336037037 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.326143046 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.326909147 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.326444495 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622869615 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.607267669 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.601586786 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.328198642 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.349610037 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.052145082 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.40087928 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474916739 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.348815963 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.311217292 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527210134 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.485614924 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.330225042 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.941792931 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.330594327 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.55213776 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.328756648 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.633293919 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.859616352 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.353146994 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.32902057 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.07576664 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.049019231 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.965080259 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.332909413 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.668917762 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.310216691 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.797932395 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.329818115 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.331789859 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.900677164 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.33235468 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.329895659 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.328800681 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.329718003 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.387334203 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.504705443 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.661193757 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.332270594 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.825940475 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.420159637 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.329886425 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.358369595 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.33246841 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.681884212 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.358102716 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.334991172 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.352305077 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.331626554 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.336670243 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.84606608 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.301973694 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.330648068 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.483280575 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.00273049 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.354710902 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.331883783 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.970335126 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.5917867 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.885770465 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.390137172 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.680794839 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.36232742 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.370645254 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.111507489 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.422277553 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.846647835 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.356389731 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.336738629 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.969979782 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.355052802 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.383664121 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.332767623 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.334391989 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.90966465 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.356095965 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.337075393 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.676286258 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.352708574 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.61055485 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.333395607 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.374830778 seconds)
  done (took 1113.074059114 seconds)
done (took 1388.136217063 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.332219079 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.338376522 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.321900626 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.338663942 seconds)
  done (took 26.58138182 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.343554898 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.339553169 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.340892044 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.33827593 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.341489761 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.340316535 seconds)
  done (took 9.293792086 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.527581629 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.337599017 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.339147353 seconds)
  done (took 19.455701383 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.564650324 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.736951066 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.732851169 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.776513403 seconds)
  done (took 11.062700657 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.342365658 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.340681555 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.341540131 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.343488557 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.343649854 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.344604223 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.342741342 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.342300418 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.344499888 seconds)
  done (took 13.334797431 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.689833189 seconds)
done (took 86.669821672 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.882073298 seconds)
    (2/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.426552122 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.097592017 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.320583334 seconds)
    (5/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.193517293 seconds)
    (6/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.561215926 seconds)
    (7/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.41820838 seconds)
    (8/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.315726257 seconds)
    (9/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.850625618 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.047966308 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.611246385 seconds)
    (12/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.542830736 seconds)
    (13/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.887710699 seconds)
    (14/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.315921821 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.395499573 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.341309935 seconds)
    (17/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.053438293 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.363408837 seconds)
    (19/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.465165696 seconds)
    (20/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.316754382 seconds)
    (21/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.317162255 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.354749094 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.845559867 seconds)
    (24/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.595392101 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.414872521 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.353950423 seconds)
    (27/309) benchmarking ("sort", Int8, false)...
    done (took 4.415909662 seconds)
    (28/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.317268687 seconds)
    (29/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.800084655 seconds)
    (30/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.364968951 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.337904439 seconds)
    (32/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.336392959 seconds)
    (33/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.736997884 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.21425629 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.205822621 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.344032777 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.363766205 seconds)
    (38/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.408268041 seconds)
    (39/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.648028722 seconds)
    (40/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.373824848 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.46951954 seconds)
    (42/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.391835467 seconds)
    (43/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.431056755 seconds)
    (44/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.305403466 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.020287937 seconds)
    (46/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.331466957 seconds)
    (47/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.381026754 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.039028627 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.620383497 seconds)
    (50/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.161784859 seconds)
    (51/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.359726876 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.32079861 seconds)
    (53/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.343005315 seconds)
    (54/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.118346543 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.469230723 seconds)
    (56/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.340540342 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.596782353 seconds)
    (58/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.018455271 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.371540617 seconds)
    (60/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.864181657 seconds)
    (61/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.374273044 seconds)
    (62/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.358322372 seconds)
    (63/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.342207348 seconds)
    (64/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.359917621 seconds)
    (65/309) benchmarking ("sort", Float64, false)...
    done (took 5.723646604 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.397054346 seconds)
    (67/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.342636651 seconds)
    (68/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.025591478 seconds)
    (69/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.260634534 seconds)
    (70/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.448166666 seconds)
    (71/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.608752831 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.383353803 seconds)
    (73/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.358467707 seconds)
    (74/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.513697765 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.786403224 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.391773458 seconds)
    (77/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.080411223 seconds)
    (78/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.666387452 seconds)
    (79/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.325772774 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.503505661 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.652135444 seconds)
    (82/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.356712483 seconds)
    (83/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.367453059 seconds)
    (84/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.664220158 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.327066081 seconds)
    (86/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.360064352 seconds)
    (87/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.423468895 seconds)
    (88/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.938878847 seconds)
    (89/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.427098717 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.693616114 seconds)
    (91/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.432312792 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.341777399 seconds)
    (93/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.378149224 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 5.629199041 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.323127789 seconds)
    (96/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.806932016 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.352404417 seconds)
    (98/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.279564465 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.241633136 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.88696435 seconds)
    (101/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.383765147 seconds)
    (102/309) benchmarking ("sort", Float32, false)...
    done (took 5.407076016 seconds)
    (103/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.329038086 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.329551789 seconds)
    (105/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.351777921 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.009698202 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.585652689 seconds)
    (108/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.849884917 seconds)
    (109/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.038212076 seconds)
    (110/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.345934015 seconds)
    (111/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.345217329 seconds)
    (112/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.322207042 seconds)
    (113/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.636961445 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.239160215 seconds)
    (115/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.532592498 seconds)
    (116/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.3756867 seconds)
    (117/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.000952428 seconds)
    (118/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.442366512 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.365456395 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.340087686 seconds)
    (121/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.53414833 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.152392842 seconds)
    (123/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.374544114 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.363184218 seconds)
    (125/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.426392871 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.324100827 seconds)
    (127/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.749941684 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.236470699 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.412299241 seconds)
    (130/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.210333011 seconds)
    (131/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.563281293 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.150471086 seconds)
    (133/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.468442307 seconds)
    (134/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.891617484 seconds)
    (135/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.323779584 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.452537267 seconds)
    (137/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.342606044 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.383278651 seconds)
    (139/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.327477072 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.357982163 seconds)
    (141/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.782260747 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.767851692 seconds)
    (143/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.34253685 seconds)
    (144/309) benchmarking ("sort", BigInt, false)...
    done (took 6.343885079 seconds)
    (145/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.331802554 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.005040448 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.349418031 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.44967353 seconds)
    (149/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.051122062 seconds)
    (150/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.093920505 seconds)
    (151/309) benchmarking ("sort", Bool, false)...
    done (took 1.895537311 seconds)
    (152/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.388837336 seconds)
    (153/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.428922103 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.790528335 seconds)
    (155/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.644734084 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.347002959 seconds)
    (157/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.794233232 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.178763634 seconds)
    (159/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.60295308 seconds)
    (160/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.162383707 seconds)
    (161/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.935824149 seconds)
    (162/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.372382097 seconds)
    (163/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.474140752 seconds)
    (164/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.100474417 seconds)
    (165/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.342164944 seconds)
    (166/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.382419659 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.457510874 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.346833023 seconds)
    (169/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.191843866 seconds)
    (170/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.372474447 seconds)
    (171/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.36262427 seconds)
    (172/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.786030023 seconds)
    (173/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.411427698 seconds)
    (174/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.334287226 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.390469782 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.291002003 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.387878335 seconds)
    (178/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.083141339 seconds)
    (179/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.201686503 seconds)
    (180/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.760821478 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.372197802 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.782120573 seconds)
    (183/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.785862024 seconds)
    (184/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.369218733 seconds)
    (185/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.335524247 seconds)
    (186/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.237116233 seconds)
    (187/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.454819745 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.304617925 seconds)
    (189/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.080048472 seconds)
    (190/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.412104278 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.030178349 seconds)
    (192/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.045922555 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.717577012 seconds)
    (194/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.352844282 seconds)
    (195/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.431724334 seconds)
    (196/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.37422179 seconds)
    (197/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.35282373 seconds)
    (198/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.763126424 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.327173235 seconds)
    (200/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.375032044 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.432799824 seconds)
    (202/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.802532261 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.328548762 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.392254253 seconds)
    (205/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.734516062 seconds)
    (206/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.485287758 seconds)
    (207/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.363919563 seconds)
    (208/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.438323596 seconds)
    (209/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.071088325 seconds)
    (210/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.413755533 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.347807438 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.392442526 seconds)
    (213/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.374518969 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.995363622 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.330384843 seconds)
    (216/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.41374384 seconds)
    (217/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.365320545 seconds)
    (218/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.409743274 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.463325555 seconds)
    (220/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.347699721 seconds)
    (221/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.205254301 seconds)
    (222/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.640852206 seconds)
    (223/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.542352393 seconds)
    (224/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.249628991 seconds)
    (225/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.16895596 seconds)
    (226/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.369891554 seconds)
    (227/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.329799132 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.984432303 seconds)
    (229/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.564072495 seconds)
    (230/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.349202785 seconds)
    (231/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.366490242 seconds)
    (232/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.346473885 seconds)
    (233/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.460637099 seconds)
    (234/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.455552373 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.393223671 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.160109818 seconds)
    (237/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.360195132 seconds)
    (238/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.471106947 seconds)
    (239/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.37363966 seconds)
    (240/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.12921367 seconds)
    (241/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.976079434 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.392592514 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.951171014 seconds)
    (244/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.33199896 seconds)
    (245/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.460603079 seconds)
    (246/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.569140464 seconds)
    (247/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.398054087 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.351983751 seconds)
    (249/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.4204925 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.350897737 seconds)
    (251/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.918294007 seconds)
    (252/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.46055863 seconds)
    (253/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.329851986 seconds)
    (254/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.33178102 seconds)
    (255/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.357533969 seconds)
    (256/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.332501072 seconds)
    (257/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.946261978 seconds)
    (258/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.352423821 seconds)
    (259/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.857992944 seconds)
    (260/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.734821398 seconds)
    (261/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.332602485 seconds)
    (262/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.333426582 seconds)
    (263/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.34793681 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.602591071 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.580877116 seconds)
    (266/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.92911508 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.370450682 seconds)
    (268/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.380109258 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.333807207 seconds)
    (270/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.257831468 seconds)
    (271/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.338580947 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.384742668 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.722772893 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.369517689 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.74145478 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.601242365 seconds)
    (277/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.463666828 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.360138211 seconds)
    (279/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.443122924 seconds)
    (280/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.45116119 seconds)
    (281/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.479701261 seconds)
    (282/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.333308379 seconds)
    (283/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.650921532 seconds)
    (284/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.434073289 seconds)
    (285/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.334094534 seconds)
    (286/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.080244608 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.446852036 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.435889159 seconds)
    (289/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.363727501 seconds)
    (290/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.365129558 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.503862524 seconds)
    (292/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.851263834 seconds)
    (293/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.380566228 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.446887547 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.784350521 seconds)
    (296/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.489405214 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.15652906 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.363935509 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.423236293 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.398559285 seconds)
    (301/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.365673318 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.343566022 seconds)
    (303/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.365793603 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.836189784 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.404920261 seconds)
    (306/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.890509156 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.163271846 seconds)
    (308/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.490744342 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.378080186 seconds)
  done (took 1053.396601068 seconds)
done (took 1054.648283214 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.388235585 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380598117 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.366722919 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.38829098 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.477525631 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.390760078 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.377303048 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.369582177 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.414234264 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.415978285 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.365624651 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.388353833 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.367866554 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.366352703 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.367501057 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380736868 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.562520945 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.375160892 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.383047776 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.376578768 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.383362267 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.366309134 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.417320004 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.389710811 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.37143771 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.370402766 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.370469435 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.386967595 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.479342833 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.37002209 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.371861643 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.379155951 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.559015605 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.368109149 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.364947115 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.387900928 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.378780816 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.379727986 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.372633756 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.400954243 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.956937896 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.38739616 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.369759833 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.369761731 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.369773446 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.374620984 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.36908081 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.376097488 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381256924 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383827674 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.945004426 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.402879255 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.37276625 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.370488136 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.381052293 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.369182442 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.373785994 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385769886 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.389802994 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385531438 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.519485191 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.379132485 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.372108394 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.38671063 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.3777876 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.982131272 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.384684222 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.375216324 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.95837399 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.396150245 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.982766279 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.397841149 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.372170022 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.38288655 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.402350887 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.561260664 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.372427321 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.371353674 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.377825947 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.36943529 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.381915339 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383268503 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.377054604 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.372782628 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384684386 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.394225334 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.382609769 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.372447067 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.382899505 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.391456701 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.379283852 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.382480438 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.37712409 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.368985381 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.383838259 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.377106643 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.37537603 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.375547872 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.379191233 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.387416038 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.957792705 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.40987097 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.370641262 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.373628481 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.377270408 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.388842121 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.962384436 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.395006414 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.396756005 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.426664648 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.377930237 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.560257629 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.382845356 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.389402339 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.38401609 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.378105311 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.371179087 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.500687191 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.95347229 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.409124501 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.377644975 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.374379777 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390244635 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.37749468 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.371307189 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.516487622 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.37804936 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.388152686 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.495212402 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.388014519 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.406680935 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.374050318 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.381223013 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.399206574 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391611708 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.407926417 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.380455452 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.393684244 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.391755953 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.37265154 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.386763578 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.386961632 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.376366425 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.381935181 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.370631645 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.398158933 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387903652 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388248194 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.39766878 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.496057196 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.374200269 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.503039413 seconds)
done (took 233.67025473 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.433473004 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.369794887 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.463528568 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.373056468 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.474824591 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.479198177 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.370267887 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.370678789 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.370418029 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.747589916 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.371022019 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.371795155 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.365202845 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.372508309 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.460648612 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.37368556 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.372060663 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.711548933 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.373771691 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.44350936 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.373092769 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.373014491 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.373472522 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.753140022 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.371064627 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.365979256 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.444117462 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.374068546 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.719348739 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.369678981 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.375640626 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.719647459 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.463141331 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.39174647 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.385252695 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.383565928 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.477195637 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.395856344 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.453667121 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.454452891 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.464770264 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.411874713 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.368494165 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.376515077 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.377587772 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.375542181 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.373254514 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.402777114 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.368268755 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.373008241 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.712555677 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.386009511 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.383691363 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.374538377 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.374961022 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.395303847 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.372988969 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.377276368 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.463632788 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.377460176 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.437586545 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.754846577 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.750656048 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.376447516 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.373314105 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.37510718 seconds)
  done (took 151.146822032 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.440957551 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.448012334 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.495170871 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.396600958 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.427234255 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.499971946 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.396598058 seconds)
  done (took 11.387521226 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.383927301 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.378968866 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.427232984 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.426567163 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.377760552 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.525237133 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378419866 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.388838434 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.376311146 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.433147566 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.380704088 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379301404 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.385240631 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.377534449 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.426388196 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.389349887 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.492403621 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.379140356 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.378491007 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.529207604 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376060925 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.385385034 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.429731184 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.388607801 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.379818192 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.384777676 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.950109401 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378859458 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378389594 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.379406728 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.377408545 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.41602663 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.378642917 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.379682284 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377382359 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.494221037 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.379251225 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377109142 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.3796267 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.374867011 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.380250805 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.380308064 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.380513931 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.377754242 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.379468181 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.402853 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.380789493 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.379962862 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.380908904 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.381732303 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.431247638 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.381221897 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.378034372 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.377497349 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.436978939 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.388531786 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.381359619 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.38005933 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.382073209 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.379428336 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.533110063 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.427568421 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.381571733 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.42953959 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.383213919 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.381439431 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.381658943 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.382447679 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.434675267 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.381775127 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.42999501 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.380205188 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.53574634 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.402810265 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.383879958 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.385410882 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.384570494 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.383087282 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.377958707 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.38623081 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.38189366 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.382758043 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.387764762 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380621948 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.381826337 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.483001725 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.490482491 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.380715975 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.396268484 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.388067043 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.380498719 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.435725101 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.383393094 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.379360958 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.434840585 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.496517688 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.435049819 seconds)
  done (took 157.77474994 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.38817789 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.391310363 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.385973439 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.399460652 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.384451503 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.38308188 seconds)
  done (took 9.622821044 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.386861695 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.386042271 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.38403184 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.385747015 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.384008657 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.385498635 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.384300971 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.385496336 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.387213515 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.386105092 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.385226225 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.386778138 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.385798864 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.384637162 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.383472242 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.385028424 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.384783661 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.382828694 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.385322988 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384563833 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.496003442 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.386199028 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.385235355 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.387409663 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.391196633 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.386567068 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.393726912 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.386579219 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.386805821 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.390964481 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.409008441 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.385989516 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.388424243 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.392700439 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.390316011 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.388025713 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.391613721 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.389013768 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.385720065 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.387509218 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.388738964 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.386204881 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.387116023 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.389259929 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.388656659 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.392648754 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.392416778 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.397386807 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.387300344 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.388185982 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.389512786 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.389136118 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.388594719 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.389921044 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.389364907 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.410994827 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.393245793 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.388494263 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.388155937 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.389737005 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.391219251 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.387903744 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.389998957 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.391885326 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.386322802 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.390757076 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.389918463 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.39256689 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389181002 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.389859265 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.390590003 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.387399941 seconds)
  done (took 102.388464601 seconds)
done (took 433.600557185 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.533777779 seconds)
  done (took 7.828682072 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.825968752 seconds)
  done (took 8.124011345 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.196223269 seconds)
  done (took 24.500756272 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.444261687 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.478257472 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.403725975 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.412222946 seconds)
  done (took 27.035582174 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.53100343 seconds)
  done (took 7.826806185 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.382433918 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.40313569 seconds)
  done (took 14.084000487 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.776222176 seconds)
  done (took 8.072779746 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.064126188 seconds)
  done (took 8.3697359 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.396325901 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.404571969 seconds)
  done (took 14.367761353 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.363414555 seconds)
  done (took 7.660393368 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.593382289 seconds)
  done (took 8.89124311 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.393944678 seconds)
  done (took 7.693564264 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.462555326 seconds)
  done (took 7.760653799 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.760834924 seconds)
  done (took 11.058170257 seconds)
done (took 164.568352206 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.382819551 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.38221128 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.384248616 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.383094754 seconds)
  done (took 26.829166502 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.425414313 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.42610418 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.425601571 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.436135012 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.427359968 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.425089959 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.416739795 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.418590184 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.438289019 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.428111318 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.427916131 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.427646106 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.425011009 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.417726653 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.427738624 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.428677425 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.437062387 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.427067515 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.417830803 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.428043483 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.394385814 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.436493558 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.429176956 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.392582312 seconds)
  done (took 35.483613299 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.918066936 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.466772995 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.546084816 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.445808523 seconds)
  done (took 7.674027583 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.444900898 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.446343029 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.458716996 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.500472398 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.524169504 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.456915145 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.422345771 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.414130649 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.400603859 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.447001475 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.522476826 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.461619175 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.533204906 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.392874909 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.581688669 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.393256855 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.393085827 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.444439663 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.497994233 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.542215524 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.394469597 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.447079659 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.449191648 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.462864258 seconds)
  done (took 36.332371134 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.393425789 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.413006596 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.393023901 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.392473099 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.401040967 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.393094164 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.393605867 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.394675006 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.394259019 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.399576438 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.393300454 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.407418552 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.394510517 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.39503747 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.401406716 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.395434217 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.399692613 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.393806068 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.393837929 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.400342883 seconds)
  done (took 29.242473762 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.386906384 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.241386773 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.740253939 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.643636011 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.387691479 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.386932955 seconds)
  done (took 28.088416697 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.475871431 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.641597225 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.397517092 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.804402466 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.911326164 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.418405061 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.39680147 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.667319072 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.030016748 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.038371319 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.465471131 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.470831481 seconds)
  done (took 21.021595254 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.403612649 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.394785094 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.400249613 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.408067671 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.457529649 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.417848229 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.402229117 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.388810419 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.46399734 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.481318209 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.418098511 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.458501389 seconds)
  done (took 38.397965237 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478333826 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.439882417 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.52655581 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288288601 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.121498575 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60390705 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.304260998 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.845532388 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.399312564 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665811854 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394604384 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481856742 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.651115792 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394543928 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397713163 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.510712213 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640575669 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935049587 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39530103 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.773383081 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425851561 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391602977 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.820491205 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.426039223 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604522187 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.3762324 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.653072647 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.169699427 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.717646043 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40541418 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403416962 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393098708 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6672882 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097772977 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510344298 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403547378 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.277905217 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.946828611 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.371786513 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.81497778 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413958929 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397190966 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404841688 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396274828 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.329204128 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398471078 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848237092 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.401583823 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.105199262 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395275853 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40573507 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489288942 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.398092881 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.969067971 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.464220373 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.401990907 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.39406025 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401970356 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963403226 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.194951362 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398950216 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.335336837 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.884071447 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.864200632 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093210633 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.518240923 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.399736086 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399779918 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331379887 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.787546131 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416503604 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533332257 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.421746345 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.059281362 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190188013 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.431382623 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.32866451 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003099176 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398144596 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.339468894 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625932685 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.173911023 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337394966 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.344937763 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.330644279 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195165649 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406644711 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.916177774 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405375676 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.840800229 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.410293572 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414502149 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419987226 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.622854704 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.275757699 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397622923 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.412283119 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513551619 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419491875 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.842872289 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333971521 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.404067136 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656332927 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.612285847 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404903645 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.546866837 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647834617 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405606861 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.420471725 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.413903332 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.416188107 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.036567366 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430756656 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.198556467 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417029742 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.177811811 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230132354 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416859796 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.50490187 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.404679165 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670725235 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.266398354 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.561766378 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468281353 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405862362 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401247423 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.890981758 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.258132913 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.298473532 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.396055459 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407713717 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.417440287 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.400959311 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363472989 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.39710567 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428436037 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.182351494 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.625947116 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417056618 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679462178 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33604193 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538260092 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.418636016 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.625147939 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.781548627 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.424440178 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663104606 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401783652 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409747536 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.420457466 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420968819 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498376863 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424570131 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.402658114 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.665404973 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.407215089 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.406496652 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.933572433 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.186994696 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409745678 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.407205356 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.284860667 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047619417 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396090484 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405940717 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.296659254 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.416368362 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471236601 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408760416 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.413110275 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.507594266 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.401257283 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.413936819 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.399438148 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630335942 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414376755 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.840559422 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484595139 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.615703849 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066030419 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441325951 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.338573457 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.113278505 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.096501878 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403972603 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.594459011 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403363743 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414661197 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415262892 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.077717003 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.068017165 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431959332 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.830094493 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.416616229 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415273927 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.410543046 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405033015 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.50101068 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.423540138 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418144108 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.421795303 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548593317 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.418695336 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.339050729 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.921631189 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.410890689 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405087102 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.181848956 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439312907 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.823344169 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917722051 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669456257 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.250326271 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.419420555 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.026088444 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.447426548 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.421624956 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421307305 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417084519 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.426286227 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42189361 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.418183551 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.851369302 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.859890461 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974785996 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199572335 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048021788 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457954734 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.424254548 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.312843818 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.858554962 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342306653 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.06613817 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619685535 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.876024789 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365872213 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629480675 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.738161515 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31068419 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425626642 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634882516 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480297289 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.422603634 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420522771 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621143797 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442199146 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.422932776 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.346082652 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.688211137 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659795272 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435228597 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511984588 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862555754 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423885666 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.195269616 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.407675574 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.874098055 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.624851118 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.047048556 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.803488618 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.415268504 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416132413 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936728762 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415336154 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.938108612 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089916376 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.446185112 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.638451368 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356440384 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.420412011 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.422563243 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.406194884 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.014982223 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.414262477 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.688133961 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422039039 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344689746 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410087754 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003283405 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.287727223 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.417127144 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411333514 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25061397 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416400635 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.737367338 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.420756588 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.488356038 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437512074 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.345804778 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346676313 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.103533305 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.421716605 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379757395 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978494059 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.849924348 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.46499962 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44511554 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265962493 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.671244551 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.426608788 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.077014238 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663468868 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.363773221 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437996921 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.511448148 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42898305 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.400301641 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.2934606 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647390094 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285650459 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.637527612 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.553420706 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.3113379 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.411631971 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632274326 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.295325973 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.425384651 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689381103 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.143286484 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.412004318 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218291625 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457639867 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413075343 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.453593785 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.90228987 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425677833 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484269649 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424529344 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.424309463 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.424874157 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.608149306 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420188849 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418468498 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.42789109 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507595491 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.432529281 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.454077715 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.18917797 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087037903 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254513347 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.10216639 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453351182 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414093602 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416048421 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35032596 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564077975 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.944996164 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688233196 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53315228 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.996893219 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441773758 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41451092 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43763403 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634600639 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690433861 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.291471278 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42163614 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.080684765 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.57437294 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4268605 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.627581812 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984246152 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049040833 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541456148 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.42675738 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.8747356 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691817836 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.508760932 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417079799 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015799911 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.431658827 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.912595015 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.445289847 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41792768 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592806586 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.426669357 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13354596 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.449683244 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.577183923 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.190167158 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.980392152 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.681768885 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.96564853 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.428787962 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092072589 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.250253146 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691261262 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48840229 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428342127 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.52916664 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56405453 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.434558335 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.318707019 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418434136 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.265913957 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.129035257 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.428326036 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090668995 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707700057 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.41704813 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.428756485 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444608796 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.429291115 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.643925265 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.219538099 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.646051119 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.429178576 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.427668121 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.410956822 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085049079 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455065653 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3546279 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.421659717 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.685507363 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.676603726 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444627058 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.874041589 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.131805539 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036188064 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.395745432 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441770997 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431322102 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232349565 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096970167 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.488363375 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993695313 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.082910623 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427881417 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693948621 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.426611593 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.426216075 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703693861 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.425993382 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.422287353 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.438288019 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.094206104 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.313461674 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.432860737 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.915136207 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.364392195 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.64927005 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.141244512 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363803885 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422680508 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.62039475 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.427953908 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540649679 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433180812 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.421691811 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431613634 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.161928354 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.714845985 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.428280111 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.405386116 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.403090558 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.428844454 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4344614 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.674496591 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428198375 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.095707805 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.773705688 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.682424989 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.436702875 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.408797849 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.427781969 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423636476 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.148276004 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.400697598 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.08538114 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062076214 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.438591533 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.438712384 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.426988001 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.640583242 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636260647 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.424293538 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.460661142 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423613461 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445196403 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.322705314 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.195886841 seconds)
  done (took 1639.194373072 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.457012733 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.476947493 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.455027781 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.475630152 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.46044659 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.538816346 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.441090123 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.544909838 seconds)
  done (took 53.185455317 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.437462424 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.584433035 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.457544853 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.432587535 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.436730624 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.431545827 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.939560683 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.459766785 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.432229564 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.434131464 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.436854801 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.42784309 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.153763707 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.435034227 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.438281449 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.420742726 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.436573355 seconds)
  done (took 67.139810359 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.430918079 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.065827989 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.460486399 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.429775989 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.082265515 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.449817817 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.070079801 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.474078652 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.436435118 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.536845098 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.083484167 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.458978302 seconds)
  done (took 82.316020904 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.433471798 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.434496789 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.433647842 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.434676007 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.433402179 seconds)
  done (took 8.505951168 seconds)
done (took 2074.710619003 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.691251661 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.247604418 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.17245569 seconds)
  done (took 5.756719752 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.578074305 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.627093747 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.764431475 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.777667788 seconds)
  done (took 8.088694591 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.70947558 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.817546986 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.618794251 seconds)
  done (took 6.486898514 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.065133148 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.448579202 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.57937403 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.426508824 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.433672015 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.432867888 seconds)
  done (took 20.6345679 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.434873531 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.439396756 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.43574689 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.437098934 seconds)
  done (took 7.088595761 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.410919294 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.166259034 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.416634988 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.432496118 seconds)
  done (took 18.767770683 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.184882137 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.193038843 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.178492088 seconds)
  done (took 7.897993734 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.437638884 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.275846211 seconds)
  done (took 10.055273142 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.742198086 seconds)
  done (took 3.084199763 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.566811962 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.769664844 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.598621599 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.539583539 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.61580928 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.998363536 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.384441374 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.891817621 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.49974674 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.030931182 seconds)
  done (took 31.239876835 seconds)
done (took 133.22178422 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.730571909 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.4578051 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.636301838 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.700077728 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.666238289 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.635802767 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.947339284 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.66518204 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.209868187 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.197853274 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.704485289 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.664009135 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.677376547 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.456205402 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.677037297 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.455803584 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.665650852 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.781920419 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.427034707 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.432876616 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.950072843 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.338940946 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.523547218 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.366123631 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.663975953 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.587646904 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.922823097 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.456172425 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.432650849 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.974443214 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.589296717 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.43458633 seconds)
  done (took 200.372758261 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.434389457 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.452951115 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.436121801 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.45337448 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.433297483 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.43387789 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.453829601 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.453158781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.434833389 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.434321273 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.433506309 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.454321022 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.434009849 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.454447948 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.454549311 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.459109444 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.447656327 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.449200239 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.43516215 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.435823848 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.437570137 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.46992046 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.435933672 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.435595813 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.455556598 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.453609426 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.439915675 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.435370486 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.436021047 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.454356977 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.436224722 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.437456281 seconds)
  done (took 207.550505124 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.445219971 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.436882204 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.43845525 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.460124613 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.453683147 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.443649929 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.456914171 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.452914285 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.436108296 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.450971043 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.439527904 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.463438825 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.439119153 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.436347691 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.439176582 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.43804573 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.437552152 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.461608714 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.443256089 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.437860381 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.437391004 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.437798928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.45692316 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.439196785 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.462260759 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.456367712 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.437144421 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.439347699 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.438482356 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.442180718 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.444014443 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.4648803 seconds)
  done (took 207.614625005 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.635446147 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.446673582 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.447891529 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.380705308 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.447536579 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.446415209 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.443763142 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.645090613 seconds)
  done (took 15.242765188 seconds)
done (took 632.123062762 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.909458267 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.606707364 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.654300054 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.466738857 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.315333335 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.487669059 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.466351401 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.652475421 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.398509871 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.660782257 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.827194198 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.484207309 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.980329965 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.464331328 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.738185039 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.570674106 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.381574994 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.531962492 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.830461735 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.077213487 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.753156786 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.086581989 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.679872057 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.399596987 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.004244931 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.023822639 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.306901654 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.365180364 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.486493484 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.814074214 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.251862924 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.574723251 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.538392627 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.538488809 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.593071046 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.574750868 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.564195248 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.539864157 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.685332764 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.773252434 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.078367299 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.210791904 seconds)
  done (took 98.697963627 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.430805209 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.430815496 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.431198439 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.430273116 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.432532056 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.43148969 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.431080273 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.430335785 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.431781832 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.431729547 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.431327006 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.432496272 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.430508798 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.432634115 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.429712871 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.432370039 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.432968804 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.434494167 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.431859552 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.431492338 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.432458442 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.431881143 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.431151209 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.431164606 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.432399553 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.432818715 seconds)
  done (took 38.576531813 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.452068372 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.718163345 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.89490601 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.457785215 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.451186978 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.455770332 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.541364074 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.452547274 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.454036595 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.45426035 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.63276646 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.456330971 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.490020404 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.940445458 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.458032593 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.452911885 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.455184995 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.453816218 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.726878593 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.464192309 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.565493185 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.453843386 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.541964094 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.461596637 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.479037017 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.452107863 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.45670419 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.983823014 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.475329188 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.634539198 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.383219832 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.544745131 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.933096786 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.927142861 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.387922096 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.461237699 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.454930571 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.639946447 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.456368397 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.452810258 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.5445645 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.45387393 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.906308873 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.102236269 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.474193121 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.453069705 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.016205156 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.660499435 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.747590025 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.46597928 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.932280678 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.457893433 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.457794636 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.455699446 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.747814801 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.467541628 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.453421889 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.012952558 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.481177074 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.543761176 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.457000997 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.456018867 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.730794278 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.455510961 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.720228576 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.458773512 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.463959412 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.478639719 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.909214951 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.457097508 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.126338412 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.476346794 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.456725102 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.638707107 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.721722525 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.04550795 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.482447835 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.736256694 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.948291573 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.565855527 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.460946336 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.974803421 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.568710812 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.459523259 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.461513453 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.459829705 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.457337546 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.508895985 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.543032639 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.047634321 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.134897875 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.033796374 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.569439598 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.471809899 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.458028384 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.019938575 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.479885913 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.458931248 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.905819395 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.121191174 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.478507617 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.466431439 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.132379063 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.480776837 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.549486138 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.464390275 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.931239875 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.4614823 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.509308688 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.459733484 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.465868756 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.484273763 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.548577501 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.462817056 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.459192386 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.102296293 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.666865842 seconds)
  done (took 191.707401318 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.470426242 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.451269388 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.46889223 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.452252201 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.451434146 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.457802488 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.452199502 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.451353618 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.457171695 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.45106196 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.454747011 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.45374006 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.453591526 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.454147457 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.483344791 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.459616595 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.067460039 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.452187473 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.454436079 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.453258564 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.281503949 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.456971819 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.454837451 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.473509254 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.454942586 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.453265896 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.456656328 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.476346686 seconds)
  done (took 155.621457828 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.46156785 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.106694563 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.480410566 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.611804742 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.485672381 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.459708589 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.610285206 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.526966549 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.481517818 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.459429843 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.458771783 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.82636018 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.466694017 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.05236597 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.688666793 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.634108426 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.050469891 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.482859371 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.460697762 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.460558372 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.617519082 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.469575541 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.812854865 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.147988681 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.486785355 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.14590264 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.450438536 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.463181345 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.460999527 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.149156526 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.484886811 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.83031087 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.553715397 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.530327039 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.168258804 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.094871139 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.077599447 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.634008741 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.463577387 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.461610703 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.461685537 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.447284702 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.150858541 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.489712789 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.464280415 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.141765357 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.488255639 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.466055477 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.469027632 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.463139116 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.529895627 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.55302914 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.854754478 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.161735254 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.574124029 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.477320559 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.6140106 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.864328292 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.466436278 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.054628869 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.446910565 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.160510264 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.491757851 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.447431947 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.465591031 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.470100272 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.638489784 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.615059251 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.070054551 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.488006887 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.055900778 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.657630782 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.4627903 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.465207631 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.467266226 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.157526729 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.08974668 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.65755673 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.618923494 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.694547917 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.452566565 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.464333377 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.447872858 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.553297229 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.464542484 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.15947752 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.080559693 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.48697515 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.466864609 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.468389534 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.468542789 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.674501178 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.181004379 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.577533709 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.047173047 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.857477037 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.842747343 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.472680168 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.534869609 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.489664492 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.841052128 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.472941623 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.53553581 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.938747558 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.840448786 seconds)
  done (took 176.76978077 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.741959392 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.787207706 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.567726515 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.616933692 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.14150588 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.055751043 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.840793425 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.624280772 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.590001233 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.751075541 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.814103283 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.557700021 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.659056231 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.550178239 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.290565754 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.567566173 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.589231337 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.619745186 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.593086937 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.582923685 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.197136855 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.78789961 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.656823727 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.625328696 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.573885829 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.315287367 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.065478541 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.010030453 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.664386996 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.978037221 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.046762842 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.665171508 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.561410168 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.253803186 seconds)
  done (took 71.313661357 seconds)
done (took 734.036430654 seconds)
SAVING RESULT...
DONE!
