cset: moving following pidspec: 28112
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.286539882 seconds)
loading group "string"... done (took 0.579825541 seconds)
loading group "linalg"... done (took 7.085105606 seconds)
loading group "parallel"... done (took 0.162679528 seconds)
loading group "find"... done (took 1.113474765 seconds)
loading group "tuple"... done (took 1.967232632 seconds)
loading group "dates"... done (took 1.260774856 seconds)
loading group "micro"... done (took 0.233298487 seconds)
loading group "io"... done (took 0.954690331 seconds)
loading group "scalar"... done (took 38.123781909 seconds)
loading group "sparse"... done (took 12.247222313 seconds)
loading group "broadcast"... done (took 0.965933849 seconds)
loading group "union"... done (took 12.987700198 seconds)
loading group "simd"... done (took 4.405489383 seconds)
loading group "random"... done (took 8.892531402 seconds)
loading group "problem"... done (took 1.935193201 seconds)
loading group "array"... done (took 21.036752944 seconds)
loading group "misc"... done (took 1.907978398 seconds)
loading group "sort"... done (took 3.185585414 seconds)
loading group "collection"... done (took 17.743099877 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.524693767 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139057643 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115524567 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.136305381 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.181028242 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131914937 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141960762 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083303679 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.011734238 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.16478111 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137116916 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.467650828 seconds)
done (took 4.979764117 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.200824669 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085313678 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094323674 seconds)
  done (took 0.870146709 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064405705 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124818353 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.078615222 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066885061 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065822832 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079376865 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066155287 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065077844 seconds)
  done (took 1.244579144 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073520616 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067433683 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083055569 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066334357 seconds)
  done (took 0.989165176 seconds)
done (took 4.076424135 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.884757649 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.231495505 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18666245 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.44739991 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.144797226 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.185654349 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.660416751 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317816743 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.211420811 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098596797 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102876313 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.371211388 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105210206 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.659248425 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076827513 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.10357732 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.157254138 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.427731483 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080694886 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081636688 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102050251 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.139916654 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101984066 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07557576 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.166904751 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068620789 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144626538 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094438425 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067076498 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.239323187 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188227126 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68235983 seconds)
  done (took 10.33937289 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098407286 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.113922825 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06816196 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137708547 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101863394 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085144245 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070522083 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.081175854 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09027691 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.155297822 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.111361707 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105410797 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080277165 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068679714 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.098817944 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210355855 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10556356 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082994522 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085314545 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074101356 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120029505 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080843472 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.091767834 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07685842 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.149444507 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194758928 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110839535 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110197304 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06747437 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079517857 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130706945 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14118496 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066184092 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080286304 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.137024242 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.10922104 seconds)
  done (took 4.480126536 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.014104863 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110590355 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.157733517 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090910504 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149632852 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082077621 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108859973 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.081191482 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097622575 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.227222232 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.131565272 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.472041473 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125498645 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09988833 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067786981 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.066492218 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079853838 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066132632 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.473627405 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143512322 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10004272 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101416048 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087619981 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068875514 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361095049 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067168012 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064705031 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083759753 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064197241 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057496053 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.141923719 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08315148 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.168970038 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.105941697 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067247875 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116618082 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.175797112 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093212554 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119653863 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080355976 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066016 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166938809 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072230912 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081484481 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086424814 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118399448 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117578 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067765729 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081104576 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.178293255 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065975047 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097567491 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.868113862 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.163239534 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07619685 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06504212 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.282749123 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.082606982 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08257323 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063250184 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.260652576 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.147938999 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069941138 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081581038 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065218892 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066157211 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.379317689 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066538344 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.83013499 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070407349 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077369994 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083331696 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066339464 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086781175 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07052074 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099561761 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065984403 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.06664062 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08109809 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064552748 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082490111 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083953804 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.200459851 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081408185 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066175547 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06341845 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101810531 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108986854 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068688043 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06384404 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114850759 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067709549 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082247809 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100186293 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083337903 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.09812851 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069159175 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126554929 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066946492 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.140670502 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067166202 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110803001 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071651028 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112668345 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096420243 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066902334 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.150485377 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063164829 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08038592 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066030506 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063914677 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082919684 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066923831 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078184635 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081061589 seconds)
  done (took 20.736527077 seconds)
done (took 37.268726473 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.286368858 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.089091572 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.088967681 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073160874 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.089497315 seconds)
  done (took 1.39763305 seconds)
done (took 2.144614224 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118882897 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114770275 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06213247 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11153112 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062917457 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114963314 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112712363 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079463076 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113260562 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065907327 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110311461 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063774528 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062682151 seconds)
  done (took 1.966598198 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081955649 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083450773 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083947249 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079791345 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077062027 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080804371 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.078224003 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103025691 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078851382 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086380399 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062756362 seconds)
  done (took 1.640570691 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080415407 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082486847 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083643358 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079003949 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077324324 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080457913 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.078507236 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09965599 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079176072 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087869749 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062543397 seconds)
  done (took 1.635360703 seconds)
done (took 5.980274808 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077543728 seconds)
  done (took 0.815528701 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.688208171 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.323627387 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082320272 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.130770018 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.219306333 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.150917519 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.423225029 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110316043 seconds)
  done (took 10.037098767 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088615175 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084036509 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068886241 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097648095 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069655909 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085368078 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071453952 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067961267 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085826499 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070585882 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085436643 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068774117 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085740543 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067139055 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068023562 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08327614 seconds)
  done (took 2.053673725 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092068513 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091852516 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089057961 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075258304 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087909559 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071796716 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090491416 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072941285 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08603925 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071826511 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089452158 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073668344 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.08635883 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065156434 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.088349358 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075621014 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08609238 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074556082 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090169842 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075189309 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089487165 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065170583 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086593972 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073834701 seconds)
  done (took 2.79840152 seconds)
done (took 16.450084112 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.128705905 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075349251 seconds)
  done (took 0.950597543 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080082125 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09611599 seconds)
  done (took 0.93007971 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082806209 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.079607602 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088314232 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09158362 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065070341 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080207582 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.100344245 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065611516 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079311804 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065774285 seconds)
  done (took 1.552532167 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067802696 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.091493175 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069513219 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096040191 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073292981 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.078817522 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071735799 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082925659 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076915801 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077409517 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070485022 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097327108 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070297795 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099231175 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071361266 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082920376 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085220148 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066799959 seconds)
  done (took 2.184912366 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064968346 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066333985 seconds)
  done (took 0.887377229 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066681013 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062943519 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080827378 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066457547 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077934467 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06190509 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077759701 seconds)
  done (took 1.250523228 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.396519984 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.107570638 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.238813646 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087202493 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102105957 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259842271 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.081984859 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069710236 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086608095 seconds)
  done (took 2.222934075 seconds)
done (took 10.732192115 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078589236 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084458608 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.108324691 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41304348 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105524917 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065194968 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.13011519 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.218045749 seconds)
done (took 1.957777639 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.123806881 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.599781829 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.393500531 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.209192065 seconds)
  done (took 1.962836158 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.368508647 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091038926 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072618593 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065815805 seconds)
  done (took 1.361139593 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065856203 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068399332 seconds)
  done (took 0.895508539 seconds)
done (took 5.104197961 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066150388 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.099146756 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06596831 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063292035 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080152332 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065003144 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062792127 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.080194819 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066262607 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064945451 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081080498 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068177501 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.080788697 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065593596 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063226797 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078796729 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065350551 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063458784 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078132912 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063405691 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0651357 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078646753 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063930664 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064989103 seconds)
  done (took 2.489119359 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084722939 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.081830115 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070845419 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086428519 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069791656 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086883542 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071034402 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065929395 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086897276 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068877604 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084460459 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069523626 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083043434 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069896941 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082894198 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070311371 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085856279 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066560593 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070318317 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085215805 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071261426 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081823813 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069640287 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086997604 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068809166 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085217117 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06774314 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081645496 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071481223 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084475087 seconds)
  done (took 3.074768906 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070226053 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062909611 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079147315 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069442825 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063025208 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079917952 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062769573 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078906551 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064495707 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063173814 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080166635 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06316617 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062900239 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.07989917 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063861544 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.081335191 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08016423 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06329503 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079668099 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063535135 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065775719 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078923881 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063397701 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078283636 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063605675 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063359395 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078439914 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063159225 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063809777 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079117326 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06563001 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065821158 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079198677 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069555361 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082400017 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063870645 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06788754 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078404524 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063701228 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062865903 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079211115 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063265915 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063438104 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.084747537 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063189881 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081309769 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063821486 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063988591 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079851504 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065792404 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078728838 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063439259 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065029123 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080398716 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06733062 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06311573 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080342918 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063334083 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079159187 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064087351 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063102834 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078972818 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066047499 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064451341 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094576542 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07007202 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078881946 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065315326 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064376327 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081607015 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065306197 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076623847 seconds)
  done (took 5.857416225 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115645655 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090565051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081705155 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065013658 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077754744 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063670351 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066662826 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079152335 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065626575 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085788688 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064075571 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064568265 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08102838 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076637288 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08043181 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065664465 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084133535 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062066339 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063689784 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082895827 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063852249 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082503649 seconds)
  done (took 2.435637038 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.182676805 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086612649 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108529493 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090196373 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066839914 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089470105 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069948262 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086102951 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069957695 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083597101 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068031556 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085730984 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067977757 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083443182 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068696719 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084637668 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071179507 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083472439 seconds)
  done (took 2.318016515 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076973602 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065388699 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105261651 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065197705 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082663148 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068563193 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086691566 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074323236 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084291246 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065511324 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090380471 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068730571 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.083326041 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066866085 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067796791 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081619169 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068655337 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082188218 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074201398 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086588778 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070570167 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089934977 seconds)
  done (took 2.476454266 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080231068 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066941728 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10088979 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083830571 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062069328 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064646497 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088190514 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.0660567 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087223583 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066985046 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064966064 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080040081 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070877065 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081959194 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07016159 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08201188 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067443847 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06460635 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083906481 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061410486 seconds)
  done (took 2.266559199 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086881331 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082707042 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066900243 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091191585 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066922132 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083014852 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07496862 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083170025 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06743107 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107226078 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066575135 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082521611 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074725282 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087565372 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067003618 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090426432 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074527066 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090589146 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066968268 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082280118 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106616369 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.177595733 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090623249 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067085333 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082521044 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067253165 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067001209 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088378196 seconds)
  done (took 3.118263747 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066023744 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0656527 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079543821 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063977891 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06359106 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079808859 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063433437 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063490733 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082724226 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063544199 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065605844 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082355134 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065794079 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081764555 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066149734 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066085212 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081906723 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063767563 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06363689 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080081564 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065798974 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065099341 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08240592 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06430581 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063979096 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082097283 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063966018 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07926296 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066106692 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063431123 seconds)
  done (took 2.88143907 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075371089 seconds)
    (2/2) benchmarking "in"...
    done (took 0.089162655 seconds)
  done (took 0.944208256 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063449654 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079910344 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079625317 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069974873 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086448535 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066108815 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090035888 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069925799 seconds)
  done (took 1.385874357 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081795639 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076859596 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083614 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076308251 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093205811 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08196493 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.151959315 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083341833 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072706277 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080416089 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079432863 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06496595 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08866836 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066134396 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.087782094 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072231738 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064617419 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087178016 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068075067 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08117791 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06800098 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090790542 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068935635 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062297118 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083887655 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.074293044 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093918984 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067349314 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085416812 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073344108 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070644813 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077114102 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066484201 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083087091 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064678444 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.091373631 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08054386 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085266536 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075302524 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066847518 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091625291 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06104927 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087335505 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072275061 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091579626 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066616547 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06594526 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078563059 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063740118 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084931619 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062762836 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066448854 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077510976 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072515693 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085648903 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076541422 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066893639 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084689041 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068932421 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085780261 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072253223 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083813276 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069246783 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065769397 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091318556 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070719096 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091339073 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061169516 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060202695 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080042462 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075001768 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104357477 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07198039 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083036467 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067882454 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079147267 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069449467 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067059427 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087821466 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072433194 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082471371 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071730686 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089786811 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066385848 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068433002 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089800376 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064553274 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085007434 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063704842 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098243515 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065131573 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063167419 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080759326 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075982963 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085661208 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066076156 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062972277 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08919288 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06037093 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083381908 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067567539 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08199022 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076221472 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086789705 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071713245 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090563092 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074004951 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065694692 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086175848 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063300517 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083069568 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065574546 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073437532 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077077523 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068781064 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082672275 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067222394 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073799879 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081529949 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06645341 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089367896 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071167219 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08054043 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063578458 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068510626 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082929115 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069148789 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089858391 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065722155 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061551034 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078326882 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069948078 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082173271 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070237267 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08630029 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069412118 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060916547 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081468467 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070589725 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091627167 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066574421 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066642378 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.088820401 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067944215 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08203 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072650328 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084957719 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065904593 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071750987 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083521607 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061256095 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085859906 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068541191 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064735059 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086749564 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069366088 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085170125 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066713683 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064193992 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087615525 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066858598 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081371154 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066403302 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064621879 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092768443 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.0677487 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077855563 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06385252 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088822674 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065442212 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064649039 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081853542 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067999979 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084093602 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064012068 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06527747 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084183627 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076460049 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086488572 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066940198 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088289698 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077253237 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082320395 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068748697 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065721505 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083764102 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066555625 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090706104 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071989964 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087003047 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069159609 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062719801 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08815264 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072933757 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081644702 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064125156 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064643526 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086378037 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071683444 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086668762 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06713168 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080925824 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066561517 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069500255 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085016234 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065721959 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08155008 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070968522 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064612368 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089689978 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066910123 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092019251 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069056915 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078339142 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069546591 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081184916 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071686252 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061901143 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080718261 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065798937 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065895888 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082137501 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068700956 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07735554 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072781752 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089829602 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066505559 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065615496 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082713768 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072819089 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083636802 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070059095 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068536808 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088571485 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076493265 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082344768 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069794101 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092654995 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066124294 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060725269 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088424745 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064777411 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08150925 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065705567 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063759332 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0856632 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073980817 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089406478 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060757702 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084065102 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065359749 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065574967 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078503698 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071086597 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068504611 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083780893 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072742645 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084423409 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067587241 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086214117 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06629109 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066265304 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084024402 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069180307 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084305251 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068944589 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064723316 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086286105 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064945546 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080258004 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068276753 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065826926 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083663959 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071423339 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082538504 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067087379 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068672877 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084651369 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067492586 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.0834645 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06676366 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069150553 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084241801 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066659635 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085147727 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061800742 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072424619 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083754226 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073761598 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083846174 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064121453 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070331482 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085871362 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071076478 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084165424 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067577774 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084205619 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066445228 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068185784 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08982996 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064180971 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093564351 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073263176 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083706576 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069069015 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065373208 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084854008 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065505136 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.0833995 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06764499 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06611875 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082996238 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071093565 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085575028 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066877204 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067423982 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083859458 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066692979 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083974229 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060986098 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065445556 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082835386 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065369715 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09197082 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066949296 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065244981 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082503845 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066756956 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081871209 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063102032 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089690239 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07453579 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083046551 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073157505 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065429194 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08466423 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07669761 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077514596 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064930999 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063901425 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081491527 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072917943 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083347765 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075061466 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065123548 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082703461 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.0631118 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083593061 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065587887 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060172512 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081064904 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069726823 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082045434 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065922287 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065910737 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086924413 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067055445 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0923499 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065815591 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083388317 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067251658 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064418575 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08218834 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06572993 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068038458 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084463275 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064092563 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080301338 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066433643 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067467889 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08441497 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065666917 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084721637 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073058196 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065645827 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086399994 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06911052 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080872712 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069189577 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065374106 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083130458 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065265206 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086480316 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069783174 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084077458 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074908018 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065248333 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084280635 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066872771 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080859709 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066230197 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065755193 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083428471 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065858428 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083795578 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073833009 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063245323 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085968974 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065955066 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08395381 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073227219 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065837201 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08667104 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072971866 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.083812146 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067980701 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090629142 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.0696724 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085314318 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068181505 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06705944 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088766783 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065867131 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089704709 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067112112 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066481934 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085080203 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064533899 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082881781 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066095622 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065231277 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089821982 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06700913 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082632688 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066209929 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063992967 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084410684 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070206504 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090930524 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068833546 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068885441 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079391104 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063988019 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084618974 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064344783 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067292904 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086815291 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071907533 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086271656 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066642155 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065608091 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092473506 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071212212 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.086947879 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063980882 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086721585 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067760685 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068290608 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084529471 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066488895 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084312681 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069824074 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066592804 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082958867 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073331247 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086333925 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068065511 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.083777965 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06764189 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.0661503 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078804447 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067497546 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067220376 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088697541 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068765895 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08413734 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076499428 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080767601 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067059361 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069080472 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083660823 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070696384 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078750878 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067754279 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066027167 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085039678 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061381762 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083147122 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064319003 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068048861 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083081826 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062166612 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093201198 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074835187 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085571948 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065435595 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064362584 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079316244 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061731593 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064837259 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084438666 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067915438 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093063126 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065253595 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081999833 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061980829 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066142561 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086680323 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070001692 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080245279 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061655578 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065342613 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086731785 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07216342 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064271752 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083593778 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069295665 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.085957608 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064248958 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086007023 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063525648 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069026868 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096737441 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067208815 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084740564 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07177208 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091133827 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067571784 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060450362 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083922467 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069498201 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083713203 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067673662 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06697232 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098689309 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068849649 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083018354 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064912049 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.085882063 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065739125 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07300584 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085389716 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066479955 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.087581994 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06861107 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09145798 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069780553 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090703272 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070013638 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068651941 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083224165 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066169743 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081493451 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065354071 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067132174 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084487679 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070962328 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.090883614 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065207504 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094035347 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074551669 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085136931 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06414636 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065250421 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083124633 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062536646 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066720434 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082136968 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06516933 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081766888 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065786986 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06694751 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089509744 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067535425 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085489128 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066194753 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059752733 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086118447 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069043713 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08410581 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064234196 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066776279 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084339468 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070249673 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086584978 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064832922 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067199569 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085838491 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067414526 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078591767 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073753375 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06489621 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086077279 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065821723 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066634561 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085373222 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068760974 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089273471 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067198621 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085655987 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075192008 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085842001 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06449528 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063150101 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089276146 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064154993 seconds)
  done (took 45.577879939 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105438082 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081490646 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061345898 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07985983 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07360534 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080575114 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062086875 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062116773 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080066617 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064711291 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079125096 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061385232 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087723991 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08550822 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091649479 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06532163 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079915489 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062635372 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078844581 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062821951 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087786032 seconds)
  done (took 2.422807172 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075275855 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.088375878 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072110518 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093758544 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067373485 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088148187 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07220288 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088191936 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093728407 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067504716 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092945532 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07066551 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.084588278 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067487528 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083661962 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07133849 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093435713 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067693965 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.087234757 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072370111 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08852534 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07273973 seconds)
  done (took 2.584302449 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067617321 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06510778 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085010024 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061952156 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065693201 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079047012 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069585524 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081534527 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069782096 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064277468 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083085124 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064579219 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.092157709 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062111539 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065492176 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081821823 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.129531038 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069706415 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064885097 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085784433 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061029805 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085682203 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061911402 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06167485 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.082307538 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070550435 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.083905165 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064166261 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064449826 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082614473 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066042552 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080933369 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067853427 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066344191 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082765613 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064744925 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064827743 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.083402539 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061757795 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.080920827 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066644258 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.0613362 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084219676 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066876309 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062803504 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.081851004 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067798482 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083001364 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061616715 seconds)
  done (took 4.413952775 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083081163 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.128464824 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086453525 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089226321 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.10052712 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091895166 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06939596 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109652113 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063135646 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083530288 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081138772 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102161805 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084117979 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070802701 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068315649 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085065166 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066327046 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083671972 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070534752 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083401812 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069643219 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091557522 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098307454 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079927375 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087201345 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066253854 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08275145 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070979422 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096771394 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070976394 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.088554439 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071824963 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.099197776 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070959556 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083509641 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068355651 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100095535 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065567294 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086850246 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063256916 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085519204 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070274132 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090407759 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081427622 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084227692 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070583099 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084184173 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062468399 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.096879742 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06741108 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.09233135 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.098040167 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069903886 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.082924086 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070482094 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.09827102 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065890388 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08134816 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069121803 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.095681919 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064085865 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087717905 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080580029 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.084959221 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073130571 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.097102016 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070617168 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088153318 seconds)
  done (took 6.529171481 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07435248 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090176066 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080609119 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098526355 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09043 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072608466 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090111098 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072729924 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090329985 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076416282 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090677716 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1105713 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.0674538 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093002367 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073104008 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09081514 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071964715 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090668462 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071119292 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091486999 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.089785425 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080736974 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090291042 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.097657788 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102177035 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086360996 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073016505 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090759196 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081347636 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.090980748 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101905808 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072516196 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090483418 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.098415073 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084571955 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089776907 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065813214 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089718746 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072570056 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090973051 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067985058 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09839251 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072331815 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.08624029 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072049843 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090924922 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099202022 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083759919 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093421504 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094898564 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073136709 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0988952 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072114262 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091417889 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098804206 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105567221 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09883956 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098604832 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072202441 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098272689 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098560028 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.104265922 seconds)
  done (took 6.234209829 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086931775 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092648626 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.094871554 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062309635 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063523233 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088589334 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063782823 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.081660808 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075265641 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092802003 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076833299 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087380114 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072331437 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095599505 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088115231 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073781534 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087719948 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070164497 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092489792 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06947413 seconds)
  done (took 2.453996764 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074991924 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101016241 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067051964 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07087668 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08796926 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071126326 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087004589 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068314276 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085065527 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069206476 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093666725 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075832877 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084718882 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072497976 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094170947 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071702605 seconds)
  done (took 2.118137545 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078075223 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.094572818 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080190924 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085222246 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064480901 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081370918 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066480153 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062154097 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081952698 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080252307 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08565615 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.06849554 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.0844315 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064912757 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062526227 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087740361 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063247665 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082290842 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065867355 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.098449911 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076930138 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083203021 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068212764 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06640805 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.085700227 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07078071 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085180333 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063736471 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083326797 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067125922 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.083870032 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073678844 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.080352312 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065434735 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063791658 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081929369 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065624931 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084425765 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069312148 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065341537 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082677542 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065581101 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08396089 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067115279 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080221891 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066416517 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062018303 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090323777 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064710661 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084239374 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.0664361 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08557344 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067538361 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075118202 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089028268 seconds)
  done (took 4.999718239 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079007309 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069055281 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081101368 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064378429 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086902751 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067765657 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068939906 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087088937 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067168097 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082322961 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069025069 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087072382 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068222924 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069223285 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086436968 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069060834 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080078703 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06854006 seconds)
  done (took 2.198863468 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07243716 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06555239 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092087308 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06600636 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084534107 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068802078 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061744354 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083695942 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065302835 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083501057 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066491656 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067063565 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083052261 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067933997 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083853437 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066476535 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067836419 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083240209 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066167691 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079383522 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069600707 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064465756 seconds)
  done (took 2.458296744 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071937796 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091744649 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.159730794 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.105103278 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081860649 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.098538796 seconds)
  done (took 1.458517355 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0897098 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09728707 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066766265 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104826364 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075157686 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086365103 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068868038 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085476907 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076622965 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09941027 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067066719 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094746777 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09460678 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076987023 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091461028 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073021033 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086927391 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067605388 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085340174 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103489624 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068303887 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094599724 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068751065 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086290635 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069116838 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094560172 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075802891 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099759767 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085260234 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076561426 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091967285 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067462286 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095274435 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099802293 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070413913 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094817036 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067801417 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104528614 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072837515 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09501812 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068796278 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093718881 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094786352 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072758862 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094792328 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067970057 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09077679 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067034853 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087873464 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111245787 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073628894 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093967625 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092118796 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077432919 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094487507 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110656803 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081856273 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095778617 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091925806 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082049512 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094876393 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07334415 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095913598 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099983224 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073957938 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095838236 seconds)
  done (took 6.498679183 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083829821 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105260145 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068459328 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100620329 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094801375 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069179451 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086380677 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06907713 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086329543 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06932824 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127435702 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06888558 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095157583 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09527984 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069450084 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086352371 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069424347 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09528916 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067928988 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111229305 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086532527 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075707265 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095586689 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094041295 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082148379 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092560414 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067812175 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086700526 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068170796 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086784989 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072197414 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08769178 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094381464 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067994585 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094254922 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068318257 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086796087 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073337428 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08680434 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073857747 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095558134 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104091466 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068728998 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086907625 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080894044 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086485805 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06754101 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086549334 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068372243 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08628705 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080730819 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100943233 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099679129 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09488577 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068995218 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086456623 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068435806 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087058381 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069076416 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092650168 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076464749 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088108528 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111365067 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068919475 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087150048 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076155872 seconds)
  done (took 6.40384358 seconds)
done (took 126.361633351 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.250127936 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.19423018 seconds)
  done (took 1.293778131 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068009693 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094671406 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096728704 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127088626 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08638446 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099379297 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.117888716 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078623747 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06574146 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085184695 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066394394 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086496052 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130683655 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065962955 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085671448 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068515806 seconds)
  done (took 2.280377871 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101541336 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.193687304 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107970944 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065344269 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09786816 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077191123 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084340669 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076489448 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.092889988 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065492587 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076930456 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094867085 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064520393 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094412078 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073814326 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096085223 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064988742 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096994855 seconds)
  done (took 2.487192761 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10257911 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.13960404 seconds)
  done (took 1.102205472 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.197312187 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.122324823 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200744407 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.411063794 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.202982525 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.275106167 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.171526171 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.170406771 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.151008116 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.167249798 seconds)
  done (took 2.92627717 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097944333 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168874516 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307513861 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13755819 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.084740928 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11405368 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.136298488 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.107154616 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08110416 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099695991 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079916814 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096239815 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.115142192 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076033128 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073450777 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097005565 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119452243 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073478342 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.094099892 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075513727 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115849228 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066821477 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074161777 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093553516 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076086477 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097278706 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064801841 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085196557 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074975835 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093602847 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078038634 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.111279735 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.095945461 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.128411867 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.080938146 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.129828367 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.095782496 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072561819 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.093853698 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072747466 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096085947 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076131994 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.101623557 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075641648 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084973682 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077265315 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.084502406 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066524749 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.097351562 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.076459477 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097167258 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07739917 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.128590653 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.095996245 seconds)
  done (took 6.130581918 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.743410674 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109404019 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092804632 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.799947832 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08727923 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103815076 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.704948003 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116313657 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207532236 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.757659326 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088205973 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096982068 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.177926155 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.211641522 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.951999827 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284474449 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.626892549 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102209554 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107447818 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.130261529 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136297427 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.17259156 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146685055 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.438293441 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074723413 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091073238 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135991377 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073184837 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.135660217 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.104507588 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071224995 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17253117 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.224826015 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.15275681 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095608765 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069282403 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089108664 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.146831263 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217025934 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.187459275 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.154520901 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067727819 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068077448 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.157807698 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127612217 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068238796 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.136024044 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.150296685 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.143995394 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093610937 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073149401 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.159332104 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135860573 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.140987441 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098844416 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.269469543 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.280106284 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068914809 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117362701 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101719701 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212970068 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102643623 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.173854137 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13716019 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.186474748 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068346114 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.749613356 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.144805948 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088551605 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074225609 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116289364 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072621012 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.156081332 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.124914159 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.36778659 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13749444 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093739244 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069118163 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225979871 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08335033 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088980858 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.138445071 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076374271 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11964188 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139750024 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137360599 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16520157 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.211682965 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14047601 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136470806 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093116273 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121367396 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.075994889 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.186965806 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.188533948 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.138802394 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.185481922 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136110746 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.136550099 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.164125753 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075733901 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.145855777 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116461011 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098823361 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135266358 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.165264494 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.119752379 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101651764 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071961172 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135420163 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.122819704 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104944162 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137808884 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.147127291 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.476045781 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.144809929 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068104882 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105090719 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138019514 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.138334767 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073376726 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.231068708 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120797605 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.14480213 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119485707 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067305287 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117705879 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.137379136 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097650361 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120052194 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136145121 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075192113 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.232293894 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.167162281 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095558165 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.192367958 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.158152345 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072440648 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.14554991 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116481937 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.143235906 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097221743 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134378959 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094250584 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.74163727 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13975874 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119310891 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092511244 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.174254292 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070330216 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079703657 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102923713 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06658645 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.758470828 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104427229 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080022228 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101968335 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074200195 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118915982 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131807146 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092978022 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.13653352 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.19763132 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075220095 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116311274 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08032801 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158561962 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07501523 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102245018 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081176165 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103100411 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119991224 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07209957 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102545637 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144353827 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.138128941 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.188640869 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.53693366 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088985416 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082495205 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.194508605 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069087058 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.257548877 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133351325 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.193909531 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.138246917 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07813933 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.276273922 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.139683789 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.173557224 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104181061 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149501163 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0677143 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.133090909 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.138248247 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091223529 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074261262 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.137244696 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.161901091 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139393207 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.92778995 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070714479 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200963304 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066171379 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167903076 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076100712 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094503312 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.244367732 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089997851 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144419236 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.138254457 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071046706 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102976032 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.671852255 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104300902 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135063026 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094324384 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.167932121 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.138680033 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.153925788 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135991183 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073260316 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.135530753 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.184004461 seconds)
  done (took 39.820730168 seconds)
done (took 56.899834823 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.25840499 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.175275093 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.237566027 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.141977651 seconds)
  done (took 1.766759513 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.141626272 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10246956 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.115217242 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.08483859 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101741869 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084639573 seconds)
  done (took 1.512324306 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.398288334 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266648712 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23471639 seconds)
  done (took 1.783079128 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.278564405 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.208837613 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.443161026 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.292224589 seconds)
  done (took 2.212202911 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.172900264 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.110991861 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066272913 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104766016 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.15551825 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247500327 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125608434 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.183358377 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078211706 seconds)
  done (took 2.175546777 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194353724 seconds)
done (took 10.530248726 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", BigInt, false)...
    done (took 0.232589256 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.190815365 seconds)
    (3/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.241537534 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.156569692 seconds)
    (5/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.209160327 seconds)
    (6/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.239809855 seconds)
    (7/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.153373755 seconds)
    (8/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.207004405 seconds)
    (9/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.090110729 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072527455 seconds)
    (11/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072049145 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.093244478 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.107407155 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.117806628 seconds)
    (15/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.203107941 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076508448 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09586975 seconds)
    (18/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.208968064 seconds)
    (19/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075918213 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.115497315 seconds)
    (21/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.217914413 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.094358751 seconds)
    (23/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.16584552 seconds)
    (24/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069547917 seconds)
    (25/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.176363403 seconds)
    (26/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.167993453 seconds)
    (27/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075124923 seconds)
    (28/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.096579989 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.21697197 seconds)
    (30/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069197499 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.129348084 seconds)
    (32/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.13175457 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071939449 seconds)
    (34/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09305227 seconds)
    (35/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.173924315 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087577545 seconds)
    (37/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066521687 seconds)
    (38/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.12921634 seconds)
    (39/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.109634186 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09438945 seconds)
    (41/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091863605 seconds)
    (42/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098842149 seconds)
    (43/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052955538 seconds)
    (44/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051799508 seconds)
    (45/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.166365802 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.170437855 seconds)
    (47/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.199254655 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072465363 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088188791 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.129873577 seconds)
    (51/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073555198 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072430807 seconds)
    (53/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.177867593 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.11012471 seconds)
    (55/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072103345 seconds)
    (56/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.159531899 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098150431 seconds)
    (58/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.10043885 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067999213 seconds)
    (60/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051913304 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.15125987 seconds)
    (62/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106938406 seconds)
    (63/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087098373 seconds)
    (64/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.175534062 seconds)
    (65/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072880133 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.187855344 seconds)
    (67/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097647598 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12585455 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.091618446 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099311541 seconds)
    (71/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052891737 seconds)
    (72/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.074735296 seconds)
    (73/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079341686 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 0.086900906 seconds)
    (75/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08361006 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065062258 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.123364462 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.165296056 seconds)
    (79/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070361676 seconds)
    (80/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.156481436 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088802159 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087229008 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.143146048 seconds)
    (84/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088733152 seconds)
    (85/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082251203 seconds)
    (86/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.08238859 seconds)
    (87/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052644015 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065270708 seconds)
    (89/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097910425 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.136810513 seconds)
    (91/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.130644225 seconds)
    (92/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.062505674 seconds)
    (93/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095547554 seconds)
    (94/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068658438 seconds)
    (95/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.133916206 seconds)
    (96/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112822825 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.110761184 seconds)
    (98/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092580823 seconds)
    (99/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110266419 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.124637593 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.072203574 seconds)
    (102/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073998086 seconds)
    (103/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.180099919 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.177601167 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.191859668 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.182173843 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073888104 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087397923 seconds)
    (109/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079159864 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065513278 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.183570432 seconds)
    (112/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.051821226 seconds)
    (113/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.074061426 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143648622 seconds)
    (115/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.084198067 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.0945987 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.159416308 seconds)
    (118/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.188821811 seconds)
    (119/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051474298 seconds)
    (120/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.201722289 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114159872 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091528661 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.146961578 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089581832 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.156986543 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095656147 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073503913 seconds)
    (128/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.184366946 seconds)
    (129/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052858576 seconds)
    (130/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094659054 seconds)
    (131/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075809979 seconds)
    (132/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.15436564 seconds)
    (133/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066641313 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093173826 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165223345 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.0944948 seconds)
    (137/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069569798 seconds)
    (138/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.188238304 seconds)
    (139/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051511664 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070598371 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095679965 seconds)
    (142/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089216894 seconds)
    (143/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095085439 seconds)
    (144/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051539021 seconds)
    (145/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.156305071 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.08755282 seconds)
    (147/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051998974 seconds)
    (148/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.118689857 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065922586 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093959317 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065649103 seconds)
    (152/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.152512412 seconds)
    (153/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072109013 seconds)
    (154/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052032847 seconds)
    (155/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.124019843 seconds)
    (156/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076680412 seconds)
    (157/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.129860736 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074041959 seconds)
    (159/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065984986 seconds)
    (160/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.10112617 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.16865639 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06634772 seconds)
    (163/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05159497 seconds)
    (164/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096897481 seconds)
    (165/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104963117 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.200510863 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.137907381 seconds)
    (168/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052477034 seconds)
    (169/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052674482 seconds)
    (170/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.093106388 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065569065 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06604148 seconds)
    (173/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.176390754 seconds)
    (174/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067410533 seconds)
    (175/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.192335616 seconds)
    (176/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.129416934 seconds)
    (177/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077288356 seconds)
    (178/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076083407 seconds)
    (179/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.099364502 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.194912832 seconds)
    (181/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081570654 seconds)
    (182/309) benchmarking ("sort", Float64, false)...
    done (took 0.147952072 seconds)
    (183/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065076827 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074033939 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.074681319 seconds)
    (186/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070180804 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098812583 seconds)
    (188/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074141219 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.156437119 seconds)
    (190/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068880524 seconds)
    (191/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066815234 seconds)
    (192/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.074220599 seconds)
    (193/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051654781 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087430548 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.088246121 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064790466 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086282393 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06553668 seconds)
    (199/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050928213 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.19869657 seconds)
    (201/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05239245 seconds)
    (202/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.134788576 seconds)
    (203/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076379215 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097135344 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.290818512 seconds)
    (206/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079338331 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088876402 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067904693 seconds)
    (209/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071362881 seconds)
    (210/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.099098326 seconds)
    (211/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072262393 seconds)
    (212/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050265291 seconds)
    (213/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.075500213 seconds)
    (214/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.144337726 seconds)
    (215/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.075930302 seconds)
    (216/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069970253 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.113708191 seconds)
    (218/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053219394 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051386013 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.109887175 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071224112 seconds)
    (222/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051623843 seconds)
    (223/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140279089 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065149697 seconds)
    (225/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088438184 seconds)
    (226/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074822054 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.109667496 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067026157 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072521601 seconds)
    (230/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059853898 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.11464953 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079094343 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116040326 seconds)
    (234/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052492922 seconds)
    (235/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088178558 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138436671 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.153574899 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050472818 seconds)
    (239/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050597467 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.09523147 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071791759 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.19618895 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15603549 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067665911 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.124687103 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067267696 seconds)
    (247/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072678249 seconds)
    (248/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.089547655 seconds)
    (249/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064617898 seconds)
    (250/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.110199188 seconds)
    (251/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051461654 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.134571359 seconds)
    (253/309) benchmarking ("sort", Float32, false)...
    done (took 0.149783554 seconds)
    (254/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052226093 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.167720373 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064835825 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110212619 seconds)
    (258/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061032451 seconds)
    (259/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087861303 seconds)
    (260/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051446444 seconds)
    (261/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.0519657 seconds)
    (262/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.073912824 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065936199 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086861899 seconds)
    (265/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193920748 seconds)
    (266/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.074214545 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089568768 seconds)
    (268/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05045675 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094001749 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065309657 seconds)
    (271/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050389572 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.112524396 seconds)
    (273/309) benchmarking ("sort", Int8, false)...
    done (took 0.162227359 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051049406 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095008968 seconds)
    (276/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066501082 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065712482 seconds)
    (278/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.08886105 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065890601 seconds)
    (280/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050564728 seconds)
    (281/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.08930293 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.13494823 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.112326686 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07274051 seconds)
    (285/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.134332401 seconds)
    (286/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063954283 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06362402 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086338111 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073411722 seconds)
    (290/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050598528 seconds)
    (291/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094281654 seconds)
    (292/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05101358 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069997363 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.072737899 seconds)
    (295/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072250249 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118816748 seconds)
    (297/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053364984 seconds)
    (298/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052911036 seconds)
    (299/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.073300314 seconds)
    (300/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051626559 seconds)
    (301/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062511452 seconds)
    (302/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050508142 seconds)
    (303/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.083789945 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071164837 seconds)
    (305/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052068146 seconds)
    (306/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086780949 seconds)
    (307/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071695533 seconds)
    (308/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071194752 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.074119721 seconds)
  done (took 32.710737974 seconds)
done (took 33.606524378 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08102074 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112993523 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074324 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116541699 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080015942 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100318497 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072200732 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.10128683 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080256242 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.103106031 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07916118 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054130963 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096881426 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074940199 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096940327 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09113505 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100233501 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072401567 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.095053225 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065269056 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073279428 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087327068 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067759442 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05456423 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102898583 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072187296 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.094049137 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075639899 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06556598 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.088222974 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068835908 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072075254 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087546095 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078602257 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093497292 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074159142 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096461659 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076789104 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066859872 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087215598 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07331776 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06557745 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094468361 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072768077 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.091949512 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071511376 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073488766 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100490484 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09018453 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089652221 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073312103 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098074589 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076038392 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07166347 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091323296 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073848274 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091822614 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090755362 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.095909066 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067571718 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072794761 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095491888 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07072176 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095184316 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073725822 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075166572 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098081735 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071075891 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09680551 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071908281 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065146322 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095635351 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068425373 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086071984 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075307257 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075738431 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085779261 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070535843 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07171401 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093258621 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065140736 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088460201 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067491622 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071458628 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088946556 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054580267 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068567642 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093361171 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064794447 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073522164 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.093708126 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072468202 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088762374 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076783459 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064604518 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092455945 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065553539 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065027281 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.08882064 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069675214 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086147186 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067945716 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074593723 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088897167 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072297257 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079034765 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088192153 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072286012 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086306541 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065662166 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080049451 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097565236 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066324076 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08938443 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064622477 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072099729 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087440074 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064953875 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065145055 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087443337 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071122864 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065515907 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090137989 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072801648 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.100584978 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065498048 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068836495 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08965455 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065096156 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070688347 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.087923976 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065693389 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.088879113 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063235767 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06771789 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087840734 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072746264 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067365956 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.09578753 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067361868 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095706538 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070510711 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071502904 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092663882 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065273071 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05903815 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089493454 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068124004 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067631729 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087671371 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067199371 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06503594 seconds)
done (took 13.031673019 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067199408 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.165929555 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.12403152 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095140378 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109406525 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06599309 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.100076745 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10232613 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.090390205 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125199209 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086944127 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.106915896 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112612442 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086931449 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066239733 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069677816 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.08959852 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.087308667 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.123507034 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085645577 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.138177102 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087101273 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.118569667 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089768253 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.110796852 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093405015 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088768739 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069755401 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068521887 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.124162339 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107453201 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069893678 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066242529 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.120966582 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.115603184 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084807221 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087376496 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083621657 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087520176 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066048292 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114311964 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098797588 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104288067 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081496241 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094585939 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06847849 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088670587 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08497127 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.112452776 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081126277 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109938146 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132331948 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068180887 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.10418824 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064441631 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109046417 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080923547 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091016255 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066602115 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089861591 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065813269 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069334592 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110333084 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.112946815 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06991186 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103105045 seconds)
  done (took 7.158223086 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083871742 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.115126257 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083933266 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106612527 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066107478 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066175976 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.08893857 seconds)
  done (took 1.563195493 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066890965 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087494969 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111423238 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089205715 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.107979182 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086610038 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098465098 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067000971 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106278792 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06783034 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086508382 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126558063 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067386474 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096995873 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090051356 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08890468 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09031312 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089570796 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069485257 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111930587 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069025654 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.085768531 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091678334 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066658475 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103728025 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067367702 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137415599 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070810381 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066963355 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093327659 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065386663 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.138019919 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102987979 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078076473 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066463332 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104103343 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082396235 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087102637 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08324854 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094296174 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08102968 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067474263 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090872298 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065183377 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070684917 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10046781 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068132074 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.0898932 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070256956 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086376044 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090699091 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081136493 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089182638 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071119063 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068137565 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095287157 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076294228 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09000028 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087055635 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068316605 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107270098 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08272822 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103999559 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083527939 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09168221 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081135936 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103264738 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069982389 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068308009 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.09331791 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083669644 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086897353 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068837975 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077155329 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091408227 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090325175 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112909027 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068968634 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099540874 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067839865 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067265294 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090011225 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091069843 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093324153 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067037952 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071016811 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093452312 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065199326 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065965679 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093648398 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065072418 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067943195 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09244345 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067832915 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091732458 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084349199 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067477624 seconds)
  done (took 9.192466859 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068394372 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067793704 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091822797 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067466864 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067584232 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091093649 seconds)
  done (took 1.420277951 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096952694 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091686214 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081089196 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.094472283 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105751518 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10407396 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082107357 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105122453 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084293637 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102216169 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.081643155 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10498044 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087420208 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.09573136 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081716018 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.094798191 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082673893 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098682994 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079077348 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095960019 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087476606 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.094947461 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074015361 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082684381 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093630698 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072588515 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10074065 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079540043 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102503173 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081791634 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095790886 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070383184 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094667209 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08220744 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104231824 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071790238 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09478656 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071105705 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099136875 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070705802 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10450833 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074038952 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077818242 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094767342 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082184255 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095267665 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071244965 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09897711 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081650487 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094555848 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07113048 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094437295 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070803453 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093500373 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071637433 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104269655 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071581594 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.104025821 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073394714 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072505463 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093164009 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070308989 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.104714994 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.0705663 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103584698 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071705501 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094687337 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073339086 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096365984 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073585446 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070797973 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092192461 seconds)
  done (took 7.256307517 seconds)
done (took 27.540245708 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.646255961 seconds)
  done (took 1.605872442 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.784348583 seconds)
  done (took 1.748269167 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.537443916 seconds)
  done (took 15.507226417 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.603024315 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.745478687 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.794623716 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133163119 seconds)
  done (took 3.239945753 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.87680344 seconds)
  done (took 1.869276064 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232855013 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22180863 seconds)
  done (took 1.427984278 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.728161946 seconds)
  done (took 1.708337657 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.242346903 seconds)
  done (took 2.214193731 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.31646036 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179204852 seconds)
  done (took 1.476391961 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.516984776 seconds)
  done (took 1.498249072 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.516075111 seconds)
  done (took 7.501314937 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.227253449 seconds)
  done (took 1.219715857 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.266194241 seconds)
  done (took 1.246891492 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.099238892 seconds)
  done (took 4.082913877 seconds)
done (took 47.313360322 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077725323 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08113781 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103681886 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07850221 seconds)
  done (took 1.320396306 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077417059 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072800605 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099377766 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07259953 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.099901044 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073327756 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.097679583 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077252251 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071846297 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096447377 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073346527 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.094970508 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075255767 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.097673444 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070485843 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075504224 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098573516 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072667511 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.09857126 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073545494 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07071647 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097090398 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076091164 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094748817 seconds)
  done (took 2.998305978 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077501036 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073368975 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097527007 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072555173 seconds)
  done (took 1.308611923 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077551934 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.114514899 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088963643 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077040187 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.115433484 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.108972382 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070388688 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069175807 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094493284 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078411788 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090291003 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098027343 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11051068 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076701862 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101540266 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066813596 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068083315 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.109439057 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077420718 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100682684 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071186856 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079247781 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.09139305 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090513667 seconds)
  done (took 3.120179878 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076771721 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103114048 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.101043428 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089166173 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.1153062 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065536598 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.099642096 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091188244 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.148158446 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065232393 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.093751433 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06560726 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.095504719 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065065645 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076428496 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.131445081 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110641026 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.092132049 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096931774 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.089094195 seconds)
  done (took 2.867502562 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074454076 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069922859 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088695844 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068906471 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075952142 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.095372173 seconds)
  done (took 1.464202084 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067520822 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067478527 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089727082 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066059302 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071524483 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.089627516 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066629649 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066711892 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089868934 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067772381 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066841133 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.089130298 seconds)
  done (took 1.89109475 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.377713239 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.091504324 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069080091 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.086696913 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070588489 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089558222 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080637518 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067819655 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.113945697 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066699797 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090114254 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068413181 seconds)
  done (took 2.269025684 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25944294 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077100977 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320168259 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167446798 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139199276 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153947726 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103810944 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138683282 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195556989 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136810492 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198685017 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221849385 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132223372 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166321867 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113799844 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.131267745 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184470716 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219035178 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104549183 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222384504 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204306816 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154106339 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179557806 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127230578 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133935387 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149624795 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071873637 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104646189 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229394411 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159805269 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19953059 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137977137 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097074029 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229135192 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222168012 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193517845 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161069298 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084832381 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.155406567 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.162789887 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252162441 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112407087 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191608934 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132968571 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105068211 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170927461 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145042816 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.145320563 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134557558 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113720658 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172619643 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237453152 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.163379519 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111054975 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134945218 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140147969 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14256451 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102462318 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238968963 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215188558 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15652844 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095368898 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097297011 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208261089 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157755474 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140217704 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.152146872 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118716998 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166005596 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208896167 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144378415 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172028341 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179811009 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088540276 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144804864 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191661752 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155412281 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200005917 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152402475 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096150516 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150715206 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127723052 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081436731 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168590735 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075659902 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229834018 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12427597 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.136861224 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13849495 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109480567 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134422555 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218891888 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199562318 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103857555 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.090720187 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12826181 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.147873243 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173382938 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112785885 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109257412 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17072093 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079554064 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164503122 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.100234718 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151395231 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078437167 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172639178 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160799059 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075916839 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15378141 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126993209 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127280952 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163135976 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215969171 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090671981 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106656078 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198915867 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176530511 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10624229 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196082766 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186641527 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.125514728 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128041522 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177303871 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237411448 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114079476 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220280051 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133628596 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083387122 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.112549724 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154650798 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139446214 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.147595838 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082689021 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.15168161 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222212641 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09923753 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095701901 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188262164 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082254616 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106222072 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138888071 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126007933 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095475428 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.1253167 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132145222 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167759432 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15293158 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131847676 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151673087 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123152401 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22351201 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113864058 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105928172 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128318012 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095214309 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.162924082 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189610593 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103999658 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222889597 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.153613425 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1316356 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146512936 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083270582 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168082884 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104111664 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070714038 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197049864 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110856515 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136356877 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.207021884 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129384086 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.153869693 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149807653 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161941042 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159090393 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.159091317 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130709026 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112617539 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138241252 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153880031 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074565428 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119220286 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108385791 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129902892 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096962185 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108363748 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170793127 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178797732 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098995763 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139161686 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123342256 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178086721 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102716941 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156913358 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146376265 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120316821 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.184808058 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209970009 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164850548 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125367529 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1742637 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.095857054 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074563994 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115968106 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15546711 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08360506 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108418226 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143996365 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200739588 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155733759 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165971308 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137934578 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14879092 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184753996 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.096093657 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116651786 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201946049 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151944158 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.13371671 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110430944 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.124831518 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17285211 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133950493 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243005674 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142253045 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150590059 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205965807 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.128772452 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080923846 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132208955 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164517633 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132217341 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204636508 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099274454 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113632478 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136130793 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.106792335 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130360049 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156036513 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148077346 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163196804 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.142029517 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158642616 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102446808 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143616933 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151752709 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149755118 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064567865 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170858975 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193379972 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120379373 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14497862 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209127081 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081299236 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15122291 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23514069 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173200183 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110595941 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136187537 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153888041 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156712833 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14547819 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167674897 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136631755 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162242084 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136353387 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111366602 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08837623 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12267226 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132968749 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.120565945 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.137662043 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144750776 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.120198099 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158757451 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138103375 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137029245 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146094596 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098569707 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117424008 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097089099 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232500993 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148851966 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231705618 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126566854 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178170906 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223852745 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101287242 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078935299 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106892285 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169774753 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084129601 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187343315 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097324209 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131147848 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153740026 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198123425 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09665233 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.094092541 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110827276 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187598282 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137828698 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098145883 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.131769847 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220534256 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129075173 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080049923 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152430492 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131308483 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129273597 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232756647 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062071408 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122747937 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078525831 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080631633 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182196131 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186930322 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108681802 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.130297542 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141512262 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171448774 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157711633 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127746106 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09888031 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139440748 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203449899 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156782763 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090122877 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138850341 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181849727 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18563525 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131570306 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.120949463 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229264411 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185270478 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.219889646 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089105141 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142393447 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141460153 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135687565 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194938328 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083656427 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221930211 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109003734 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165360613 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131346305 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119415062 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158605405 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.122048261 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088638024 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2041374 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147229962 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099850995 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105774792 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14607721 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14930044 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133304811 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075132065 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191985008 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072673762 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19149809 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200387159 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106684157 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133024045 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096892423 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108106163 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135734561 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129446864 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08689121 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.142082396 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226517925 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090921792 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206426343 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168821469 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140385353 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191426931 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125412735 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662464324 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07869052 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211365516 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147942212 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234322477 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123780697 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146466288 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110876971 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149557486 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199428553 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132296699 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.202850614 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16039342 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.148641498 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104264498 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103817962 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137062074 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.116210593 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133573903 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141854905 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143390748 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.127041204 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.148114648 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154799058 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107044356 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096391293 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214268727 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144182881 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170697854 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168441529 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111166382 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145104541 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194583697 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080797282 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.148423974 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213224577 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134416341 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123292714 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081993005 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132017637 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230178674 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073639259 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218879131 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151324352 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137509816 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141148071 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145176068 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186107997 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108679199 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177547532 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095961307 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.137569875 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142331399 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110251563 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102709272 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107471497 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138211346 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12483799 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128525901 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.121097906 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205718323 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071108405 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12187603 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128954144 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17215838 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235175438 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.114817164 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083378913 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145204126 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140078001 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.142843445 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151642772 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.106966533 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107893056 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082450695 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.1352201 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111559851 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140939966 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129098538 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136405814 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223738103 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084795437 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249746159 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121927121 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131731819 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070868287 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104807395 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096629921 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124349566 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134416655 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123775227 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203852709 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.12384086 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.116356888 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093165295 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098797409 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083510877 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156381731 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135935739 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148557991 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124333474 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.088703949 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135266914 seconds)
  done (took 70.538400045 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133509836 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.103597869 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.115827695 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.171893409 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.143881371 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236882393 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.179039931 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.221480701 seconds)
  done (took 2.38339639 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068876414 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116103456 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101922467 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.115983858 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089289687 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06889157 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.291779671 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110089142 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066748534 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.113674328 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.117507637 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091081833 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.466445903 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065111063 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09323724 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083475265 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067614958 seconds)
  done (took 3.196399135 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.423208944 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.62490597 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.448717892 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07249494 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.867952074 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.10550376 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.349834145 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.159853303 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.089959708 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.427077008 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.719028259 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.145628843 seconds)
  done (took 17.508189966 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07492484 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.06857444 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107900364 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082349496 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09734433 seconds)
  done (took 1.506955409 seconds)
done (took 113.353052883 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079274116 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.338534909 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053092776 seconds)
  done (took 1.498925335 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083541271 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083678345 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109253546 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082596697 seconds)
  done (took 1.446383582 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073980907 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075900154 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109502515 seconds)
  done (took 1.345247305 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.275543043 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163557833 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088981982 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082492465 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077617192 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103734851 seconds)
  done (took 1.347878896 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072697361 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074795717 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097832744 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07644339 seconds)
  done (took 1.398983266 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075935045 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051963855 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054276135 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.081157447 seconds)
  done (took 1.34703318 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088827557 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.104629018 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07999262 seconds)
  done (took 1.354552123 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106400106 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.111325187 seconds)
  done (took 1.302274033 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080850026 seconds)
  done (took 1.159814076 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091411864 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.139744024 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.154026873 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.135253587 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.164800553 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.134861834 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085558012 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113844702 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.102713096 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088122003 seconds)
  done (took 2.294591123 seconds)
done (took 16.174842613 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077886763 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.385842223 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.35999959 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115396643 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667205464 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35511073 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.005085536 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117902314 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120268902 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093723674 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083780245 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674112764 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.967990453 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.347629667 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.954755021 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.413489693 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.673565416 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067483623 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066758779 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093434866 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.96261114 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092894761 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067785721 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067387703 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.672990359 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37004865 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093456553 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.413619278 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066416881 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095052001 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353812129 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093499266 seconds)
  done (took 16.066474635 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07023617 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.142877572 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073119241 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083003248 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096291813 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068934212 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097547781 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068216236 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151566605 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067196763 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109739918 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067029948 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097067019 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068505946 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086526114 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093821834 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06838737 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067443681 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09360409 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067961808 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110852694 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067542976 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067795077 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094142333 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067360133 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105116081 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067800033 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067624001 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093601286 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069093119 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096088724 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069121506 seconds)
  done (took 3.800817051 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113550302 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151178847 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072972839 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12804387 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113248423 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095783829 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.169410368 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092688721 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153242254 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068062886 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109825322 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068174113 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126858334 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067980967 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11301935 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068487395 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068886481 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094294025 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068336877 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093755419 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086526273 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067792267 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094361556 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068894332 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09348632 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080661247 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092722907 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068558147 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067858488 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095134734 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071977239 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067943744 seconds)
  done (took 4.085941277 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071848773 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074814142 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10806161 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082941984 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094985986 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071608484 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072648407 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.094879137 seconds)
  done (took 1.764819924 seconds)
done (took 26.804070743 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078045327 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069782977 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.09817974 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080512781 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098608053 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078191228 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067216189 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099936497 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076596474 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072011794 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10150524 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067229078 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.096248983 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067325522 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073426186 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093227074 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07840304 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097651326 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079285025 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.077956689 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095512523 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076303367 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.099168731 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079144587 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104776019 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078931267 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081891522 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098863738 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068681116 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095231991 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076107266 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083150776 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.094637974 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079262306 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093938768 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067381634 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066987777 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093907562 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07890361 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099211293 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069852365 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099437031 seconds)
  done (took 4.616525376 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087854807 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090226969 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111353674 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064404694 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096633549 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064911876 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.11389903 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062836186 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059081394 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113595365 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055526295 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058283964 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.088626175 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054094296 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058402872 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055493806 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.087576986 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056598546 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058547982 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.08531709 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057636309 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05334394 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086026999 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062191245 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055499681 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061883343 seconds)
  done (took 2.997900939 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074970677 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082761154 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113713429 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126628244 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.131359749 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076979735 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.103716649 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086350546 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111559085 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06695156 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070829917 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.122134711 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087183874 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100703536 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067436852 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.112950761 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081711222 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068968049 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10016477 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089171505 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111087301 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078704577 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118161742 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080987157 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066413989 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09578252 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071396152 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107121713 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072768608 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076805522 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098178803 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070657303 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.09597704 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079444631 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071535766 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096524708 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089628368 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103496698 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077124261 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067440553 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097791722 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068138934 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114393796 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.110889161 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093042472 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074053003 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074079025 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103495825 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066746155 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111477244 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076384101 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066721589 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097058498 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066504597 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.092873234 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081267631 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069563252 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096670215 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076550823 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095850419 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079844005 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070335307 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109397927 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067375792 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100966369 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066808582 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068083294 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092904708 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090652043 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068252805 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135350559 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068271896 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095518952 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075747188 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101739281 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.0732732 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067064267 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108408081 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076395732 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097801971 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07640278 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070543555 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096632089 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.085997786 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095831759 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06916221 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067774398 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099924648 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070276543 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095349791 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080695291 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067573838 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097072807 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083719131 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.09343076 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068991942 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073462017 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099245025 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067249547 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105382195 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072365537 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067905683 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103838075 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067338252 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09647701 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077102447 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071829346 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093345901 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072182 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100566686 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068493973 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068869653 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096875052 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068966291 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075803516 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.100222555 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07164024 seconds)
  done (took 11.200677396 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.189639836 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.183111948 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069739715 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.176266282 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075423619 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.106423165 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.176143499 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095364592 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.09593475 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068724307 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068149445 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.129201888 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.131288886 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.104625976 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105314927 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06715463 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112226096 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.103633819 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.181369145 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.173645967 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114369591 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075621466 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070002457 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.096673527 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069185667 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.104621774 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083509929 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.101801799 seconds)
  done (took 4.240477431 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081426157 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.127856803 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073263009 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087844355 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.11761528 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067608655 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.100829357 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069682241 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.106930492 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079223238 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094473337 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073540073 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073365733 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105646609 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067927793 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104527964 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077216124 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068585573 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098165903 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072049364 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.103937585 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080196487 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071366105 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067235041 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073830626 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.09435724 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064334757 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.111978892 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067228932 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116197222 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065593447 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073607202 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.108297444 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067824364 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.093818976 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071030735 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069826809 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.097927346 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069253498 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065429209 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093525943 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057362295 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066005248 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107471532 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073104866 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.086532331 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073535836 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072107911 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.100482856 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065195957 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097633533 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070160868 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069735289 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103571835 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072123807 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072280268 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.098794384 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065486802 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10282946 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071409582 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063198512 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.093506921 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072341338 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06647293 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102900953 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072032791 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093312292 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070504277 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072367069 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.100774977 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070468457 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07016427 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093128773 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069357319 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100145765 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072212187 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07149905 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094003464 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067864475 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067667216 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.083182167 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067079685 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053670728 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098306272 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066023688 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066388009 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097879038 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073382052 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108690401 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068893346 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.100064593 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068593435 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066454946 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097897347 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06367744 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070080351 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.11110507 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.109592916 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067276808 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065424027 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109456741 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072006082 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066627401 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.083500666 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074351852 seconds)
  done (took 9.734824447 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094434906 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091720955 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097235096 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082193349 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122832594 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092874345 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10228178 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074006116 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068458223 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112621188 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067445985 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103492512 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068547931 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075664661 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123730246 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074991352 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.096654264 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077345594 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071548358 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134748371 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082146233 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.109002077 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080270025 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095328103 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072384335 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079410434 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.123759562 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078721156 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.105278572 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084425623 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079134551 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.122231094 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085385506 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099105926 seconds)
  done (took 4.25508305 seconds)
done (took 38.134032542 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.169320383 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.379055396 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.168241918 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.024213085 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.168991512 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.194617943 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.181122322 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.169190246 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.290227062 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.169636261 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.435205353 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.752118729 seconds)
done (took 58.219235091 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.2472592 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.311976597 seconds)
    (2/2) benchmarking "String"...
    done (took 1.43671862 seconds)
  done (took 3.87155772 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.508522427 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.045453013 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.428071761 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.173673025 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.184765878 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.476290177 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.744839265 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.978647768 seconds)
  done (took 27.147038088 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.176075824 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.528001772 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.447195397 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.454937339 seconds)
  done (took 17.722520557 seconds)
done (took 58.613096133 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.198296971 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.201208518 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.17726104 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.155938758 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.278517177 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.197205933 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.613003231 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.39707166 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.1752176 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.157339413 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.191412507 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.180352796 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.178244773 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.782375573 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.179296086 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.184675655 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.246861164 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.772840695 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.546624922 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.189354334 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.199473007 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.173325578 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.180515689 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.183996212 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.200826216 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.179872617 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.181486269 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.173458694 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.351130718 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.180068853 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.260768741 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.405766136 seconds)
  done (took 190.7914461 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.174343856 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.314942496 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.325725958 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.206739331 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.632760506 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.377020643 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.312662979 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.702337156 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.190094253 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.182523885 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.469921263 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.174745268 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.531283281 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.137084832 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.182242479 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.272000137 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.377224656 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.510101877 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.18722958 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.447073788 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.202797223 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.487261204 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.433859262 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.414665638 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.213188394 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.191948777 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.19190007 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.193142431 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.364554913 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.327191762 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.183704032 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.216864164 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.735599479 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.032697573 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.176130511 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.191048784 seconds)
  done (took 149.38436672 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.430748328 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.175430031 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.176197958 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.175426813 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.174989121 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.20353845 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.175563317 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.697203805 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.699141358 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.679173835 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.600467962 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.234862341 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.369630534 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.175947261 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.267281896 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.18757772 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.175851809 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.176380147 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.191586022 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.202315856 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.178976892 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.175914611 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.691503313 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.192022122 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.330616132 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.182015265 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.177855176 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.20516492 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.176069 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.567547443 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.177311417 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.206590295 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.490695663 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.221078384 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.177822838 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.454971043 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.948521658 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284676555 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.179926611 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.207688285 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.178078428 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.444478513 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.179101884 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.178499844 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.18097844 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.732276582 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.178130361 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.70123057 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.178875126 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.055537645 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.177796816 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.177626395 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.919192979 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.613329111 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.17759958 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.177061646 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.181087559 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.177669324 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.178692154 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.206580556 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.006244252 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.273497369 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.179415697 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.181620957 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.207376725 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.178550138 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.229764827 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.179161486 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.300931523 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.236738628 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.399744362 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.700462992 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.181001534 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.270567527 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295715466 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.179521121 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.179435982 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.178502741 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.178747921 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.284190031 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.178279943 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.568891364 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.18417534 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.180690712 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.237651158 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.271860149 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.177964487 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.470001347 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.181000322 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.179472561 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.858503361 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.27045746 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.180274564 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.179157022 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.179903236 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.56692908 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.705720351 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.356199481 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.182424332 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.919796137 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.182916885 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.583312452 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.68130746 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.740578721 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.180892002 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284997345 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.184673573 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.180956365 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.180403061 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209175892 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.181731537 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.238688436 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.180187365 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.180363336 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.574432019 seconds)
  done (took 342.699731755 seconds)
done (took 685.421800305 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.852688355 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.82919824 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.941657745 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.829523594 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.805116012 seconds)
  done (took 10.38156252 seconds)
done (took 11.5045615 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.356561903 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.357112967 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.237067666 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.357084113 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.207992571 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.374272856 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.336514622 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.201472634 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.278949854 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.253572447 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.277693843 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.228441662 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208814524 seconds)
  done (took 17.799173818 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.489099715 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.484523909 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.241202008 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.486433555 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.22252832 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.481937821 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.374458071 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.37695381 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.367931439 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.194871496 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.194509424 seconds)
  done (took 16.04079739 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.485524331 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.485647072 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.246061216 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.491683874 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.221531389 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.492086586 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.372999518 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.382083291 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.372743239 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.195495534 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.193241315 seconds)
  done (took 16.064485886 seconds)
done (took 51.028265099 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.190871106 seconds)
  done (took 2.315534178 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.221407607 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.383104213 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.202668359 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.192734491 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.189890441 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.189891318 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.192644913 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.189271234 seconds)
  done (took 10.888453684 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.186109345 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.185226954 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.186420291 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.189481065 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.189296913 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.18891853 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.188832086 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.186991865 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.189760395 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.188611595 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.190652951 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.186979247 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.190816384 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.18623654 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.187211155 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.187696813 seconds)
  done (took 20.136326644 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.188669979 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.186616079 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.187131238 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.188421322 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.188189562 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.186566496 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.188346737 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.187608196 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.187806671 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.187891324 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.189740503 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.188274246 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.18739036 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.188352281 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.187581803 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.188369163 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.186971003 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.187710308 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.192205707 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.186749452 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.188810106 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.187607634 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.188443326 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.189012284 seconds)
  done (took 29.643967709 seconds)
done (took 64.109369878 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.183121984 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.80115118 seconds)
  done (took 9.111334168 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.190062799 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.190338299 seconds)
  done (took 3.509409125 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.190634435 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.190251431 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.190027314 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.190368709 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.190059743 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.19131248 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.189360669 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.190052968 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.19117372 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.189786446 seconds)
  done (took 13.032067292 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.190974482 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.19076409 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.189104384 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.191331301 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.190980028 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.18891283 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.191810953 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.191876342 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.192249149 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.188533868 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.190722301 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.188685874 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.190720697 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.18891318 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.191001963 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.188963945 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.188666624 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.189629055 seconds)
  done (took 22.552080926 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.19086416 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.191380319 seconds)
  done (took 3.511379683 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.189688086 seconds)
    (2/7) benchmarking "second"...
    done (took 1.190655349 seconds)
    (3/7) benchmarking "month"...
    done (took 1.189175523 seconds)
    (4/7) benchmarking "year"...
    done (took 1.189188294 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.189428261 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.189537195 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.189859884 seconds)
  done (took 9.457307925 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.192435099 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.368513021 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.451558635 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.753516967 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.193304339 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.196410949 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.041983343 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.195852594 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.198043441 seconds)
  done (took 13.721264186 seconds)
done (took 76.021586951 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.185944623 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.183353804 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.036801539 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.193198959 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.199771002 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.530148219 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.185260366 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.305113297 seconds)
done (took 36.949371156 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.201809944 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.899399748 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.9000938 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.18841456 seconds)
  done (took 11.118448739 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.177186855 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.096769986 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.174626459 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.174113025 seconds)
  done (took 17.755633351 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.785503503 seconds)
    (2/2) benchmarking "read"...
    done (took 1.517065935 seconds)
  done (took 4.434750926 seconds)
done (took 40.640918967 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.195066461 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.190744446 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.194231331 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.191982449 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.190874017 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.193547154 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.191895373 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.191674662 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.195870735 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.194467727 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.194992948 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.194772562 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.195330927 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194880275 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.192276009 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192293695 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193925002 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.192942474 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193610381 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.193073678 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.195497316 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.19280555 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.193597009 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.195244923 seconds)
  done (took 29.777299773 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.194603254 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.193460357 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.194988131 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.194655425 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.191956546 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.19604538 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.194743011 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.192830663 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.194272779 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.195414257 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.19318269 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.193541055 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.19599251 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.193826838 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196409559 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.193577666 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.19501872 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193429248 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19504195 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.19325797 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.195989503 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193544298 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.193867818 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.195734362 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.193935625 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.193771471 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.196598851 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.194825742 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.196149046 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.194409251 seconds)
  done (took 36.968821527 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.201023591 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.203559839 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.196374016 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.195882089 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.197062598 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.196977813 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.196243754 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.196541164 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.19781617 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.196447873 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.194943166 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.196071479 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.197064956 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.197025934 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.196463037 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.196322808 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.196894862 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.196853274 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.196720331 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.197171267 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.196919357 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.19705068 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.197171769 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.196426014 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.197182693 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.197226826 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.196407343 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.196482325 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.197653593 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.197571949 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.197212105 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.197919991 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.198308464 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.198315804 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.197188809 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.197937254 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.202561782 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.204974047 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.198540026 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.197907662 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.198293659 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.198126946 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.198667854 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.196962059 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.199749706 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.199308388 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.198428468 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.198296118 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.198979546 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.198310795 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.199330473 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.198642691 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.197692442 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.196788881 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.20028819 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.198371313 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.199235213 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.200801177 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.198508996 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.199788824 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.198862295 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.199991152 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.19935408 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.198868577 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.199497039 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.199371555 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.199108531 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.199804579 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.198796835 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.200954175 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.200009423 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.199264661 seconds)
  done (took 87.408965929 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.199585305 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.1973679 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.197147515 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.197446991 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.197525685 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.200182858 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.197891349 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200728517 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197245588 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.200377041 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199742236 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.19933071 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197231326 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.200094784 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200249111 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.198198005 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.200814533 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197380902 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.201324964 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.200709627 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.201002968 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.198003827 seconds)
  done (took 27.51750073 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201147057 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.202128093 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.198650298 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.200966972 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.198628071 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.20132583 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.201684376 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.199686425 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201123097 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199167499 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202616721 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204595635 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.202717654 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20245227 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202815591 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.202968037 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.205610781 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.202318327 seconds)
  done (took 22.768432777 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.204427697 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.203398378 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.20280386 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.200367631 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.199823238 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.202122512 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.200122056 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.202512322 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.202488716 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.199196817 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.202657386 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202857896 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.202607786 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199477363 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202058555 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.199816721 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.203607521 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198968821 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202025009 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200103216 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.200040264 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.201783874 seconds)
  done (took 27.577146516 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20177312 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.202746373 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.200237224 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.199910318 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.200854969 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.202352148 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.203610209 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.200454072 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.204651775 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.203191102 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200759902 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.204414222 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.201178453 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.202251433 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.200350464 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201360004 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.202717796 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.202795029 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202991831 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.202006419 seconds)
  done (took 25.181007905 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206541653 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.206447464 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.207311353 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205507077 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.206005517 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.206813195 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.207826884 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.205017606 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206451213 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.206956626 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.206325843 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.206752886 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.206426977 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.206692206 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.206509346 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.206845179 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.207657095 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.206929788 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.206443908 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.20743644 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.207350738 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.207712644 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.207159414 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.207306639 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.207362477 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.206775864 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206843683 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.207867021 seconds)
  done (took 34.932683522 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20691887 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.20534889 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.204369011 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.203974469 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.204536369 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.202419616 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.204320382 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.204107411 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.205618621 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.204713955 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.206653863 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.206538395 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.206242725 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.206296534 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.20634315 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.207211923 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20692039 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.20419534 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204404899 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204982838 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.206249777 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207938245 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.20751341 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.205469158 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205234541 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.206447104 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.204612404 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.205741617 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20857026 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.205691562 seconds)
  done (took 37.313869044 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.226481737 seconds)
    (2/2) benchmarking "in"...
    done (took 1.226398245 seconds)
  done (took 3.597132252 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.205948638 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207509446 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.208132591 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.204846042 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.206398298 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.208025618 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.208050685 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204995476 seconds)
  done (took 10.799236467 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.21155886 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.209490372 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.207444309 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.20847304 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.209121831 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.212684875 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220502078 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.225370592 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.213394658 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.21358286 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.217891054 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.21912004 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.216250274 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.212458745 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.212158385 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.215287384 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.209163227 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.210357997 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.21060502 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.209106085 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.211069682 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.21593628 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.215072609 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.207382287 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.213511555 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.226444848 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.222115595 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.209553937 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.214342713 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.220518076 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.212968614 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.207608136 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.211948338 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.210559339 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.210730548 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.211486552 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.22615301 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.230372984 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.22283471 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.211395636 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.211181547 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.208455128 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.215249843 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.217544473 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.216079035 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.212281725 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.212444078 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.20966789 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.212947918 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.21729779 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.215850211 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.213597746 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.209116534 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222377711 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.217924895 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.224106455 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.228339048 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.216821514 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.221083339 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.227551184 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.231458875 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.222659541 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.217082365 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.213975756 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22549394 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.238908757 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.224879311 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.226789911 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.209158175 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.211728664 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.225286094 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.230738052 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.225995131 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.213393497 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.21419312 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.212365926 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.215873963 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.213646167 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226376875 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.23647604 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.213201993 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.21248474 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.225648583 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238381403 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.216769999 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.21473677 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.213638018 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.213600063 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.217704175 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.229035515 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.230022728 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.2136988 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.21701711 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.217237817 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.220152126 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.214747006 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.216859812 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.217563318 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.211310889 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.214459193 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.216199753 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.220960706 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.226963781 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.216213784 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.215465213 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.228031493 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.215542378 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.216352348 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.227118867 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.213962148 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.215072572 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.21901748 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.226324653 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.213322901 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.221935645 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.225977372 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.216846326 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.220236748 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.21714705 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.215564796 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.22844514 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.245662565 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.215873431 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.216349305 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.222961976 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.227571938 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.21580816 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.222599895 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.216695303 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.213604414 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.213720119 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.221091327 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.216328953 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.220931251 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.217103844 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222810011 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.215227141 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.21709596 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.217698654 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.220846119 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.222297434 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.219227337 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.221534474 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.223299467 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.218662632 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.221493475 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.227354559 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.220263295 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.221910815 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.220710147 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.214131663 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.217377914 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.221841756 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.217152485 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.219257634 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.216966001 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.219321778 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.217477754 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.219129735 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.21740356 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.218027745 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.221469412 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224017873 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.218333644 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.226566756 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.220470538 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.215779549 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.217931903 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.21778765 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.220683662 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.218783229 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.218765219 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.224522906 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.226771428 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.219987151 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.21894155 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.226230046 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.21854977 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.218091572 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.219534143 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.224313358 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.229433015 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.219422283 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.231203868 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.220356784 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.218445593 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.219627118 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.221469701 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.221681539 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.21937901 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.224271334 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.226547257 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237147065 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.232021467 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.223456866 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.221869791 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.22457491 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.223882918 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.228566737 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.220715642 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.219779835 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.22127321 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.222995685 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.220524577 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.224299086 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.220258811 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.223603381 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.220616434 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.220440544 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.220118182 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.220142117 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.226212036 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.22502375 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.217785855 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.220342223 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.221218042 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.221681862 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.21781808 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.222466454 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.224043589 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.219783686 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.222612503 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.235108398 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.217204277 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.225531013 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226433108 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.224207738 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.222838155 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.222251038 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.227808622 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.224113923 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232919844 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.241255994 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.224926674 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.233403046 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.240453398 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.223999875 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.228923649 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.220328749 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.219079142 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.228058089 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.229631245 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.222384902 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.223264836 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.221829438 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.22470395 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.223058096 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.234490176 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.220435161 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.225035182 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.224112905 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.22855295 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.219799314 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.227438571 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.226466972 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.22665753 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228077989 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224062336 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.223865341 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.229056175 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.225266947 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.223697829 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.224404276 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.226984077 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.230454493 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.23456766 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.226860497 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.228692514 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.227678994 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.226187577 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.22695609 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.222658855 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.226728602 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242180152 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.232571765 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.235200298 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.230227568 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.223420658 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236213336 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.22750138 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.231989885 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226932908 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.227755119 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.226476015 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.224995922 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.223374782 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.229629431 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.225077333 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228980272 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.230536559 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.227048876 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.224808551 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.227067586 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.225787651 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.226247731 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.225753097 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.227270632 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.226713926 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.233385838 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230863352 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.227144066 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.228549115 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237265342 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244590097 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.228960895 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.227644797 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.227941554 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.22832264 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.229107513 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.226575054 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.231326032 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.23397963 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.231145686 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.238549333 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.230208958 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238410949 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.225696978 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.233069765 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.233876169 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.224609135 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.226894433 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.229358236 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.227979264 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239229137 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.24305928 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.23071709 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.231318452 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227201202 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.227287316 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.226931603 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.226980896 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.227154285 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.2278036 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240882806 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.248951997 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.234240729 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.23323494 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.225509752 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.227542976 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.226634231 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.228706171 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236796781 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.22759978 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.231571284 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.230682771 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.231439677 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.228927213 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.227731678 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.228567028 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.225514148 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.228634719 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240579394 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.248108513 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.233504177 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.228963767 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.24381392 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229076931 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240108425 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.245208701 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.232865674 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.229331534 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.228875802 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.23511824 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.232104622 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.233606225 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.230057841 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.233887475 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.232698128 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.23035369 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.235717338 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.232879268 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.228913693 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.232320489 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241240713 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252894363 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.23318827 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232254676 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.226425525 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.233058461 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.233364778 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.230471185 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.230514755 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.23501448 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242677615 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236443885 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.234012958 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.231573833 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233039668 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231561791 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.229600709 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.230147812 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.230771357 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.229758789 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.236412405 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.230344265 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23904994 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.231360024 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.234063566 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236524513 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.234130085 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.245760014 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.232178575 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.234749802 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232084733 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.229908165 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.234611795 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.234919248 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.23111691 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234814819 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.22987961 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.235535182 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240340118 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.239851561 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.238122176 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.234176254 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.232366676 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.235627253 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.235873661 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.230990284 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.232744263 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.232969713 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.237377928 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.232692203 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.236796993 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.233438748 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.23222976 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.235946864 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233101996 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.237892981 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.242323027 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235688036 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.230132698 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.232891852 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.232487719 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.233426711 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.236531313 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.248085689 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239092833 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.245712525 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.24364595 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.236971686 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.235677307 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23946471 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.243570938 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.233989324 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.236909013 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.232490969 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.23948446 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.23738259 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.239530219 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.233681667 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.245114867 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.23726459 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.237276753 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24697033 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.256138992 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234723266 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.239061328 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.239990012 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.236038863 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.230334266 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.235431604 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.236391377 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246803975 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.256494048 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234408312 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.239436791 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.235007743 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.238058739 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238753026 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235104709 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.238804215 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.232178162 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.238490201 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.235994439 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.23412835 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.231879743 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.237340783 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.23715068 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.24034628 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.245306906 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.232091839 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.240451552 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.239464755 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.240134654 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236514589 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236580021 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.232121696 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.232467075 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.238991371 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.235534656 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.24051792 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.242124164 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.238031183 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.240069662 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.237028692 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.237344198 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24174734 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.248150043 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.24226023 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.23352503 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.238378367 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.239860756 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.242968729 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237533321 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.238260302 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.241549159 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.241788654 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.236391326 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237090161 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.236459461 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.242633187 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257949945 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.252308271 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239665621 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.240616564 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246921029 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.236588026 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.235097846 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.236584718 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.244441153 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.244151127 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.244219307 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.237648338 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248980559 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256985577 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.241022579 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.241808322 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.244546387 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.249399635 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.242838671 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237436162 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.238541184 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.245538423 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.258618544 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237309261 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251058315 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271516554 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.257113504 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.242915102 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.238815919 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239599533 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.239195026 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.24460578 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.238753462 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.240242924 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238416041 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.239472158 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.243363988 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24794398 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.242967834 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.238860418 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.239466521 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.242018641 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.244877693 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.235765742 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.238186938 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.238539604 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.23998644 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.238897921 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.238904604 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.242712249 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256501216 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.2531966 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.23807188 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.239175819 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.236194515 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.246306454 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.244788425 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252758755 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.246644825 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.240638244 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.2396416 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.245866804 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241506791 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.236960694 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.243128655 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.243453498 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241775001 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.237274161 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.258827637 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249692019 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.250017258 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.244446069 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241342458 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.240507933 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246041941 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241427378 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24087054 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.245509232 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.24440633 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.245798013 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.241932005 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.240631326 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.246849543 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.247919561 seconds)
  done (took 733.925305145 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.238379641 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238676718 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.237919964 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.239924338 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238982142 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.23858198 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239463649 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.237561417 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.239031796 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.238336507 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.237866152 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240177571 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.238630744 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.24042614 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238480973 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.238212891 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239313842 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.239464732 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.240655291 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240176215 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.239543487 seconds)
  done (took 27.196434164 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.24088382 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.239857451 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.239322321 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.242857318 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239502473 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.242095006 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.239379952 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241665812 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.241796672 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239504831 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.243433156 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242575644 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.238039115 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.239036394 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241044831 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243139822 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.243005779 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239249266 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.242007404 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.239853803 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.244219073 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.239470761 seconds)
  done (took 28.479606525 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.24350107 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.244239188 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.245421836 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.240495228 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.243425655 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.240886625 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.242499473 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.243880797 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.244031535 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.247440921 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.243079957 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.249321958 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.25385558 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.248638357 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.250012901 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.243799167 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.38678951 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.243202236 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.244336866 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.244981304 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.241328456 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.254345988 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.24244399 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.241621736 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.247188273 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.243546787 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.24568291 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.244817151 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.245181518 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.248048386 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.248961872 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.245891739 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.248384039 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.250430107 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.248687892 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.249498016 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.250332147 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.245891735 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.242392599 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.245366998 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.258965237 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.265610364 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.246833206 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.25704601 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.245620128 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.245660507 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.252778 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.253311696 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.243737561 seconds)
  done (took 62.422133681 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.24672885 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.246296029 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.243753422 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.245910836 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.246570647 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.247223962 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.247431051 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.246556775 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.244043019 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.244089035 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.246570405 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.243148543 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.244816442 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.246273863 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.246195069 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.243669713 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.244347436 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.244841493 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.242767753 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.243253342 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.244330389 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.245812826 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.247172591 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.244025685 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.246966041 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.245872746 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.245237209 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.247262811 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.245598124 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.244660293 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.247697455 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.246495968 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.247343895 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.245090077 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.243296535 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.247591516 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.247587813 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.244257167 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.247530156 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.244760549 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.246954209 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.2486733 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.248032275 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.248504978 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.244708279 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.244985575 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.244990123 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.246143269 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.245780621 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.247952156 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.247166919 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.245914757 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.248033437 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.247015366 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.248575451 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.249598268 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.245844027 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.248134921 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.248122786 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.246174577 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.246759208 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.249458399 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.24649197 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.24897179 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.249206636 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.247439295 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.247531922 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.250011913 seconds)
  done (took 85.933131742 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.249158016 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.250240723 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250090925 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249746028 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.249585959 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.250534011 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249283248 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.249764064 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.250791124 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.249305917 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249354709 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.25000955 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.250664077 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.248808876 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.250538221 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250360706 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.249760496 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25074803 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.251297718 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251070163 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.2513257 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.249857066 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.250265441 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.249747151 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.250604104 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.251249076 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.250477263 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.249889861 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251907715 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.25023507 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.250536825 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.24940197 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.250042725 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.250438588 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.251507918 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.251572485 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.251257839 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250683845 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.250243712 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.250844142 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.251115905 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.250064439 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25175826 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.250834505 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251497217 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.250941291 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.250163096 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.252148624 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.250237973 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.25123968 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.252587445 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251769816 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251519403 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.250490969 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.250874593 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.250671696 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25203734 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252500164 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251564715 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.252625349 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251941159 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.250947936 seconds)
  done (took 78.728566794 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251484614 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.253551484 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.249837977 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.250490369 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.251709705 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.25154916 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.25251809 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.253338708 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251329992 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.252336918 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253363366 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250329758 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251083274 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252782971 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.250262371 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250703304 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249196181 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.249504981 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252821314 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.250610702 seconds)
  done (took 26.217388453 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.249055751 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.253021423 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.251224398 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.250853151 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.252730969 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.251815901 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.253270328 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253038631 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251641818 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252676098 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.253716583 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.253932003 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249961076 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.251771089 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.254400966 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.251423601 seconds)
  done (took 21.22255294 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.251928856 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.253558528 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.252299641 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.253732422 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.251989508 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.251293571 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.253187528 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.252084883 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.250882256 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.25564373 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.253864846 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.254834999 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.257142842 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.254514419 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.252799529 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.256281249 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.252519685 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.252656266 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.253309875 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.255443824 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.253723866 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.253746704 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.254014604 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.255698014 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.252635134 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.252897167 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.252753664 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.252769122 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.252683274 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.255100913 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.251988749 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.253709804 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.252509291 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.25334308 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.255969817 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.252120343 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.255009997 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.255289108 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.255732815 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.255703564 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.25538984 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.252827412 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.255666619 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.255708516 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.253405634 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.257850576 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.253680644 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.253680397 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.253549705 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.253950458 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.254873147 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.255525266 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.255840727 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.257668236 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.256220122 seconds)
  done (took 70.163904177 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255464806 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.256991489 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.255382362 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.256619687 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.258057183 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.255403164 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.256471562 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.254185836 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25384944 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.256078574 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.254646391 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.256553112 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254847494 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.257699378 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.254939602 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.257160812 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.252837627 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.253525216 seconds)
  done (took 23.792553412 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.254837662 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.25608702 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.257950847 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.255026197 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.255679977 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.257836491 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.255379882 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.257740928 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258329165 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.255513214 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255762319 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.257538541 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258804653 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.258143273 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.256025547 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256593835 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.258821128 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25732539 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.256540031 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.255851757 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.258819436 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.257876296 seconds)
  done (took 28.845133117 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.261158884 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.259900941 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.27989893 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.305937235 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.291341936 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.260220356 seconds)
  done (took 8.851821859 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257198807 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259332228 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255547927 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259799979 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258471555 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256814182 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257444145 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25697163 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259295463 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257460524 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256422689 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260389665 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25893185 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257696058 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259192163 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259404104 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258200237 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257026731 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25784627 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259620244 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256892941 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259279471 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258036252 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257093799 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258765502 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258273091 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260065396 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259105877 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257798127 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26124781 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260910686 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259165397 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261400161 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259310523 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260501956 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259738161 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259550321 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261924148 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261297864 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258155463 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.261654875 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261003629 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260362129 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258482193 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261131663 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25816957 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257669409 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259928861 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25786589 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2601335 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260733623 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259119067 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261613712 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260627856 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260195567 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262552254 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25979157 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258760378 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260731641 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258430128 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259204089 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261447501 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259944054 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260719116 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261492651 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259551948 seconds)
  done (took 84.3081388 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259030143 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26055922 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259662435 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260015455 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260146013 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2593871 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259455256 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260110683 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259589183 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2589125 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261950489 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260339108 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260176994 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259707378 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260900711 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26058107 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261302599 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259776836 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260775766 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263678067 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261095129 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260365056 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261432055 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26103405 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260494306 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26268637 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260475486 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260727948 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260352401 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260591722 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261131168 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261392912 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260557617 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.261129524 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26085989 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259998987 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261714569 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.260563812 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261082063 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264628918 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261817123 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263900403 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261715784 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262549283 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261479927 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261384388 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261205006 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26272864 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261468037 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262455113 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262119363 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262954674 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261973274 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26224292 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262334134 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261783231 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263064274 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26119818 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261876963 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264666033 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261055936 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262526739 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264280586 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262350746 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262207048 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262228097 seconds)
  done (took 84.446327493 seconds)
done (took 1709.505991346 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.36809881 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.319219087 seconds)
  done (took 13.886098249 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.430074147 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.383270935 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.266061187 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.295865555 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.265481578 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.265320886 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.272110795 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.266749034 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.265470376 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.265118987 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.265459208 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.461270086 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.266944348 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.265657043 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.265977738 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.35870396 seconds)
  done (took 42.065655979 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.293101859 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.273393693 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.380136644 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.288682091 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.293631363 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.451867217 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.32310694 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.271395513 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.436435661 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.311471219 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.795250305 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.293238757 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.271968725 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.351305922 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.289401088 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.454209697 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.511037125 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.800043058 seconds)
  done (took 29.289951391 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.710683775 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.281382286 seconds)
  done (took 9.194458374 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.30117278 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.293448969 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.290453675 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.299816419 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.296075541 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.307393295 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.315472633 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.313252702 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.298868126 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.319847023 seconds)
  done (took 64.244319333 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.288626472 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.27098729 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.271546625 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.270248039 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.263243929 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.261790842 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.269168859 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.267741677 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.829920739 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.395246091 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.283433373 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.276804894 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.270971226 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.271849061 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.26537489 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.306906269 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.4057749 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.266538139 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.265723107 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.277217983 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.270741531 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.359911364 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.310779552 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.265515201 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.394191393 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.858936196 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.275064659 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.27823479 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.394206533 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.266057558 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.27022421 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.270579928 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.272134041 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.847693416 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.760889352 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.279527862 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.294512855 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.280589145 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.267625538 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.38822572 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.271607431 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.278754699 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.264238777 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.75133009 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.431703551 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.3803687 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.514717162 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.273329152 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.273499231 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.334595196 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.273766905 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.274599353 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.300943302 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.023495 seconds)
  done (took 107.73625065 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.297914311 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.76740562 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.436817689 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.282915271 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.130851737 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.043002837 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.267138866 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.547939042 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.282844251 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.266260728 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.542109674 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.768634772 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.267841842 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.288261478 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.751931191 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.308774384 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.267398434 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.169502655 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.266396334 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.267647105 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.680736582 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.283345938 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.26662886 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.379028181 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.306562864 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.725050148 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.698304014 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.742159627 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.267184937 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.267587026 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.733410141 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.272514066 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.275051168 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.270676451 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.537706549 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.618830123 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.592996494 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.268082845 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.275861257 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.269638848 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.289184789 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.722982834 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.607236147 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.268492031 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.268037633 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.726502876 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.268532492 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.278601165 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.270783174 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.476408003 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.044073858 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.270071373 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.704982989 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.267636692 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.635265565 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.355139895 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.34053181 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.755896388 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.272429815 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.433337467 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.319640698 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.267915349 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.278840231 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.26937198 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.268420143 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.612739593 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.651288971 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.272367559 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.612461811 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.732922895 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.272175593 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.803395988 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.120414484 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.289812015 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.309603511 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.269408294 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.987411964 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.760637084 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.294931933 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.268960025 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.596446224 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.270077322 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.546517413 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.282749797 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.270370096 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.694399624 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.293645216 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.304772809 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.282744185 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.269260429 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.040400552 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.269724751 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.535992068 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.304730991 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.268387341 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.269227995 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.316527343 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.270947867 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.271277215 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.275699789 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.797285095 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.273146932 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.402234575 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.291647004 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.270828609 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.270083181 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.274175324 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.273666954 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.495629295 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.787119629 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.271627691 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.270365607 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.274374384 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.273744545 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.270167046 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.270391229 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.572231491 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.271581706 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.270614445 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.273806543 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.081747194 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.298370442 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.271987315 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.291025527 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.124218642 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.479094895 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.289019083 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.272073437 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.271892616 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.286216164 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.615364962 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.273176552 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.322787986 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.275737948 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.983879252 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.287192808 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.29342269 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.689784725 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.280686656 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.229168788 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.28890872 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.273439886 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.578074981 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.544800605 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.557084454 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.273442708 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.285815685 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.968670543 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.321562696 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.421013721 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.29003539 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.276881416 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.470963753 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.644927721 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.273865738 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.829509019 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.274404083 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.493948507 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.27768318 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.588903289 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.76182797 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.273389985 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.280540463 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.980700237 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.921810694 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.068130503 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.274622079 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.55031456 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.275579775 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.733033374 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.273335497 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.274151553 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.849040243 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.274554281 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.279392435 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.273933729 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.275210959 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.339958782 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.449866395 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.471835433 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.274434681 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.729272902 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.330743705 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.274095949 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.27946745 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.281211683 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.625536749 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.355274476 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.282487446 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.32547432 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.276335866 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.278440538 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.743108711 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.161830393 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.274832888 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.429738769 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.914385915 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.276643212 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.278237493 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.951568469 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.477461161 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.823969852 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.307922517 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.581077 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.282636209 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.317782113 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.067917617 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.350126577 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.745038899 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.27700349 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.275566871 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.879364327 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.276078001 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.33622082 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.275452007 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.277217367 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.813637631 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.275616173 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.276352677 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.691517521 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.278544687 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.528471742 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.276242989 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.283700579 seconds)
  done (took 1097.923918601 seconds)
done (took 1365.539810205 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.28234134 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.275864398 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.264205339 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.28486312 seconds)
  done (took 26.322486931 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.287199021 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.287787528 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.286389942 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.28832095 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.287307102 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.288295482 seconds)
  done (took 8.945422201 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.484545529 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.281285108 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.284536193 seconds)
  done (took 19.270715319 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.502975744 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.538098903 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.657488478 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.431289407 seconds)
  done (took 10.350608416 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.286409951 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.286742894 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.287436061 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.28930435 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.288561121 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.289373295 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.287947728 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.288182891 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.290372887 seconds)
  done (took 12.81405213 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.1973031 seconds)
done (took 84.115439003 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", BigInt, false)...
    done (took 6.283902168 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.299503037 seconds)
    (3/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.89143285 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.636005609 seconds)
    (5/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.646361451 seconds)
    (6/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.282374189 seconds)
    (7/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.040277502 seconds)
    (8/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.415893626 seconds)
    (9/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.335346751 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.074181572 seconds)
    (11/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.390692649 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.558756472 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.324188345 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.647798871 seconds)
    (15/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.6618519 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.336795074 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.306585438 seconds)
    (18/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.638289193 seconds)
    (19/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.298523518 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.196724794 seconds)
    (21/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.875753455 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.866992417 seconds)
    (23/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.03245946 seconds)
    (24/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.494086222 seconds)
    (25/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.736946725 seconds)
    (26/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.917381935 seconds)
    (27/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.309952742 seconds)
    (28/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.339481672 seconds)
    (29/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.272241882 seconds)
    (30/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.362417508 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.936272682 seconds)
    (32/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.004752946 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.427669427 seconds)
    (34/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.674095906 seconds)
    (35/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.546724583 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.867099416 seconds)
    (37/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.280019042 seconds)
    (38/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.680457949 seconds)
    (39/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.094421358 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.30476877 seconds)
    (41/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.294494976 seconds)
    (42/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.408600096 seconds)
    (43/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.583133256 seconds)
    (44/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.334093235 seconds)
    (45/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.545828971 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.264519645 seconds)
    (47/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.136717142 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.38969138 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.312180043 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.747471047 seconds)
    (51/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.36213002 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.541686063 seconds)
    (53/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.265261573 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.692080356 seconds)
    (55/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.055453278 seconds)
    (56/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.433036396 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.296658416 seconds)
    (58/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.521868259 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.337161799 seconds)
    (60/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.13935438 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.398597613 seconds)
    (62/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.684574242 seconds)
    (63/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.338786159 seconds)
    (64/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.867415142 seconds)
    (65/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.362807693 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.381718026 seconds)
    (67/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.387805552 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.305838915 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.287099911 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.332504909 seconds)
    (71/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.286515581 seconds)
    (72/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.638228119 seconds)
    (73/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.367410268 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 5.475914835 seconds)
    (75/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.67927024 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.688466148 seconds)
    (77/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.298105261 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.30557184 seconds)
    (79/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.298970648 seconds)
    (80/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.571050538 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.747044649 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.930046073 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.388301439 seconds)
    (84/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.362505005 seconds)
    (85/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.314743395 seconds)
    (86/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.556229218 seconds)
    (87/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.185295656 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.697030395 seconds)
    (89/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.382291062 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.413767891 seconds)
    (91/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.923715712 seconds)
    (92/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.091503401 seconds)
    (93/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.299930508 seconds)
    (94/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.348415787 seconds)
    (95/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.579640565 seconds)
    (96/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.366839225 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.138196979 seconds)
    (98/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.300241074 seconds)
    (99/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.300200254 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.358887177 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.087924029 seconds)
    (102/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.32203911 seconds)
    (103/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.769024853 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.265709512 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.314053511 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.688744038 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.500409254 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.205818265 seconds)
    (109/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.565244314 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.107556139 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.950096972 seconds)
    (112/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.290430007 seconds)
    (113/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.497038185 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.285372356 seconds)
    (115/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.467914524 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.207907762 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.38447231 seconds)
    (118/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.812645402 seconds)
    (119/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.667135529 seconds)
    (120/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.591084551 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.327099028 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.640567157 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.273026272 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.420967527 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 1.809656644 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.307873335 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.563776412 seconds)
    (128/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.090956873 seconds)
    (129/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.844429337 seconds)
    (130/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.311404854 seconds)
    (131/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.367623266 seconds)
    (132/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.59591533 seconds)
    (133/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.291233835 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.044651248 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.286113661 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.553587277 seconds)
    (137/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.346820004 seconds)
    (138/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.323705414 seconds)
    (139/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.62100767 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.785499763 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.385880547 seconds)
    (142/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.311411872 seconds)
    (143/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.309287433 seconds)
    (144/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.509963064 seconds)
    (145/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.444838148 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.669055889 seconds)
    (147/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.133283454 seconds)
    (148/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.484176729 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.146737392 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.310973941 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.064317051 seconds)
    (152/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.507798019 seconds)
    (153/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.372269872 seconds)
    (154/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.275173812 seconds)
    (155/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.511966323 seconds)
    (156/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.309385193 seconds)
    (157/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.586351124 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.308404063 seconds)
    (159/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.303511665 seconds)
    (160/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.290863639 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.308453464 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.923214728 seconds)
    (163/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.138155641 seconds)
    (164/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.288314182 seconds)
    (165/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.649201533 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.269949869 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.360640303 seconds)
    (168/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.661688797 seconds)
    (169/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.920511319 seconds)
    (170/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.3964231 seconds)
    (171/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.545889548 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.057468425 seconds)
    (173/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.863058944 seconds)
    (174/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.400684413 seconds)
    (175/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.294523404 seconds)
    (176/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.047011883 seconds)
    (177/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.39683225 seconds)
    (178/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.291549895 seconds)
    (179/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.302036705 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.710080051 seconds)
    (181/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.684129642 seconds)
    (182/309) benchmarking ("sort", Float64, false)...
    done (took 5.597449523 seconds)
    (183/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.392630495 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.315430544 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.274307207 seconds)
    (186/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.363967538 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.335801459 seconds)
    (188/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.314985243 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.294792214 seconds)
    (190/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.353995844 seconds)
    (191/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.306140074 seconds)
    (192/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.278189843 seconds)
    (193/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.173351484 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.776262682 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.706540512 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.362532456 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.744671748 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.703348197 seconds)
    (199/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.887696878 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.296045023 seconds)
    (201/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.366479969 seconds)
    (202/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.320905232 seconds)
    (203/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.416203018 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.851267391 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.4991646 seconds)
    (206/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.417268239 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.310064991 seconds)
    (208/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.294102318 seconds)
    (209/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.319481858 seconds)
    (210/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.300881819 seconds)
    (211/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.317109193 seconds)
    (212/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.871530306 seconds)
    (213/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.291301316 seconds)
    (214/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.61452647 seconds)
    (215/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.279450269 seconds)
    (216/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.400289501 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.141721364 seconds)
    (218/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.281422721 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.74858937 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.881023249 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.317743963 seconds)
    (222/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.479219796 seconds)
    (223/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.294745354 seconds)
    (224/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.332633231 seconds)
    (225/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.388943103 seconds)
    (226/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.419040783 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.287466296 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.86996461 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.577956419 seconds)
    (230/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.665601972 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.422757002 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.007876958 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.342180821 seconds)
    (234/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.824473449 seconds)
    (235/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.447039893 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.294772288 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.428413543 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.878451508 seconds)
    (239/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.157739171 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.301811836 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.115211893 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.295179235 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.296469907 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.312210788 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.368270769 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.35210167 seconds)
    (247/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.295668152 seconds)
    (248/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.389509906 seconds)
    (249/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.403520362 seconds)
    (250/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.297094989 seconds)
    (251/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.997753776 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.081755262 seconds)
    (253/309) benchmarking ("sort", Float32, false)...
    done (took 5.31250013 seconds)
    (254/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.882605123 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.296398346 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.506959064 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.32493227 seconds)
    (258/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.725460495 seconds)
    (259/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.320244615 seconds)
    (260/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.494211567 seconds)
    (261/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.674737345 seconds)
    (262/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.278804955 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.963456164 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.28831146 seconds)
    (265/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.296867517 seconds)
    (266/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.927253312 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.078877419 seconds)
    (268/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.637158952 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.324931662 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.043803386 seconds)
    (271/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.829341858 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.807750476 seconds)
    (273/309) benchmarking ("sort", Int8, false)...
    done (took 4.390575768 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.662188788 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.685625494 seconds)
    (276/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.298470741 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.26872569 seconds)
    (278/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.306152854 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.17135724 seconds)
    (280/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.491386579 seconds)
    (281/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.397322375 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.891525552 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.705838042 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.379666923 seconds)
    (285/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.277951875 seconds)
    (286/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.116943023 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.376494354 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.404878384 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.466648817 seconds)
    (290/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.662481858 seconds)
    (291/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.304883198 seconds)
    (292/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.859829769 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.350642472 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.779915635 seconds)
    (295/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.320865333 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.284108462 seconds)
    (297/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.898479683 seconds)
    (298/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.279840507 seconds)
    (299/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.568380199 seconds)
    (300/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.162727554 seconds)
    (301/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.621927708 seconds)
    (302/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.59604124 seconds)
    (303/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.781970062 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.329576091 seconds)
    (305/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.172548025 seconds)
    (306/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.704278206 seconds)
    (307/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.318615226 seconds)
    (308/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.319005389 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.761060672 seconds)
  done (took 912.10132431 seconds)
done (took 913.324711003 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.324272067 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.317218947 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.301775625 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.32357369 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.412501147 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.331362873 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.312308756 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.304399899 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.350775925 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.351424595 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.300641025 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.329607064 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.303795144 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.301297904 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.303005189 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.315697071 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.307402284 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.302573623 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.319145877 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.312173808 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.318989905 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.300407652 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.35226016 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.330656807 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.307001964 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.306598159 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.305810499 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.321807029 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.413323283 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.306667636 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.305772185 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.315309676 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.307473674 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.302044338 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.298219606 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.322736036 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.314611092 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.312420974 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.307118273 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.33588266 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.709188445 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.301892254 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.304156306 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.305111262 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.305055431 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.30840345 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.305080858 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.311371793 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316371171 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316125397 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.703681908 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.318483235 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.306327399 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.305637615 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.315950829 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.30376913 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.308304118 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.320121101 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.323702121 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.319926065 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.302383251 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.310505908 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.308463242 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.320676715 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.311562034 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.744350701 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.300941668 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.310707671 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.717426046 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.311080642 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.744912516 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.313239564 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.307081039 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.319462248 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.336843742 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.312197381 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.301681494 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.305822795 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.313001865 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.304135761 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.315414958 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.318408275 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.311074966 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.307425039 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.320315892 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.336349598 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.316129186 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.306301666 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.316435844 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.326004525 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.313278032 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.317427729 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.310117735 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.302572102 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.317908256 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.310890969 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.309025181 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.308336464 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.31211536 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.318000502 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.716843599 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.322968688 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.303909722 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.304793342 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.306941242 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.319949772 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.718381033 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.308188635 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.329535389 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.354796996 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.310327795 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.304975664 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.310089523 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.322835377 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.316104111 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.31096185 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.303781889 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.305839933 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.713160774 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.322478902 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.309060307 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.306382743 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323055418 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.309946906 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.306013496 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.316042971 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.309683413 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.323176872 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.428685466 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.319968905 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.34022555 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.305603501 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.311922393 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.341911654 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323979214 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.340262438 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.313075076 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.324669048 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.324905368 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.305482496 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.319973859 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.320035756 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.310828627 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.318816656 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.304213785 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.33849916 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.321295516 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.321202131 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.33163158 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.430245051 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.307342094 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.310657352 seconds)
done (took 220.774891711 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.373357855 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.307257224 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.401274346 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.307770379 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.409447113 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.409603674 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.304934967 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.305909429 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.305467737 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.686275831 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.305272167 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.305578089 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.307073296 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.30499981 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.391969544 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.306768296 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.304208657 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.727161614 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.3080142 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.38041097 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.305528733 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.305300846 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.307889363 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.776621098 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.308237649 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.309898074 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.380656562 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.308355547 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.657506393 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.307274437 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.304838523 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.732102034 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.400295637 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.325252996 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.317881002 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.315436634 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.410704716 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.325378065 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.390884009 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.391360367 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.403219462 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.347169198 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.308731774 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.312578924 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.31106346 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.310134414 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.306549361 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.337214792 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.31116646 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.307238437 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.651736126 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.318645837 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.308054154 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.307064591 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.307372062 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.338962636 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.308545329 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.310271624 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.401574132 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.309830172 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.375207341 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.714340087 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.775558349 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.310582547 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.30644947 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.309181132 seconds)
  done (took 147.185146749 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.377244841 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.38456697 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.425060746 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.313681641 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.361571467 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.428587119 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.313439329 seconds)
  done (took 10.847290873 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.318288667 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.311063539 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.362466322 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.363063583 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.311337864 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.459322062 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.312326287 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.324865865 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.30815301 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.366545505 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.313287701 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.312402751 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.318433534 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.311433726 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.3620565 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.324811696 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.429299354 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.315026028 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.311832159 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.470926603 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.308464276 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.318408283 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.365212532 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.324871697 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.31309342 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.320402295 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.880655991 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.311929012 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.310375307 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.313274156 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.310035915 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.352362727 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.313258096 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.308796517 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.309635522 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.432025285 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.312690863 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.310897517 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.314086323 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.31105381 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.31286897 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.313413172 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.312993589 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.310784182 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.313140572 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.338631788 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.313866796 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.312887559 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.312750706 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.314511777 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.366189243 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.313798079 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.310700411 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.311395761 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.371844284 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.320910804 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.314247148 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.311588264 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.315012399 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.311772528 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.474009511 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.364121645 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.31395794 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.364422253 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.313561979 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.314368419 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.314776131 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.31371026 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371451147 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.314522068 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.365164814 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.311709868 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.472185794 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.33980411 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.316492086 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.319471366 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.318722337 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.313955447 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.311653558 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.323172218 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.312118345 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.318518931 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.323123335 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.312245265 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.312829818 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.420070213 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.426978666 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.313762318 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.329524833 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.32426541 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.313123575 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.370481096 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.315278949 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.31386735 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37005926 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.432874564 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.371057337 seconds)
  done (took 151.330357926 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.322751643 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.326404814 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.319247215 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.334267237 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.319324809 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.319056583 seconds)
  done (took 9.189150376 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.321485575 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.316611504 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.316936334 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.316584377 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.316727478 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.318314006 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.31688051 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.320694243 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.320157348 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.315651359 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.316889503 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.318922389 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.318783524 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.316802622 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.317414449 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.319086075 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.318077141 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.314459544 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.317275102 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3167066 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.422310003 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.317060669 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.317651749 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.321278384 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.321575857 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.317517175 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.328454485 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.318249013 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.317741693 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.327586592 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.320895976 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.318325518 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.322052095 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.326803927 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.321862279 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.322091122 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.322128507 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.319872469 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.315816383 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.319398967 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.320708305 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.318926748 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.319002085 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.319799065 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.323076865 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.326279769 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.324088628 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.328467058 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.31987413 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.3207263 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.32041846 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.319100795 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.320389178 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.320577772 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.32696315 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.326295928 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.325010804 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.320362489 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.320510808 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.323439922 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.321596211 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.320090084 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.324108193 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.324416457 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.317832044 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.322696382 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.325447158 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.32423206 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.320530339 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.319580811 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.321814033 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.318193626 seconds)
  done (took 97.430367903 seconds)
done (took 417.22318518 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.778859 seconds)
  done (took 8.03127139 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.380627582 seconds)
  done (took 7.636439694 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.117624139 seconds)
  done (took 21.376633258 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.364644984 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.387692487 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.334502239 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.317381825 seconds)
  done (took 26.658320049 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.834121228 seconds)
  done (took 8.088396151 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.312773336 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.323271365 seconds)
  done (took 13.891468664 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.936196648 seconds)
  done (took 8.189823928 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.699924075 seconds)
  done (took 7.95965287 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.325280298 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.342334193 seconds)
  done (took 14.1856609 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.299492022 seconds)
  done (took 7.553238926 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.411487039 seconds)
  done (took 8.669040349 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.317408491 seconds)
  done (took 7.575319896 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.372306738 seconds)
  done (took 7.630248271 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.240073208 seconds)
  done (took 9.496312525 seconds)
done (took 158.195139909 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.320185737 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.320451495 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.324070196 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.322652122 seconds)
  done (took 26.544196154 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.357174034 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.358259342 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.358991325 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.368432335 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.361257126 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.357287618 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.34992717 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.35035705 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.36934206 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.35967052 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.361414259 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.360033679 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.358571331 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.350100137 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.360859587 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.36144651 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.369938574 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.359417372 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.353123406 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.361937106 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.325679027 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.370341421 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.363049664 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.325521621 seconds)
  done (took 33.831224169 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.524465849 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.40145475 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.48235491 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.381698537 seconds)
  done (took 7.048027267 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.377865109 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.379140471 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.391053859 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.431414778 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.456108227 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.388508475 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.348354833 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.347351437 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.333532833 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.378809564 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.454292811 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.394099365 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.468387707 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.326253515 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.513338367 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.325511769 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.325685612 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.378109191 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.430491495 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.450756163 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.326187386 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.377675221 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.385882221 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.395891796 seconds)
  done (took 34.643380558 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.32582429 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.334018281 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.332401701 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.326038954 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.325680445 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.326244854 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.331493871 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.327051508 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.346282727 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.32709032 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.325774247 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.326351183 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.326304038 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.325734645 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.325290889 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.338749828 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.33982898 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.326195371 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.330739677 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.332929733 seconds)
  done (took 27.859568573 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.32310304 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.176576221 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.674430419 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.605084421 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.323894819 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.323081165 seconds)
  done (took 27.687135423 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.402545965 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.528745295 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.330985109 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.695074023 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.769954935 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.331624191 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.331278785 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.567047468 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.880648103 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.896500178 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.389659978 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.399903946 seconds)
  done (took 19.786346989 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.324309226 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.328000481 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.328516854 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.343177423 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.387213962 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.337782958 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.336695646 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.325334375 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.389617981 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.392064399 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.33610087 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.388573823 seconds)
  done (took 37.479746182 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416627676 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373983304 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.375684028 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.155868284 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.709524018 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.534803366 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.205808187 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.760985541 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.330136899 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597245697 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326571698 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423537415 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.581128532 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323111407 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.327226904 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.360733058 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550426028 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828806771 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326489066 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.382108941 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351199001 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332092601 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.491922429 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.354038768 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.536317478 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.462739449 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.584859645 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.324477438 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611765118 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335913778 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334224565 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324735524 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599244417 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013604361 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420118432 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337023268 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.188263361 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.044487291 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.310497721 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.498719775 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340461662 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.328908201 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336087683 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325174829 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.259066682 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333073055 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781290448 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.334914156 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.037288762 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.32524617 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336673378 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420307569 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.328844659 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.145148906 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383451791 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.32683759 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.324047033 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337479531 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900763514 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.915647974 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33054834 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.264527535 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.800940063 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.481720786 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952348059 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.429950902 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.330749585 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.330660914 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261956181 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.471595286 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345369284 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46589127 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.348123169 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.98870386 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054648998 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.328057445 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.260393201 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892893422 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329663007 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.263451089 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55714368 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328166773 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26856941 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.272383298 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.262661415 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072343339 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339531374 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.763235854 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.340738735 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.763171595 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.342242481 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344713853 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351942396 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.553143158 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.211770959 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327571578 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.333454763 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449746074 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350765632 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.766175655 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267836766 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.332524753 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586217199 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.540883443 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338049104 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.379981629 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539234267 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346787076 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.347537886 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.335031232 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.341698097 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.924804505 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344436758 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.956388485 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348560202 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.330031153 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115983631 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334380422 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.432884453 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.342275659 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582854862 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.144655734 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333507781 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411730941 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339265741 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.330671914 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.50517206 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.8540698 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.330283263 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.331996582 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334526249 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.343622516 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.333061483 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290086499 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.326861786 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333319676 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.334643329 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.555136963 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344098562 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607879915 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26640628 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469353689 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.432995454 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.554894485 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.548300913 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.330390471 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591051768 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342860372 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.333903501 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.360603021 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350459507 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429743527 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353375632 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.345368725 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.590700449 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.336158464 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.336144988 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.504478901 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336390186 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796591726 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.337170446 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.22746118 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924416918 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307047723 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.336913745 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.246154954 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.354872027 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396535044 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.337157708 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.342195289 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.212795455 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.314484458 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.339865686 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.330363127 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557002698 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344236516 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.397480177 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413144531 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.536799038 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.926368699 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346968883 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.268198348 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.045240516 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.027700164 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334061707 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.26788841 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333560699 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343727538 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344007734 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.983172595 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.926798094 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335989899 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.401143482 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.34165726 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344883439 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.338878438 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333741509 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.184804782 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.944105734 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353737709 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.346789678 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477083619 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.348075973 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.267780277 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.337738936 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.339507928 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.333341335 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.335012958 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366171036 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.416948555 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823770811 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595528574 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.160957789 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.348736859 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.515318528 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.368388859 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.335722485 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34814813 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337516368 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.349179841 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34489208 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.345970714 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.421209182 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.018111183 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905680992 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086146655 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882639963 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301231624 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.339416911 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.337267086 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.782409017 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273108491 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.902194294 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532003857 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.782085759 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295953023 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543867209 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.565177662 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119730196 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.345352189 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565503283 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339487758 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.339856604 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349021127 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.547626635 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370980878 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.341131089 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.271283891 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.622206819 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574030599 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337877553 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415258898 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.780668358 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346219038 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.339208237 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.338332013 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.757333571 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52038118 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.059653645 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.51723336 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346150229 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.347866402 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823973983 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.344986844 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.56718129 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9738932 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.347205051 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.546676166 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281506337 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.348813421 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.349050484 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.338233158 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.688106454 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.344366772 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.594278952 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349450469 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271738589 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.34755075 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886780786 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.208366877 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.345022316 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339300067 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109545824 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340249092 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63576763 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.34394622 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.172953513 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346024264 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.273968988 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273421896 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.031549646 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344432786 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311466784 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840054923 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.7565748 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.38266313 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368101951 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19032677 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.596220276 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.353219415 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.929426301 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566725909 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.274504178 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363533439 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.439491095 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350935831 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.326669164 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.339610791 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.576544428 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.229235056 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.565015217 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.411646971 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.246921582 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.343337815 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.555641772 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339514529 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.344167511 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598517498 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.054286466 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.341336677 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098368018 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366847491 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352283245 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.262285931 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.820200844 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35120198 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420102708 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.352297176 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.351041282 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.351795883 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520087964 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34509773 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344481659 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.354856244 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4356595 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.005339338 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.1848776 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.344940822 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941878395 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096869155 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.949783184 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357934832 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342809795 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342668678 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277253701 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491027723 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.571984107 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616048351 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462982406 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.935883319 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365975543 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355603063 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358809328 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556054478 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617950304 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.240735417 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341756948 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.359462731 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.34243163 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.354489454 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.554664953 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862558036 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916247246 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46710992 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.343449426 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.789670892 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62111248 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.342986752 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344268541 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.937205004 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.347085308 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.768434561 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.351444621 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345526518 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494371166 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.353134353 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035086688 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.356894406 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.499374163 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.118123348 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.447749613 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.601963167 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.839649223 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.35574395 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952910711 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.062834972 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610798369 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411679962 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.354745597 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.465177305 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490737463 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.353485296 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.343766794 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344007929 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193948629 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.054195886 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.355547882 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960048398 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614153787 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.342498381 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.34298912 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367674936 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.354375906 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.569738077 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122666311 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572729641 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35390737 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.352965797 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.162935745 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944815161 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359779723 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28166022 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.34914745 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596209166 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.583771554 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365676443 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.798934378 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.057491611 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917469503 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.317480084 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365817911 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361546608 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.06819926 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936294809 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.176620857 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852069368 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.902139261 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356128281 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620961561 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.349416557 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346470941 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623126688 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.348583829 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.351777593 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357025384 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.931264922 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129696972 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.356410547 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.42323864 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.284223898 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.686174426 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.984439973 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284407405 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35368488 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.534936486 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348611742 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474604892 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356165852 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.35250991 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345624817 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.105226846 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.62839437 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.350386359 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.336592499 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.33227887 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.349827502 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356579219 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580535109 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348315802 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.020874521 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.698484717 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600597756 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.357605527 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.332654867 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.350229264 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350778769 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.332192307 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.548628598 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.86171605 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914926331 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.350182589 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.357649442 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34866265 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.562069892 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55829564 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.347627929 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.359788151 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35656493 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362768119 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.210187999 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.847423213 seconds)
  done (took 1601.495785458 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.3499085 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.389533622 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.36434111 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.38161337 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.39952404 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.376510511 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.395058801 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.365513419 seconds)
  done (took 52.305227548 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.355350928 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.571128589 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.381578833 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.357965929 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.360415441 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.361450576 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.801114876 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.354268944 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.357386475 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.358484366 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.364372992 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.352554166 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.984713086 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.360796685 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.351223374 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.347431613 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.357698519 seconds)
  done (took 65.668437319 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.360733109 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.421932331 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.454187828 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.348222825 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.446815033 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.365106805 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.343176244 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.398045786 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.366677023 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.38544213 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.011659981 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.360286534 seconds)
  done (took 84.548112292 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.356705805 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.356601914 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.357258858 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.35736528 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.356665114 seconds)
  done (took 8.069317848 seconds)
done (took 2028.224556388 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.599678895 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.061026445 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.021555906 seconds)
  done (took 5.366498425 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.49609972 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.55006592 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.694851294 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.675315198 seconds)
  done (took 7.699921107 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.624413789 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.74850368 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.533983033 seconds)
  done (took 6.19060481 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.773582932 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.347648679 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.469904698 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.345967166 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.347239723 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.34676007 seconds)
  done (took 20.325910926 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.349300023 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.352319326 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.349593828 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.351838653 seconds)
  done (took 6.687831262 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.32935695 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.092396746 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.33182632 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.347964741 seconds)
  done (took 18.385522208 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.096662293 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.11831632 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.094294054 seconds)
  done (took 7.594071542 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.35967629 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.194477766 seconds)
  done (took 9.838068643 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.64952405 seconds)
  done (took 2.934607992 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.481572415 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.619463565 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.379754052 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.34561068 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.405288169 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.257843087 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.034202964 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.60163287 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.335804312 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.579182837 seconds)
  done (took 28.326510106 seconds)
done (took 126.826179845 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.188272551 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.358542903 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.556418473 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.196853536 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.573881868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.554632471 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.601069236 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.161520668 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.752930075 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.66008554 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.16228409 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.574259043 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.550846482 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.359138134 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.547931816 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.744165925 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.574167427 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.240487373 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.844522207 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.041748461 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.611559889 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.798834501 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.988403555 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.00896497 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.58015019 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.508103931 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.393870955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.756725883 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.023502139 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.413511578 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.51070618 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.223428586 seconds)
  done (took 191.347683882 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.351954029 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.352147228 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.352017316 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.35928832 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.361650762 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.355055786 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.35247199 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.352736292 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.352026993 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.360328079 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.352005076 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.36864555 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.353503598 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.351895329 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.369126122 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.351600955 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.352609619 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.364139631 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.352389068 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.353550982 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.352509784 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.352262724 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.353564043 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.362162127 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.355677963 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.353251694 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.352845951 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.358405056 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.36612704 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.352803144 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.352610559 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.354006926 seconds)
  done (took 204.673930245 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.353032399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.354147823 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.368085079 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.353181017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.366993914 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.354343787 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.355182078 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.354851458 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.353222634 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.353810979 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.353356431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.353814224 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.370768915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.35451696 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.361389581 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.353985766 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.353636765 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.353622749 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.368900682 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.360681551 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.353122145 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.363519723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.353688317 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.353296286 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.355086208 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.356485092 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.367979002 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.367194443 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.36477445 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.354504058 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.356552482 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.354583925 seconds)
  done (took 204.742880717 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.550928745 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.358848385 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.359394382 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.294280662 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.359236819 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.3600151 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.357446832 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.550954358 seconds)
  done (took 14.481750827 seconds)
done (took 616.531509533 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.680824413 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.39025518 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.559916899 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.381557746 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.208770862 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.383581281 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.380538063 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.547685503 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.278388851 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.553723986 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.613232883 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.380191402 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.753171218 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.378277342 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.628162527 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.475656563 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.256802867 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.36699758 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.696480762 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.975116299 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.633236606 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.829107117 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.551273338 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.277884572 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.768607731 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.846094932 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.065675032 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.267363187 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.381599731 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.692971948 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.007023262 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.317185246 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.442168223 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.423651571 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.475315913 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.459381082 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.305624791 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.421312727 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.565576321 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.590216957 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.981395158 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.093670549 seconds)
  done (took 92.578515122 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.349475513 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.349599577 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.347839084 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.349031192 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.35061906 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.349208769 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.348263436 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.347977615 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.350096436 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.349054483 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.349346997 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.350087716 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.348629013 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.350515627 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.348212773 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.349345369 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.350276915 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.350957178 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.34889124 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.348230859 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.349748431 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.34877384 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.350324207 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.348865833 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.350058315 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.350735785 seconds)
  done (took 36.378447835 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.362953999 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.598109366 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.779700335 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.37198468 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.366286633 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.371274214 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.444353765 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.364341265 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.369487089 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.369095752 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.522007682 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.366046011 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.404851462 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.789036794 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.370136697 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.364974228 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.364514872 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.367262793 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.606760948 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.37749578 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.447078634 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.365297969 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.445833538 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.377438019 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.370502058 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.36802201 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.372477911 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.864379679 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.370285289 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.524056505 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.15133645 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.444886595 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.817274294 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.792326838 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.155980488 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.368620066 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.366201497 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.528223616 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.370313134 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.370178953 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.445820893 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.369667977 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.79118529 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.993883401 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.386104954 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.365597552 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.887997024 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.528080197 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.622055056 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.379629943 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.816091153 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.372360603 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.367049309 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.370089936 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.621417533 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.378790572 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.369943689 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.905684999 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.376422289 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.447304531 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.369232737 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.370736343 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.616270124 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.372148623 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.606078509 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.373043898 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.379465689 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.371708738 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.792122937 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.37262789 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.006991317 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.386392923 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.36644821 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.522642274 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.603779836 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.921348785 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.376118844 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.618824272 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.831399678 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.447981362 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.37614885 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.85622113 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.452090488 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.375904242 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.370716712 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.370711217 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.368397127 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.412616639 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.447478344 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.944078916 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.00524542 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.915124168 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.450745158 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.384341945 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.372909468 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.901657413 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.370490372 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.369873736 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.787562554 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.013530337 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.388641847 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.380651458 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.998840002 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.38673195 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.447003969 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.376290666 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.797219559 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.373400226 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.414828411 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.369561058 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.381241459 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.376157056 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.451236506 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.377046614 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.37123908 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.98600289 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.549034579 seconds)
  done (took 179.572328442 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.3663133 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.380931806 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.38264947 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.365393683 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.366038805 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.371899445 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.365720337 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.367500139 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.37292768 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.365767356 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.366720775 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.367129555 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.377714871 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.365916197 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.378582347 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.374969943 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.978072491 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.367602346 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.373860731 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.370203955 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.163723112 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.37011353 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.372035613 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.366989956 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.367735282 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.369036522 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.374114638 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.369423667 seconds)
  done (took 153.08161292 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.371324378 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.939958079 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.371965491 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.509324761 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.394111723 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.369057267 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.506533261 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.434095959 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.376730695 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.370142536 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.369762121 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.690758775 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.375700896 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.913242328 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.567883954 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.506805026 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.917039761 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.375685361 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.37033714 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.370311733 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.509411657 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.380744903 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.687265308 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.970301637 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.375517954 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.964364128 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.362960359 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.371886828 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.374158428 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.965618409 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.372961009 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.679971979 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.45444556 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.436386259 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.945843201 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.913720736 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.913133608 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.524140469 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.377306435 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.371473828 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.371372321 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.361190684 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.964258825 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.375724931 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.377286089 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.959586171 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.392188994 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.374450551 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.384342345 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.37132136 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.435036147 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.43622836 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.688123613 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.973649113 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.453553857 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.4036139 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.510387104 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.750885178 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.37738904 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.8917996 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.360454076 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.974505728 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.381249094 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.364150164 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.376802317 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.381155483 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.52847228 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.511619945 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.90466103 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.382934275 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.911053854 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.530833076 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.377546329 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.375506287 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.378553791 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.976501671 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.901103358 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.529640093 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.520254375 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.57637712 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.366192714 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.379813613 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.365966055 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.45939674 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.379253665 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.977562464 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.905927263 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.3815901 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.37970605 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.379092038 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.379412876 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.560751033 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.983312316 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.462165407 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.904991888 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.71903612 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.701090911 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.381026288 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.436195159 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.379401384 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.700481404 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.382195439 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.435033589 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.818923833 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.69634454 seconds)
  done (took 164.370506873 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.621418576 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.622455128 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.469347207 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.494909665 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.921056662 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.940156474 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.613374446 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.514567571 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.486536993 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.629184397 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.592210823 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.471655082 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.568596128 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.459780866 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.088643748 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.448211576 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.469655252 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.505742339 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.488106934 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.399948228 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.01642455 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.672293288 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.556526042 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.502956336 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.478004528 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.144551562 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.930140296 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.894046748 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.54903808 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.691597312 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.954322773 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.517038208 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.374669129 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.074527974 seconds)
  done (took 66.473198448 seconds)
done (took 693.745950599 seconds)
SAVING RESULT...
DONE!
