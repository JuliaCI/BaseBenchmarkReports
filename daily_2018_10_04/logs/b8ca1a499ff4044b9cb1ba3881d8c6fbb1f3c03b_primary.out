cset: moving following pidspec: 22786
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.306978656 seconds)
loading group "string"... done (took 0.468717086 seconds)
loading group "linalg"... done (took 7.626692187 seconds)
loading group "parallel"... done (took 0.171157247 seconds)
loading group "find"... done (took 1.160280749 seconds)
loading group "tuple"... done (took 2.092518683 seconds)
loading group "dates"... done (took 1.335541039 seconds)
loading group "micro"... done (took 0.24668505 seconds)
loading group "io"... done (took 0.665575588 seconds)
loading group "scalar"... done (took 41.166566204 seconds)
loading group "sparse"... done (took 12.639973313 seconds)
loading group "broadcast"... done (took 1.118911311 seconds)
loading group "union"... done (took 13.823007716 seconds)
loading group "simd"... done (took 4.796472451 seconds)
loading group "random"... done (took 9.67264468 seconds)
loading group "problem"... done (took 2.015867601 seconds)
loading group "array"... done (took 22.564391532 seconds)
loading group "misc"... done (took 1.44392244 seconds)
loading group "sort"... done (took 3.610618488 seconds)
loading group "collection"... done (took 19.551748861 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536929666 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139674797 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135080415 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.149575659 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206156911 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144718853 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159194002 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.115192366 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.002283716 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.184721515 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156650693 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.521895989 seconds)
done (took 5.17996469 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.227618916 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095725058 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104061671 seconds)
  done (took 0.868536065 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078399696 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146950727 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09588544 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079362838 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096092728 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080185555 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095593347 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.093261123 seconds)
  done (took 1.363856198 seconds)
done (took 3.219646822 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.724325008 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.279545674 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204292628 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46719737 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194800631 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216079008 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.688618769 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.350566645 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.257515244 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101641701 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.145096796 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.392714158 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137834787 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.69108857 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090946687 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124416634 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.187007465 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.447089281 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085013503 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111695498 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117861514 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143096133 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130218001 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093154213 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185853541 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.085627089 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19757682 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109866305 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081576569 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.292695719 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202463849 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.694617061 seconds)
  done (took 10.94542659 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113046648 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135971141 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098975056 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139933649 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13703622 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100896565 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085612893 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097803065 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12343354 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178434418 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.131317605 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124093373 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096161725 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082747509 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117334535 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245989331 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124266762 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105359059 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101871992 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105819021 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123446519 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114574533 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109485587 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094650395 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168919885 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221837315 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11103774 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127506596 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098175135 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113652335 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145741248 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144261297 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096465083 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081974389 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175546827 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126049908 seconds)
  done (took 5.189584116 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190687051 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122511269 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170699226 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165738665 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142412753 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163203811 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114721667 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.247370541 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.111282859 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166140634 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142019584 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.117343199 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080756328 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.101042104 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097104876 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.655105162 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.165811861 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.137760132 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115816246 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088991073 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102951795 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.445847536 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103826324 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082200057 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099869871 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066651302 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161910254 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10125085 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.158543333 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121373869 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083636189 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134682404 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204968166 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112043354 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136600691 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096903662 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080660168 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179417193 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105354317 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079816987 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122685212 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135710563 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136814884 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098673597 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083826442 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.20866656 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098050819 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114662938 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.982387174 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.184933178 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.123606269 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.100538491 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.334186686 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117704868 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082472509 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.096455425 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280375326 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.202603753 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.08228789 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.124273678 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099094323 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081254525 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.101024534 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.463228222 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08198744 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.955618741 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083478112 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106918239 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084129074 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098007828 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095690562 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089562314 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105359223 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099558686 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098458684 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082571066 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098524331 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080406252 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096837201 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.0831787 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110951249 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103783161 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081820224 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166680129 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081096894 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116219044 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12773909 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085119562 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096849272 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133454847 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085779913 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099451901 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135460533 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082551877 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109541377 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10053191 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143003942 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082011958 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.221238386 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082254921 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128061381 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100918903 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115145098 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113342164 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100319008 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085428657 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097517516 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078327673 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166784094 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083383159 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100867522 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.08441232 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.098795842 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112078181 seconds)
  done (took 23.284048884 seconds)
done (took 40.091838144 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.333025925 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103664462 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103658173 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10361937 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102050645 seconds)
  done (took 1.493975081 seconds)
done (took 2.215298747 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287289627 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.177231822 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096181878 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.170155725 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078254629 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.195459669 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162571407 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113493403 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.185671236 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094877202 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.165888072 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077587448 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096452207 seconds)
  done (took 2.649050908 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096953781 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116113842 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084201492 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112299796 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077955189 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112516646 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093942576 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118255525 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110805465 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086602425 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09486131 seconds)
  done (took 1.823222848 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094954028 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114796441 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083846459 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111412159 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078111982 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111643532 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094730696 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117582178 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11052085 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086883389 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094958015 seconds)
  done (took 1.818190958 seconds)
done (took 7.002400852 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091897711 seconds)
  done (took 0.806378659 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.024215122 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.129068489 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114450359 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.1538003 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.3213829 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.198583271 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.563270442 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126615205 seconds)
  done (took 15.543034799 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.146955961 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087389612 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.103500055 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085198096 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103771683 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100391342 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083284267 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101837119 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086130888 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.10335023 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084668306 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100515876 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103877823 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08680311 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101674638 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08707668 seconds)
  done (took 2.349707407 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.12140595 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120734873 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107787684 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111030095 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088700237 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10637857 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108797874 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090568963 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102816448 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104676848 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093001749 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106845664 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105822801 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081105486 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107603859 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109581391 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087452232 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106132491 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109096784 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091913236 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108360746 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096764506 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089105986 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107600169 seconds)
  done (took 3.293479888 seconds)
done (took 22.712356667 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162089148 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110382019 seconds)
  done (took 0.99812223 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096356941 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114383071 seconds)
  done (took 0.940917044 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.100478536 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096075739 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.125551177 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.11056661 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08141789 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097990187 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121187208 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081599794 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097671401 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080868814 seconds)
  done (took 1.726828524 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082788526 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111234443 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103398971 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096029096 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106123281 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095960951 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089402626 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100297672 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112236784 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077998973 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104452335 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115841761 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087638693 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116978943 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107237002 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085457165 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104145248 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100483861 seconds)
  done (took 2.532875912 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080606202 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098051063 seconds)
  done (took 0.91220743 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08203684 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09570229 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082967066 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098868725 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096060885 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077868552 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095972897 seconds)
  done (took 1.361761168 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.478286941 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137314545 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.256374561 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085993218 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123420842 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.311915341 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.09896598 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086293644 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104608346 seconds)
  done (took 2.473659246 seconds)
done (took 11.677426044 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094133517 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119406331 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114390416 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.472612104 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107660627 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096350453 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.162916103 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.256608355 seconds)
done (took 2.166960577 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.151428852 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328176783 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.115725373 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068183566 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096940277 seconds)
  done (took 1.349909636 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080835249 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101416563 seconds)
  done (took 0.922544069 seconds)
done (took 3.159272596 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08266353 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.130104516 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081325592 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096849669 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080742477 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.096651364 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07917724 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098386716 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098036979 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.080980096 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.097958027 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080960666 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095914842 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078471274 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09561165 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080505364 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095743181 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079039359 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097182307 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080806047 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095840811 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081043453 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095314824 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079250977 seconds)
  done (took 2.933633373 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101839379 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100043154 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104809315 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087951492 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103367265 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088115794 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103567227 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099255259 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088081415 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099892646 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102662809 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085715486 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100508525 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086723709 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100973473 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102931109 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087626039 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099095308 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084099024 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101408316 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104213769 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08234328 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102269566 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104921 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085765108 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102808186 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085156776 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099464174 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104206353 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085430424 seconds)
  done (took 3.630529014 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085680667 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09523049 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079286068 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.1037485 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078606916 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098400159 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078745456 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096710303 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080689876 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096579257 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081156671 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095642835 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079669024 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097541011 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.0978339 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082482276 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108920938 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07972345 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096345381 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079808438 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099470131 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078842949 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095773225 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078141303 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096070182 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079447061 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096789163 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079239977 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096462503 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079886844 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099112203 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08223859 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09604865 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102899509 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082072118 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.095208387 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082638977 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096280684 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079549024 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095963246 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078669598 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095241897 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078907178 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103184154 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079263432 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098030785 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080038163 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098258813 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080478276 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099098101 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079630048 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096021405 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.099044453 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080790846 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099924624 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078754341 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09774145 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079637833 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097708567 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080095552 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096371612 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079257837 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098466147 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080638807 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112055422 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086569184 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095466553 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098422684 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.080502979 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098780358 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.080645878 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.11078114 seconds)
  done (took 7.232615397 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084221524 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107728733 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081473963 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098464278 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077983139 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097194578 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101213721 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080257395 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099465395 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086392397 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096776546 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080320717 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09867739 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109443893 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079776995 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099325581 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085699156 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094362647 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079362261 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100856438 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096864992 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082696441 seconds)
  done (took 2.767308749 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214609406 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106226707 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143798057 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109451009 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08432925 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10807869 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104296142 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087733929 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10426716 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084761084 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101886817 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104546289 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084470231 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102245355 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102101026 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086019234 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103689062 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086251688 seconds)
  done (took 2.67138926 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095543474 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099758522 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103248358 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09986059 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101147298 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08617715 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105656035 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109915442 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08440695 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099367488 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093372648 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102186581 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102876519 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082762689 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103107936 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08275143 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101858264 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083120816 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109811626 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104618715 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105941009 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092468238 seconds)
  done (took 2.904333649 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098160101 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102068332 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119366017 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086471255 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097046773 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080804964 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107189227 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082809058 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107120554 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101727704 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083170191 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098206878 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089362863 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099557916 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106638948 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0836293 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101584067 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082810551 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102629679 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079432891 seconds)
  done (took 2.664605672 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104889316 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1021826 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100911779 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094037348 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102495548 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084015927 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111321202 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101594519 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08348653 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128280325 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101525574 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084003605 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110605999 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106935969 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101781163 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093809526 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109959242 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111729237 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084495723 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100403129 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127302209 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.194027157 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111487122 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100591835 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08442718 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101359404 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102326779 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090534178 seconds)
  done (took 3.687053304 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081814938 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100259397 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079812282 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098480108 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079292576 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09772698 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080228872 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097371732 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082930602 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097953188 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082161604 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099729113 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082235759 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099515857 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082642787 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099453126 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085210757 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097746335 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081185084 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096883196 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083100508 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099564225 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082946922 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097423278 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0806528 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.0988583 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080022664 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09715187 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100058275 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08001468 seconds)
  done (took 3.461475956 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092617477 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107680001 seconds)
  done (took 0.96119721 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079710435 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117019914 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080349314 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104270666 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105950564 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083120427 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109288805 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087891765 seconds)
  done (took 1.526339018 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097653867 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111860259 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084463767 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114378439 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.111800139 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096038134 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162236993 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102125563 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089310326 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099696471 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.115181022 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081697284 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106746138 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08316048 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107263843 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089900083 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098558218 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089701853 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103707373 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099179635 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085429867 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113243795 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086046348 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097992892 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102613427 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094496371 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110435073 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085012593 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105455015 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110782063 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088927616 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095273435 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083397742 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100611822 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081931022 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.10966516 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113923063 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086810254 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109817989 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085317993 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113474892 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096372416 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089610412 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.10578626 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094440588 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10181516 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10178701 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077732512 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098885735 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085743436 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096584818 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083318803 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094903302 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091233443 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105783889 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11461658 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082217937 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102819584 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086197613 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104401952 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090420082 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102600764 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104033721 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082971627 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108296464 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087788365 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108708478 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078521322 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.0952409 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081739182 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109074131 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123901531 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091543596 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101816738 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103888817 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080264392 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105050183 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085133362 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107888224 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109499357 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083958786 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10862743 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091388182 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101279468 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086182092 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109523405 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099345152 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086206148 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098420987 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116397997 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083401929 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099411375 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081141287 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111517636 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087639882 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10147362 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082286316 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111809952 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078098576 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10201486 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103099702 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084232489 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110560977 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107856083 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090068203 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108289079 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091755885 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102261534 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086938893 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09799127 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103848544 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086254405 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108846707 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07753667 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105300384 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085219471 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.1019753 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109735464 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081280585 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101881985 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091853441 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108457835 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082304551 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097522499 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104116157 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083237605 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106160837 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091963498 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100968014 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078594068 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097219294 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105569775 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083219689 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106185989 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090470684 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104782942 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077977393 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100340026 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106643559 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091374654 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101550292 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084775193 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105873546 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084275379 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101615776 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107062425 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085456195 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099885502 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088830229 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104093026 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079620118 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105931505 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105084261 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082549893 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105366446 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087823797 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103570193 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085693244 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100379848 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108642397 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084845803 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101644567 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083140053 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100068452 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093672365 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103363296 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096716592 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080748361 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109959595 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081453975 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101361377 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082984836 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10414498 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085072551 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099328385 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101225034 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084985339 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115340368 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088890432 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103617159 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10830608 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093894962 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10221104 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085957729 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102038263 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085646697 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103266778 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109519182 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089446103 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107757963 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086952081 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098190196 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108247462 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092031182 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.1007873 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081876941 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100845725 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087483862 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108608178 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106189967 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084698314 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099976225 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084670926 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106349607 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086858809 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102331191 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101614138 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089281582 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100934753 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091614661 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103224068 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110538314 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087905312 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097212742 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089041145 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100825846 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090324749 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097947277 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099687155 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081913222 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10319769 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082746283 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104773102 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078680872 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110866967 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091528778 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102152415 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102458809 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084626889 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111038996 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085733344 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106042896 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087749726 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107760759 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116097357 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084103551 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105193154 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093716176 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101764461 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078177646 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108650311 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100350485 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083646723 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101363432 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082516075 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10463014 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111659951 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089488453 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09629003 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086674471 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100924256 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08355798 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097858697 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090979662 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10601454 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103806381 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092899003 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104767317 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085313428 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106099869 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101870551 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084794167 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104963032 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087579609 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.10379425 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087241138 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101344613 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087274253 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102218966 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.100575295 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085672729 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103019679 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085284397 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108798231 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086549423 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102456384 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086782513 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104799073 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104009622 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08529494 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102415819 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087977625 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103273808 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084824751 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104650268 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079421765 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109939463 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102361537 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092322697 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102957187 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082036311 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109747767 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086334684 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107910917 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103468867 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085928811 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.1046111 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084871061 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104817287 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113604685 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082905041 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113889753 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090318508 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10383946 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086945584 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103359372 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105712303 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084271802 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105801129 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086159072 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103056352 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084762471 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107640151 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089469599 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.107148764 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105402105 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086080262 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103258337 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086295905 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096697803 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084615398 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101752519 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08491715 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108767724 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104477789 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08702878 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100700637 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085835625 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102322773 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081072048 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112024352 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113576935 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085548261 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1111634 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084357984 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104495791 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112330071 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07834642 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100312542 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082809877 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100196277 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09298456 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104278077 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111265716 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083843966 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.102211321 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081522327 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103937641 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084226679 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09713314 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083150694 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105985813 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086372909 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103856369 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106471389 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090100677 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107293012 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094700216 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105604526 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088859706 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105275069 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082364868 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101849 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102713332 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087897117 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104840939 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082512814 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099782882 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084192036 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.112594444 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084905511 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103575335 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105189369 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093193709 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103644564 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088096452 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107467507 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07990612 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107169585 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103409224 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085043248 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10192377 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089549459 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106397672 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0861306 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110488084 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102992091 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08567189 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103662667 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082665668 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103818722 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084568142 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103373543 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084295467 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104298018 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111605355 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083035709 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105238607 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08391652 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.103582352 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.088560119 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103624993 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105561363 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092798524 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105911443 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086582963 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110406458 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089304253 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107360307 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104382466 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086088987 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109202175 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083883211 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113102849 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084230413 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105193935 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104976345 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082207683 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103630671 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.08436364 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102711557 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089194116 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103844151 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082959461 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102874076 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.101856346 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085944228 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107482342 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092706204 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105398737 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106700013 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080617279 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100691611 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086726533 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10016673 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087389706 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106069255 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090837087 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105782252 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084855533 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102963259 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111887118 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091119838 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108104413 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083649953 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108332061 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10534983 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087565063 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105938891 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085155161 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105181596 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090615663 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.105197692 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085004361 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111243274 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107421078 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087218892 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10533866 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084873058 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104642926 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080525352 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104456902 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105022544 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091865867 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105365305 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085357857 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112483885 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084605429 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.104191825 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107639732 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084537792 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111751747 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080697802 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10423149 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08775863 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105551186 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098767758 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08471893 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101274253 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08787019 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103418611 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080508639 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112825492 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092076971 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105778003 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101622791 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08428533 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098707697 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080285039 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103342131 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086640716 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105732164 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.112634142 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08434109 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102097779 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.08068158 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10315922 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088394395 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106822884 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082579845 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100654217 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083803209 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109430577 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115172255 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087157813 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107568109 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09229974 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109524509 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085581331 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112755309 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084732173 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.112676718 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11870594 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.089387445 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108558247 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093754004 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116179988 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106070458 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082629952 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105742985 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08840634 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106506091 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089069434 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.109896466 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122720645 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091023006 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.106899123 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087271233 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.110210867 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086781056 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114874774 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10902744 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.090688063 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.113366802 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090313737 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118948629 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110821401 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094512307 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.111077519 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091073671 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106846911 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088236275 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.106005162 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086186095 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.110145898 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108828758 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094107182 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11509603 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084903285 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116710227 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112557289 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090751051 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.10100577 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084536501 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103893071 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080223244 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104552509 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102273976 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.083529403 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102395223 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085363025 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103872376 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092101297 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106577766 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086511291 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104157964 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079551111 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106486108 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10643249 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087201148 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.10124531 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086142484 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105015913 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091904749 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111820169 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104468444 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087118849 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106550253 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086732636 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100129545 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091926524 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.1027616 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087754701 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104306436 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085393774 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105920147 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107258507 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092567213 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105764625 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087418677 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11719304 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107018235 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.083010116 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101582787 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091403463 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102948395 seconds)
  done (took 58.789976454 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149803823 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082740638 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100687605 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081277958 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113990639 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100913944 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080909718 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100752717 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082033434 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102771096 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080249722 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099276378 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110238978 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126683547 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09481695 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105038008 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099998736 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082417254 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099185779 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08255097 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110856129 seconds)
  done (took 2.895863688 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106688124 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118639331 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116019986 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121728209 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090836057 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117354777 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115217494 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117285712 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100854726 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111800831 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120393442 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116433714 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093784787 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111324174 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111215497 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095695174 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120353946 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110443655 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117757335 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09709907 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114939285 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116604111 seconds)
  done (took 3.25119954 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085785662 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103157673 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087156467 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09795707 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084764438 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098741855 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088950053 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102394495 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089229028 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103604113 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.103457474 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.084216225 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.106727906 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080257634 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103031182 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083257073 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154948891 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108278542 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084052462 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105990186 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.100325646 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087725913 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099181997 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080921671 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102952077 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089688567 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105953344 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082789059 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104052394 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083300038 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104567188 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.101149781 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.086778742 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105112791 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083325306 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102556002 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085719297 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103396969 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081314884 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.10221795 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085581198 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.10065135 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085609273 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105474577 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.102221826 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083018718 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.106358371 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085035117 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.099590074 seconds)
  done (took 5.513597922 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106253164 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163305395 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087417444 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144298008 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121589231 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114627222 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089303871 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144653044 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103942508 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084323935 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125126618 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.12175772 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104873698 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091898563 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111751164 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10484032 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088011507 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103868268 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109840993 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085592992 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109233983 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092925255 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120775605 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120106648 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110027856 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084514279 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104992812 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110559109 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09877628 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111174438 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110840255 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091813082 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123727897 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110410179 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104255049 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088711151 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124152732 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105678079 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090180287 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102504514 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088990849 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112075173 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112261574 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123685674 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086848413 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110233293 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086464869 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102881678 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118991053 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088765616 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113895501 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121483447 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109933591 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08575441 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110037575 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121936485 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086119572 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104353105 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10851765 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100590094 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103700039 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109961852 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101889295 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107450801 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114515275 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101624567 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111578641 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109572104 seconds)
  done (took 8.228579009 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095694356 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112512422 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123433485 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122446832 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092734987 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112913439 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112543266 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093789178 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113059653 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118524066 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112824283 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13728918 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087847164 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116354322 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113259353 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094271041 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11423453 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113794081 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092445207 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113754887 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113085112 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122866785 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094329359 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123396501 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144148651 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107534033 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093787593 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113055469 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12361305 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113028796 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126364324 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093803368 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11175727 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122583561 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126912844 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093279702 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104071924 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112252164 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093834265 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112364919 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107704427 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103301643 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113839208 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107117861 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094368473 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113233358 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123259033 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127037219 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115866198 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099789962 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113562964 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123010362 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113041955 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09349397 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124040043 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.150602955 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122657611 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123727816 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113122845 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103123436 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123579423 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13207322 seconds)
  done (took 7.803394353 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110510672 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116767339 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119606861 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101507194 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084684689 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110745574 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084130447 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104066886 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115825513 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096839109 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118310229 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109361633 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094031051 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119685871 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110697529 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114020927 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090700656 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111201201 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116220939 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.111026638 seconds)
  done (took 2.965093917 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095600097 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125731199 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087277873 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113912002 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108931194 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093525841 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109088689 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108676495 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087925871 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1095617 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09824577 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11867584 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107182933 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093215074 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.119253532 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112802956 seconds)
  done (took 2.513857317 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098155059 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119829935 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122410046 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086516241 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104880996 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08207366 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107812084 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10259772 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08341791 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122850031 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087277143 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110510927 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107588033 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085420481 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102556353 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090154065 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10214788 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08433243 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106557893 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.124278447 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097521529 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105331694 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108520545 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08953714 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106901954 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092234592 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108264272 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10537802 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085203894 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107299788 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087146831 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114906302 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10307748 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085738977 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10414984 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083996026 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107105377 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086599152 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110179659 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106467166 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085132116 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105659384 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087474085 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108101661 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.102741014 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.087361383 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102264003 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092316612 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105064295 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08673977 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107206116 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108679547 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.088446683 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117722571 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110402693 seconds)
  done (took 6.350280729 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100347273 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110430335 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082428208 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104362664 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090309326 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109241734 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110816329 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08981434 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108148377 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08477619 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109067129 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09091488 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108642837 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110462075 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089629856 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110983678 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081304894 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107855426 seconds)
  done (took 2.629409332 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092866668 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106894678 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094718614 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107341604 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086686201 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11087292 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082002699 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105406154 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104554579 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08821441 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106801351 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090041766 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105862427 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089640765 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107412555 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085858969 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109924606 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105018632 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087250416 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102435053 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089217786 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10533648 seconds)
  done (took 2.99687768 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.121519481 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126971249 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093689471 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.23273985 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.105694259 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134155779 seconds)
  done (took 1.648046546 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111148139 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122716534 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107680245 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109042939 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117398676 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108571992 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089512514 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109902755 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119209409 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105117482 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109945925 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120568928 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119123864 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098976782 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116977932 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116550168 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109444424 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090368086 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107801538 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131435271 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089261729 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120073895 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110336571 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08883868 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108789973 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119246666 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120704992 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125072702 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089684362 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118966658 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115974074 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08849094 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120790205 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125429909 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110594347 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100817484 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110145019 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1305791 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117549848 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099121407 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110978963 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116555596 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098771848 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115148079 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119535191 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110600824 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095225209 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110241394 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110178141 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138019961 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097514803 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120021885 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11694933 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119915051 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099827545 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.159739571 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105289744 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119747243 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117315166 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125850219 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119809194 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096750789 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1189327 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125534718 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117497657 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120697988 seconds)
  done (took 8.276548608 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104600948 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127670628 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110404192 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125069836 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100190091 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110711167 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110295567 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090247129 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110284747 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10901889 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154516898 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089921097 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11978949 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119180849 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088216324 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110668822 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110386996 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119464702 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089049088 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138249883 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109685041 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119721529 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119369814 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09924598 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125206508 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116759831 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109436342 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090246952 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110931163 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109576623 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096087224 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110155533 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119761584 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088420246 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12031994 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110495732 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089719398 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116315083 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109777991 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117147023 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099348866 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131318458 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110239842 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109370152 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104597105 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110966273 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110643615 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088643106 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11168502 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108696598 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104626075 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126997415 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126548251 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120140302 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110023458 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089029135 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111137013 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110491698 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090592855 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118359714 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120233655 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088762732 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137570139 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111344495 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109776503 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119667328 seconds)
  done (took 8.149012 seconds)
done (took 157.191360242 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100080968 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13875614 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098687483 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171027737 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107928339 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121564879 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139186719 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099942322 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107795768 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087848988 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108667658 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088453728 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172955067 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107697871 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087733479 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109489194 seconds)
  done (took 2.688214324 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.203144445 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.257432903 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104019652 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108052825 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090201114 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111836854 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105997924 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.093249239 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110980784 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087526026 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110718866 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088714083 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106919695 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087279091 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.112617215 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.090432849 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108845283 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.110865543 seconds)
  done (took 2.934894852 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115132205 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148474674 seconds)
  done (took 1.10886247 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121737042 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183907733 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299718995 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157219414 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120848433 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129374937 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158400676 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132206034 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.202221844 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125993746 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124908861 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099215523 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142714024 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117574818 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095607263 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120856399 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144135349 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.0936645 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.1171776 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11870773 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118962465 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107616917 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11816363 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096308111 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183795814 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121682923 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107180627 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087259879 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118485397 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096804277 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115204384 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128284932 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.121249868 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.162305129 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.12432858 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.162913493 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119264008 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093515895 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116371491 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093433083 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121453363 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120848073 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10596115 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120520834 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.108788916 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.099869016 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108048981 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08751973 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116456461 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.12163433 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.09541362 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115563559 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.161488221 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121879579 seconds)
  done (took 7.649832428 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.810026955 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.166857956 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113780013 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.881048477 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140855905 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126143029 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.778888694 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13635165 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236205413 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.792120081 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108591223 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12706135 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23636656 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.243203816 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.967125018 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.320612663 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.682052726 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126947049 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151495029 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.157885628 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097181011 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139510896 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131790733 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.432983033 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116878039 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092074407 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118829627 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121636161 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164423309 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126939846 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094327315 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203303124 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.25672688 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.187205188 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117847492 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111580646 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09048037 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.194673146 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.253748713 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223170183 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184957717 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108654344 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090220271 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123886663 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131734632 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088152244 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188578636 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.180874143 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.177477578 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116756824 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100286695 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121645008 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121999193 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.169130469 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.124812801 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.324518388 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.331334199 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090275706 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121315863 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127935481 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.247624439 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125334448 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233555549 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137805581 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19712613 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113281481 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815030328 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.174317146 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111170748 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098133649 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119771959 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116486869 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100767777 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170412672 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.395934203 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124305768 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114570076 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091598502 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.231096428 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.105214115 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113191114 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166789763 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117614114 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097474718 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12662252 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123975262 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.174728841 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.237314122 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123733686 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12124839 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094095026 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125334578 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.118017077 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215948405 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226143515 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.166394895 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.235985726 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10190871 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.190597749 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.173183029 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121252011 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177802284 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117967246 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105528824 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124053511 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224302755 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14931206 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.12396842 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097359242 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118676071 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150643589 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128198501 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097356343 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.196214707 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.463486228 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.172083184 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.11081689 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.130037851 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098865544 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.164844291 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120175266 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265532932 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120923244 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.174152175 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118153213 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089785112 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120385101 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.168964723 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123281217 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097950837 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124150894 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120282729 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.243241775 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224500305 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124121326 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229258461 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.189834353 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121279253 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177967282 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12088102 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.173003779 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121209685 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098371014 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118194532 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806571464 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123268496 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098036074 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11724005 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190941307 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090078738 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126476304 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.127040675 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087393588 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785570706 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.130815029 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.123200458 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104499594 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120286766 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118975797 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096633909 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116537765 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168505777 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239868651 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122162503 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096814034 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.128512285 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.165647653 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118136098 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126638861 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125864474 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106900716 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121793549 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115067511 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105571384 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196337638 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167279513 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229059965 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.583899909 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113550015 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126065204 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237030334 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091550182 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29927724 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119088824 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.210619067 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.192606939 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101302848 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.328272879 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.192473433 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190593284 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107760077 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.201104315 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088301537 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119093592 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.171103719 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113985069 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096585717 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.191024219 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104351511 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12514179 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.996014635 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089826581 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253209129 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088400009 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.197594624 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096282404 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124260572 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.303011246 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091079871 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131117277 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16885609 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116683372 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126884375 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.703823036 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.127244115 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121256235 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098942147 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.231634208 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166916652 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121125327 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119441568 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100080035 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.19203247 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.214132951 seconds)
  done (took 44.778186908 seconds)
done (took 60.00440279 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276873971 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216756957 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.26307222 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172995187 seconds)
  done (took 1.885746418 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173561688 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150999663 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121199957 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109678158 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151457516 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086901191 seconds)
  done (took 1.672851926 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.365588696 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278762588 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244229001 seconds)
  done (took 1.771711831 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.252393513 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.272137839 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.335682217 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.426327711 seconds)
  done (took 2.264568305 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.202466023 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132990672 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112035163 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105702223 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.199392569 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.241874931 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143274946 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.170313366 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.123998934 seconds)
  done (took 2.359248579 seconds)
done (took 10.839593085 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.160083134 seconds)
    (2/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.096310978 seconds)
    (3/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.128248481 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.171366137 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.22846408 seconds)
    (6/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.171170941 seconds)
    (7/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115880362 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087781517 seconds)
    (9/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.234468349 seconds)
    (10/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.231185361 seconds)
    (11/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116149753 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.092677582 seconds)
    (13/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.142814746 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124365568 seconds)
    (15/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.219217326 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095007582 seconds)
    (17/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.258691313 seconds)
    (18/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.10657581 seconds)
    (19/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.196518129 seconds)
    (20/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.125828159 seconds)
    (21/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.169689728 seconds)
    (22/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.214044242 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.124848534 seconds)
    (24/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.232386967 seconds)
    (25/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.102604853 seconds)
    (26/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.204597802 seconds)
    (27/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066981037 seconds)
    (28/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.194863468 seconds)
    (29/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.120517746 seconds)
    (30/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067865433 seconds)
    (31/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.208975129 seconds)
    (32/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.139660541 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.228725255 seconds)
    (34/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.101017676 seconds)
    (35/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.192812123 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.119768621 seconds)
    (37/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.170126687 seconds)
    (38/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.144274862 seconds)
    (39/286) benchmarking ("sort", Int8, true)...
    done (took 0.225037048 seconds)
    (40/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.144466516 seconds)
    (41/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.099372018 seconds)
    (42/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113137804 seconds)
    (43/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.222837823 seconds)
    (44/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091948777 seconds)
    (45/286) benchmarking ("sort", BigInt, true)...
    done (took 0.235530125 seconds)
    (46/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.231639429 seconds)
    (47/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120719391 seconds)
    (48/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.141962757 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.114302347 seconds)
    (50/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.203828636 seconds)
    (51/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117498507 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.089197744 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.136829399 seconds)
    (54/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.110993689 seconds)
    (55/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.165427778 seconds)
    (56/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090151118 seconds)
    (57/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.102328744 seconds)
    (58/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117210124 seconds)
    (59/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.164117378 seconds)
    (60/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.092360643 seconds)
    (61/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.071144413 seconds)
    (62/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134992348 seconds)
    (63/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.149374719 seconds)
    (64/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.174203053 seconds)
    (65/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.125930409 seconds)
    (66/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.17389671 seconds)
    (67/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.095757576 seconds)
    (68/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116209889 seconds)
    (69/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091065783 seconds)
    (70/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.141524946 seconds)
    (71/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068603091 seconds)
    (72/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168051218 seconds)
    (73/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.234105879 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.141185702 seconds)
    (75/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.115890388 seconds)
    (76/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.121793553 seconds)
    (77/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.187102657 seconds)
    (78/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136591279 seconds)
    (79/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.169108812 seconds)
    (80/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.110909456 seconds)
    (81/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.150611908 seconds)
    (82/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.133628641 seconds)
    (83/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.191783407 seconds)
    (84/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.067409612 seconds)
    (85/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.122666261 seconds)
    (86/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.100593853 seconds)
    (87/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090669972 seconds)
    (88/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.090327476 seconds)
    (89/286) benchmarking ("sort", Float64, false)...
    done (took 0.173366103 seconds)
    (90/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.1917513 seconds)
    (91/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068474639 seconds)
    (92/286) benchmarking ("sort", Float64, true)...
    done (took 0.235536607 seconds)
    (93/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.183604852 seconds)
    (94/286) benchmarking ("sort", Int64, false)...
    done (took 0.08775739 seconds)
    (95/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.159205818 seconds)
    (96/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.154850559 seconds)
    (97/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.14970895 seconds)
    (98/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.170999213 seconds)
    (99/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.117295958 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088550338 seconds)
    (101/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.119081443 seconds)
    (102/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069817935 seconds)
    (103/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067210217 seconds)
    (104/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.118311898 seconds)
    (105/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111179935 seconds)
    (106/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095448538 seconds)
    (107/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.117797205 seconds)
    (108/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.099249543 seconds)
    (109/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.089378388 seconds)
    (110/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.089242702 seconds)
    (111/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091127047 seconds)
    (112/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095455574 seconds)
    (113/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113355947 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.111973671 seconds)
    (115/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.174338679 seconds)
    (116/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.176892694 seconds)
    (117/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.185250754 seconds)
    (118/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.096029531 seconds)
    (119/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137663094 seconds)
    (120/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.176995188 seconds)
    (121/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.1608982 seconds)
    (122/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.138157497 seconds)
    (123/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067032061 seconds)
    (124/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.142862013 seconds)
    (125/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066043415 seconds)
    (126/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.106947218 seconds)
    (127/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108026349 seconds)
    (128/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.187337052 seconds)
    (129/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.139673816 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.088161737 seconds)
    (131/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.127639768 seconds)
    (132/286) benchmarking ("sort", Bool, false)...
    done (took 0.184440052 seconds)
    (133/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119801388 seconds)
    (134/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.143873699 seconds)
    (135/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.176726967 seconds)
    (136/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118993583 seconds)
    (137/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091265814 seconds)
    (138/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.151025087 seconds)
    (139/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113572819 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118667738 seconds)
    (141/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.12380658 seconds)
    (142/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.0772307 seconds)
    (143/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118974436 seconds)
    (144/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.153474718 seconds)
    (145/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.121763501 seconds)
    (146/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.068177284 seconds)
    (147/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.070428383 seconds)
    (148/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.120406985 seconds)
    (149/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111269977 seconds)
    (150/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088666555 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.110285663 seconds)
    (152/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068874601 seconds)
    (153/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076443142 seconds)
    (154/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.110411059 seconds)
    (155/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095957087 seconds)
    (156/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189831627 seconds)
    (157/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.112161457 seconds)
    (158/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.085529496 seconds)
    (159/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067260825 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122104624 seconds)
    (161/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.124023474 seconds)
    (162/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091728007 seconds)
    (163/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.116065319 seconds)
    (164/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150574455 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120963263 seconds)
    (166/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.100237643 seconds)
    (167/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.111705365 seconds)
    (168/286) benchmarking ("sort", Float32, true)...
    done (took 0.236308482 seconds)
    (169/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068869109 seconds)
    (170/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11633469 seconds)
    (171/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069073732 seconds)
    (172/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.102699786 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.089233628 seconds)
    (174/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.114952218 seconds)
    (175/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.113315295 seconds)
    (176/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.190531978 seconds)
    (177/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067377925 seconds)
    (178/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130474988 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117803963 seconds)
    (180/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.095999891 seconds)
    (181/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119227112 seconds)
    (182/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068472556 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120237065 seconds)
    (184/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068462043 seconds)
    (185/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.173235544 seconds)
    (186/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.151049122 seconds)
    (187/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.15359662 seconds)
    (188/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.068130536 seconds)
    (189/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.093662867 seconds)
    (190/286) benchmarking ("sort", Int8, false)...
    done (took 0.192320819 seconds)
    (191/286) benchmarking ("sort", Float32, false)...
    done (took 0.17594763 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 0.227093556 seconds)
    (193/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.150399755 seconds)
    (194/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.092402071 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087750546 seconds)
    (196/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.164532133 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.099142729 seconds)
    (198/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.092838333 seconds)
    (199/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.068513201 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.112049576 seconds)
    (201/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.06874126 seconds)
    (202/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085851895 seconds)
    (203/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.155303595 seconds)
    (204/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067170825 seconds)
    (205/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120152405 seconds)
    (206/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067593217 seconds)
    (207/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125587732 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097266374 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111854727 seconds)
    (210/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118238286 seconds)
    (211/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.097957208 seconds)
    (212/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126582803 seconds)
    (213/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.291489001 seconds)
    (214/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066834139 seconds)
    (215/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.110647799 seconds)
    (216/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126749917 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09467783 seconds)
    (218/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.111373062 seconds)
    (219/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.068843993 seconds)
    (220/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.077284479 seconds)
    (221/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.091371573 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.087748643 seconds)
    (223/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.098683605 seconds)
    (224/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095526709 seconds)
    (225/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.110888786 seconds)
    (226/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096576083 seconds)
    (227/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.118125938 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088343749 seconds)
    (229/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116304903 seconds)
    (230/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.0844114 seconds)
    (231/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084134264 seconds)
    (232/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118733975 seconds)
    (233/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.175321268 seconds)
    (234/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090774017 seconds)
    (235/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.137761616 seconds)
    (236/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087979685 seconds)
    (237/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.153969961 seconds)
    (238/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067815388 seconds)
    (239/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.113731575 seconds)
    (240/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.164479049 seconds)
    (241/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.101913728 seconds)
    (242/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067818845 seconds)
    (243/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.091368151 seconds)
    (244/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.11316176 seconds)
    (245/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111710983 seconds)
    (246/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.067072748 seconds)
    (247/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.091706033 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095303922 seconds)
    (249/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111876429 seconds)
    (250/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.07777102 seconds)
    (251/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.110182518 seconds)
    (252/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097904285 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120068838 seconds)
    (254/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068836054 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110883411 seconds)
    (256/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095228461 seconds)
    (257/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067851632 seconds)
    (258/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.111483557 seconds)
    (259/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068022053 seconds)
    (260/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.099210106 seconds)
    (261/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102422326 seconds)
    (262/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.091220482 seconds)
    (263/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088344246 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109807343 seconds)
    (265/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.158913964 seconds)
    (266/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.091126484 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.097430197 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.10992454 seconds)
    (269/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.084314168 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109985216 seconds)
    (271/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069383591 seconds)
    (272/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110197259 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09712639 seconds)
    (274/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.067872579 seconds)
    (275/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137218249 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117387158 seconds)
    (277/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069351004 seconds)
    (278/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092735649 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.112549186 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.110457283 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089598006 seconds)
    (282/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.12077654 seconds)
    (283/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069127879 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09475038 seconds)
    (285/286) benchmarking ("sort", BigInt, false)...
    done (took 0.246801799 seconds)
    (286/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097121074 seconds)
  done (took 36.538828492 seconds)
done (took 37.427424952 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102374572 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149924622 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098317311 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138101411 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125190332 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094115769 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120135711 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099597118 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12545575 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.1270765 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100485713 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094103453 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100411528 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122498555 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098254824 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140181343 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125957123 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095554054 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120237458 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086760455 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.12070012 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086805662 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112738562 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.0698332 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123504742 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.096413802 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117908909 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121650319 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088155002 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.11098615 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094696963 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119285139 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087791463 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125789819 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095032998 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120822142 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.122280792 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098932903 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.11303193 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089369896 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11963655 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088390467 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118843029 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096807976 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117102149 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094005648 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120283479 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124832641 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117390108 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115997283 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.097732171 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121942255 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.098630194 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119755642 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.115405414 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.098064723 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.115997652 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117085066 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121154698 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092684493 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119340643 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096025103 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117657761 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.120249045 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.09810766 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121682747 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100539918 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117580649 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098212826 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.118432897 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.111191704 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097237415 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114549808 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089473284 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119437612 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.099904391 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110883068 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094311746 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118082329 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09427752 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111091148 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090648665 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113925758 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094574691 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113983013 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070592171 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115475563 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094697999 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111558597 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097400696 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118013843 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094104181 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113916171 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124102311 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.088719144 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.117182325 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.08858532 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.111308242 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091718028 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.115142784 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.088914003 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113995999 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.097865765 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.113371431 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095089267 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124500662 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089333502 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118834803 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087584255 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.112491753 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.127179723 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099734697 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.112888606 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093916676 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.111239079 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.096752338 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111130354 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089671145 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111299768 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088397333 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117213987 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087676172 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114708449 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095613949 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126499827 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.111276886 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.09217374 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115277149 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089330273 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.117431777 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089001496 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.112271961 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.090723282 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.101741383 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091749184 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.11157986 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.096427107 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11451401 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098315658 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113027688 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098525199 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116823229 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095186317 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117874328 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.088097347 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.098913562 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094694763 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115064168 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.091208418 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111607675 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.09114174 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.112004019 seconds)
done (took 17.166864942 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.089377568 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185740667 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153951694 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142943776 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109190458 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113547481 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123893074 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.121014843 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115109685 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144671409 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.112400185 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133637482 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149432511 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088337068 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112635245 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093903516 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114503702 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.128032981 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124896237 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134528191 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166082702 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.088539793 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148532443 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137676829 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122161605 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.116041611 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11356683 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093406899 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116101711 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.128307686 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110876614 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116602624 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089975897 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13467488 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.106015749 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122194221 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.112556312 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.097271326 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.112654692 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.089802884 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.144020976 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134280826 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.095026827 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118883192 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09367043 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.11579888 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090936268 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122578712 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.124552224 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.094412844 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128791929 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159314473 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091874874 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124561817 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.111253377 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.10067909 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121973193 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09198555 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.114157774 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092180969 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113076135 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.093181838 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12879843 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144416923 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.116286497 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.100475663 seconds)
  done (took 8.714685442 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107971669 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14052397 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.107270066 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.133041139 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112715304 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.091075018 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113740645 seconds)
  done (took 1.753691984 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090414151 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135630247 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113146624 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137291147 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134244415 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.114064255 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125333972 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090520886 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134848115 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.091131913 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136459429 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151579454 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091373889 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122711587 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139019017 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090843095 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138313297 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089553773 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119225135 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.139405102 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094525678 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135572577 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.093098284 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114631793 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104597051 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115422671 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164467338 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095215946 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116551824 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09393477 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113794014 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.154112996 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105226041 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126907754 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090990361 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132106851 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.12906525 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089140616 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.127157556 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095562569 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.12933829 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091198086 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116775568 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088582156 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120167978 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125307541 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.094204899 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.133457397 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093422554 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13514878 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09159233 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129305018 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090089478 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11878959 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091831039 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120970133 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124811138 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091697635 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135300327 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091771749 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132814494 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132344585 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105405792 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132966606 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09339133 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128994661 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105161566 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120210599 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116405829 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094260748 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132078352 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088757676 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116155575 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101741358 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118168402 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114103798 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138652735 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11687178 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101253137 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115994884 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.09135163 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114938395 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113705552 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119870218 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115386787 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.095041177 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118652686 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.088562056 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114645018 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094831273 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.113787446 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091947654 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118857989 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.091776729 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118289009 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107554866 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.117473787 seconds)
  done (took 11.970487439 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092590422 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115977335 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095274693 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116582409 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09211734 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116734432 seconds)
  done (took 1.587101139 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.118678944 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119020687 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.106497216 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122518586 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159828901 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129932736 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.107264668 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125635727 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109925566 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12887969 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.13065362 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107716919 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137108123 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122044198 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.106325201 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121647375 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.131811788 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102850176 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12810383 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098868116 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139541668 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122420437 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098356737 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.13414304 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11982371 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097739755 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129252193 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10399607 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128759336 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125816663 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097803748 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120115173 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.12281981 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.100404957 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131163134 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09722207 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122899963 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119330625 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101948079 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119694762 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.131911221 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099176771 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128481753 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096472039 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125334635 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122769481 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096501856 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126431164 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.130798496 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095286675 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120548333 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.098881776 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119750623 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120796963 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.09856959 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128029559 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096004712 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13390712 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124435754 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.0980672 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119657724 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094846604 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126652857 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119236443 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106659423 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121101352 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123091212 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.098789975 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124084353 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097764152 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121086185 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120167785 seconds)
  done (took 9.370339838 seconds)
done (took 34.334593473 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.697349606 seconds)
  done (took 1.648298955 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.823692659 seconds)
  done (took 1.776767438 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.096514789 seconds)
  done (took 18.078848091 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.498096851 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.595930671 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.993407502 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17269756 seconds)
  done (took 3.21590693 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.939650868 seconds)
  done (took 1.912637 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.285321284 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.237425287 seconds)
  done (took 1.481629616 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.761191993 seconds)
  done (took 1.730323468 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.452910086 seconds)
  done (took 2.411208248 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.325280604 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184427207 seconds)
  done (took 1.477787108 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.553757189 seconds)
  done (took 1.519737603 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.076681356 seconds)
  done (took 11.046865511 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269195044 seconds)
  done (took 1.251173115 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.30413635 seconds)
  done (took 1.275104132 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.471324795 seconds)
  done (took 4.442222791 seconds)
done (took 54.225841851 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10026944 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127639069 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103688859 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125125009 seconds)
  done (took 1.422097271 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.104030375 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121843328 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103429179 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121461933 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.128443143 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.098072224 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123660431 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102917244 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121177684 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098031857 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122047727 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121105512 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101204013 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123932672 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094143581 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125277954 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125413235 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.097379385 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124935279 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098417151 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119265337 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098435633 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126149488 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.11922612 seconds)
  done (took 3.694018698 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101160731 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.1192559 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097276596 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119227689 seconds)
  done (took 1.415244392 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101344008 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132065549 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.107634226 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126474051 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132385247 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.108472102 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118832548 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094283456 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119655955 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101586193 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117111367 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140136483 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.10865887 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.126419977 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103534485 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115523116 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.09290041 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132935104 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126027104 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102024775 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119578828 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101351893 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.117493823 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.11085458 seconds)
  done (took 3.736933961 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.1724234 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128515638 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140051091 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096899393 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161194121 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142500908 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090074179 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14169448 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089726092 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131920582 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119138957 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.136329419 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130940055 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08957582 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114669007 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.089161362 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130226233 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130485255 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092805103 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128809401 seconds)
  done (took 3.443104202 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099608205 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118228105 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089875207 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116853723 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.102022379 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121676228 seconds)
  done (took 1.626899795 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092535575 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115215876 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090958478 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114821572 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096271493 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116358579 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090296187 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115750679 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091833666 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114809277 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091257623 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114021432 seconds)
  done (took 2.22282618 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.50823165 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122111752 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120980212 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090628851 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123385233 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091406302 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130850398 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094781123 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142670083 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090148783 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117163672 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.120157143 seconds)
  done (took 2.732067833 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240562931 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127251355 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281375717 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367195561 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15858762 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166623719 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279371138 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164533779 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195726865 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152239494 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227325311 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200224109 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154286111 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194142901 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139878235 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146482258 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191744023 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253998825 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154301331 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214095779 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182788142 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169896457 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182721162 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151925182 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1389349 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163445818 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122521405 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10570857 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236718566 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182335124 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221112749 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164519653 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148670036 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206378998 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236098402 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1970866 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282474348 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134998695 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.169171681 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170535275 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230710425 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139947301 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23811806 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158047815 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106154612 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226619878 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163820876 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177356535 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149212334 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139566008 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20118141 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244067346 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.188916317 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139869567 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300920163 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151432332 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.160345184 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191796669 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255507334 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227344507 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193622144 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121546747 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190450111 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192727402 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18549611 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.155055454 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.204364156 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149792554 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186678722 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192986469 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170351454 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179543779 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.211285108 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138514971 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172536766 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176300618 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172463147 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264821001 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189413503 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12310709 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172006934 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150745712 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105321502 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.197209271 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126356266 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218264102 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145753733 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165656627 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212590147 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162747052 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16227746 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196648705 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215558045 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149233869 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084508774 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155501507 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156239282 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176068102 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141907286 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160198993 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158957619 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.105399043 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171212365 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126041475 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18730612 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.12031959 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171415827 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188455609 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.12844653 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16353494 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152661769 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125339313 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205722122 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20074145 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14135494 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107780676 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236255136 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183583645 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144034634 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181367053 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201743186 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146766834 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151322249 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201368851 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249102913 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141879484 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205459349 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149953487 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136649834 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106617197 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210682252 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158000161 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.136933301 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134638534 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184704836 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232304707 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099547032 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139436715 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227236243 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109134254 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134215511 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157269755 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149385279 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.11145381 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144742015 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.147660284 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178384978 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20818847 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129220789 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167112418 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149142239 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236501989 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141823691 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152834851 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12469653 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123304974 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191441211 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227439432 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105764587 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235445643 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170974794 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201012417 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170368136 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136481101 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18087603 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132147587 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094532836 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224048319 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168366368 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162852267 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19705468 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221926365 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.178890343 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.185899225 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169876745 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174033365 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168218851 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155705782 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140622134 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163159926 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160036682 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.098021874 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142356377 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135637647 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151055155 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117122431 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134471952 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226729143 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174098386 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192231077 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160981582 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150323053 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184497115 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130167194 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179922927 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178375324 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149045462 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199030523 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221387741 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191803053 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145618958 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203296947 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122193646 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099586557 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14469374 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169698865 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136183118 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136316941 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165467065 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185046042 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179337577 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173605167 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235833895 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176549622 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194530723 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.124042673 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143415193 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207128172 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181646443 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.15791991 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140418147 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15289027 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180958939 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151501708 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259553431 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169063002 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178012292 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202749609 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153888382 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134352657 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153278945 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181347682 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156382045 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174173505 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148666435 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139411042 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156240345 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.105658378 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162160882 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20618307 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138025799 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211612208 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150652041 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189627642 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128811483 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16573256 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163922117 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165007063 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083225254 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173640099 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223415804 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117289101 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163636792 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212515876 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105630046 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.31161193 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23079295 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193340905 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140084439 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158740004 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165033092 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163997397 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168184676 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180681168 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16209332 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19053849 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161609976 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136880106 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111546452 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150911817 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154658045 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133785985 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147695111 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178636014 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.111965046 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210347987 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155671649 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159944036 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173618601 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.123931364 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146652285 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153169696 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2181426 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214424672 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21494349 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152157564 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.176078398 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236754461 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099789926 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134600373 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133590561 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17992195 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110721658 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223376337 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189510788 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226676371 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18785738 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179884471 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141765028 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.094456791 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159915745 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170961709 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23286195 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14870971 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.150051885 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200758869 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.137560603 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106571717 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168935835 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312305623 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122130807 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217830441 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081599406 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280674556 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126860989 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106459948 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165611578 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234610143 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137923859 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.154342996 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170494335 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164309485 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165950907 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151412997 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219359638 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21535468 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229643688 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185384904 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106821767 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159429558 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171420775 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21650125 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158428888 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.11247042 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235828548 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19699376 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194390067 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144657928 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170723421 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169107337 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161474862 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217374162 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109266269 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236295852 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107832512 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223189121 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156099799 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139149043 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176873496 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191247387 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142744146 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184651728 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185699562 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136625437 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135612022 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162745569 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179679821 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150916587 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127743097 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180465389 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098425694 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226315972 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266968809 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107649206 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156584794 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150292324 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13636058 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157101325 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160861464 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112527681 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.165988136 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19806538 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137097045 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18703798 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233847576 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173050309 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169107033 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146814492 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.689785919 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.104994915 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222253096 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122143601 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210848737 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123488814 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202854484 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135422171 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19670517 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199190347 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161859656 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232761772 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194728189 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.207482662 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106651626 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160248583 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158355348 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14714036 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156691268 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170200712 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162996058 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.148946761 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181999716 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166534522 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135442498 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114586639 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22919616 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121643046 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210811217 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182045673 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112816504 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201272888 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19300995 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135082725 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.176695678 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232464637 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116580421 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151802418 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136526923 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.152612465 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266936428 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.099168737 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192164343 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217637021 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160982519 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170928627 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147861662 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196293662 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159689811 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188222534 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144838902 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157627194 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159455565 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139235651 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130328432 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129383039 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191761323 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.123795545 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161730689 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166371878 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195868035 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124867297 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119495921 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310037174 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175597582 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217838737 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137575167 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137454581 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161444299 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120729544 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.207124922 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181395654 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136448131 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108777886 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137327853 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130319006 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137064063 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159268147 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194957541 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16268206 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238737487 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111081967 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283755476 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142579176 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155728796 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090657856 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134063159 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151233113 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120287917 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151724898 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222453143 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267434227 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.120940812 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.136345271 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15063034 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099158159 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13801034 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167544365 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166713322 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180569533 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145407909 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108984343 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1303406 seconds)
  done (took 82.775504477 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164696957 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133291583 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148517723 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203623895 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178511558 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272672135 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211171862 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256019166 seconds)
  done (took 2.643232061 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095347036 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14772016 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158088742 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.135370631 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092925986 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121321647 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.339665198 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134487456 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.09182716 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.148500928 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172062219 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095602824 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.557293963 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.092298117 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121249825 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108913 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.09359034 seconds)
  done (took 3.769158669 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.157120923 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.477170017 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.907383774 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.196095272 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.179632836 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.120936702 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.678179532 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.118468254 seconds)
  done (took 11.907458973 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.117415945 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13772549 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.126048346 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.154588595 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.143079246 seconds)
  done (took 1.756128699 seconds)
done (took 124.110767735 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098742763 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129200257 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099447246 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131371855 seconds)
  done (took 1.519747199 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.096412809 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071803435 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101626386 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075658458 seconds)
  done (took 1.416007868 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.191246359 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.170821938 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.390854706 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072973871 seconds)
  done (took 1.569058344 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.116507725 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133896889 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105829388 seconds)
  done (took 1.438098348 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10710537 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129927358 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104165363 seconds)
  done (took 1.420651165 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.1076807 seconds)
  done (took 1.186526361 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.109839703 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.13820526 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110637807 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136785744 seconds)
  done (took 1.57458069 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100075956 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127429285 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110239576 seconds)
  done (took 1.414820648 seconds)
done (took 12.973911334 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104513598 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.425789308 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413683565 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111731725 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.725060518 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382243789 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.071368438 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147658886 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167980533 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095004201 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140949038 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673839893 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.026233032 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.380769339 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.981563089 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.378249167 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679930827 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121317337 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120431241 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094993763 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.053794493 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094269796 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122938235 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093663855 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.706090798 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425777291 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096671325 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.37318692 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093672147 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127669968 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38404379 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123369394 seconds)
  done (took 17.005999114 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097012501 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175240787 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099824896 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123981591 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12465129 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096875209 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124800588 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095320195 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180936329 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123590863 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112412797 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121334992 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126650067 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097240759 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.145286186 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093609568 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12574505 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093887932 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121418336 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122581004 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113298301 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122068265 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096370824 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122919134 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09540859 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137065733 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123838643 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094284416 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12226001 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100214427 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128753975 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096042728 seconds)
  done (took 4.83712986 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142949515 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184011028 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128977372 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128852924 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170792389 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124620673 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201062379 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147654399 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184247327 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096263624 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140131818 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095541436 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157371236 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123028962 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116262863 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122914816 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098401523 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123271775 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093113187 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122859154 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141275197 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095171466 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123599152 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094563749 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124236211 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13729551 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097311464 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121527291 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094326323 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128412888 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101284388 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124894896 seconds)
  done (took 5.172442704 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099121059 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126877654 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111261286 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139998683 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095936499 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127106921 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098464768 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125067936 seconds)
  done (took 2.010267913 seconds)
done (took 30.108147409 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112875812 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127668055 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108630701 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135776831 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.104453976 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132717353 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092484217 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134840805 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134459579 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103701679 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13826482 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093313597 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123871479 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093667962 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136014419 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098754755 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133732531 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103466578 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134423784 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132653961 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096525975 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135053895 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104034645 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135157901 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105228456 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134340104 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138720836 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101403147 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123563865 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095920445 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125928462 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104729564 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125484001 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106592627 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128426932 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097729351 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124123839 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095621463 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133300559 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134536218 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100890372 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134964599 seconds)
  done (took 6.032993007 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108594707 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140631702 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106079019 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082406982 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117903701 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081376084 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139159493 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080586048 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111491067 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108464474 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075167915 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106819684 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079251703 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102010962 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078250784 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076036833 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109145177 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07669106 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07668925 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106326172 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08179782 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073580042 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108568763 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079971664 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.103955763 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083069179 seconds)
  done (took 3.583287957 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101275106 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135508028 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115125862 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185618359 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162659249 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100841656 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133536605 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.14064944 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11012631 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121300547 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097399579 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151073147 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110895701 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130422754 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.094115188 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138408766 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136853906 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095293051 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129186139 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114451215 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139857994 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103672996 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141639769 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134103632 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094013626 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124165133 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098342936 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137162609 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098555753 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133368225 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126741443 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097884748 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124781517 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106182373 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127897129 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094698493 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143176924 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13290503 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.102523698 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122701466 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102087673 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123631471 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11511942 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162798275 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.121047169 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.102403595 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125307403 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105558979 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.123069488 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111728855 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132823676 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093526142 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125643414 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092582931 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123764948 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136928504 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096261236 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124501375 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103980856 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.1283532 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106775986 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127145791 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110001423 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12238177 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130028983 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.093564975 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.123171565 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092605855 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14554763 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095965057 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163548531 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.124144271 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096741372 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.134314203 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101294476 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131472803 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094761178 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139571076 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133077222 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099024525 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.132197846 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.098922931 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.126156006 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.113032668 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.126224409 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095662847 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12494497 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100712806 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125520898 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095121452 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138567196 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.122047569 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098015136 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141440094 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094049174 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.1247579 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.101266453 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128837192 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.121524853 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107896643 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.12862381 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.095103786 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13459502 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093201666 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125811326 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104372554 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128840649 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.121055378 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.100578731 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129449862 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.094323354 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124448512 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097533065 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125953284 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.10297487 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131547095 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098906513 seconds)
  done (took 14.960054616 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229960322 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218624086 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190427575 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.297643256 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136283173 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116416291 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213295237 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156975076 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124047758 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.131844364 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.170904191 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182094865 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170791012 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180050348 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.17121167 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.124987644 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113120518 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165637414 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216358975 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292573761 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142731286 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103503388 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164283765 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161975282 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137779844 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.103878215 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.143825416 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135395139 seconds)
  done (took 5.806803331 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111302739 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155703576 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099900849 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14588383 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150778196 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094655802 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128966727 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.096048526 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13630771 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137645966 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095379135 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131289377 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101260778 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13443089 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124619963 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104589956 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13353743 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096283738 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126958727 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09906859 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.13462988 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.132053939 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.098791162 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122762551 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105223676 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12232338 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087431784 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145260571 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123394902 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116718481 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121951368 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102920955 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138127969 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094907455 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124638394 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096882608 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126517337 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.0962322 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125949353 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.093471013 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122664 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078557098 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123644313 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.138414498 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100738543 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110405636 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.102102875 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.130792048 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096368692 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122090168 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097437093 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.1266965 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097080258 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132186263 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098505996 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126277612 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097573971 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116471802 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101290671 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126774113 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085689278 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123148517 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099239318 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.120336515 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10258767 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129824398 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094080443 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127050816 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09911495 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129818365 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.126446686 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.102060356 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.12177901 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.098641251 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.126394873 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.101002561 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126665319 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093876053 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123899044 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095608449 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106203417 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.095422586 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075259316 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12765595 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.121641543 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.094958384 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.126028729 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.101518695 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139299749 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096003824 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13313637 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.123598751 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.094923371 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126813649 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.08445197 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.098076605 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141002565 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143290796 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094818054 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123421767 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.137762841 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.098430641 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122941262 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07812971 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102223131 seconds)
  done (took 13.089401307 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13269422 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154722865 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125935436 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.113771344 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158617414 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158948807 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102847247 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131683149 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097699507 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143737542 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.095425845 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133877977 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09512446 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139383176 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157622744 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105066136 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127066735 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109763065 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129985183 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171086122 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.114497373 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144433005 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141539463 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096644293 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129938501 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111868029 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162998001 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.139179609 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108934931 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.144134799 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110285024 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162741138 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144465459 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100090286 seconds)
  done (took 5.524580244 seconds)
done (took 50.080434985 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.18855253 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.415985173 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.181738054 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.053977766 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.202392206 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.20521349 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.191795597 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.181967058 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.75554867 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.182595842 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.417125335 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.662214612 seconds)
done (took 59.752201852 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.25651337 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.333545438 seconds)
    (2/2) benchmarking "String"...
    done (took 1.465316027 seconds)
  done (took 3.903898492 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.721357625 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.104619368 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.441451355 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.179570282 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.179326061 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.482509709 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.831571042 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.51200089 seconds)
  done (took 27.835337551 seconds)
done (took 41.824173138 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.179935076 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.224174456 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.21676705 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.158961519 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.310678907 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.215198297 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.429247296 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.214141741 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.195602233 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.160136871 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.198915078 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.194641366 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.208200901 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.437835325 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.1900098 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.181467874 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.242499258 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.673246289 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.560421898 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.200324849 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.199349109 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.184949095 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.200662808 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.182828212 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.209169003 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.176113151 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.18331833 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.178422731 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.391570644 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.178588808 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.289477652 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.634654187 seconds)
  done (took 189.506643655 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.1760558 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.274407211 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.363421821 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.235785058 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.799152869 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.375971738 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.304737501 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.871330731 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.192121607 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.176597636 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.493999596 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.177268292 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.541746623 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.217463594 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.205348821 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.244102492 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.37984516 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.526915341 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.211240577 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.335450858 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.192054046 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.468345655 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.414869809 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.434871417 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.189512471 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.279307503 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.231145688 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.175306547 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.369151111 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.336144134 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.198399081 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.188898518 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.729828848 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.027379738 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.195461676 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.183258707 seconds)
  done (took 149.819821919 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.173315144 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.172547452 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.172469015 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.202142832 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.173471569 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.669580569 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.670341689 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.672914449 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.282351973 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.288790789 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.373205739 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.175611961 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.262921036 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.185453538 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.17574118 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.188167593 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.213797117 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.172112109 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.172140799 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.662780057 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.187676311 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.30579545 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.337514871 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.185745165 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.19998841 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.557693184 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.171916239 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.200474156 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.489715809 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.214869778 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.171585127 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.464508018 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.99994696 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28307494 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.173769001 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.198726396 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.171978293 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.441519473 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.171360897 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.172300507 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.173946368 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.761683723 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.175753022 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.655760576 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.172830472 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.039925908 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.172971224 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.171896484 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.536093772 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.668066215 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.189582797 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.171062773 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.174806554 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.17611956 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.1716331 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.199578118 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.563587824 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.264452307 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.188110088 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.172043904 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.174801291 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.200610875 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.172234397 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.278172941 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.175778094 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.363746928 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.232001712 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.278387896 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.654517729 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.176209396 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.17286796 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.266622415 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.28877249 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.171863781 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.171958055 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.172916789 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.172390313 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.278628323 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.173259037 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.17383903 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.523700126 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.33365575 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.187663507 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.250779692 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.268186542 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.172790088 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.487814896 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.17705717 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.173902296 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.835629416 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266143029 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.174842118 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.174009694 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.174201549 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.524573137 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.657471101 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.32603939 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.176812652 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.543826685 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.178137216 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.542839711 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.646096532 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.761887698 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.178924022 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.281881782 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.336158863 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.189481447 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.174876941 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.246385125 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.179542977 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.230732819 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.178982823 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.17557149 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.56850748 seconds)
  done (took 359.113024393 seconds)
done (took 699.546012444 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.756910487 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.752832595 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.854310553 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.746357537 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.716670141 seconds)
  done (took 9.928221505 seconds)
done (took 11.030371653 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.34592534 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.346158371 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.230919074 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.346080211 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.208885065 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.360694087 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.326164152 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.199648311 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.268586672 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.247210335 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.267574084 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.22420704 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.20970857 seconds)
  done (took 17.683481075 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.478195575 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.478772311 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.241120903 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.480814379 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.217036182 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.478639695 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.37436685 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.38329746 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.38716338 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.20917164 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.190216403 seconds)
  done (took 16.022169595 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.48504873 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.479340708 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.244760734 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.505308041 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.219103665 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.480738599 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.377131455 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.388353788 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.387828953 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.209494128 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.190993357 seconds)
  done (took 16.070923909 seconds)
done (took 50.878946228 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.185548544 seconds)
  done (took 2.287982203 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.219080527 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.378164872 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.203056969 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.191956624 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.187203564 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.188326311 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.193064753 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.187532849 seconds)
  done (took 10.852360031 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.187024954 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.186722356 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.184323304 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.183793609 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.185934133 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.18386347 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.184244943 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.184336474 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.187085175 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.186932781 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.184660984 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.184566973 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.18774596 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.187618753 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.185326423 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.187383063 seconds)
  done (took 20.076061298 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.188020124 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.184715475 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.186085184 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.187092602 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.185538603 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.185637104 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.185669634 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.186312138 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.185414712 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.185023569 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.185888329 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.185889119 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.185834536 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.185216282 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.185923923 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.186637788 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.18554415 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.186442321 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.190442313 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.186215317 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.186754413 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.187233155 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.187886314 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.187393963 seconds)
  done (took 29.579622471 seconds)
done (took 63.899084788 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.767157348 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.67168707 seconds)
  done (took 6.545376015 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.189179352 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.18865192 seconds)
  done (took 3.484834354 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.188921042 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.188541336 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.18869227 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.189935487 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.189099507 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.188535625 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.189396533 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.189183479 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.188754383 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.188608449 seconds)
  done (took 12.997244282 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.189952466 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.188589144 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.187034295 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.189944697 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.189975889 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.187384445 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.189081934 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.190096344 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.189118942 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.187022359 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.190143047 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.188086632 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.189732621 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.18858753 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.190109962 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.187687831 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.187421383 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.188114627 seconds)
  done (took 22.505902435 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.190607974 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.190758794 seconds)
  done (took 3.489114392 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.188918037 seconds)
    (2/7) benchmarking "second"...
    done (took 1.188109349 seconds)
    (3/7) benchmarking "month"...
    done (took 1.188321573 seconds)
    (4/7) benchmarking "year"...
    done (took 1.189195504 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.189867688 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.188731041 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.187969874 seconds)
  done (took 9.429223746 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.191426712 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.363592193 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.462068932 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.78955413 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.191358765 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.19579387 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.053113978 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.195845077 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.197693775 seconds)
  done (took 13.748979529 seconds)
done (took 73.306792341 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.172168502 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.201930099 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.291581701 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.191752931 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.219316669 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.527234238 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.214581116 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.319663497 seconds)
done (took 37.24843925 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.186901494 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.172341109 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.796285386 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.168319707 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.17777554 seconds)
  done (took 18.423989 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.136762861 seconds)
    (2/2) benchmarking "read"...
    done (took 1.519682765 seconds)
  done (took 4.764627189 seconds)
done (took 30.486188098 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.193663534 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.190298886 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.192481673 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.190184348 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.193164783 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.191227622 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.190095554 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.192911186 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.192792486 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.193722351 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.192746967 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192737167 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.190510237 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.189978713 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.191276051 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.192895052 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.188864678 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.185027717 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.188149722 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.188092379 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.186695475 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.187595568 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.185007857 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.18606064 seconds)
  done (took 29.676472393 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.179770285 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.178630316 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.180082443 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.179714642 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.177739934 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.179797559 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.180290829 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.177259657 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.175126195 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.172666689 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.169344197 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.169299698 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.172401624 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.169752494 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.172797244 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.170321627 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.174014499 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164472416 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167379577 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.16494971 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.166483997 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.164664343 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.16458375 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.167303515 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.164806504 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.164498747 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.165418588 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.164571905 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.165072958 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.163390033 seconds)
  done (took 36.233323887 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.170033016 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.171080715 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.167164482 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.163472611 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.163759226 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.162673425 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.163702904 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.163295739 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.163382244 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.163098029 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.163638462 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.163411044 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.161170219 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.1606502 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.161070683 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.160655939 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.1618015 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.161695608 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.161302392 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.161682091 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.159953453 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.160507257 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.159433019 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.160387697 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.16069583 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.159966502 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.16053157 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.160833605 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.160546093 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.160755354 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.159916593 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.160217726 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.160827179 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.160209433 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.161631674 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.160471223 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.164500308 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.166904465 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.161285126 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.160909078 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.161402538 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.164197409 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.162649108 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.163296985 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.162089239 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.162200028 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.160642055 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.160104082 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.16166053 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.159941801 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.160269106 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.160179198 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.161429518 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.161284117 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.161743269 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.159910272 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.158036958 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.158802479 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.159435466 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.158976483 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.159193024 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.159363565 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.159659542 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.158579611 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.158868426 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.157263621 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.157792189 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.157997995 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.15752776 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.157988799 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.157688511 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.157978788 seconds)
  done (took 84.693948113 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.158581697 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.155817781 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.155172492 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.155608526 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.154287939 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.157673614 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.15485969 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.159802088 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.155637985 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.157575942 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.157651227 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.155853693 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.155246449 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.157382942 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.158367049 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.155901434 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.156950054 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.153412657 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.157091271 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.15813626 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.156455686 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.15499058 seconds)
  done (took 26.519262401 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.157454605 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.159174801 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.153025278 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.155727853 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.152690205 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.154907681 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.154719354 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.157285259 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.155023819 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.153618218 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.15395415 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.153281121 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.150979643 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152070307 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.149779123 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.152024051 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.153494221 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.152257973 seconds)
  done (took 21.846931416 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.152116798 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.148636599 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.152451504 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.148256498 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.149068271 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.151000366 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.149327615 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.151807575 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.152884403 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.147367789 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.150991442 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.150583653 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.149714406 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.148437557 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.15206685 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.1483548 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.150109831 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148964758 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.150050017 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.14820858 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.148489405 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.150278498 seconds)
  done (took 26.371455382 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.151122229 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.151617345 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.148079257 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.148420225 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.148211645 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.151410159 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.151863875 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.14813594 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.153017064 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.151887147 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.148887372 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.151207005 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.149920686 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.150119787 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.14852057 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.149883802 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.15265664 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.150665604 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.152583169 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.149460158 seconds)
  done (took 24.077212759 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.151688626 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.152741987 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.152762672 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.152976279 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.153899627 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.153062639 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.153187675 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.153681582 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.153407317 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.154453625 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.154214083 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.154834077 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.154444138 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.153678406 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.15399756 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.155206627 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.154568463 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.15530769 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.15538443 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.156463768 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.15598807 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.154168989 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.154907449 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.155154889 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.15538463 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.154725254 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.153745805 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.154864052 seconds)
  done (took 33.391064688 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.156089478 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.154388568 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.152063833 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.152064418 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.153400076 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.153161896 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.152079565 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.153584522 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.154985732 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.152800717 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.155208234 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.154980768 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.156401208 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.155558611 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.156248022 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.15615221 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.156363127 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.154345812 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.15308867 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153847477 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.155870557 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.156584713 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.156301983 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.152905313 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152933867 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.15584805 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.153830349 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.153355327 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.156467094 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.153390666 seconds)
  done (took 35.708243082 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.174810351 seconds)
    (2/2) benchmarking "in"...
    done (took 1.174713513 seconds)
  done (took 3.42398274 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.153883196 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.156702431 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.157150694 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.155370397 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.154570138 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.156405389 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.156876517 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.153816616 seconds)
  done (took 10.319860921 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.156216072 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.157183365 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.157038458 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.159300954 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.156635509 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.157001472 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.162878833 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.176088457 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.160042139 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.159558734 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.165470768 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.164929416 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.162392127 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.160024174 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.159070829 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.161014504 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.160483269 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.15961224 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.160398877 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.160859012 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.159226784 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.162372193 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.162285671 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.15756516 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.161218065 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.169948797 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.181599668 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.160253595 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.160038744 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.163430676 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.160283481 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.158418661 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.161733594 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.16105102 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.16208909 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.16193707 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.170468898 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.178793609 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.169403107 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.179761468 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.163863448 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.159486047 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.1626962 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.162512886 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.164215018 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.162131113 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.163256083 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.160720843 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.161855202 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.16481717 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.166703177 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.16219408 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.160448787 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.16581082 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.163894893 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.170201195 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.179551317 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.165282744 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.170490446 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.173089239 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.191903038 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.184115717 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.166873886 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.164373514 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.172616173 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.184553763 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.171032501 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.179339725 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.160356823 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.162019996 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.169401701 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.191539639 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.184219466 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.163227947 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.164890573 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.159618846 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.159676005 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.159378063 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.166704147 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.178072393 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.159193115 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.159148182 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.17065395 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.176238138 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.155066236 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.155768579 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.156601369 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.156478609 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.156912387 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.165469311 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.172543126 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.159114284 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.15266044 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.153213412 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.155813786 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.154771764 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.153036439 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.154726604 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.152560825 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.155007172 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.154105946 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.156426631 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.160096796 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.154376165 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.153947712 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.159746557 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.171618251 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.154016415 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.159243378 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.154835053 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.153678365 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.154108714 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.159172654 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.152180846 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.155990097 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.160820957 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.154512598 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.156300872 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.153883608 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.155878355 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.163801741 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.176321923 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.155804297 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.154935086 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.158471186 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.163938289 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.155072768 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.15882475 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.15518657 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.15418022 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.152457859 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.156643127 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.156664532 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.157068188 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.156668218 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.157383718 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.153450878 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.156188093 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.155280864 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.15560414 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.157187012 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.155218505 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.156431086 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.157619364 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.154844716 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.156670226 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.161742666 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.172479582 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.15682261 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.15585172 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.153241354 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.155191879 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.156686616 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.155554862 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.15684703 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.156863614 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.156575346 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.156365812 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.157798173 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.157042589 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.157423188 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.156887343 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.160843741 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.157306529 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.160670708 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.156548103 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.154701885 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.156954293 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.157175536 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.155914854 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.157834332 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.156440237 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.160220062 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.163519361 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.157962945 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.157025497 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.160081075 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.157497829 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.157787927 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.157963108 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.160514135 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.164070152 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.157468777 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.165167256 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.174971648 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.158764336 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.159925081 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.158696397 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.157272982 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.158138088 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.161487345 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.165309425 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.170610113 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.179903148 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.159178534 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.162675122 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.158682636 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.161872802 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.161888801 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.158820699 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.159565097 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.16003997 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.159130269 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.159365539 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.160880054 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.159412544 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.15907319 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.159542498 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.159825671 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.159384741 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.16132182 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.160417611 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.161088826 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.157831149 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.161137342 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.159030353 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.160613531 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.157693376 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.1593398 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.159723138 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.160811904 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.160245611 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.167270517 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.157711389 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.161557332 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.161561157 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.160573247 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.160125695 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.161419116 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.162993463 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.16055286 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.167539544 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.179046344 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.162408431 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.167844933 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.176919018 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.161504562 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.163468502 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.161603167 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.160304903 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.164179027 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.168708709 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.161229628 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.162232456 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.161490795 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.162637932 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.162445523 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.167886428 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.177054151 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.161365749 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.162633925 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.163272334 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.159943999 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.164069727 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.16300053 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.162677961 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.164518284 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.162447632 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.163715647 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.163687282 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.162972399 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.162808159 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.162919 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.165226669 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.169107758 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.167909691 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.162643965 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.164432316 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.163380551 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.167415081 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.164372112 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.163600036 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.163968591 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.174195015 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.18474619 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.170539038 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.18140098 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.163846444 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.169597576 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.182305625 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.16753317 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.164937741 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.165007475 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.164158054 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.164490344 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.162151157 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.165345103 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.164753896 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.166112033 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.165884414 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.168849822 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.166083686 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.165492062 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.166064124 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.166452292 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.166107979 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.164115485 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.166125747 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.167155091 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.166828923 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.164869144 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.165755512 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.172250113 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.182170676 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.166701464 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.165922326 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.164716289 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.165184303 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.166694379 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.165922616 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.169679456 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.172556629 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.168956716 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.172418171 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.167403439 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.174296766 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.165872014 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.169953679 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.174076265 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.165515471 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.165194393 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.166898645 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.167438885 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.174278941 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.183567124 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.167531826 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.170297746 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.167381287 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.167526522 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.167615746 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.168024717 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.168273577 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.167431804 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.175207395 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.184536087 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.170929622 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.169299312 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.165466159 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.167874946 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.169071508 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.167126704 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.170768821 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.168077947 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.169234458 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.169151675 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.167713747 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.168923831 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.168372205 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.169789358 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.166464629 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.169146563 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.175549376 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.186890736 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.172704622 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.170306845 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.17517223 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.186626058 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.17682139 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.187413732 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.170370727 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.169726417 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.171071333 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.172104301 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.169121834 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.17225208 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.169716896 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.169699556 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.173610607 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.169749052 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.171435118 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.170657051 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.170346776 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.170545139 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.179252706 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.189856 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.17165121 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.175105379 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.167587494 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.17229366 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.174573745 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.170431363 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.169546256 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.17429193 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.180038127 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.177716807 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.171276081 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.17131563 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.171812131 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.170517344 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.172527207 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.172284248 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.171474113 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.171844114 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.171566061 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.172454344 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.174548865 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.172037634 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.17088359 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.173109967 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.172714391 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.18038054 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.188778987 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.172355864 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.172446544 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.173596912 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.172644476 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.173048608 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.172333464 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.173173655 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.173018557 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.173133678 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.178544994 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.177156406 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.174702198 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.172891871 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.173001872 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.173199533 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.173388074 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.173730992 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.173134299 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.173315841 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.174143497 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.172447864 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.174142999 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.172631834 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.174136463 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.174512111 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.174419198 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.175605423 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.179446666 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.173851873 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.171174382 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.173848104 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.175312943 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.172178405 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.1736594 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.182404111 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.194580407 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.182702351 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.180560398 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.177077043 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.174292699 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.176105521 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.181124649 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.174666479 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.175205723 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.174644008 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.175832524 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.175323888 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.178100497 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.175388651 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.180828594 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.192880181 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.175747552 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.184633091 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.193489578 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.17629224 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.17620077 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.178841827 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.175496697 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.174458923 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.177201178 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.175247319 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.183159902 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.194043464 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.176179447 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.177928912 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.174260168 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.177464091 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.179401063 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.176800158 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.176798895 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.174300148 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.177369184 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.176013951 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.177102722 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.174060256 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.175217206 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.17650035 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.178383143 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.181935057 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.175115748 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.177924019 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.177078572 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.176223761 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.178634651 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.178031924 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.175297102 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.174825185 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.177313122 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.177449285 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.177341676 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.180410427 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.176909177 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.17854175 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.178772279 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.177860355 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.179964868 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.186147924 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.185345266 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.17570269 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.177514919 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.180192545 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.180654027 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.177221545 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.177484929 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.178253901 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.179359715 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.179368669 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.179090881 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.179432626 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.18039629 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.193651888 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.196518532 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.179221241 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.179760269 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.181953849 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.179870205 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.177127112 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.179509749 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.182349624 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.181716666 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.185709469 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.179096239 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.186080393 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.19631919 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.180136248 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.184340846 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.182620832 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.186280812 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.183472193 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.179618526 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.179923932 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.184258338 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.193777832 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.181444858 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.190326919 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.205359601 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.198892943 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.181101557 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.180706339 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.180654683 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.180980658 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.18119072 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.180876066 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.182544343 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.182777854 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.180655261 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.181232622 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.186084143 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.182799382 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.183192928 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.182341749 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.18064927 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.18256268 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.180076419 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.181488282 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.182582596 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.18148312 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.181230389 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.182077868 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.182325748 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.193106072 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.204867416 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.182792794 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.183099119 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.180929 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.184955977 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.183906089 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.190060543 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.189052326 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.182019856 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.182550052 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.183386466 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.182293697 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.182123297 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.1836124 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.182345396 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.182696452 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.181313047 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.194057904 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.206027683 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.188535211 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.18229522 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.183430995 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.184529662 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.18414673 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.183924124 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.184804701 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.18498637 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.185528088 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.187543994 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.184497973 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.184258975 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.18598295 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.190574535 seconds)
  done (took 698.331907 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.181543823 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.181795974 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.182056673 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.182312204 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.181724803 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.182187006 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.182799184 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.183247475 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.183201868 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.182641257 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.182666625 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.182925249 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.183514868 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.183280945 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.182079127 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.183029897 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.18248776 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.183381071 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.183799275 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.182513344 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.184019759 seconds)
  done (took 25.937453055 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.18628821 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.183582005 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.185533263 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.187134026 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.183315167 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.186183083 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.183837492 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.186998757 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.187313862 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183025337 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.18723668 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.186418315 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.183289044 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.184439975 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.184493487 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.187019171 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.187061156 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.18393295 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.187525311 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.184087744 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.186650198 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.184446645 seconds)
  done (took 27.181581652 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.186187927 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.18752037 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.186720327 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.185329436 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.188015747 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.184728379 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.187366515 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.188035563 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.18768471 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.188168814 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.186019571 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.188214691 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.192774583 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.191841225 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.189178995 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.188447872 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.332267532 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.188025251 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.187536181 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.188765128 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.185629299 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.192893025 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.204568515 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.185723841 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.18705974 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.189030311 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.189631508 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.188408509 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.187871824 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.189386144 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.191803076 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.189373795 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.187974408 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.190645589 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.187457623 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.189897988 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.19230871 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.189953278 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.186207889 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.188870129 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.198295263 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.205302971 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.190752376 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.195988118 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.208674991 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.189803222 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.19169667 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.1953734 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.18725915 seconds)
  done (took 59.564473302 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.191444615 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.189599365 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.187012598 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.190935634 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.190105356 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.190505243 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.191078781 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.191129928 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.188783949 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.189433355 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.190893516 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.188600146 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.18804237 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.190821953 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.190483991 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.188112623 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.187968666 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.188683577 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.188442492 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.18933238 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.189530866 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.191057375 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.190814579 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.188811423 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.192606383 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.188734454 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.189127165 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.190626759 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.189345973 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.189163078 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.192221254 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.19321376 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.191367515 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.189626031 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.190345828 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.192678174 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.191812012 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.190270772 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.192909617 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.189843002 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.193124917 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.192460695 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.192194237 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.192933064 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.190883207 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.191439223 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.190356346 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.190670256 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.19141766 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.193236663 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.193133108 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.191371956 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.193347687 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.190777926 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.194074258 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.193335408 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.190893177 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.190836398 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.194272536 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.190692872 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.191363747 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.194400047 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.191733925 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.194795133 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.193531164 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.192083554 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.191822695 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.195553426 seconds)
  done (took 82.099697173 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.193342425 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.193332881 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.193585156 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.19384878 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.193430971 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.194054113 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.193957299 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.193562034 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.19382088 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.194714941 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.194232441 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.194837817 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.194286292 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.194384433 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.194840554 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.193459009 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.194691026 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.19411425 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.194451397 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.194907221 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.194300754 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.194271772 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.194829889 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.194070593 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.196046718 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.194212506 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.195481374 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.195327812 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.194504573 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.195835255 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.196436334 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.195930185 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.196295562 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.195491594 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.197106642 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.195565158 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.195731851 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.195628184 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.196857841 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.196234095 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.195562168 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.19627673 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.196716423 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.197154802 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.196737866 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.19643529 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.197222866 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.197984437 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.197641367 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.196970068 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.196942241 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.197391441 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.196513651 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.197389167 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.196898358 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.198247675 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196156263 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.195782949 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.197176689 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.196472187 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.196978012 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.197247968 seconds)
  done (took 75.235377621 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.197476713 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.199079846 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.196877247 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.195244199 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.198416162 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.197021063 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.19833363 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.199438438 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.198059662 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.19859592 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198700196 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195857905 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197664096 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199751923 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.197869135 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196272924 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.196749882 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.19750072 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.199093356 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.197152012 seconds)
  done (took 25.067918677 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.197375423 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.200196477 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.196942461 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.19727769 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.199707404 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.198007847 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.201129842 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199837848 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197396465 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200772733 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.200961431 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.200571314 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.197278216 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.198788276 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.201513029 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.19824612 seconds)
  done (took 20.299295674 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.197409793 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.200024675 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.200436258 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.200056722 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.197282353 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.199018549 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.200867287 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.198273082 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.199382218 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.202292005 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.201562177 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.202802252 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.202435436 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.200990041 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.199646287 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.201742492 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.200107767 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.199945298 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.202415611 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.20221861 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.20148792 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.199103728 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.202875806 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.203702507 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.200248684 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.2001322 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.200286973 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.200001169 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.200185754 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.201606437 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.20011257 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.200985329 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.200297105 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.20025398 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.202420829 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.199946886 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.203152613 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.203165592 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.203389026 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.20320807 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.203173961 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.200485745 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.202542032 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.20362168 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.202127831 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.203098934 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.200402087 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.20188785 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.202890512 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.201738845 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.204585075 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.203216805 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.204207217 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.204361469 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.204229033 seconds)
  done (took 67.194171478 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.204526216 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.204795327 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.20210337 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.203770718 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.205125483 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.201432931 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.204253061 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.20386284 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202589444 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.205718184 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.203849089 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.206831096 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202003567 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.205913098 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.204874548 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.205074492 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.202446579 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.203096276 seconds)
  done (took 22.791191123 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.204809746 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.203521789 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.205969437 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.204507338 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.203827563 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.206965978 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202874624 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.206212031 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206600324 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.202751382 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204367675 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.206633685 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206706031 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.208095772 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.204499957 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203578137 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.206859099 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206661938 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.204747037 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.204968402 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.206098285 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20656464 seconds)
  done (took 27.637029704 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.206725371 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.204936128 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.206411406 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.219852926 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.221639656 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.226855712 seconds)
  done (took 8.407410075 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212705703 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2067505 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.205093093 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209309118 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207319379 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205539633 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205386664 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205580962 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208301651 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205167895 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205569427 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208267967 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20897422 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20592478 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208106873 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209316703 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205975334 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206474948 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207290672 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208666114 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205147812 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209336504 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206615956 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204956186 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205750387 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206977285 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20842456 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207418692 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206721875 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209502151 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208455924 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206427482 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208721456 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206926403 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209706399 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209991968 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207343413 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210278811 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209421506 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206867109 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.209522764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209824527 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208960164 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208984301 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210290939 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20763888 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208803484 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208444265 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207024675 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210579193 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21110544 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208254823 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210935763 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210423723 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210283875 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211749271 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208661329 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207636839 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211231115 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208520238 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209042363 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211843808 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209755323 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209441199 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210966146 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209424527 seconds)
  done (took 80.893211495 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210195966 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.20898365 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209687795 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210475525 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209967213 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209609737 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209045125 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209433516 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210523486 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210325949 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212708343 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20935787 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209719086 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210544364 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20939635 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209357782 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210472889 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211050543 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210696313 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214059686 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210078301 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210874285 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211725909 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210688948 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211216477 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214371754 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210668913 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211296085 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210864725 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211560927 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212254721 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211232386 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212341403 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.211797302 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21200053 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211990145 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21142215 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212329447 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211799438 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214118307 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211509687 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213967752 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211806005 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212573424 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212748799 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212028017 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212860195 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213267247 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212958788 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212680377 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212782931 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213246771 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213698307 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212617451 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212297493 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213279734 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212770071 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212616505 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21344875 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215356907 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212036014 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212168131 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216421618 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213590516 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213138057 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213261551 seconds)
  done (took 81.106178 seconds)
done (took 1635.119842049 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.375967405 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.330709401 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.213863348 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.218517707 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.213633696 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.23743281 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.235537006 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.213982688 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.214312757 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.21519543 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.213839822 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.400408324 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.217780572 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.215048639 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.214108915 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.310689948 seconds)
  done (took 41.170548848 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.238786577 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.222576648 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.324063766 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.240373236 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.243724042 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.393203585 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.27663118 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.223304933 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.377719931 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.265684329 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.665502019 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.245324142 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.221815419 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.252592675 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.243115509 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.391748162 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.45264444 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.687406172 seconds)
  done (took 28.095593256 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.627713198 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.252037548 seconds)
  done (took 9.014323374 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.239644717 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.222476024 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.222404921 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.221615702 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.213630968 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.229139978 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.22159645 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.216031512 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.537001182 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.340507857 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.227432717 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.233575588 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.240588683 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.224244748 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.221274271 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.258442184 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.373052733 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.22266716 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.221542883 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.228550435 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.224532008 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.329268855 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.261306417 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.221992572 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.338386991 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.544171377 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.229725313 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.231155505 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.354537103 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.22444028 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.224588388 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.22305877 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.225017368 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.081500293 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.691957886 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.236930756 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.246060513 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.232853047 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.222655851 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.382184297 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.225816327 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.2301885 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.21684687 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.696420593 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.349737446 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.33204459 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.37283831 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.245506788 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.226170657 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.283684182 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.225236828 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.226558443 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.267383927 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.981690917 seconds)
  done (took 104.859323168 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.262782215 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.608434953 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.384891629 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.233238808 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.91274484 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.937555933 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.237285563 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.481489694 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.275026813 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.220689393 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.498410017 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.700541744 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.238851289 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.273923474 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.51099494 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.250441275 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.219202092 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.974491676 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.233687927 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.224216626 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.704328998 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.228388973 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.220147464 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.380808146 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.256054152 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.654946981 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.479192269 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.680624669 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.244050376 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.219943422 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.662638429 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.247704267 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.296339794 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.222153918 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.470598872 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.552621144 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.546014289 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.241158008 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.243889807 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.223285028 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.25534801 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.645829543 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.552361983 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.247759422 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.219958414 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.649510683 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.235854969 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.220176722 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.226580819 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.419478255 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.138574073 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.222510521 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.475898183 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.222321045 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.506889011 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.232878233 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.319289682 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.681024653 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.237493463 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.320599937 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.251388404 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.222713533 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.222403336 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.223528267 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.226387056 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.544218423 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.63589628 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.223665393 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.543234242 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.673603647 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.237043137 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.735125594 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.065074962 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.244980989 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.282895343 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.222092772 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.798030298 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.688089945 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.237055346 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.224204019 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.533392416 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.242197372 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.492034949 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.237822695 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.237723699 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.739957002 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.238066768 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.243671813 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.223505971 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.22308547 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.893578032 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.227830897 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.47899573 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.275437099 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.22447779 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.223571027 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.253085207 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.224139971 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.240030619 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.227388865 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.722201259 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.238472103 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.325891883 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.243385826 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.23085934 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.224792388 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.227638546 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.224460661 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.440387985 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.697767224 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.249187795 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.224847546 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.22512388 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.23335044 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.369926665 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.226354869 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.505942564 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.241538063 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.229301656 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.234921224 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.964877828 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.289144015 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.225878685 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.227353578 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.098192415 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.434390164 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.24283118 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.225963138 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.228099825 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.243489339 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.371814738 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.244910294 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.311253214 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.228202435 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.905644656 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.263875658 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.226155566 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.808976323 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.227991711 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.009280574 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.248254845 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.227159537 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.511089278 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.480436358 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.541122074 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.227933943 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.243519039 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.898919554 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.258819358 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.363051096 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.244656961 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.286416948 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.42373981 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.382822141 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.227301232 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.833666864 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.23017534 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.439120644 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.228287419 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.535718913 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.693781782 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.244833168 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.238035681 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909430431 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.939393572 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.884016896 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.231367304 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.492795914 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.171640773 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.702508309 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.228104411 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.228765732 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.690921685 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.229648229 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.234364885 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.228964455 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.229176738 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.369780879 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.400311229 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.842834577 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.231810118 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.655710933 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.317352846 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.228753001 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.233703946 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.231330702 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.577693798 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.235786919 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.232549964 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.235860029 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.229536372 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.230529765 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.677056903 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.082641113 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.23144129 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.379428934 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.830968013 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.250802094 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.230076336 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.855128151 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.662641769 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.716458446 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.248566642 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.516097789 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.254088119 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.266812128 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.839693356 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.297894945 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.678275216 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.250437155 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.231494752 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.795225368 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.249946436 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.320087409 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.231296314 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.230602109 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.741558008 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.251685907 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.232747108 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.417626818 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.254847142 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.491483372 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.231792183 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.275536846 seconds)
  done (took 1085.794053545 seconds)
done (took 1270.061415061 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.232900589 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.23678439 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.218032964 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.238541101 seconds)
  done (took 26.077742422 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.251620042 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.241366824 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.242512421 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.239999407 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.244451113 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.241594767 seconds)
  done (took 8.615583094 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.296833303 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.240013143 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.240627955 seconds)
  done (took 18.930670697 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.431872353 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.470138588 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.548035084 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.262253448 seconds)
  done (took 9.865766126 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.243040474 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.242472382 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.244390277 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.246731913 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.253017471 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.253517969 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.245691794 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.244782445 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.252600034 seconds)
  done (took 12.379342002 seconds)
done (took 77.019297173 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.237306253 seconds)
    (2/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.286877707 seconds)
    (3/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.985870744 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.25673191 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.638570314 seconds)
    (6/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.945621065 seconds)
    (7/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.272177037 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.636718777 seconds)
    (9/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.601919027 seconds)
    (10/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.227965102 seconds)
    (11/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.302865533 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.484311293 seconds)
    (13/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.673188431 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.284462592 seconds)
    (15/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.218096453 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.264309712 seconds)
    (17/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.21838945 seconds)
    (18/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.322932765 seconds)
    (19/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.429533801 seconds)
    (20/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.259560963 seconds)
    (21/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.819712403 seconds)
    (22/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.886359655 seconds)
    (23/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.549101438 seconds)
    (24/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.218291574 seconds)
    (25/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.395299946 seconds)
    (26/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.218441044 seconds)
    (27/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.218430722 seconds)
    (28/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.418540128 seconds)
    (29/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.323699633 seconds)
    (30/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.218148147 seconds)
    (31/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.530264536 seconds)
    (32/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.252306356 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 6.251166878 seconds)
    (34/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.300393284 seconds)
    (35/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.43228196 seconds)
    (36/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.340838901 seconds)
    (37/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.658662292 seconds)
    (38/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.588381627 seconds)
    (39/286) benchmarking ("sort", Int8, true)...
    done (took 6.253727575 seconds)
    (40/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.103308362 seconds)
    (41/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.322431607 seconds)
    (42/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.363307203 seconds)
    (43/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.74096222 seconds)
    (44/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.303813569 seconds)
    (45/286) benchmarking ("sort", BigInt, true)...
    done (took 6.238506664 seconds)
    (46/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.232033776 seconds)
    (47/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.243551538 seconds)
    (48/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.283298509 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.112201364 seconds)
    (50/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.220057036 seconds)
    (51/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.281769008 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.242685518 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.117558639 seconds)
    (54/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.259346139 seconds)
    (55/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.227439892 seconds)
    (56/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.233865002 seconds)
    (57/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.944444627 seconds)
    (58/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.351535678 seconds)
    (59/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.22051456 seconds)
    (60/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.281800717 seconds)
    (61/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.234629128 seconds)
    (62/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.538006274 seconds)
    (63/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.039454408 seconds)
    (64/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.220340196 seconds)
    (65/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.369371272 seconds)
    (66/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.332357784 seconds)
    (67/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.383870434 seconds)
    (68/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.267884083 seconds)
    (69/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.298835207 seconds)
    (70/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.008875083 seconds)
    (71/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.731011343 seconds)
    (72/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.240077452 seconds)
    (73/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.247751939 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.836123541 seconds)
    (75/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.324601785 seconds)
    (76/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.268236029 seconds)
    (77/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.220740374 seconds)
    (78/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.593601784 seconds)
    (79/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.016032881 seconds)
    (80/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.338539655 seconds)
    (81/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.434220045 seconds)
    (82/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.355732654 seconds)
    (83/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.698970116 seconds)
    (84/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.011859968 seconds)
    (85/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.245689668 seconds)
    (86/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.334469302 seconds)
    (87/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.222796084 seconds)
    (88/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.358596238 seconds)
    (89/286) benchmarking ("sort", Float64, false)...
    done (took 5.517653213 seconds)
    (90/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.222938342 seconds)
    (91/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.222167613 seconds)
    (92/286) benchmarking ("sort", Float64, true)...
    done (took 6.262574046 seconds)
    (93/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.346432791 seconds)
    (94/286) benchmarking ("sort", Int64, false)...
    done (took 5.384437207 seconds)
    (95/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.22301214 seconds)
    (96/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.424826165 seconds)
    (97/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.254447549 seconds)
    (98/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.953748835 seconds)
    (99/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.487355219 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.137415041 seconds)
    (101/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.326825855 seconds)
    (102/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.222872339 seconds)
    (103/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.424587169 seconds)
    (104/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.035290033 seconds)
    (105/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.298161715 seconds)
    (106/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.559880416 seconds)
    (107/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.360286265 seconds)
    (108/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.249487034 seconds)
    (109/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.216008806 seconds)
    (110/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.259932447 seconds)
    (111/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.23112913 seconds)
    (112/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.27710709 seconds)
    (113/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.307389253 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.442968593 seconds)
    (115/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.422756841 seconds)
    (116/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.784865679 seconds)
    (117/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.061469736 seconds)
    (118/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.959842267 seconds)
    (119/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.259682669 seconds)
    (120/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.02921199 seconds)
    (121/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.345663812 seconds)
    (122/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.485598156 seconds)
    (123/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.256597814 seconds)
    (124/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.09334687 seconds)
    (125/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.076199696 seconds)
    (126/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.240661156 seconds)
    (127/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.548082486 seconds)
    (128/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.621231587 seconds)
    (129/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.50373561 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.783557324 seconds)
    (131/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.259826721 seconds)
    (132/286) benchmarking ("sort", Bool, false)...
    done (took 1.753965553 seconds)
    (133/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.283429804 seconds)
    (134/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.246829756 seconds)
    (135/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.239162417 seconds)
    (136/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.538982076 seconds)
    (137/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.30878311 seconds)
    (138/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.580467686 seconds)
    (139/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.275112996 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.955616678 seconds)
    (141/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.245807844 seconds)
    (142/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.606965378 seconds)
    (143/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.542492898 seconds)
    (144/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.225495412 seconds)
    (145/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.312809237 seconds)
    (146/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.600060359 seconds)
    (147/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.226391622 seconds)
    (148/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.389443172 seconds)
    (149/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.257830262 seconds)
    (150/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.000251735 seconds)
    (151/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.589015968 seconds)
    (152/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.24171611 seconds)
    (153/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.600758381 seconds)
    (154/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.998214081 seconds)
    (155/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.273126854 seconds)
    (156/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.34554715 seconds)
    (157/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.263416268 seconds)
    (158/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.881767712 seconds)
    (159/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.656964994 seconds)
    (160/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.269540537 seconds)
    (161/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.256941989 seconds)
    (162/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.325224733 seconds)
    (163/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.3688196 seconds)
    (164/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.227538362 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.666886605 seconds)
    (166/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.346776623 seconds)
    (167/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.591039531 seconds)
    (168/286) benchmarking ("sort", Float32, true)...
    done (took 6.25310827 seconds)
    (169/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.291032406 seconds)
    (170/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.350424698 seconds)
    (171/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.705049481 seconds)
    (172/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.227338218 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.264245449 seconds)
    (174/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.36212675 seconds)
    (175/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.61206053 seconds)
    (176/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.715025678 seconds)
    (177/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.235138863 seconds)
    (178/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.009458424 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.279951003 seconds)
    (180/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.700185077 seconds)
    (181/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.275148989 seconds)
    (182/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.047145514 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.290256771 seconds)
    (184/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.228334928 seconds)
    (185/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.254326922 seconds)
    (186/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.412006658 seconds)
    (187/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.606274132 seconds)
    (188/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.83314077 seconds)
    (189/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.228967084 seconds)
    (190/286) benchmarking ("sort", Int8, false)...
    done (took 4.366311483 seconds)
    (191/286) benchmarking ("sort", Float32, false)...
    done (took 5.228937936 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 5.350623314 seconds)
    (193/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.243840165 seconds)
    (194/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.749019614 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.307433074 seconds)
    (196/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.26763844 seconds)
    (197/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.869462523 seconds)
    (198/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.230003158 seconds)
    (199/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.043968779 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.875144078 seconds)
    (201/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.229227124 seconds)
    (202/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.369539009 seconds)
    (203/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.438600868 seconds)
    (204/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.573650947 seconds)
    (205/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.375808053 seconds)
    (206/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.228880063 seconds)
    (207/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.373243221 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.873626361 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.644264563 seconds)
    (210/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.291065244 seconds)
    (211/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.469697105 seconds)
    (212/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.376452306 seconds)
    (213/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.242812719 seconds)
    (214/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.201556719 seconds)
    (215/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.383074573 seconds)
    (216/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.522043219 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.273189735 seconds)
    (218/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.249822506 seconds)
    (219/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.843133472 seconds)
    (220/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.998651504 seconds)
    (221/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.453298245 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.306753074 seconds)
    (223/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.58656389 seconds)
    (224/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.278078422 seconds)
    (225/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.253871495 seconds)
    (226/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.284403003 seconds)
    (227/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.372432505 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.133943863 seconds)
    (229/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.268244835 seconds)
    (230/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.234458645 seconds)
    (231/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.727883219 seconds)
    (232/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.283650895 seconds)
    (233/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.238772606 seconds)
    (234/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.258493459 seconds)
    (235/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.275808738 seconds)
    (236/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.679545087 seconds)
    (237/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.480123737 seconds)
    (238/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.318862806 seconds)
    (239/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.33262597 seconds)
    (240/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.251141499 seconds)
    (241/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.277715008 seconds)
    (242/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.481971304 seconds)
    (243/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.241538288 seconds)
    (244/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.091374718 seconds)
    (245/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.470919227 seconds)
    (246/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.497371924 seconds)
    (247/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.849684924 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.284200653 seconds)
    (249/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.357958887 seconds)
    (250/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.447978723 seconds)
    (251/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.053698344 seconds)
    (252/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.282869209 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.631697207 seconds)
    (254/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.911030195 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.097416349 seconds)
    (256/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.279950375 seconds)
    (257/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.233047553 seconds)
    (258/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.257838884 seconds)
    (259/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.247578296 seconds)
    (260/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.597507863 seconds)
    (261/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.950269991 seconds)
    (262/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.729084292 seconds)
    (263/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.984240166 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.603146287 seconds)
    (265/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.286634271 seconds)
    (266/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.233853564 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.33873687 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.336468517 seconds)
    (269/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.232520227 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.393567539 seconds)
    (271/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.232415116 seconds)
    (272/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.479288994 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.078675538 seconds)
    (274/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.430553707 seconds)
    (275/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.275854157 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.303196127 seconds)
    (277/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.50820122 seconds)
    (278/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.356804752 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.843890876 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.836848837 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.095754723 seconds)
    (282/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.271773585 seconds)
    (283/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.241229389 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.284587171 seconds)
    (285/286) benchmarking ("sort", BigInt, false)...
    done (took 6.255022785 seconds)
    (286/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.284193558 seconds)
  done (took 908.118536506 seconds)
done (took 909.274723239 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.288544927 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.291528989 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.265548974 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.286756892 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.384892312 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.288943663 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.276172082 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.266022373 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.314258409 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.315283934 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.271744041 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.28802501 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.274869142 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.27416609 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.266269552 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.288987788 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.267175236 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.275016045 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.291217526 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.277042251 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.291088361 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.274412155 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.317190681 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.288702871 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.27153115 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.270220477 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.278391743 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.295262609 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.386680807 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.278033965 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.270927004 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.286351505 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.269593202 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.265954311 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.261298952 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.295141475 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.28774004 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.276817873 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.27184119 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.307581079 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.658152684 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.29040499 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.276903067 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.267688727 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.268963216 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.272061939 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.276893829 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.275517835 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.289828122 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.291667577 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.641177386 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.307779218 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.279845458 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.268703263 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.279312147 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.276884048 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.273507164 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.294063776 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.295045294 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.294480331 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.253543428 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.273984242 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.272464604 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.293630801 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.284762664 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.680674264 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.281437873 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.272454628 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.655118288 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.291166241 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.677143823 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.302142547 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.27267292 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.291845102 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.309297633 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.271071928 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.266393033 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.270566829 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.285056811 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.277172844 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.281168875 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.292735353 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.276969444 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.271848572 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.29287958 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.293680656 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.281826511 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.279357404 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.279991401 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.297801663 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.286844501 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.291165411 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.274600153 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.266271969 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.2808397 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.275954019 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.282409147 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.283458651 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.276858077 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.282951641 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.654179861 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314523734 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.269464811 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.269230408 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.271322578 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.293597933 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.655054405 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.297051595 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.295199379 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.320641139 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.273873473 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.260927146 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.283622272 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298542636 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.283125321 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.276299924 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.267896098 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.264610727 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.646116138 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.311946922 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.275742032 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.280068442 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.298733706 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.275991998 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.27009968 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.275664258 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.275128969 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.298304686 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.40365996 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.283957669 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.313527714 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.28178321 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.277988963 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.296071175 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.300119541 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.314431561 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.277882037 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.301209165 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.299279154 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.270913523 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.293951551 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.284672284 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.276600989 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.280567508 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.269918246 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.2975378 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.296805827 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.297080735 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.295399004 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.404291028 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.273153782 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.263531282 seconds)
done (took 215.69780982 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.333543882 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.269785208 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.358794329 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.272422602 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.370183828 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.370427691 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.270862872 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.269836893 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.27003327 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.649655163 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.271334428 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.269861723 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.269331134 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.271027007 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.354467632 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.272678148 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.270962738 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.612198305 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.273119821 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.343461885 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.27077095 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.272222582 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.27162562 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.655208189 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.268590413 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.266257019 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.34361787 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.27400116 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.619138045 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.265679614 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.267580555 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.619734666 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.363647153 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.291273372 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.284002285 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.279006526 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.372579216 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.29205649 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.355101762 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.355805086 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.360694391 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.312901613 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.267467615 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.266613211 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.274812874 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.275154293 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.275421445 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.301818444 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.270290917 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.273826875 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.620622694 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.283785097 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.282689431 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.272486128 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.272745109 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.294627372 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.27384291 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.27530282 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.364386372 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.276025362 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.336669022 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.658219615 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.653710241 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.275433649 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.271881689 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.275011236 seconds)
  done (took 144.381361548 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.343097801 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.352527747 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.384038133 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.29176032 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.325608139 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.388354272 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.292540542 seconds)
  done (took 10.562801771 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.281903325 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.277246455 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.325827395 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.325398082 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.276607049 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.453635485 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.277905572 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.287952123 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.276025895 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.330118444 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.279224569 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.278252143 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.285477331 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.276775087 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.324921802 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.28862365 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.392726226 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.279053481 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.278986075 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.437677425 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.27587646 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.284208494 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.328966671 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.288508652 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.281530239 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.283871202 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.102185789 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.278618209 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.274718804 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.278280741 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.276048309 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.352468816 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.280050505 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.271550518 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.276339339 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.393862786 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.27855442 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.275544646 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.278761455 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.277028921 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.27917468 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.279135571 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.279004104 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.276648528 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.279001905 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.301631363 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.279723563 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.27917399 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.278940847 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.281043997 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.329379016 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.280937921 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.277519865 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.277780036 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.333509334 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.287042207 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.280252839 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.276906086 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.281420122 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.277198094 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.441004304 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.325782814 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.280616703 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.3283164 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.281338524 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.281547016 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.280406323 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.280829196 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.333339972 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.280725731 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.327851739 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.277643002 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.465547306 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.303392017 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.28395148 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.283206592 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.283005243 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.28066178 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.273926468 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.28627339 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.279075469 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.281516632 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.287988777 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.27906384 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.279517953 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.44729937 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.390106199 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.279471088 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.293550242 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.288393928 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.280142432 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.333369785 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.282362224 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.279446348 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.332749712 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.397264432 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.334105043 seconds)
  done (took 148.300295155 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.285199779 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.288834705 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.284861993 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.303124861 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.300085017 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.281786789 seconds)
  done (took 8.934792314 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.285233646 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.284312391 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.282376501 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.284419697 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.281989474 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.284466675 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.283286962 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.284301051 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.286227973 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.282624607 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.284613849 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.287230284 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.284411279 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.283049353 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.282925962 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.284036537 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.283954429 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.28127071 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.283966258 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.284208984 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.377006867 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.284358107 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.28418709 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.283737875 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.288609983 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.284823065 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.291650959 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.284224385 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.284587428 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.288689081 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.301396465 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.28532173 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.285537178 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.29000909 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.289171677 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.285151366 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.288671615 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.288919113 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.282019671 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.285783708 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.288114745 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.285013582 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.286477155 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.290159465 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.286779937 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.289386445 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.293229229 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.293341329 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.286188101 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.2897671 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.289543699 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.286214874 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.287004391 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.290576317 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.288445637 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.30633018 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.29410063 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.286402971 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.285157454 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.287568645 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.288821369 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.288372525 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.287740472 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.290472352 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.294265142 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.290139809 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.287879654 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.292077903 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.286322932 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.287924836 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.292107395 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.284634067 seconds)
  done (took 94.967149596 seconds)
done (took 408.327641885 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.565677053 seconds)
  done (took 7.760831078 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.488832333 seconds)
  done (took 7.685673275 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.179830772 seconds)
  done (took 21.378021247 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.31604603 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.364691246 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.294718994 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.287997516 seconds)
  done (took 26.460872248 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.486788081 seconds)
  done (took 7.684162855 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.282505857 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.282106821 seconds)
  done (took 13.763303082 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.633817979 seconds)
  done (took 7.831408024 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.546036712 seconds)
  done (took 7.74346914 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.308050345 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.302007746 seconds)
  done (took 14.060148102 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.262376419 seconds)
  done (took 7.459810472 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.105809781 seconds)
  done (took 11.304119658 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.288184529 seconds)
  done (took 7.488625001 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.284742822 seconds)
  done (took 7.483744083 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.058764428 seconds)
  done (took 9.256808332 seconds)
done (took 158.557793772 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.28203042 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.283948877 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.283717147 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.283858719 seconds)
  done (took 26.331193091 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.3233993 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.323880993 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.325187329 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.334901882 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.326387383 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.324125825 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.317216315 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.317467449 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.334826388 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.327286016 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.326552035 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.326789789 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.325363032 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.316166506 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.327999245 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.326769953 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.337122757 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.325681627 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.316355292 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.326971589 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.291602634 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.334966975 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.327980541 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.292461048 seconds)
  done (took 32.956472497 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.810942256 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.36169816 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.444133087 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.343455212 seconds)
  done (took 7.159725978 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.343694212 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.345369832 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.358423636 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.39539028 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.431840563 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.355288102 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.315423645 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.31400024 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.300059941 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.3449882 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.421135126 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.361207845 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.44422188 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.29363254 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.487763629 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.292661512 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.294165794 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.345002992 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.396119524 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.410081765 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.29317181 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.345410282 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.349698032 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.36294223 seconds)
  done (took 33.80201254 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.293587836 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.311367981 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.293168958 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.291885315 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.3016342 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.291986762 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.293618459 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.293944761 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.293200172 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.299441694 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.292335125 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.304985917 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.292172867 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.292999258 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.299296923 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.294904172 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.299760639 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.293503855 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.293970594 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.299674158 seconds)
  done (took 27.128972641 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.286287771 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.139730493 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.639731125 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.543191682 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.288110038 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.292512391 seconds)
  done (took 27.392339008 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.359649791 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.514055884 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.294068404 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.633679822 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.727130159 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.310571579 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.295968905 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.528968311 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.832219505 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.821917247 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.356081523 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.360543998 seconds)
  done (took 19.237213462 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.291508446 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.294254811 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.302007146 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.306807954 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.346747606 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.313038907 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.300559355 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.2890857 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.352598875 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.367076122 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.314397771 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.349493928 seconds)
  done (took 37.032605596 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377371755 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336593509 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.177789994 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350124466 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.00950699 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.503152475 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.36906653 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.974145743 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.312770603 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565019772 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291393975 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395603683 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.546550426 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291282827 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.298021318 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.241315203 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534357363 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750519874 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292902806 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.167149564 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316790813 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.296125923 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.259008938 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.514310525 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.521746509 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.269340259 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.553500408 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.068409204 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569104802 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.30569182 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303839163 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.29251433 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568931613 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930138362 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407681481 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497894391 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324878542 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.839495304 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.288997865 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.173155672 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305601466 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.296040878 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304269228 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294011908 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.228278387 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295590545 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98724527 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.317774165 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.004980432 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.293633845 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544503338 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389600782 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.297869097 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.864609564 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346126077 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.300922831 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.298545336 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385705704 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880870097 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.415498154 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299805422 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.23363405 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.306935823 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.175817703 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893096077 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.317160489 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.298716247 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.298777696 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.229089928 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.177899673 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.311727067 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442480868 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.320915796 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944470085 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981854749 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.320404648 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.227307695 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828483471 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.309744278 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.232238246 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.522959923 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.07116853 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.232826512 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.245534205 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.231443688 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959659845 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307232683 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.665205532 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.316986908 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.001237557 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.521868241 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334109045 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320914387 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.520747014 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.177762896 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297174204 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.301581273 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424773327 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319489161 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.985334471 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249610053 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.300472743 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551699965 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.509055693 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311859211 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.250903026 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77242948 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315488589 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.335239029 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.296915115 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.509733426 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.8736297 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.329978663 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.43868092 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315379886 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.07268706 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006421422 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307519861 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.309470995 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.310793759 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564148743 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.016640541 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.181897764 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365573982 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.303823455 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.300535573 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.203465144 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.155990355 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.202643 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.487124664 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329712545 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.315129176 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.299378907 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242825698 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.300043289 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31271003 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.079515274 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.521128552 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304919233 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574865451 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233045672 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446390376 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.309698365 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.521310234 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.468415676 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.324710256 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.558085856 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304894387 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.317186239 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314674592 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319484823 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399243641 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321168479 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.305852705 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.558793023 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.30351788 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.303509165 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.177640741 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.085465848 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299161234 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.30679012 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30912146 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860999929 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297757904 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.302702427 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.189787672 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.314223648 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368343055 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.307028845 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.504970285 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.48292223 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336077887 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.306494198 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.307716812 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523967416 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.311990152 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.175374851 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38275382 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.754672595 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.876671045 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.331058941 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.235470169 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.013476104 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.995493292 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302968044 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.489465637 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.303879231 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506565372 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336707602 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.314356537 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.859937523 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320077894 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.168110239 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.311841145 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.314045555 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.308543375 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303081458 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.437811585 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.42601487 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31078452 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.317661098 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445558124 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.314537959 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.235477417 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.819081044 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.307199787 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.302427035 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.08065456 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3366001 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.19603167 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087998505 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580095485 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321894538 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552750306 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.267865308 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.338447443 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.303196873 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.30461572 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30978498 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.311548521 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311670132 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.314222007 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.175298225 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.744582292 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869712014 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001507121 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831062798 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.551870501 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.326025997 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.189229734 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.994168132 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255375587 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.961362912 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.531585576 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.009228339 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267377181 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.763043604 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.48985996 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059918753 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555129669 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.537634572 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531661325 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.323540057 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5624036 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.522039221 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339622335 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.313890762 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.237111673 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.823524534 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841881498 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324712262 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386097344 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997701436 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330968964 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.083678018 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.379776046 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.962724755 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.694717123 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.867606814 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.693646558 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.313232209 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.320515701 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093864214 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.326793955 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.832325628 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912867639 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.328551021 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.766269445 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260050136 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.513291184 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.340066981 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.302529741 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.783194749 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.329608296 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.569042829 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556996922 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250168375 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.310164918 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82325679 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.178967348 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.312327003 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309334871 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006087251 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321049204 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587113704 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.32861456 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.466788103 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331530326 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.242110769 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241952797 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.001307949 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.318484856 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283679133 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76723355 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.314322418 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310211483 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.304370992 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168281955 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.560973591 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.31393171 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.855790723 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548825661 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308489948 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324509987 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.305322303 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307149054 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.284008342 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.182884055 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.959476664 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373769179 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.525257077 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.212082438 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.202688024 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.350766954 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.513846271 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.195618809 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.314916444 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537755001 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.035526093 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.311759446 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972693442 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343048449 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.303392325 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.328446592 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.300633613 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.321854548 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390125117 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.507324326 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.333135517 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.31255035 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689151813 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320311439 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322460627 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.31694006 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.396805031 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.433299345 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.458537335 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.094205613 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866208757 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017871793 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.882230467 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571931026 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.305210617 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304088038 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236382359 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451931199 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.828483385 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576537544 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434244401 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.314693962 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328303954 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.316030855 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307598168 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.522292366 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580271219 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.174924296 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305260604 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.967110245 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.463242445 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314778192 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.515895174 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767371328 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831979686 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422088682 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.314384887 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.001953183 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597595463 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.395267617 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.306275295 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.894123074 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.328018357 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.951833977 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.311263738 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305656377 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470053477 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558076664 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946024589 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.333215237 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.465721416 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.078762383 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.201098942 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.56204705 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.745756651 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.515382141 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893499614 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.000541646 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569284255 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376657773 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.513014957 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.43143958 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455326861 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.315739308 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.212223528 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.307611554 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150943944 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.017850829 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.317330655 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87336561 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586446711 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.312300156 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.315706557 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333855486 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.316427858 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.530894163 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985342169 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.532294779 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.316991293 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.308140683 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.877190004 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872957423 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579054955 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244222484 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.313132175 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543056349 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.56629581 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334079866 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.76249138 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.020195323 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841676762 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.286522475 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329985789 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312372409 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.990083281 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876406531 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.489319003 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79137884 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.969854778 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.309003664 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.586881733 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.315388631 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.319102288 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589453349 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.313573413 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.3204969 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.521586236 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.896381316 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072904743 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.313882792 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.287088073 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.251785654 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.536125928 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358680442 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247685813 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311058327 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.703872542 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.330195182 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440164829 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3221064 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.312577431 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322052914 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.048799824 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.596870279 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.316845737 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.299690596 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.312294671 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.32053138 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408925929 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855906215 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335144383 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.98689615 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.665123189 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.567667935 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.32313532 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.299045639 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.315220748 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312589109 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.029481329 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.282133127 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.326739905 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842668924 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.327611768 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.329323062 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.316185066 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.526912459 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.524241004 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.317419869 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.521794676 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338241248 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334880711 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.213577778 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.079729103 seconds)
  done (took 1637.590205035 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.346274337 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.323883895 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.321794947 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.343167591 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.318630681 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.385833409 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.347223485 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.386269931 seconds)
  done (took 51.998669765 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.317577512 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.467585381 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.341113207 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.324298838 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.324066617 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.32063409 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.760908554 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.335256387 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.321988947 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.323065014 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.326940072 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.321621658 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.94760277 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.322655572 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.323037329 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.299137626 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.321984445 seconds)
  done (took 64.927584505 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.259296218 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.606806082 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.839357545 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.327146271 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.329560138 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.31793227 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.73750076 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.342822839 seconds)
  done (took 57.989257 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.330717556 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.331005154 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.331983078 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.33238832 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.331446128 seconds)
  done (took 7.886358514 seconds)
done (took 2032.631462402 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.319849574 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.322497671 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.319320551 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.3217902 seconds)
  done (took 6.510934808 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.295421152 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.037030171 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.296983333 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.314297986 seconds)
  done (took 18.172472297 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.326201891 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.339701179 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.981596218 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.91185643 seconds)
  done (took 5.123766065 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.06374202 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.076496171 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.061971533 seconds)
  done (took 7.42873395 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.310945645 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.321499911 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.319729007 seconds)
  done (took 20.178144189 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.604340025 seconds)
  done (took 2.830532294 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.462099106 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.509147574 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.629434851 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.651349784 seconds)
  done (took 7.4804408 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.708283591 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.689773499 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.502566782 seconds)
  done (took 6.123726548 seconds)
done (took 87.742225708 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.005224612 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.312847373 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.520491326 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.976362681 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.540961303 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.522351579 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.723336137 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.941711832 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.485021954 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.476561379 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.974079211 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.540104747 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.4627572 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.31499188 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.46264158 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.560932829 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.539227772 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.051460941 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.695258913 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.850136579 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.738191632 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.612390641 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.804437625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.627146812 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.557458204 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.469950889 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.204081554 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.55335574 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.867343248 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.221089017 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.467114354 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.028112712 seconds)
  done (took 189.334675608 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.315506992 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.32731205 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.315506208 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.315757446 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.315782952 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.330255072 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.315574561 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.330328143 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.331808583 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.3306408 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.315202416 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.321834261 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.317060354 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.332553672 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.315820267 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.331278414 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.326088157 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.31615699 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.316906602 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.316236956 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.333909024 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.323113568 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.31597483 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.316832016 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.332117932 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.318203166 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.318458861 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.316046044 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.345351993 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.327674606 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.316188672 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.317410466 seconds)
  done (took 203.548842979 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.31910819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.331626366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.318002578 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.31732745 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.325059605 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.317333557 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.318283725 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.317400679 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.331335721 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.318093129 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.333038276 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.317414444 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.320036836 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.317342528 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.319772662 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.32304088 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.322811448 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.317320537 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.319144844 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.317991235 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.319529228 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.329834998 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.318634542 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.318595941 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.318361605 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.318237105 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.318062107 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.336472229 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.319062657 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.318830978 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.320398661 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.319006848 seconds)
  done (took 203.507576035 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.515451923 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.325734697 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.326932456 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.263854678 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.327785188 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.32633287 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.322419836 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.533268943 seconds)
  done (took 14.174934311 seconds)
done (took 611.790964184 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.556476945 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.275750723 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.524004847 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.346165742 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.058196238 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.36352615 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.346433985 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.511244344 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.22197054 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.516398997 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.569921729 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.360554507 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.70826118 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.345939909 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.597311275 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.444180841 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.222445834 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.348946788 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.654862684 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.827399813 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.602456681 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.756089973 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.528240438 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.231762536 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.720103743 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.753171834 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.011106898 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.216663049 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.3612694 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.661213674 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.928063582 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.258478564 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.404029256 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.399859723 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.459827255 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.438773918 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.237803903 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.400765891 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.541359997 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.524314134 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.829033963 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.050200973 seconds)
  done (took 90.347934702 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.311688802 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.311047454 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.31089628 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.311628554 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.313197283 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.310157832 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.311984835 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.311397687 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.31203313 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.311364948 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.310333259 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.311135896 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.311802782 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.313727834 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.312167551 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.311623179 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.313315242 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.313191415 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.311580545 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.311803892 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.312937096 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.310974755 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.313393704 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.311658493 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.312096398 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.314317157 seconds)
  done (took 35.347778782 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.330999897 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.567919102 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.72774033 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.336663738 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.330754974 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.334440486 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.40698761 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.332433208 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.336295459 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.335320672 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.481442654 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.334083719 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.368838746 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.755508552 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.33512495 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.332932596 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.33286398 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.332163863 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.579430547 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.341954356 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.428278283 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.334899656 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.404349516 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.341313568 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.354333943 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.332277825 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.336071686 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.912172192 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.352204136 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.483905048 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.083374465 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.407952563 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.850842236 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.758768644 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.081366189 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.341028533 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.334062281 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.486435086 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.333802415 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.333255481 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.409265643 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.333585521 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.738144396 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.995863575 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.350106097 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.333207803 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.930912867 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.504749975 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.566645374 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.346292536 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.762927874 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.336436674 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.338275414 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.337037585 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.5673721 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.340569803 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.333674373 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.933788903 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.355949252 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.409084472 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.33678252 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.335416858 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.587880641 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.335152069 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.575376166 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.338450087 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.343463963 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.354914767 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.741155519 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.339358327 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.020790719 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.352190678 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.337387953 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.485287162 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.575411902 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.964275166 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.35686076 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.591734896 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.867607274 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.42436652 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.340161233 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.90367629 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.429976459 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.340202356 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.339542659 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.339331507 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.338383571 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.383175576 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.409262603 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.95436057 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.026019383 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.958751925 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.431001494 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.349800699 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.337248305 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.938311295 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.355174475 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.339247677 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.737635739 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.018365837 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.353715311 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.346029411 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.02149536 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.357247801 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.414349786 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.342973655 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.751667559 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.33985175 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.383773953 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.33866852 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.345324681 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.358996167 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.413500365 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.341361693 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.338408809 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.994775751 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.511156153 seconds)
  done (took 176.470248335 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.333549499 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.34601914 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.331634481 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.346737694 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.332232827 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.340395653 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.333059322 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.332302624 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.337275308 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.332402477 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.332699233 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.33238538 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.334552716 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.347662461 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.344449326 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.338849182 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.946990634 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.333657497 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.333177933 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.332393815 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.126894991 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.332541868 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.334978655 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.333923277 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.33464152 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.334738434 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.355969717 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.335914396 seconds)
  done (took 152.077108279 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.34150202 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.875102427 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.357823459 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.465274508 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.360754543 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.338466948 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.465285888 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.394833497 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.356479866 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.339343952 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.338867475 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.626944758 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.34144685 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.830645489 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.523318583 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.481388938 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.829182891 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.3575149 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.338872853 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.341080556 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.468277787 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.346877123 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.632105089 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.880193875 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.358972786 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.877509043 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.325793325 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.343587917 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.340935254 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.880519759 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.357237489 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.632232764 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.415265406 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.398834423 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.897045623 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.847364806 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.846971895 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.483750546 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.343556313 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.340137173 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.341173369 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.324978119 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.881868153 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.360444752 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.342785721 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.873829522 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.3643278 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.343998306 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.348567286 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.342235144 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.399958281 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.414818525 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.652479703 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.892736213 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.432417124 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.352805691 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.468447764 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.736990528 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.346419668 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.836794305 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.330093826 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.890899044 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.364650046 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.325806151 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.343735573 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.348768711 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.487395724 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.470920361 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.839899739 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.364139766 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.840269715 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.507300791 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.344110132 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.343822668 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.346435933 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.890752854 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.856550971 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.504824109 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.474833698 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.534698619 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.329735395 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.343261469 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.327530095 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.417920403 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.343606227 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.892632512 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.861211577 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.366570414 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.34613401 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.346473637 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.34678228 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.512965475 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.906486036 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.439915554 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.83193897 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.658705518 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.642207896 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.350899413 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.401710764 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.361786842 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.641553268 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.351171722 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.40195561 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.801411172 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.642570251 seconds)
  done (took 159.904752665 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.575301976 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.506245918 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.43504818 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.485444405 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.9230621 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.903023725 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.578013561 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.484537711 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.452193997 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.593438109 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.439223481 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.435817647 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.553856344 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.420276066 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.060047843 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.431187956 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.449337383 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.488921259 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.498556661 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.337609308 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.995733711 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.620686642 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.529305946 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.155941767 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.463292815 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.080972558 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.884493097 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.911978464 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.509851974 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.587480775 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.866003125 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.4442348 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.265966547 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.007907849 seconds)
  done (took 64.628232278 seconds)
done (took 680.008621346 seconds)
SAVING RESULT...
DONE!
