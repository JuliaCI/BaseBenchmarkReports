cset: moving following pidspec: 28439
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.309836922 seconds)
loading group "string"... done (took 0.645858698 seconds)
loading group "linalg"... done (took 7.792665316 seconds)
loading group "parallel"... done (took 0.161943374 seconds)
loading group "find"... done (took 1.138446854 seconds)
loading group "tuple"... done (took 1.874085111 seconds)
loading group "dates"... done (took 1.293254035 seconds)
loading group "micro"... done (took 0.221048275 seconds)
loading group "io"... done (took 0.900797243 seconds)
loading group "scalar"... done (took 38.994143716 seconds)
loading group "sparse"... done (took 12.121171204 seconds)
loading group "broadcast"... done (took 0.957500618 seconds)
loading group "union"... done (took 12.515053975 seconds)
loading group "simd"... done (took 4.564589342 seconds)
loading group "random"... done (took 9.169239841 seconds)
loading group "problem"... done (took 1.725077403 seconds)
loading group "array"... done (took 21.250239548 seconds)
loading group "misc"... done (took 1.739334211 seconds)
loading group "sort"... done (took 3.331706408 seconds)
loading group "collection"... done (took 17.722847931 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537307817 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128749091 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135354208 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122578603 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149461678 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119147755 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127947745 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08813685 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.834392306 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151562912 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.12014013 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.420539199 seconds)
done (took 5.377326297 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.180206502 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085914099 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087321075 seconds)
  done (took 1.286395336 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069934653 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12810094 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070707125 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071928441 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071074465 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070745452 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.070764289 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.071117411 seconds)
  done (took 1.668534659 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076448673 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073299862 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070463586 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072330873 seconds)
  done (took 1.406816394 seconds)
done (took 5.734825784 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.775539685 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.217398642 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189384007 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.402116421 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.13222143 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.176868229 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.642503261 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320588521 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193680368 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081471304 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112648369 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.349473293 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126140662 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.637743789 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079007915 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09556892 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142494117 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.456295483 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071782131 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086971516 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092593263 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132017297 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089449632 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077754594 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150470777 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072547769 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.139165092 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.0848892 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070277471 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.222272751 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176521 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663761074 seconds)
  done (took 10.411703897 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103086031 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.104164612 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072971073 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130206217 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102894044 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073744279 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078818645 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071458243 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094554058 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134633215 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.0955851 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110381887 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.0698747 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072624337 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088561892 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213359642 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084647085 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085341684 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07427224 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081630527 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112032821 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082234747 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085089698 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084341303 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132705523 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.184442076 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102965864 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10120858 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070355056 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086925778 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118957637 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132155508 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069799915 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06961189 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.133009464 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099880618 seconds)
  done (took 4.757402788 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.993985891 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.146017304 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09249743 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136666125 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069124584 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111818463 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069690862 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084069466 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.21095432 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.450762301 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.608939911 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115521418 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109010495 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072464548 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072968922 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071282304 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.491410991 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.103321645 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109702253 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084603485 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074091691 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073108394 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361524574 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070891026 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067970539 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072069019 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061617507 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123930276 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071719803 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.953954151 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.17201919 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07006043 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103744751 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165310154 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.222525029 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143860305 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073310938 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069449156 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160948867 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074064197 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071674526 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088774621 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107464782 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125046764 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070026721 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070238338 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171149485 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06949868 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082866098 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.115432938 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.17374902 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.156998004 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081510437 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069003159 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.273590684 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093113097 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073689314 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069409002 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.180429343 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127172238 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071618266 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071304691 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07270377 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074192656 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.387690354 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073013777 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.883786929 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075427045 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.083080169 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073706688 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073410362 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076437621 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079117706 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092889059 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068812351 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070702689 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078308643 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070622715 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07032082 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070883322 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08761381 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.068548738 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.373199818 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070114446 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071068526 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.069026993 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.198359305 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100568123 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071361818 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069530745 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103581672 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072776244 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070788016 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.113484705 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070814889 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087081483 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073531433 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117197331 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070687902 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.099547409 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069118384 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068504985 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099885251 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073650932 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103135213 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083770957 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07479722 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.415612756 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069215854 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.074202065 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07163419 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069525303 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072077971 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07074996 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08342798 seconds)
  done (took 22.129637404 seconds)
done (took 39.405953108 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.253650652 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077515342 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078651751 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077717652 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077722672 seconds)
  done (took 1.773566346 seconds)
done (took 2.965737541 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125737239 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102758309 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068938182 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100171534 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068706599 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106750884 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10300748 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08087745 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1028842 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068647778 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099840461 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069104335 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06895967 seconds)
  done (took 2.371859588 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088101626 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088755345 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074270913 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087792568 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068752709 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08699562 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085921858 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092892501 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08818417 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076515369 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067968357 seconds)
  done (took 2.088123603 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087344785 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089817544 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073309291 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086336554 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068688496 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085840496 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085896178 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090009165 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086023913 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077914879 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068053968 seconds)
  done (took 2.078903346 seconds)
done (took 7.715556406 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081756152 seconds)
  done (took 1.25307763 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.571652946 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.941906435 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085475484 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113064945 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.194757269 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121120719 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.267978877 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091333642 seconds)
  done (took 8.733953784 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092237607 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073955437 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073894958 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085338278 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075732374 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073949363 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.073033717 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076061996 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072721002 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075002196 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076012347 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073669121 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074837473 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075095593 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072477983 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07627753 seconds)
  done (took 2.467070811 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096102286 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095070195 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077568084 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07911308 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076581554 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07552817 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077900549 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077593153 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074214302 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.0759443 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.0790982 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077076628 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075947481 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068677209 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077716655 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079824523 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075472518 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078171856 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07805691 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079537398 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079260051 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068353977 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075331734 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077217517 seconds)
  done (took 3.149881398 seconds)
done (took 16.784410257 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.108613839 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071738986 seconds)
  done (took 1.357696636 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084762501 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086423894 seconds)
  done (took 1.358620447 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085930936 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06971449 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092526315 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081193755 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.071146119 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069686927 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.09019858 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070111107 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06966939 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069892253 seconds)
  done (took 1.958297141 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072339242 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.08095615 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074126009 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084980969 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076877091 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067901721 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076149921 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071940987 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080287461 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066623687 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074637908 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086409573 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074716744 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087729664 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075730427 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072003827 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074790861 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071676944 seconds)
  done (took 2.559074907 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069865292 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071117963 seconds)
  done (took 1.332051483 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070176543 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068817649 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070954293 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070379712 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067759061 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066711313 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06743034 seconds)
  done (took 1.670068253 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.379592268 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120323318 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.316784417 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07636007 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085119354 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257101157 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.070136875 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075168447 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.075583059 seconds)
  done (took 2.685642541 seconds)
done (took 14.114748613 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083216607 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.090457072 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100110468 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.385599685 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095533678 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.07071565 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117855864 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18803595 seconds)
done (took 2.329711457 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212663561 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.67149112 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.427540674 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210003345 seconds)
  done (took 2.501333018 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339313553 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091940197 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063968541 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070538425 seconds)
  done (took 1.766175077 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070288114 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07354301 seconds)
  done (took 1.342373199 seconds)
done (took 7.020775784 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090202191 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070331647 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069411063 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070126274 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.067436261 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070847354 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.067729152 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068061966 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070188381 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070377114 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070021785 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.069853774 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.07045053 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070246028 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067440969 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06734165 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069917759 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067493255 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.180528596 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068164225 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069862854 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067228804 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067114036 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067588328 seconds)
  done (took 3.019291721 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088541293 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070545637 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076384517 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075112909 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073672429 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07521189 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075809263 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070761275 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075749265 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072326814 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07416262 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073468632 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072082966 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073499693 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072258365 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074113463 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07502303 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070089263 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07269089 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073538707 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075306846 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070588524 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073615563 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075211875 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073657959 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074165669 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07295386 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070346514 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075284167 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.074215144 seconds)
  done (took 3.427034222 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073986922 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067906507 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068703865 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074744579 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067491685 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068142064 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067505636 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068341703 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068322496 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067783254 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069362677 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067052754 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06910448 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.069686309 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.070282012 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072598161 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083826017 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068119527 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068180771 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068280572 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.071156365 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.069617494 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067844127 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067662029 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067612046 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067341137 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067600235 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067732523 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068809731 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067675835 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.07198882 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.071218948 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067491928 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075548916 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.07166349 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067666357 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071612243 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066932923 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068133907 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067287625 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067135385 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067621721 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067471148 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07469937 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068285237 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069680681 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068933705 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069203398 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067915552 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070692351 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068400093 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067569047 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069368344 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068610725 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.07146276 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067171729 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068594261 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066998202 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068445456 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067818708 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067317649 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067408562 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071097007 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068131405 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082179805 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074886385 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068022188 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069121247 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068571861 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070524508 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069415456 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081563823 seconds)
  done (took 6.22610679 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092401537 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091428777 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07002252 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069318145 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065806609 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068018213 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074133573 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068016596 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071601967 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088137328 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070275452 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071719759 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072319532 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073993203 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070203681 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071705302 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078463844 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067563033 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.069072807 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071700847 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068299204 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074167587 seconds)
  done (took 2.841262214 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153266642 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073768183 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108393144 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079750855 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073986607 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079060009 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073533224 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073841252 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074039332 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07180149 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071765506 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073633216 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073485239 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071886236 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071803528 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071486876 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073808415 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071404848 seconds)
  done (took 2.655900894 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080276869 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.070315777 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09072463 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069919618 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069646599 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072482264 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073803199 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077979788 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072253746 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070017817 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077843049 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072810801 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072900968 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069965809 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072046648 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069665101 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072448459 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069958387 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077651029 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07428011 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074446319 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077460046 seconds)
  done (took 2.844980143 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082883071 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072877601 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084418722 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07278744 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065426303 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068204179 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.07375407 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06965212 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073928932 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071704815 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070404916 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068007036 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072920007 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069895554 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073061824 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070262042 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072074873 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07054926 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071844054 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065703141 seconds)
  done (took 2.658151316 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08911299 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072061049 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071846961 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078214341 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071767377 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072092294 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077967028 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071350918 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071311064 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09205392 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071798904 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071840471 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078256136 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075945828 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073661809 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078238529 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0781674 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078800066 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071629812 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071559899 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.091965002 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072018644 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078444106 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072230469 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071738603 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071288 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071243079 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0760563 seconds)
  done (took 3.341433535 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070578682 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071065622 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.068058922 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067880323 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.068306596 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067599031 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067696307 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.068153278 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070913743 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067656756 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069884057 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070558716 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070353867 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.07013884 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070050951 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069940743 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070224276 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068035777 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067908159 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067746481 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069742937 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070096853 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070461546 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067524273 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067814445 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070011918 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067473706 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068022276 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069917783 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067940504 seconds)
  done (took 3.295224255 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078981077 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076422937 seconds)
  done (took 1.379513457 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067091407 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083163965 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067581458 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074374473 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073895324 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070797389 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076778168 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072897697 seconds)
  done (took 1.806900941 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08611203 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081072527 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071550059 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08228155 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080552347 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08706292 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138211211 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070708997 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.0765722 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068928263 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083729869 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070577166 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076827518 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070380802 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075650607 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07754923 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067661684 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07566454 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071641405 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069082819 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070614289 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07857763 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07316385 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065919325 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072544277 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092722592 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080747854 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070044169 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073382035 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078447807 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076672279 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065209899 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070001714 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070194653 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068903569 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079788242 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085383496 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073693573 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079020451 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071129616 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079471153 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065548451 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074985946 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077536117 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080910671 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071033236 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070532664 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06537981 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068512242 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073046439 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066161726 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0711141 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065370388 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077242098 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074120453 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080494749 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069996142 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072819881 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073505162 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074012792 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077096012 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072221106 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073087749 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069693668 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080399637 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075678889 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079526364 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065808491 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064864389 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068376706 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08033188 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093242955 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.0762941 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070349395 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070805115 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068170774 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073806977 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071278831 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075960845 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076980751 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069816426 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075681402 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078071619 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070832661 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072977831 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077136123 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068003545 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072449394 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068158594 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085688084 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068568043 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067836563 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068082105 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083117533 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07328085 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.0694385 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06782871 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076896336 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063979809 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06900686 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069784115 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070053481 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.0793013 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072786454 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073603759 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.0779763 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076930137 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069557351 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072090833 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066044484 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.195741041 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.07069496 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.079291974 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.065372351 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074548467 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.072296604 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072091487 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07940714 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069194474 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070736625 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077999679 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077758349 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069043814 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067776565 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074159149 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.069922411 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07283763 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079377876 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069799074 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066304236 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066326231 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075363489 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069633318 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074605485 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075156495 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073199865 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064917008 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068751581 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074600434 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079266925 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070900597 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071792276 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076640076 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072568742 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070148835 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077999894 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073444574 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070115859 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.077199003 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071534782 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066253163 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073151124 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073767123 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069412788 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074376039 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073414438 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073119456 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070932069 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06921245 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07645788 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071044909 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069713538 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07100411 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069055878 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080564601 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072541097 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066298699 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06744458 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077815516 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068643713 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070186127 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069441669 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072605051 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070615273 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068718569 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06979359 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072399675 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079632377 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073525009 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071003703 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07557753 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082506387 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069835936 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072575106 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069591178 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071056228 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070849962 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079594634 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076460342 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074622157 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073572766 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066957335 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075789047 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078246344 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069872763 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068294061 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070064798 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074470007 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075996929 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074080636 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070355334 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068093612 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07063225 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071959426 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072969248 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069755919 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069006778 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075024743 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067840459 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075419794 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06980339 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079849625 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072622254 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06426354 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071655382 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067139143 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075725047 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064211586 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067391872 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069502571 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070009368 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068070967 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071766469 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063894288 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.204981894 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079840598 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.072463959 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.071037077 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071179275 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078422808 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073027901 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074632809 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.075443171 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077105623 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081757359 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069835558 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074389588 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080956949 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070709097 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064732787 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.078749241 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069759476 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069097703 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069457025 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069175138 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074944959 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079312671 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077737768 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064596832 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072648281 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068713726 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070118865 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066056611 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075367515 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073052157 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07195971 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077670285 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072005059 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070394822 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075283956 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069657907 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070560977 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071680323 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073750909 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071335305 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072200264 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069956817 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074096603 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070021024 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068082398 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071593867 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.071995946 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.073561126 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077903838 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.072035557 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072831657 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07450969 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070519624 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071512663 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.07152999 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070235077 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073340752 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071420947 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071022195 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073182561 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065599161 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078225341 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069609232 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07830959 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071208758 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067594098 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076298322 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073013425 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075482475 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070400621 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071233666 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071869686 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069748297 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073344924 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077821917 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068845111 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082034428 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077864006 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071289732 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073442795 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071855492 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072641816 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069900895 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071543634 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070742036 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071607835 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.071180798 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074791738 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073048373 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071118072 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072555842 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070269457 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070819091 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070798198 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065071577 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069151616 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070072289 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069472333 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079587622 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070305572 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069648841 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068799749 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07052993 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068584252 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066303305 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075804732 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077319702 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069348293 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075613952 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068498156 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070997938 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079505252 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063556267 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067716674 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067650424 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.20019348 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079012458 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072802016 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.081851701 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071415251 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.071168539 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.0691028 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071315574 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.070005283 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065678861 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068863281 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076030938 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069985209 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070375156 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070360979 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073270191 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071541821 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081596262 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.071169558 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072080988 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071149648 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068414047 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070163285 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070649009 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074618473 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070913178 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069104892 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068243365 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070402109 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072061116 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072024748 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.07058346 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072221397 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077792641 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070537992 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073982229 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072689671 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066202655 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073872999 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070251101 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.07029197 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06963524 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074540424 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073913997 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070806216 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079899156 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070010876 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074005558 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070459807 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.069077008 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069509324 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070769772 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.07038533 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069626937 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071731155 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078391685 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068443986 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073354759 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070366949 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071037975 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077660752 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071182621 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07362564 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075679055 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.07119026 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072528554 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078319546 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073948115 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073210558 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07086637 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072614361 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076279099 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070251728 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076542137 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071487779 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071431297 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071992215 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068885601 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070330555 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070032541 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069548762 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077290469 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070777359 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070253796 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06993192 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068430399 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071778493 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072905182 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079422747 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072981655 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073366979 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066052808 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068005704 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070766331 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06872963 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072248477 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072956413 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075908673 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072628906 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070796898 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068774957 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079328982 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076050521 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073296037 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068493074 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073273402 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070717675 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072028921 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070656424 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070355161 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069447468 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073655335 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07112402 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068461642 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075849067 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072246366 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069477802 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.202541149 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072616356 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072017355 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066390782 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071472827 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072962446 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076248429 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073515689 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070808885 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081744908 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06921758 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072237084 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072995826 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070143554 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076730947 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065701024 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.0731404 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071527176 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071579257 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065755406 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070345008 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068743336 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072782314 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070147913 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065783644 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082045173 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080450787 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074827121 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070392071 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069353258 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065303123 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066252306 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070427581 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071702138 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073483376 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080724625 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069581066 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069815116 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065861276 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070502402 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073302895 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073525745 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068212029 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066033558 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071052444 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073757433 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075957385 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068948067 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069970735 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073714899 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073151606 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068144878 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072980891 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067067488 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074081624 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082833838 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070452627 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071988183 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077108245 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077678999 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071061282 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065534888 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070570118 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074057899 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071398002 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070595789 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071049414 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085522612 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073656136 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070727122 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070036219 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073206787 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070599544 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078671634 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071133307 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070650892 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.077421662 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072524244 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07880589 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073578947 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078067929 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074377558 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073779888 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069477867 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070955974 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068353079 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069725366 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.07090149 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070994771 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075259974 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07730503 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070633325 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080878197 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079576062 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.07183923 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067208675 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069686812 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069487642 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065447757 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070349541 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.069011936 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068028591 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068903961 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068873544 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071803918 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074751107 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.07087894 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069691865 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068928048 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063758175 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071823587 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071587819 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070239805 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06636388 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06871639 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069098176 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.20424294 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073853102 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069276425 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073396935 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073015139 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072372915 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066821405 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07740198 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070368575 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072520238 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070741208 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071351152 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071525532 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075632078 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075075852 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071732367 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073123195 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074667259 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072218151 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068365453 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068233914 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076873641 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069044113 seconds)
  done (took 45.100986869 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102841102 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067231298 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06644319 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066150352 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076781913 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066744256 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065830815 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067002732 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067354659 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069156362 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066124327 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066102718 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073769018 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080879398 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076355919 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070287404 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065478685 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066478799 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066456396 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066938181 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07384357 seconds)
  done (took 2.801842154 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076981705 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081739926 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079477986 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084720691 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074955841 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074047621 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079112048 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073694648 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080847016 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076299039 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081635354 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073892275 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07571773 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07632308 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076429404 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074315363 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081348668 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074270283 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073642458 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079071961 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073917819 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078938527 seconds)
  done (took 3.005616103 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071063549 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069245321 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071998758 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065054944 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069552781 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065374275 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073133312 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067754713 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072527754 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069462261 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068918007 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06942124 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071865036 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065673693 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071122493 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067597646 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111291898 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072502014 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069093703 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070345733 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065911623 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071988274 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066213007 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066202894 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069286797 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072485375 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069934621 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068716184 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069544449 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069099563 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069969966 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067650633 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071405987 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069979267 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068940591 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06902568 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069826496 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069518593 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065308153 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06801776 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071041527 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.068313064 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.07007722 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071430252 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067936009 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068977658 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071727683 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069782999 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065507603 seconds)
  done (took 4.744196478 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081963272 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112495548 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071282662 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091750735 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083429019 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075313643 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073821654 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092750179 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066955975 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067761997 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084737186 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082346891 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069206811 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073251462 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07622787 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069536415 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069927463 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068154599 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073243205 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068681709 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072941196 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076751232 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082920233 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08178221 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072633198 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068091227 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068499655 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073041084 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081636488 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073526317 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073738818 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073961309 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084331663 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07560902 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068788061 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071253538 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085159828 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069511477 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071813972 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067453702 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071364415 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073260754 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076397359 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085436476 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069740556 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07484956 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069620682 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066756893 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081387672 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071337449 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076239597 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083235769 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072525195 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070058443 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073189437 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083637992 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069037903 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068115855 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.07187489 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081200569 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067320728 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072955144 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082203506 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071392346 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075485726 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082500385 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074857287 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073672852 seconds)
  done (took 6.576841478 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07971388 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099257904 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087065714 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085716839 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078927634 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.078965309 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07921026 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079001898 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078591392 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082968083 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078997201 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118158401 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074588225 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080933288 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087190756 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078783602 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.078670804 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078823328 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078480652 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078757457 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07901615 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085493357 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079710381 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.085864815 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082416657 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074427622 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07851764 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07889933 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085778021 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078860291 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082907752 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.078583451 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07861878 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.085229904 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082198868 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.078642156 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069270568 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078888261 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.078928891 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07883197 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07431566 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086125916 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078797747 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074396666 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079305281 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078511183 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.085918424 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082374572 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08105661 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082868079 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079135919 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0857598 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078453531 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078620663 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085250987 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088217237 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085296158 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085967485 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079021216 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08522024 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085699085 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088758049 seconds)
  done (took 6.407880922 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08716534 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07860568 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084374314 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066061291 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067785562 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075769473 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068702654 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068521932 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077477408 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.079536182 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079252105 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075515908 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079023535 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079010708 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075393825 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077758685 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075492081 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075398383 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077145392 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075668029 seconds)
  done (took 2.85730093 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078607244 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086169676 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070469577 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075794328 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073387339 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075471457 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072239042 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073652699 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071159308 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073342612 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079061558 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079188475 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071567375 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075637285 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078742589 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074949503 seconds)
  done (took 2.532114895 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.088499622 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077348401 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083543055 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.069783176 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.07076745 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066380618 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069270873 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065432314 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066660015 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081400201 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069264371 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07962071 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069554702 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068652474 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066358035 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075459406 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066048548 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066934996 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069221838 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081821361 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073656237 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068272281 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.072906465 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069618593 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.073358175 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074907115 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068429602 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070399766 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067848876 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069826619 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073231972 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073313383 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067055366 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067814531 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068705576 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067023239 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069671998 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070141896 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074830099 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069759517 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068301047 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072239142 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069672561 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071043415 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066389488 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06983814 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06654493 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072083979 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067286197 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073114856 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069630183 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072018693 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070865955 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076336714 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072343745 seconds)
  done (took 5.24389233 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083875619 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073891913 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065830663 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068810467 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073063118 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071336281 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072724312 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071044002 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071083417 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067955462 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071530123 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072563064 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071029715 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073071186 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071448321 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072982788 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066059999 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071017059 seconds)
  done (took 2.625678223 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075298214 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069757677 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077290813 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069815981 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070256544 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072099562 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06622153 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068352039 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068181147 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069728968 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070753868 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072328803 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068110218 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072127859 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069802652 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069900759 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072539049 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068421468 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069798658 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066355482 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07205292 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068427924 seconds)
  done (took 2.876053081 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096789657 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085628326 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143437 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08217275 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088641603 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075310113 seconds)
  done (took 1.901824489 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094335577 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104459349 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070976163 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073369971 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079539419 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073436724 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073331449 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073883763 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081065599 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078813545 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074598956 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08240748 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081099674 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080463891 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078523085 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079064605 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073637464 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077272209 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070391381 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086171832 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073928165 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081568999 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074519299 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073801874 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073911776 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081254134 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081206064 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079745422 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073309077 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081981672 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079255268 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074316712 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081678681 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079019725 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072918694 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081109005 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073675006 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085919723 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079036465 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08101583 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072860079 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079181783 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081494475 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078441011 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081545649 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074064694 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077874069 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073810703 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074341655 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088186037 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080005919 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08119441 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078787685 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082025954 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081452322 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087889858 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07904484 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0807316 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079378414 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079452418 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080422456 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079108727 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08024579 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079051633 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079067614 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08054319 seconds)
  done (took 6.554510595 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107528413 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07100176 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074048222 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080054741 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080924081 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073703892 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074511074 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074206604 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074095104 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071186223 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110794803 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074455857 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080910035 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080949073 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074228493 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073767487 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073872434 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080964409 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071581586 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088362996 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073882216 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080684834 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080641332 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080797612 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079119712 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079261017 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074350977 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073983068 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073887821 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073638479 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078022094 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073820202 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080476757 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070689535 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080462846 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073737007 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073760274 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078033824 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073869061 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079199922 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080525404 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086417849 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074159352 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074051882 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078707499 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073860744 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074349159 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070896081 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074180272 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071251812 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079512402 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078838068 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079006006 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08061228 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074583559 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074437135 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074019703 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074060489 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073905245 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079435201 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080504276 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073793128 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088137172 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0737942 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074153915 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080801609 seconds)
  done (took 6.47553607 seconds)
done (took 134.401043618 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198376739 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175575494 seconds)
  done (took 1.701723594 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07227779 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102788556 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081358694 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13322845 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071231976 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104338257 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104001118 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081529801 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070196829 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070769474 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070283853 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07249374 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135727805 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069907968 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069974739 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072510632 seconds)
  done (took 2.723244121 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102118426 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.16301422 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104164081 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069257421 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101114495 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076645437 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069372237 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079178231 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075297969 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069356572 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076149264 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074348347 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069448571 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074122596 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076746366 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076189619 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068942079 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076020925 seconds)
  done (took 2.844897978 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100955688 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095585515 seconds)
  done (took 1.541301729 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155662705 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136683197 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203804895 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.349290703 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.161637827 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.150138611 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145733624 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144691906 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117336319 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140764711 seconds)
  done (took 3.042697705 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101676181 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154457456 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.272314277 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119383701 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076805135 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096249599 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121360656 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082269451 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08344329 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083636894 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083896141 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.0801945 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102341126 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076785839 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07764571 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080013407 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105933835 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076433143 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078006094 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07965567 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103387217 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071149688 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078078162 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076792649 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.08214077 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080903011 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070007695 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070513535 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080030088 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078124142 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080194517 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095690781 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080669381 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108474797 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075390267 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109377218 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080987236 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077111554 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078324997 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077915702 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081678278 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081559945 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076814387 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.08052451 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069832118 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080598327 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070399044 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070854361 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080874149 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071289067 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081064043 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080328094 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107986896 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070722916 seconds)
  done (took 6.157454918 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111938399 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110969663 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074285628 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116371666 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106959481 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073665134 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108576605 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101234432 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111053499 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075074227 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072284434 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073600705 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083855444 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084810272 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119186995 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111493428 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076578339 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072797217 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1106752 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110379861 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072223863 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103803046 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099988464 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110333507 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071158913 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073611428 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072176159 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073381921 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079592717 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081443784 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072078889 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083727581 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087562995 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080915477 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070963639 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071889387 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072126178 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082734148 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082287757 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082691941 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080209923 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071549828 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07190887 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073275217 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073275006 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071323998 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081353657 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083054849 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081187201 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072467737 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073226705 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.072441018 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073225414 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082441992 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080103617 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082770008 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08271564 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072020771 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071922494 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075338205 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083112682 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08258689 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082139521 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073620817 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082889704 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072431846 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084086057 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085759133 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072588781 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073315051 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072395784 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071939939 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076288826 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081181374 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080656084 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073813719 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072907773 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072422817 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083108863 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081216141 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071843594 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079403455 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07103398 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071626641 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073124998 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073162712 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079365357 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081822447 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073591574 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071773754 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071767359 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071325519 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070323684 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077756356 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080883574 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080808838 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079659483 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072273065 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079769239 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.209484189 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07474586 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.083415419 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073069783 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075171297 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074434866 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080968183 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080773664 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083391863 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071878746 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073203035 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081222315 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083945002 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072711971 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080704613 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082948598 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081654533 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071585046 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085431443 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072738834 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082691548 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072218671 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083399825 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071818145 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082119277 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0723232 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071964912 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072129198 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081454689 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073852337 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073166738 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073765191 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07227692 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081726812 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084268662 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073748976 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082020141 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081564697 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07386316 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082080395 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072372294 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083200009 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072151267 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07351921 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071410376 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083775042 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072313023 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071677382 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072222682 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082888796 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072336769 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082763079 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080167474 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071198887 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084576419 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082754662 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080392547 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082940642 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073530958 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071898493 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072139504 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072419133 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080215618 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081542202 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074170491 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071884646 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081020817 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082608865 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07154092 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080958361 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081257882 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08143104 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07242956 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072589062 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083688466 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083080101 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081145714 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081245316 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081993761 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072799001 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081245436 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081029547 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07207177 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087257539 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072097504 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084686448 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081280177 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078428561 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080999164 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081952186 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08260555 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082351407 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084143721 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070981916 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071292689 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079666404 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071107476 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071562893 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078750969 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072575178 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072054422 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083525472 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.204840006 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.084772743 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.072777255 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.083396359 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071971071 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073640143 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087580948 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072595572 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074384291 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082577242 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07312411 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08102398 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083237887 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08190489 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072967506 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073785329 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082703567 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.08273578 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074824727 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072885388 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074412322 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082591113 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081947554 seconds)
  done (took 19.398620175 seconds)
done (took 38.766031745 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207597345 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152044503 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.172381474 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118874229 seconds)
  done (took 2.094988534 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118497304 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103429545 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094234446 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069713194 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100694949 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069078849 seconds)
  done (took 1.933691881 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.296553526 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.20329941 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18276237 seconds)
  done (took 2.058854347 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205177915 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190056174 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.42984544 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.267214261 seconds)
  done (took 2.575848206 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144182801 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090054488 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071238808 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08789831 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132424763 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159858425 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101221382 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126573213 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.08281324 seconds)
  done (took 2.426468031 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148173153 seconds)
done (took 12.619016773 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.126770264 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.250275803 seconds)
    (3/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.210202948 seconds)
    (4/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.183041905 seconds)
    (5/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.114823992 seconds)
    (6/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.18103392 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.077256441 seconds)
    (8/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.18211205 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.081728873 seconds)
    (10/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073932377 seconds)
    (11/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.17171259 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078853532 seconds)
    (13/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079944585 seconds)
    (14/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.214470855 seconds)
    (15/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.080401267 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.18303139 seconds)
    (17/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.097934233 seconds)
    (18/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.082916559 seconds)
    (19/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.167055577 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092797771 seconds)
    (21/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074484783 seconds)
    (22/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.191913881 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.177599492 seconds)
    (24/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096075256 seconds)
    (25/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.164820053 seconds)
    (26/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.095438725 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.055725318 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.077617964 seconds)
    (29/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.154328963 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07809181 seconds)
    (31/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.149212508 seconds)
    (32/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.116637324 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076257965 seconds)
    (34/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.075199837 seconds)
    (35/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.318001269 seconds)
    (36/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.163353554 seconds)
    (37/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.189254588 seconds)
    (38/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079733219 seconds)
    (39/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083978367 seconds)
    (40/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.202790314 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.161593724 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.135950839 seconds)
    (43/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.087177235 seconds)
    (44/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09716366 seconds)
    (45/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.145638732 seconds)
    (46/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055631613 seconds)
    (47/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077758089 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174213433 seconds)
    (49/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080934252 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096392989 seconds)
    (51/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.169523613 seconds)
    (52/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.111872787 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077122361 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.09722169 seconds)
    (55/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.055505467 seconds)
    (56/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.056933318 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076787249 seconds)
    (58/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077816267 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.101483941 seconds)
    (60/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07756678 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100604554 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071605655 seconds)
    (63/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.105462059 seconds)
    (64/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181091882 seconds)
    (65/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082464659 seconds)
    (66/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07756233 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183438055 seconds)
    (68/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077776235 seconds)
    (69/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082375621 seconds)
    (70/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.173939175 seconds)
    (71/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.0827411 seconds)
    (72/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07148304 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.156163652 seconds)
    (74/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.079198538 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075366063 seconds)
    (76/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.096010331 seconds)
    (77/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.148145974 seconds)
    (78/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.16688007 seconds)
    (79/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.08249937 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 0.070129367 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068991002 seconds)
    (82/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.155983928 seconds)
    (83/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121725137 seconds)
    (84/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.14687748 seconds)
    (85/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.156743468 seconds)
    (86/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.205647559 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.106134731 seconds)
    (88/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.115278028 seconds)
    (89/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.145718859 seconds)
    (90/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.174336341 seconds)
    (91/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.101138444 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091248587 seconds)
    (93/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.110774445 seconds)
    (94/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064813258 seconds)
    (95/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.145366131 seconds)
    (96/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082758796 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09305952 seconds)
    (98/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078779924 seconds)
    (99/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079844405 seconds)
    (100/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056811517 seconds)
    (101/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080166569 seconds)
    (102/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074595119 seconds)
    (103/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070941364 seconds)
    (104/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.143744776 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093569299 seconds)
    (106/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.078506346 seconds)
    (107/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074803687 seconds)
    (108/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.066329915 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086024295 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.163807148 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067714932 seconds)
    (112/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169731395 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089342236 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142605126 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05555263 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091183871 seconds)
    (117/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07298633 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053945181 seconds)
    (119/309) benchmarking ("sort", Float64, false)...
    done (took 0.12767271 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145000456 seconds)
    (121/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.075675717 seconds)
    (122/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053884356 seconds)
    (123/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066617293 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056485467 seconds)
    (125/309) benchmarking ("sort", Int8, false)...
    done (took 0.142973044 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.141824519 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075085039 seconds)
    (128/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068048669 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086927663 seconds)
    (130/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.115897987 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.08494276 seconds)
    (132/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068253807 seconds)
    (133/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.174434667 seconds)
    (134/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053865539 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067485205 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074126364 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074076078 seconds)
    (138/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070168194 seconds)
    (139/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054802043 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073550731 seconds)
    (141/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066492921 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129833726 seconds)
    (143/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055614846 seconds)
    (144/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.159140257 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068067704 seconds)
    (146/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069153482 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076218809 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123225004 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069441473 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.078282677 seconds)
    (151/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073314733 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089204142 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.185409641 seconds)
    (154/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.172660803 seconds)
    (155/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08801883 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074971103 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053851425 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093390592 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.077563875 seconds)
    (160/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070812664 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.140588519 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122219375 seconds)
    (163/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.112872171 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.124317006 seconds)
    (165/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.055095714 seconds)
    (166/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076898474 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067248696 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067819372 seconds)
    (169/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077631489 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069139244 seconds)
    (171/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104305689 seconds)
    (172/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077502284 seconds)
    (173/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054222179 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088289672 seconds)
    (175/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.101060145 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067803718 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068195848 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067531832 seconds)
    (179/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075150018 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.064805438 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053584838 seconds)
    (182/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066690662 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074846366 seconds)
    (184/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055481944 seconds)
    (185/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068731576 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092003524 seconds)
    (187/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055240183 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054200754 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077246374 seconds)
    (190/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074698964 seconds)
    (191/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.066649744 seconds)
    (192/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066324326 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.322217682 seconds)
    (194/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.078733696 seconds)
    (195/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.087493469 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.079398599 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.095811495 seconds)
    (198/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.075049257 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070504372 seconds)
    (200/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.057989093 seconds)
    (201/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.058190895 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.187555766 seconds)
    (203/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.058762002 seconds)
    (204/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06096901 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.08016583 seconds)
    (206/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077827577 seconds)
    (207/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05720148 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07757643 seconds)
    (209/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.057693166 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10244549 seconds)
    (211/309) benchmarking ("sort", Float32, false)...
    done (took 0.134444389 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.059015051 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.057175199 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.07111901 seconds)
    (215/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076329982 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070694861 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076260996 seconds)
    (218/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.056845323 seconds)
    (219/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072361916 seconds)
    (220/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06900453 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139682286 seconds)
    (222/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.056162335 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099547434 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.07010335 seconds)
    (225/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.079860366 seconds)
    (226/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.069263885 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070672798 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142317576 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184851191 seconds)
    (230/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.057898021 seconds)
    (231/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.056059239 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.117049984 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.1151531 seconds)
    (234/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071678036 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097567103 seconds)
    (236/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095971794 seconds)
    (237/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07853534 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.056083806 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090636284 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05687809 seconds)
    (241/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077043091 seconds)
    (242/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.068549887 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.056605804 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094325566 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.106868931 seconds)
    (246/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07972364 seconds)
    (247/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077809192 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.080027034 seconds)
    (249/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070349549 seconds)
    (250/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083411149 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.072239545 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.056640969 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070720443 seconds)
    (254/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.055909755 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.142932016 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.056190054 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.0701702 seconds)
    (258/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.055971276 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07727763 seconds)
    (260/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.057241887 seconds)
    (261/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055929745 seconds)
    (262/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.115141235 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090972969 seconds)
    (264/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086629253 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078135841 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.141218266 seconds)
    (267/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.071941374 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.056086594 seconds)
    (269/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.056912479 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071745343 seconds)
    (271/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074714385 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070966371 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114911949 seconds)
    (274/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.055732463 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175993072 seconds)
    (276/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.055961416 seconds)
    (277/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.060345161 seconds)
    (278/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.058124703 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143579651 seconds)
    (280/309) benchmarking ("sort", BigInt, false)...
    done (took 0.194831827 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148775078 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077671654 seconds)
    (283/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.073401367 seconds)
    (284/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.057122583 seconds)
    (285/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.057108488 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069087306 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092197128 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068698064 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069776837 seconds)
    (290/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072845697 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134621035 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077292772 seconds)
    (293/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.071053243 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076392833 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093651106 seconds)
    (296/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071397102 seconds)
    (297/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070350377 seconds)
    (298/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.05677223 seconds)
    (299/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096946045 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.07000575 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12530979 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075248153 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068800523 seconds)
    (304/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077701207 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076935769 seconds)
    (306/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.068393182 seconds)
    (307/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.055470564 seconds)
    (308/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056951971 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069528216 seconds)
  done (took 31.523015215 seconds)
done (took 32.91490295 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.093026966 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098889093 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.081710938 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.099473723 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08814457 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.082794396 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.079617053 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08542933 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.087863283 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.089549471 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.087129767 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.061419618 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.08170844 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.082782814 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.082088013 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099259668 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08672771 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079753298 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.080861155 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070918746 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.080042229 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.072507205 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073727889 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.060788059 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.084684588 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077698731 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080929131 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080545071 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.071305392 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.072106225 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07544454 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.079827346 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070827944 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085202134 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079435206 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078969083 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080434464 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.08276195 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.07299771 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.071017521 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.080029074 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071095656 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078763603 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078802568 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076967683 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076570766 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078575255 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082161596 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096190422 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072664016 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.079786426 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080698214 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081929184 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.078246184 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075151645 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078084234 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075495285 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096329881 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078763116 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073095274 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.079883434 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078728192 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.076222782 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078037763 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077993062 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081025837 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081449341 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075889741 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079669596 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076631663 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070456322 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078003766 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074013786 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070127597 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081330983 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082397227 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069184866 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076275009 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077513753 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078401066 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070162025 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071988455 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072045998 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076687193 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071947543 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061470387 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074874836 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076963261 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069358287 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078216018 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.077506776 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078135193 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071799598 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081648467 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069564478 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075489522 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070185647 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.07028591 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071810619 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074719238 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070431544 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072673745 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.080866635 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071761202 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077035037 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08308175 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069720022 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077254917 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069072361 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068798282 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083344399 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080175196 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069922946 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071831568 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068875197 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076935137 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069027143 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.070531563 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069510961 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070374832 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076644474 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070413476 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071932788 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077594313 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.220538034 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070938737 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.074996969 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072723612 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070493043 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.076508965 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.070499072 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070204226 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.07259356 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066876788 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072594147 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.07150751 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077686195 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072676456 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.078676387 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072519959 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079277483 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075149464 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076992433 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.076006674 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.069881454 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.064365285 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072988925 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072020291 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072619928 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.070634736 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071643795 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.07009042 seconds)
done (took 13.374065428 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071231172 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140852869 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100130133 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099209095 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088886281 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.071103913 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079736318 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102556787 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072505073 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104291577 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091885573 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089189083 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117196327 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069335373 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071147267 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074892126 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071879633 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084887453 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10277453 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.09009467 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116715218 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.07007423 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096023493 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09306998 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091713284 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106475697 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071556226 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.075325116 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.074958174 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.096542157 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091824836 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075031669 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.071959901 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101577103 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097990453 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087018696 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.071873483 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086700244 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071550102 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070548772 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.072975459 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101764101 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084442573 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084378106 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074584648 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.08093639 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071899097 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087406552 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09349284 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083329299 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090013952 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103879908 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073356116 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08774028 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069538219 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089638392 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080741884 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07292884 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.07075879 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078323989 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071251362 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074150411 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084460952 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084293833 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074860665 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.088764492 seconds)
  done (took 7.151817413 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.0881889 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095728104 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087397887 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088441529 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070355246 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070915519 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071212241 seconds)
  done (took 2.12193659 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072444279 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092319346 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.09341283 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093562929 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086265 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092279066 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082918854 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071497798 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092494112 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073371919 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091600357 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103624887 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074527983 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077972654 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094690053 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071046287 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094664729 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071096367 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073587852 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094618148 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073284765 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.099913256 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074579833 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.071716704 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085589697 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071973587 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117190487 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075894559 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072874181 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074802422 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069505741 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111232885 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08565782 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078921063 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071172095 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08752033 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085790245 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069540798 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08757321 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07977615 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085512966 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.07208526 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072344567 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06936231 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075236526 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081778574 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072374352 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071613183 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073844229 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091268948 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.072757827 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085488519 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074295844 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076692029 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073129664 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078897548 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081677447 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07236061 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091453992 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073157558 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087883789 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087611966 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085116822 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088386572 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074707515 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084670882 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085243377 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073996961 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073497843 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075112109 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088201298 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069829812 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073166899 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082181045 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07380227 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094016307 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094508213 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072861559 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08483854 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07224887 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071173984 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071913087 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093930478 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076792042 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071305659 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075935342 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074765399 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070113389 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070652952 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075181733 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06954098 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072941687 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074975948 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074354775 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07447839 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087460089 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073960953 seconds)
  done (took 9.323864217 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075104108 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073456179 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073679104 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073017364 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072108406 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072519084 seconds)
  done (took 2.012763292 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09658113 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073510641 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084219665 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076440035 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107260505 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091199886 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.092306284 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082134922 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087078789 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083745884 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090538968 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092437777 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096619192 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076778333 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.09087016 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075957867 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090936476 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078980134 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082145503 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076553947 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090024967 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076279484 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076847068 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086082617 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080249374 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076217965 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08225969 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083229602 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08254625 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08322629 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.0761371 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.0796663 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075624521 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083095511 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091141272 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075018356 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075443507 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081918723 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076283396 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.08049986 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091968824 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077025717 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078450319 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081811255 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082201587 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074583972 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081003389 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08320018 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090879732 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080736941 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.083277435 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075660158 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079415964 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081118856 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075624885 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082346503 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080961569 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091314782 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076825383 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075166667 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072826708 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080204515 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.082344383 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.08007692 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082419427 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081443436 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074694664 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076811181 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076529729 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075884763 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.08114353 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072834982 seconds)
  done (took 7.445786439 seconds)
done (took 29.587833435 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.536961571 seconds)
  done (took 2.073706714 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.628037154 seconds)
  done (took 2.188588004 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.550885198 seconds)
  done (took 8.106072477 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.389440476 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.491536322 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.735157992 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139674276 seconds)
  done (took 3.351352023 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.710932229 seconds)
  done (took 2.277142686 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.240152377 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228352379 seconds)
  done (took 2.040442949 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.385697634 seconds)
  done (took 1.944072199 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.122905315 seconds)
  done (took 2.684505404 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.251228893 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180725993 seconds)
  done (took 1.999706708 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.471328495 seconds)
  done (took 2.03715774 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.860436205 seconds)
  done (took 6.428418983 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.228567825 seconds)
  done (took 1.834476846 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242304629 seconds)
  done (took 1.810155599 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.768832587 seconds)
  done (took 3.337599612 seconds)
done (took 43.68408301 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087858628 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090233249 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089720991 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085843516 seconds)
  done (took 1.908345278 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080901868 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077705677 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081356098 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077148605 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080739088 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077488713 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078417697 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079430519 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076752979 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077128308 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076812993 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076397312 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079077472 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078597659 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075584468 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079688151 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080764606 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07665888 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079631344 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076794367 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07455128 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079113058 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079677236 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075554668 seconds)
  done (took 3.447158755 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082104012 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077306242 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079617002 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07608521 seconds)
  done (took 1.891438945 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081694896 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096411191 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093310815 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082601067 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096997471 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090904491 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073954019 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073944708 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074110892 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08146396 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.07227847 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099511503 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093109276 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081666085 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084099882 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070144997 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072750555 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092659868 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082500167 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082748234 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07456426 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082967162 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072703063 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093091503 seconds)
  done (took 3.572336638 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.090972664 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105416966 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085727487 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094620349 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096660707 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069865837 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091531967 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096294548 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.128509354 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069991246 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075456324 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070354506 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.078288659 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069658409 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085829495 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110103672 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114369582 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073717017 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102327262 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070307764 seconds)
  done (took 3.362579865 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076641831 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074205223 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075115591 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069567516 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.08122238 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076439157 seconds)
  done (took 2.038055541 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072708434 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.075186089 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072016217 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071883554 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076361561 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072442241 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070225206 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.07219263 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.0716064 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072073324 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071069415 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070626834 seconds)
  done (took 2.447411188 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.203072743 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073104943 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07386259 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.07084924 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07498112 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070999956 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085620282 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072513208 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096674144 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.07090055 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071656159 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073462781 seconds)
  done (took 2.619564588 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211385055 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07984131 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238016128 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155731624 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116421824 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119901993 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116155785 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117130223 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.146398 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105361083 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168975898 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170164035 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112761943 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140559108 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094517874 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.104161539 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160763952 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16836586 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110358677 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167855177 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150618603 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129578061 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14863284 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105980847 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109749037 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125465367 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075903556 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084726792 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171244356 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136909456 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148018007 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115721797 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102455874 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178344443 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170630815 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14591744 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152265824 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089272443 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107586945 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135426057 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200204445 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093757517 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167544378 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254699839 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086083574 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138486631 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122243894 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122335103 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109492394 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09492904 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150696621 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185901993 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.142375225 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091281688 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127046685 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118374322 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119035963 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118489223 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180739544 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162080999 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132015285 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075705443 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115115607 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153169257 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134419737 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112606352 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12868474 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096960967 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139956257 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15684842 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128195817 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148776762 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.120403315 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092258871 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122152421 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1441183 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133282555 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161584049 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127165755 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07699675 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128890652 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107168541 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084861848 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148097916 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079516809 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17572982 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103042627 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108811673 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127101833 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111561142 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112711851 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165126597 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147627034 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107580347 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069319367 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107962075 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120998507 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148305406 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090197784 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109855256 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117632446 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080497352 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138171673 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078464417 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122383094 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078776748 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123955511 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128209591 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.080494831 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121708385 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105230634 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100829685 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131661602 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154782562 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088659098 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083912821 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161651775 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120916563 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102920072 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140977025 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152621135 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101272514 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102007533 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14514834 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167957188 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091480292 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158154 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106313565 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085779158 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.089159999 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121924193 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111994713 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124249396 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082953126 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116923874 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16247245 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.077056347 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097546135 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132102329 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080500015 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082790484 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106849312 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106962486 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098169717 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101397902 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103126898 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134188578 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11959074 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.365935399 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131208459 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105766694 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171618289 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093660901 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.108864537 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110759943 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075643264 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.140973237 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162581498 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086212247 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16703166 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.126774335 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121752383 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12376544 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089191217 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143144494 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084677286 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075680579 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146164916 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115100263 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114715392 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15297013 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120542438 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129651795 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.123447985 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139491118 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13601129 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131947967 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111186623 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091876925 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116213817 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13340865 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078267224 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095612644 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084474154 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109800799 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101034638 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087768242 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146609031 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128214752 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116202678 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115175208 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101085586 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149023863 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080714226 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132384942 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122089601 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099066389 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152574941 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152208457 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134947566 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102751259 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291840696 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075228353 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07964815 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.095252696 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126981897 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088156848 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088413826 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121802339 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148212643 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131936296 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142017732 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126484277 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123810114 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156446906 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074276655 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.121278942 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147822532 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123852543 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.108954238 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095186733 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104131302 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143938388 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111405728 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181264484 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116359155 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127398389 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15653968 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104926362 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084401369 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106779025 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139085709 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10861598 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145513134 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102295063 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092018468 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111906144 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079472786 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102607866 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131962559 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124449765 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136351736 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116942002 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1369247 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081630087 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120504631 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12745905 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126675523 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068138026 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121206853 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160446481 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098483897 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120669786 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1530906 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233645293 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.140793198 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177572141 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14823484 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089584159 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113148267 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122352026 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129157935 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121776813 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142337061 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111798297 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13764007 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113218926 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089102331 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091213154 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101590673 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10851765 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09967294 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109644916 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.1171756 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100606573 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135662724 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108471726 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113241445 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120399598 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.102437202 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095944124 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100265528 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174856619 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121895003 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171722647 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.10245959 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145184585 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164112921 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078855682 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083351259 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081943185 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142508392 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088435511 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13311304 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.117007939 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120989956 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127261552 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145801895 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099824607 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072783616 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111878742 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138018305 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12594448 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101728059 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106936444 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163068173 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102582367 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083376058 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117548295 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266869615 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108540018 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173008235 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.066558431 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110755377 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080576445 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085156961 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129347225 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153345713 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084260278 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104201654 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122385263 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115852974 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12958542 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105951717 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115567788 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128256093 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151031369 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131757404 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093860096 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115870531 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13001612 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1574805 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105853006 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101454717 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174243282 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152485614 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161389645 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093337344 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116747773 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116297908 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114337721 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140653259 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087894576 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164540077 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086751213 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137841486 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107920408 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093076226 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134938011 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.115295387 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092207833 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149615783 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120255815 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087134367 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080824607 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119672099 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12098031 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109047182 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079305831 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142134961 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077620552 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283641894 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162279627 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085507066 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108888153 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099840907 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084201947 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111615271 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105598791 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091023394 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103158763 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172020626 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090754868 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149840378 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135221581 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116704938 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137432925 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106390102 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.647055787 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082034294 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151651441 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121219381 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173523695 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104611171 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120985001 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112400924 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127520061 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145625959 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107791569 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181624701 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134257618 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.119118198 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083958583 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105761216 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107544456 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09273057 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111794979 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11538972 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120993187 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097105518 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.119909076 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127437538 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08631176 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101014695 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157034293 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121040851 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147371311 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140326927 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088914736 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119615057 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139083843 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083990573 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123718485 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.302065369 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110836187 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103631004 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085614669 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.105812819 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16110437 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077300779 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164671555 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122255204 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112423525 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115180017 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114680601 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135811084 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111922239 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124943925 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09598573 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110965683 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115960265 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085047353 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080743283 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109020178 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114909985 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100630598 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101544335 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103551587 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152161668 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076382937 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103748096 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119276347 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149716685 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174563527 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091526137 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087342711 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124304228 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119858987 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.1165746 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123492763 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083089844 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085108114 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084098262 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.084629279 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110865969 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116405506 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117861297 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11259726 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16521954 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086995097 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227478911 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100515345 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108744426 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074818458 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081482206 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099225051 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102287935 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109700256 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115742601 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308118703 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099451827 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.095694431 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096659583 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079263415 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08881789 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130263523 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113658226 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121329515 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10524216 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066617108 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111946332 seconds)
  done (took 60.606881648 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111995703 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086676524 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100684821 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148952812 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127253844 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204161108 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160126511 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193387546 seconds)
  done (took 2.846143127 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073685037 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100094349 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106805386 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08789227 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071446072 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.07381541 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232775207 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085094389 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070716597 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09945742 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082439517 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074080182 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.438152474 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070175167 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.073030605 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066393783 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071372182 seconds)
  done (took 3.582517701 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.397029742 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.622502682 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.348995807 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.081162498 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.953744997 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.097774661 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.141243791 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141962069 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082545208 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.529629241 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.409769189 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135722973 seconds)
  done (took 18.659782282 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085362 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079214487 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094424893 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093748375 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082179279 seconds)
  done (took 2.147724166 seconds)
done (took 110.735154197 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.086204246 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.620454463 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058582308 seconds)
  done (took 2.420386485 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091527887 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08927042 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090185975 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087476786 seconds)
  done (took 2.077266958 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078586389 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080097374 seconds)
  done (took 1.87172394 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.237349062 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174179139 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.10041708 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085975225 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08280504 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083029931 seconds)
  done (took 1.971449559 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076941165 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079846585 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076654967 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080852911 seconds)
  done (took 2.02900827 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080900355 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056431737 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059646715 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.062786027 seconds)
  done (took 1.975032899 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089879964 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085874289 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083097106 seconds)
  done (took 1.974616664 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106567051 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091110002 seconds)
  done (took 1.913273861 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085734274 seconds)
  done (took 1.802333441 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098548599 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104586978 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135244298 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11450283 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141756783 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112345812 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088668705 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089839572 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080193481 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089851481 seconds)
  done (took 2.771550469 seconds)
done (took 23.117192993 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082574364 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370346184 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363801807 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094516176 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673830205 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360419047 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.971611811 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096847307 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119281935 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072071477 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089113036 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653097856 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.962830791 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330838591 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.951082049 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324922435 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65328911 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072509668 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071934943 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07231027 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.95940732 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071677267 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071757914 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072586431 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654986634 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375477934 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072548439 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326451302 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07275602 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075177461 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359626591 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073263277 seconds)
  done (took 16.274443522 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07471484 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.140194074 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077688691 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088256509 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075101138 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073474621 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075504814 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073340399 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123964067 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072236618 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089149771 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071937373 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07537453 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072422222 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092115487 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072392111 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073555424 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072975657 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07298012 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073298555 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09172338 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072630678 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073650192 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072699256 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073006693 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084514248 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073716526 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0725495 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073633502 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074741302 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07551907 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073065203 seconds)
  done (took 4.283703184 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122000068 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129041297 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078563802 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107484149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115724533 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074515507 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14543788 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097380262 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130869017 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073385757 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089872361 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073067291 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105370807 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072905481 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092496403 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073505241 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073675119 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073101186 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072618158 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072970124 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091855121 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072565895 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072996346 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073312763 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073133691 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085930805 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072920922 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072901938 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073395685 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074843553 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076809168 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073658192 seconds)
  done (took 4.522348392 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077338586 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080068563 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087132875 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088709036 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074621039 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076281595 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076769348 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074053843 seconds)
  done (took 2.370951593 seconds)
done (took 29.174877941 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083165879 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073473163 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.077258198 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.092090167 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077691026 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082968863 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071488151 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079344572 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077814573 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076857968 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07860976 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072118784 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075654906 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071558378 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078658029 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.072729178 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083946123 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075879229 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083712532 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084246538 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075077504 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077713844 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079876606 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084051123 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083560656 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08373658 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081313482 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077227511 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073483545 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07486838 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082474633 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088974858 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073055214 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08402909 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072312023 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072027358 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075816432 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072600104 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084747801 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081790733 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073995894 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081098496 seconds)
  done (took 5.016075833 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092075273 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096346737 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08865876 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066140479 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070819763 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069169853 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093292165 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064225849 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063893937 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092703431 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.060363397 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063632618 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067245109 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05848515 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063917612 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061425883 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.066410373 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.06046747 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063801361 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063745069 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093068014 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.059417165 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082081032 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066909409 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060661395 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.066381637 seconds)
  done (took 3.599735674 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077920953 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087664634 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093339654 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145605134 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115583742 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081430344 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082795578 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096842259 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098156309 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071523921 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075301803 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096364259 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092112728 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078461273 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072310646 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088517589 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089367658 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074173124 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077533659 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095095852 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089660007 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088836164 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095504128 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085417073 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.07129864 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074375738 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075491507 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08586015 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075162771 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080989335 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075031039 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075163945 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074659193 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083372057 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074891522 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07372611 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.097366215 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084130349 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082056563 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072525375 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080059078 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07282907 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096154005 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127197781 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071538766 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078243963 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.087238242 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082253705 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071025741 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096767231 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082773984 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071816628 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075064688 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070838328 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071851057 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075278187 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074332503 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075160447 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081402337 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077641232 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.095795053 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07692598 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087996006 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071615759 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07969513 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071259305 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072993392 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071771602 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097223276 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073999749 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112827217 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072692678 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073298201 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081381772 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079566371 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078074997 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.07198403 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088132693 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08263511 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075782505 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081986103 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075282807 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074674885 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100479202 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074220433 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07461992 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072909996 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077796236 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074710125 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073501779 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085491677 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071903143 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074909579 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088762695 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071782767 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073375808 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07756222 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076676549 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071285295 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082956083 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076243414 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072564836 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081951592 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072542326 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075100478 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083783775 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079185387 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070893032 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075961664 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077503128 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072544242 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073293553 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075338764 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073937568 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080069144 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078395281 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076088858 seconds)
  done (took 11.237258614 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165567331 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156835872 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075054065 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149225264 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081110921 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083458478 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151081818 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099464662 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072857591 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073414519 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073718154 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11459778 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109934687 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120995443 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083609918 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07243173 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095023659 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119369677 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152856461 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147181832 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094876173 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081891367 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074511297 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073717008 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075124898 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083223388 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090372056 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081416525 seconds)
  done (took 4.633685519 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083782795 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105924962 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079861637 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094156862 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.093363025 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07194407 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074758722 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073701986 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088244536 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082055604 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072395327 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077517729 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078666067 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075173678 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07340575 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079123201 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079172374 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073730493 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075600134 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077156463 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082968904 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096005577 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076079669 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071307177 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07726551 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071177058 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068092007 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087711589 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07289479 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097024239 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070687497 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07737199 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08587747 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073362963 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.07225987 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07255293 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071852946 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07235408 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074188425 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.072909621 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070932639 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.062201473 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071806711 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082784162 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.085200435 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.061517827 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076466617 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.076981004 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077304575 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069735616 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074887786 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074750961 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07499566 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079273423 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076396085 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07712354 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073489903 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.079042736 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.080452424 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071917012 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069341933 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070469451 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076872007 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070003043 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086787771 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076594471 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070610357 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072218847 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074318771 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.085215338 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071677474 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07700092 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069619824 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073956872 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076857153 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074338366 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073584395 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070845723 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071952201 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072452697 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060470158 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072083264 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058590709 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075015286 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070556631 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.07136539 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072157188 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076550603 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083106729 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073895749 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078330257 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073353171 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072169031 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07589754 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064834977 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075131651 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083050728 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086461244 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072219586 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070076072 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085578968 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07700789 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072121921 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060882737 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076755655 seconds)
  done (took 9.743893227 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09455009 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07472195 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086493915 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093437093 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.090358632 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079732656 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082004923 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07369418 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087201113 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.078531165 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080421347 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072301493 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081730349 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080903992 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075020265 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081434922 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076509089 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087571658 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086936707 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.07223127 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080765184 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084221469 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.093842 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08507247 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082800818 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084444891 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.093629532 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081923273 seconds)
  done (took 4.108918975 seconds)
done (took 40.07045323 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.843669709 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.082744004 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.830085111 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.197433846 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.900393753 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.997396281 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.922666132 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.835878926 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.971158992 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.859549414 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.135772435 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.92196682 seconds)
done (took 66.381532428 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.851311971 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.961416414 seconds)
    (2/2) benchmarking "String"...
    done (took 2.060985789 seconds)
  done (took 5.77769174 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.05296434 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.399520153 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.068097932 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.817639608 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.825746418 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.137253473 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.621353195 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.327827063 seconds)
  done (took 30.952797487 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.003072983 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.042430707 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.534414973 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.560991915 seconds)
  done (took 15.944841632 seconds)
done (took 64.418976804 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.828102575 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.839922599 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.828321669 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.805466434 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.879595991 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.831547643 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.979521468 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.847466499 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.81896242 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.808330103 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.821106291 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.254151614 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.831019493 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.979576757 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.820364029 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.822794973 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.835715667 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.30639564 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.978432006 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.831388831 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.822801369 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.830350458 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.822267503 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.827522867 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.83534182 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.820490589 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.206652967 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.828332609 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.63490553 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.824255499 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.86685423 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.213375174 seconds)
  done (took 205.235634511 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.820804462 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.790219201 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.871698841 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.831235368 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.299680787 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.003201375 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.923114832 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.33623685 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.826629146 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.836807749 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.974165622 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.821248352 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.994218291 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.770908339 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.85162362 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.913165701 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.954302875 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.006511901 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.853431258 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.97287898 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.824107436 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.84567348 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.793157923 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.968595308 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.855601153 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.901587784 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.840688873 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.83680852 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.013874466 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.946492053 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.839638424 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.849118971 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.030100473 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.694393809 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.828703698 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.836739785 seconds)
  done (took 171.314066132 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.016134683 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.82359014 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.822282698 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.822221847 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.827440659 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.821768625 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.949130886 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.95063541 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.442857629 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.307027567 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.876564224 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.625066892 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.822304682 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.890654586 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.836150298 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.823607859 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.838003166 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.849569344 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.82629984 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.82349234 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.951651465 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.837598576 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.038901121 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.832879172 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.823302117 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.829864865 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.194703027 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.824581887 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.82837178 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.065809937 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.824994884 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.824784518 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.672767768 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.332709755 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.905621965 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.825686137 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.829913363 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.825256616 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.042092334 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.825682399 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.824431484 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.827704064 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.961781884 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.825195515 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.94719302 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.829057079 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.303656724 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.824685271 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.824588367 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.824577976 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.522121729 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.408606746 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.823844574 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.824517248 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.82736965 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.825691394 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.823945534 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.831387 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.510674435 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.90406609 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.827347254 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.829244313 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.831071887 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.826984286 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.8409563 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.825685118 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.086621844 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.886518196 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.047508026 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.949620213 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.829156228 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.892900444 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.919844504 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.825827206 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.825294245 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.825850411 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.82631451 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.826698245 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.90737135 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.826277323 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.955892991 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.826067782 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.833410911 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.827691397 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.878626447 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.8963825 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.828216094 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.67800458 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.826857873 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.826752724 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.096609831 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.892369458 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.827077571 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.827057405 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.827267975 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.955643479 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.950241464 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.56085667 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.828194124 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.546127654 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.835269163 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.827447711 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.963256925 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.82874929 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.959921509 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.828441538 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.909244894 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.832423917 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.829180385 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.827732091 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.859912411 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.828527478 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.888840634 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.828102323 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.199367209 seconds)
  done (took 407.580719057 seconds)
done (took 787.953815087 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.487486329 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.447204207 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.555219837 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.467105211 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.444523572 seconds)
  done (took 14.163556276 seconds)
done (took 15.925786944 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.917041634 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.923756899 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.852923353 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.92000409 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.850612443 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.91969787 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.903200213 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.853844211 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.888531063 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.854694906 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.891136966 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.854458043 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.841426903 seconds)
  done (took 26.235189656 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.065293957 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.072105386 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.898834372 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.070950829 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.874960164 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.063611189 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.98966596 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.980699263 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.980605672 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.845244507 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.84147495 seconds)
  done (took 23.448375549 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.070508175 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.071413813 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.905412663 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.068938271 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.877765853 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.075902033 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.995147052 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.987444312 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.986297474 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.845815735 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.84240595 seconds)
  done (took 23.490843688 seconds)
done (took 74.936665056 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.838430362 seconds)
  done (took 3.603238259 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.86588108 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.033568227 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.84609817 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.841607667 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.838222798 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.838713562 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.842600493 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.83906849 seconds)
  done (took 16.710826286 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.835744161 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.835646563 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.835927243 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.838060575 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.83878661 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.835529111 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.835101098 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.83803491 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.835104555 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.838350319 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.838805796 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.835708924 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.838061365 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.839756183 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.835766723 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.839093379 seconds)
  done (took 31.160201416 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.837486024 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.83676397 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.836082747 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.837135011 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.835583537 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.837486216 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.837651845 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.836705972 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.836602336 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.835843598 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.837078581 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.837070694 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.836731412 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.836651332 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.836133085 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.837203933 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.836357356 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.837559189 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.841420642 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.83688423 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.837523388 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.836726565 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.8368538 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.837910138 seconds)
  done (took 45.858996907 seconds)
done (took 99.097343943 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.535828226 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.44883099 seconds)
  done (took 9.752371964 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.842980192 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.840282084 seconds)
  done (took 5.505920644 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.839822891 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.840207825 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.840620213 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.840571902 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.840207941 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.84060822 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.840676232 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.841457767 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.841550671 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.841103413 seconds)
  done (took 20.174350819 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.840276378 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.841694987 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.838858874 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.841343002 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.842140042 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.838726964 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.841167483 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.841052422 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.842573155 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.837756226 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.8408597 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.839085823 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.841391043 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.840077485 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.841084224 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.838543652 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.8392335 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.839333783 seconds)
  done (took 34.894650425 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.841267642 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.841130301 seconds)
  done (took 5.450837559 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.838674328 seconds)
    (2/7) benchmarking "second"...
    done (took 1.839085409 seconds)
    (3/7) benchmarking "month"...
    done (took 1.838896397 seconds)
    (4/7) benchmarking "year"...
    done (took 1.838517824 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.83912405 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.838380229 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.838780509 seconds)
  done (took 14.640108138 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.842249781 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.009393373 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.080281203 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.470411103 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.84381909 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.846071432 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.831578149 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.84528687 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.846946205 seconds)
  done (took 20.385134324 seconds)
done (took 112.570246427 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.680362772 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.845484089 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.07332074 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.893159662 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.901832273 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.185567998 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.874648733 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.149595666 seconds)
done (took 43.373430726 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.924288271 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.602840131 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.631498749 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.858781764 seconds)
  done (took 15.863189897 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.826010002 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.396090578 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.885035717 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.492458715 seconds)
  done (took 20.61200968 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.208916697 seconds)
    (2/2) benchmarking "read"...
    done (took 2.187993388 seconds)
  done (took 6.174088633 seconds)
done (took 51.345353061 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.844513787 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843850502 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.841771958 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.843868902 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.842346306 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.844489763 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.841210207 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.841378485 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.844533957 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.845044603 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.844474132 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.845143915 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.844621203 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84497893 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.842385151 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842497738 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.845849427 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.842759398 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842496538 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.842283652 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.845696223 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.841785959 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.844682547 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.842628779 seconds)
  done (took 46.01762631 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.844880373 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.843550266 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.846213644 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.845374901 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.843072675 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.846820543 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.845918228 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.843515643 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.846024329 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.845655369 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842851171 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.843912231 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.845586899 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.843765344 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846685082 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.843230658 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.846816022 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843669689 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84606424 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.844387413 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.846591243 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843372351 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.845539145 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.846463499 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.844944192 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.844215419 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.847300327 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.844704701 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846048421 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.844423538 seconds)
  done (took 57.125747599 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.851972421 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.855513893 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.846120793 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.847419802 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.847289773 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.847171405 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.847207954 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.847874991 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.847506151 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.847887784 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.848128314 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.847081793 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.847993065 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.848452558 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.848064449 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.84823556 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.8484175 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.848772393 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.84810071 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.847822052 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.848159714 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.848125292 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.849614239 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.848624302 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.848455681 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.848501857 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.848715492 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.848387478 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.847889977 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.848820686 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.848684419 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.849118105 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.848704684 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.848785944 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.848883538 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.8483529 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.854300707 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.856781544 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.848981181 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.849766941 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.849652028 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.848919119 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.849069065 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.849048492 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.849213018 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.849673597 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.848966404 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.849434822 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.851324627 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.849555854 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.84903052 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.849015313 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.849236379 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.848940609 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.84962404 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.850228783 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.850149762 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.849371714 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.850998219 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.850214481 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.85025082 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.850388934 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.849368301 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.849842646 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.849932033 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.850201656 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.849200991 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.849906313 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.850610582 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.850530672 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.850199209 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.851394795 seconds)
  done (took 134.92465361 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.849487419 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.848714192 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.849398685 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.848177858 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.848390833 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.850853643 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.848452085 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851284114 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847981626 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.851144439 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85031294 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.848680885 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848188835 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.851389206 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.850657645 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.84873507 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.851797645 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.848511649 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.851356331 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.850485831 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.851447468 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.848731572 seconds)
  done (took 42.472389077 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.852483607 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.851611615 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.849125979 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.852622977 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.84887017 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.852439043 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.853127612 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.852042241 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851886203 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.84916673 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84936713 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852376744 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.848903204 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849648468 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.850485253 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.849429476 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.853042495 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.850042425 seconds)
  done (took 35.095864144 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.850828753 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.849918268 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.852800598 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.850246891 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.851114682 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.853447082 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.851323395 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.853560817 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.852996845 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.850835059 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.854017765 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.852962833 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.853398942 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850897123 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.853431186 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.850821375 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.854234259 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850815207 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.85359106 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.852345111 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.85171845 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.85507496 seconds)
  done (took 42.530471135 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.854012769 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.85483622 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.851362175 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.851029793 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.851259609 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.853756225 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.853355868 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.851056344 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.854310426 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.854841188 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.852219736 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.85380488 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.852668323 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.852464182 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.851808295 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.853906094 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.854071351 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.852524686 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.854822916 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.851512088 seconds)
  done (took 38.841038641 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.854902625 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855247013 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.856095815 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.856741986 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.855240088 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.856061507 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.85560204 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.856772614 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.856575346 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.857346516 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.856495638 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.856922885 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.85770076 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.857037489 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.856644137 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.858384777 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.856849156 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.856981559 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.857117728 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.857527638 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.856841162 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.858275664 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.856653487 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.85680469 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.856863324 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.857872225 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.857925086 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.857938309 seconds)
  done (took 53.774211731 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.856679976 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.85627023 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.853770237 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.854023602 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.853494715 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.852953354 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.854007633 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.853946253 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.857047514 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.85358845 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.857003914 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.856799449 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.856842313 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.856480776 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.858393827 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.856989466 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.856963019 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.855657776 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.855871552 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.854345634 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.856931125 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857426192 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.858332654 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.854762721 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855219678 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.857579808 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.855007824 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.854819066 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.858073782 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.854071526 seconds)
  done (took 57.457168232 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.87628677 seconds)
    (2/2) benchmarking "in"...
    done (took 1.876373736 seconds)
  done (took 5.537157168 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.854727922 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.857811533 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.857680971 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.855253813 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.856153741 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.858370927 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.858555974 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.856076363 seconds)
  done (took 16.639626243 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.858398945 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.859411123 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.85928781 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.859697745 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.860038524 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.859809814 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.865449513 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.859845863 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.860411811 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.860703193 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.866523826 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.868517187 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.861444546 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.858960737 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.85933261 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.860957222 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.858846449 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.861253672 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.860147136 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.860129738 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.859952658 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.861840346 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.86174574 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.856790534 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.861269037 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.86968256 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.863479422 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.85999522 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.859860891 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.864069922 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.86012348 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.857392376 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.860798896 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.861286119 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.860476255 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.86150635 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.868104201 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.860992118 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.866963636 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.86077549 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.860498734 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.857532792 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.862994255 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.862529597 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.862632157 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.861825282 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.86181713 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.858381799 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.861283662 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.86523801 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.866894457 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.860797286 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.859187107 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.86506902 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.862058535 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.868061962 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.862726253 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.865511561 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.87120981 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.874412668 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.875480409 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.870089927 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.863649623 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.863913751 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.87116902 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.886378915 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.868770273 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.859487299 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.859039572 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.862201155 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.868971917 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.875455189 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.872280627 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.863437821 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.863152003 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.861495882 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.862791409 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.862973114 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.870342639 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.864925644 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.864219033 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.863888582 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.873229415 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.88610422 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.861961947 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.863718239 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.863584379 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.863764997 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.864261298 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.873986141 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.863842044 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.863566717 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.862417523 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.86417464 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.864732391 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.865467981 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.864174117 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.864719438 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.861868331 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.864422484 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.864355373 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.86739197 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.87331817 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.864819767 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.864596175 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.871097944 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.864117258 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.864371075 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.870154674 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.864017949 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.866024739 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.866035315 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.871593872 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.86219515 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.868286481 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.876032668 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.866094529 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.86624658 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.866433681 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.865551173 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.874609423 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.892593347 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.865362868 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.864536433 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.871288187 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.877624337 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.866174736 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.869561464 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.86552502 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.862885119 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.862923588 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.866932897 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.86592655 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.867622393 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.866932944 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.867425475 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.863603476 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.86649688 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.866883507 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.868385327 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.867526162 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.868617321 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.869594917 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.868826566 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.866997283 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.869506217 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.873074004 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.866627649 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.86792446 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.868239399 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.863898681 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.866888317 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.867389178 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.868581009 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.86635588 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.867905469 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.867229234 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.868328975 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.867184263 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.867453757 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.867881602 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.869183107 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.871761517 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.868119252 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.871975097 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.868223331 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.865310825 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.868156089 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.868461038 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.868884745 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.868260565 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.867790764 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.871875363 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.876974486 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.868021515 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.868541953 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.871404428 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.868374077 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.869070245 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.871592969 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.872193544 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.875991862 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.868966256 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.874291377 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.869240546 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.869070487 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.868724941 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.870276718 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.868817222 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.869956306 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.872167641 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.877148508 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.881828275 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.878474947 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.870859671 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.873229102 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.871017327 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.874052193 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.872119538 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.869584462 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.869446114 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.870972018 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.869375113 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.870441912 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.870691457 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.870244338 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.870152198 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.870339176 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.869261288 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.870981425 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.870458712 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.872275433 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.872930745 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.867318832 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.869967298 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.870838679 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.86979166 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.868148527 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.869676352 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.87067583 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.870540826 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.871043384 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.877650592 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.868289661 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.872133465 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.872040124 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.871632843 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.870474244 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.870702814 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.87396626 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.871378356 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.87815025 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.872262935 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.873112563 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.878109468 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.871373386 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.871733997 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.874446956 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.871564536 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.868280566 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.874687756 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.879823243 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.871280983 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.87282969 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.872351529 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.871921822 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.872022292 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.878343162 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.86926233 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.871510252 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.872599979 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.873617643 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.869502915 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.873701913 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.87343966 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.874349729 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.874550936 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.872801733 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.873148473 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.874500444 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.87372479 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.873670397 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.874329881 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.876184747 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.882308856 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.87840735 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.874522607 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.876044442 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.874226541 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.876602786 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.873734532 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.874675615 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.873658152 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.887248433 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.884111798 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.880092257 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.87606238 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.873813601 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.879562026 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.876937129 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.878332389 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.873913321 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.874341518 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.873890662 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.874594098 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.871990038 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.874831044 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.874390761 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.875093629 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.876330693 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.879024773 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.875224271 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.873330957 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.876435414 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.87582175 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.87449521 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.874543201 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.875092797 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.876636514 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.876885454 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.874457134 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.87588378 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.882006292 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.875340881 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.876035161 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.87498455 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.875253616 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.8733937 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.876166275 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.876579814 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.878934516 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.88440163 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.879328102 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.885589972 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.876858172 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.885986844 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.876734444 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.879135143 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.884714863 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.873161349 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.875757314 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.876577542 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.876646729 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.883398984 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.877236792 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.877348401 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.881352611 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.877979721 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.876773366 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.876243608 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.877287222 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.875929668 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.876702393 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.884196795 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.8778064 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.881345796 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.879565652 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.873759639 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.877197319 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.875683895 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.877152877 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.880360236 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.877718855 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.877787147 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.876640475 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.877450383 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.878153563 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.878490601 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.877149793 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.874842154 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.876773986 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.88495908 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.878959211 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.882819676 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.878116566 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.885787129 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.878414905 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.88509327 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.879314098 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.87943438 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.879213361 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.878032868 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.87920206 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.877993551 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.878686069 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.878501354 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.879357553 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.881802532 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.878555452 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.880528915 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.879248312 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.879804814 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.879483391 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.888636072 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.904126153 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.880921764 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.883224073 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.877448921 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.881348991 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.885147944 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.880138259 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.878270335 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.882236128 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.89120531 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.887284672 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.880512962 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.879922491 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.880565354 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.880728886 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.879287981 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.879895246 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.881424822 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.880885866 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.88097157 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.881884618 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.883098119 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.879955109 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.881264657 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.882195906 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.881149745 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.890305207 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.88161002 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.881270987 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.881456991 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.880476168 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.880841758 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.88149177 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.880816055 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.881808547 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.880033259 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.883309886 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.888101008 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.889109959 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.883801309 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.880724262 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.881855403 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.881556781 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.88272124 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.881551199 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.882145977 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.882535108 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.882761441 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.882609646 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.881974608 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.881594311 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.881799493 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.882219313 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.881783984 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.884829076 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.889718763 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.88298199 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.879879935 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.881957648 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.882511208 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.882016451 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.882599249 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.889888117 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.885710142 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.894514788 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.89209114 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.887541101 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.88268058 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.88654706 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.89081607 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.882171045 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.883661428 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.883940001 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.88490268 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.883738867 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.886654954 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.884048984 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.889554518 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.883193739 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.882528923 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.891024659 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.884918043 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.884435472 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.88471513 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.888257802 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.883579452 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.879998465 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.883292185 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.883740017 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.891012786 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.884821715 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.884965272 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.886140246 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.882894135 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.885230818 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.888834054 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.883855177 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.885655989 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.8816155 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.883942264 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.885157304 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.884447288 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.881286114 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.884265052 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.884699698 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.887609616 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.892326849 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.881966901 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.886795583 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.885748269 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.884796582 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.88576604 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.885706268 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.882390611 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.882259195 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.885908361 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.88598738 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.885905936 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.887823888 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.886217329 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.887611992 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.886001988 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.885948365 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.888715872 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.897637473 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.893664086 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.882432658 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.884563535 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.886022088 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.889410617 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.886849255 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.886132084 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.886161304 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.887377758 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.885958208 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.886282252 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.886119327 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.88952153 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.902415933 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.885999113 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.886593269 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.888459747 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.890048636 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.886626024 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.883569411 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.886382392 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.88777256 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.890472701 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.896325306 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.888573558 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.893545637 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.886672819 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.888285454 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.891625152 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.890727181 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.897569229 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.890912503 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.888244037 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.891243729 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.892484459 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.904795465 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.887901844 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.898404225 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.918481558 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.889217597 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.889768514 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.888978069 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.887799558 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.888914245 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.890522387 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.889093958 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.888944939 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.887969599 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.889459037 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.889207993 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.894205026 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.890401977 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.88780696 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.887749296 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.88836643 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.890046043 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.885499412 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.889894416 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.888970587 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.888861147 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.889603639 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.889324595 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.890227821 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.902737838 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.898956633 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.889906798 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.890259054 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.885458224 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.89230572 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.89311453 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.900548727 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.897372855 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.889890547 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.889121988 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.889943704 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.889969773 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.886453106 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.891495948 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.88957929 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.889543011 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.887276105 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.904303352 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.899243931 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.894542428 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.891071348 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.891679264 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.89075686 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.891010296 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.890990581 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.89162123 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.89219097 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.891858324 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.895114156 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.890467689 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.891938419 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.894564337 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.899195758 seconds)
  done (took 1120.458932236 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.888842769 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.887701189 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.88769137 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.887798371 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.88814836 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.887731029 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.888646105 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.888425241 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.887970354 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.888258927 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.888820302 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.888279898 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.888300774 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.889214354 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.888769304 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.88819401 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.887996525 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.888486627 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.889393087 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.889670071 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.88932369 seconds)
  done (took 41.474366778 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.892734653 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.888679028 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.889723409 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.891940898 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.888951698 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.891927884 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.890518027 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.891396746 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.892672987 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.889354926 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.892972101 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.891915304 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.88970201 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.889626436 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.889373283 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.892361218 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.892662623 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.890284508 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.892968559 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.889720298 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.893159579 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.890315139 seconds)
  done (took 43.421228781 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.89446293 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.894178982 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.89303764 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.890428677 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.893691058 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.890410002 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.893952379 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.892922531 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.893481012 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.89404028 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.893887194 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.89539009 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.901673927 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.899546486 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.895019286 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.89451488 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.037280133 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.89434338 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.895111663 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.894889591 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.891098459 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.900098229 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.891204692 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.891197887 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.893036974 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.895217831 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.893801886 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.894509077 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.89503285 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.895874245 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.899853635 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.895175919 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.895751474 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.895980694 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.894813517 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.89593683 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.898201985 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.896588846 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.892610495 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.894609747 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.90568129 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.917817497 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.896369446 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.902101987 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.895248266 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.894980807 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.89960953 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.904964148 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.892682479 seconds)
  done (took 94.862724959 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.896212514 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.89609281 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.893316405 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.895358827 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.895911211 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.896370774 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.896112781 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.89612843 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.893701671 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.893275398 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.896093432 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.893552221 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.892703238 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.896073995 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.896532622 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.8929528 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.893425536 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.893411655 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.893270564 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.892559854 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.89275179 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.896023928 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.896409641 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.893229852 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.895995467 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.893110555 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.893760057 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.89653226 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.894135312 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.893242378 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.895623161 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.896481011 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.89678724 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.896159238 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.894409346 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.896452355 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.896751616 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.894248122 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.896417807 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.894812196 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.896949326 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.898195675 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.897559502 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.896970174 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.894259479 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.894742598 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.894705261 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.896381843 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.895276986 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.896790573 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.897330873 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.894936966 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.898276686 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.894967157 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.897508407 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.897734465 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.895237995 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.895567141 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.898730193 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.896447426 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.89565457 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.898691056 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.896252755 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.898328944 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.898842607 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.896196883 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.89709249 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.8988026 seconds)
  done (took 130.72876245 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.899433228 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.900520982 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.899994107 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.899967625 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.899771736 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.899041241 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.900762767 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.899879225 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.900606733 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.899570201 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.899959144 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.899137811 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.900626711 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.900204471 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.900335713 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.899896371 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.901716355 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.900876844 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.901417521 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.901781351 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.90134886 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.901421721 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.900313662 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.902137761 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.901144525 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.901466178 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.901452972 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.901447052 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.901318359 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.901713012 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.902578726 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.901531812 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.901895701 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.901697155 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.902291075 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.902195084 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.901828284 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.903497486 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.902600043 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.902819837 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.90314005 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.902921002 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.903155301 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.902282555 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.902843892 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.903010149 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.903075215 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.903494034 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.902697853 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.903737198 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.90277494 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.902578071 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.902691596 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.9025632 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.903074093 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.902509595 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.902784738 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.902925982 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.903165653 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.90280169 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.903522661 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.903191357 seconds)
  done (took 119.733754836 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.901247821 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.901864374 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.899580044 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.899198172 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.901652555 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.89934611 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.902355567 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.902294244 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.902904417 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.902694498 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.902098507 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.900197799 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.901501279 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.903036208 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.900004731 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.901672958 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.901047422 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.899782071 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.902600478 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.901141061 seconds)
  done (took 39.853963924 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.900323609 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.904612555 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.900785238 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.902126499 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.903414336 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.901863301 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.903589977 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.902785724 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.900375802 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.903484875 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.903725547 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.903750914 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.900390062 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.900444454 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.904513241 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.901767559 seconds)
  done (took 32.267297522 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.90131902 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.905047577 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.90536964 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.9049059 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.902571528 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.901082252 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.904077153 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.901550642 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.902348406 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.904437927 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.904407399 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.90453828 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.904701542 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.905787475 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.901102473 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.905398747 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.901536225 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.901883288 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.904911506 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.905379625 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.902820436 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.902323914 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.905396275 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.905846541 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.902985592 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.90331159 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.902868748 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.90298375 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.903176042 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.90472532 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.902379622 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.906041363 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.90250675 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.902710072 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.907554896 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.903348478 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.906014173 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.906045995 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.90696221 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.905521855 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.906485062 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.904804682 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.9060026 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.90655393 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.903600961 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.906095345 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.904227817 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.906863524 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.901905891 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.903214929 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.904812448 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.906315685 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.905674012 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.904973341 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.904705825 seconds)
  done (took 106.565614909 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.905061717 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.904970892 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.901259814 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.904289049 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.905243244 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.901568233 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.906248037 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.900177423 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.899913201 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.902291031 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.901017994 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.903925799 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.900456048 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.902204297 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.900717829 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.902366955 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.900939297 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.90028821 seconds)
  done (took 36.073839362 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.901252234 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.900252423 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.903184676 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.901008273 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.898901134 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.902879917 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.900153186 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.902654057 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.903844641 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.899312438 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.898975538 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.902465597 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.901603808 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.902005004 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.897752627 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.895447262 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.89871769 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.897847329 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.894805458 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.895671587 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.896622261 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.896748428 seconds)
  done (took 43.621090603 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.896585253 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.899638365 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.911562074 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.918290248 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.917536705 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.933888131 seconds)
  done (took 13.300160776 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892905577 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895813907 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.893656264 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896396076 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896503107 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893346737 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894065773 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894002781 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896383579 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894567372 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894583747 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896459596 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896840808 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893998741 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897349058 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896954428 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894523116 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893728324 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895194593 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896828365 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89392604 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897174757 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894402081 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894660635 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895457747 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894621422 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896984586 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894801958 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895165644 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896766304 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897433772 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895470426 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8969211 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895270728 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897718084 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.89717608 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895817402 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897039295 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898690594 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894088503 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.896987188 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897392791 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898838689 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894800596 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897775534 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894692721 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895602738 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896712011 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894608935 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898694327 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898772566 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896508367 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899783957 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897268895 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898543008 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898130151 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896351022 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896160641 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899217075 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895405824 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894953018 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897903473 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896159818 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897449658 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897376634 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894844971 seconds)
  done (took 126.968540931 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894856855 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.895925781 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895894715 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896417267 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895767606 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895622359 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896428667 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896356951 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895734408 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895656268 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899145461 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896192463 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897025949 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893226805 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893590753 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893872402 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894397149 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89228502 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888806633 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.892016413 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.889220559 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888222867 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.888906962 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.888587584 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888614872 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.891090205 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.890717353 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.888649354 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.889443743 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888466239 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887395875 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.88858486 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888756119 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.888785476 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.889026679 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.888896608 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888446 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888486781 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88943666 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.891397936 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890143764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.890839386 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888370138 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.889551444 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888974923 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.889319847 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.889342262 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.888855419 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.888627925 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.890503561 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.888653353 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.889130659 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.889162154 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888235343 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.889611993 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888046114 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.88821804 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.888638449 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88868623 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.891821039 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.888093171 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.889276158 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892025554 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.889374457 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.89075972 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.889655241 seconds)
  done (took 126.629645336 seconds)
done (took 2608.151643319 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.888365536 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.905965858 seconds)
  done (took 15.61276374 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.053212187 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.006345521 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.889863214 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.915641806 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.888397661 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.884934767 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.909414768 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.891147157 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.888405206 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.8884996 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.88838126 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.073973141 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.941166939 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.885464624 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.886863003 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.978968766 seconds)
  done (took 52.693995942 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.888869371 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.889169835 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.901320827 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.892343725 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.888235943 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.901059889 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.923114116 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.892635976 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.932022957 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.902459219 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.965626488 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.900513813 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.886956163 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.942853266 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.900899769 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.901803238 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.98171851 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.96478464 seconds)
  done (took 36.26992996 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.965944403 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.885297455 seconds)
  done (took 10.668733037 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.893327192 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.922104064 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.936209259 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.89236794 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.899464848 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.881775378 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.892701072 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.89332983 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.913692855 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.922634409 seconds)
  done (took 70.863847901 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.888788615 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.883403158 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.882798766 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.881442411 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.875003681 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.878843685 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.879858147 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.875860843 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.554106324 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.914934496 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.887810505 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.886900988 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.881154103 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.882814706 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.878474132 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.903237611 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.973215644 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.878571785 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.876347911 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.884484112 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.879181676 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.930228152 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.896092657 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.881405882 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.910039427 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.553454047 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.888196692 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.887074711 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.968496334 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.877274916 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.878966407 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.880280983 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.883327869 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.239841672 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.154667433 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.880136556 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.894016868 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.886005757 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.875874804 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.97421423 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.881891624 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.884635431 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.525634157 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.136487076 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.989839687 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.921729327 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.194349757 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.900672179 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.88137774 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.907440527 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.881742003 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.879741287 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.892329324 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.365100078 seconds)
  done (took 132.723615876 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.87596901 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.225205781 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.046040457 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.87487879 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.164219658 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.085182282 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.874530963 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923142569 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.873735643 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.109725423 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.13377408 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.982451546 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.87488219 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.87208701 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.871205706 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.871031383 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.031463047 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.948295225 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.873791381 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.870207338 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.903387894 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.117274976 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.998855539 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.873983779 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.902754227 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.087294256 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.997213428 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.978736443 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.657730723 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.869195388 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.936351496 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.873917207 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.868009767 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.8677031 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.029862929 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.966895765 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957478034 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.87103902 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.868109898 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.870087499 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.542317314 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077898866 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.96941936 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.0136053 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.072035827 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.078457342 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.656854028 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.869163922 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.615750955 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.03813182 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.101967746 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.10918351 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.995091966 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.872598712 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.404542727 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.869503209 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.870947315 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.124420835 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.018522213 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.97227323 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.872758751 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.872336039 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.869336926 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.119854323 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.873599005 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.970901215 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.873100631 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.869669354 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.970722716 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.975988882 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.010972951 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.086156141 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.905293599 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.786178892 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.413195597 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.121061313 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.940022209 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125824826 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.873408891 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.871115723 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.954522032 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.720757848 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.129328489 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.124237345 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.128089665 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.91029464 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.602796163 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.869903496 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.103360281 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.095813841 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.135494484 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.081536333 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.115543694 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.201362902 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.871657337 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.870954645 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.085400653 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.011244248 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.874354026 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.221268561 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106947101 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.418578632 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.893838706 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.180744397 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.007569552 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.874342988 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.516597098 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.874352172 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.109608674 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.917151068 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.874080328 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87165611 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.096259505 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.865151231 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.873855945 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.520677264 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.937822657 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.877711586 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.109158699 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.877620618 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.14527014 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.875266387 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.113373833 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.915481252 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.908186646 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.105046979 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.081563727 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.877746816 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.119820379 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.120602753 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.99467001 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.09860976 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.570984192 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.87431706 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.165907829 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.878165975 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.873849812 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.047500591 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.874813556 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.021037827 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.875468053 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.172071702 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899947209 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.109406332 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.876474198 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.136763822 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.910838123 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.92849671 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.877869444 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.008550746 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.878718568 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.710943019 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.039444535 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.874800151 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.873903065 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.762236988 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.876053365 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.027258632 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.109905434 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900016733 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.951264017 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.546543214 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.874171905 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957508791 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.90289808 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.268481135 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.875261128 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.130769208 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.878197093 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.874734821 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.874120508 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.118366127 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.06352593 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.876731128 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.874983787 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.78594588 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.875197609 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.874337194 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.061514574 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.234850859 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.875924007 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081288701 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.879478293 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.00882312 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.877780429 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.959251163 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.221523214 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.874853753 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.875936195 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.87809119 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.876858605 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.877801818 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.14396693 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.905546126 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.397254861 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.017082132 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.155233818 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.192051474 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.128500089 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.923884765 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.876836126 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.135737911 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.880174374 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.943070409 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.878758864 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.901437106 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.110227493 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.878736821 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.090503964 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.159926536 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.734027643 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.928452998 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.878998587 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.878369765 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.87752565 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.025588106 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.96780398 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.879682882 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.877855761 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.995154917 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.002803876 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.09036541 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.879772038 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.052906642 seconds)
  done (took 904.766933009 seconds)
done (took 1225.417606559 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.879954516 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.877127927 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.866234087 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.879294476 seconds)
  done (took 29.313157733 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.885487024 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.8820221 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.885047539 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.882211872 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.883822361 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.883337008 seconds)
  done (took 13.109694053 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.894602877 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.878166573 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.305619762 seconds)
  done (took 21.887288485 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.95063419 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.268807005 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.991576465 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.306572514 seconds)
  done (took 10.326625747 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.885346139 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.883789933 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.885159723 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.885048884 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.886935771 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.886210675 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.884432906 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.88506053 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.886613402 seconds)
  done (took 18.779905895 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.990602966 seconds)
done (took 99.216661144 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.199335862 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.174410283 seconds)
    (3/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.172751631 seconds)
    (4/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.976152018 seconds)
    (5/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.891250181 seconds)
    (6/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.999049656 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.014211076 seconds)
    (8/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.960931304 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.900022763 seconds)
    (10/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.941887424 seconds)
    (11/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.932840654 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.908853163 seconds)
    (13/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.899307097 seconds)
    (14/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.440585852 seconds)
    (15/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.96815774 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.790089289 seconds)
    (17/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.896672393 seconds)
    (18/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.88694203 seconds)
    (19/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.982157562 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.890095484 seconds)
    (21/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.992852291 seconds)
    (22/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.196104513 seconds)
    (23/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.228438394 seconds)
    (24/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.00332551 seconds)
    (25/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 3.266424927 seconds)
    (26/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.900031507 seconds)
    (27/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.039393435 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.109955792 seconds)
    (29/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.019653711 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.909747911 seconds)
    (31/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.105487841 seconds)
    (32/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.392560849 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.981556136 seconds)
    (34/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.896770664 seconds)
    (35/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.383049361 seconds)
    (36/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.370527507 seconds)
    (37/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.868192797 seconds)
    (38/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.09898494 seconds)
    (39/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.569497848 seconds)
    (40/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.145333739 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.998104472 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.867972722 seconds)
    (43/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.292871471 seconds)
    (44/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.910543083 seconds)
    (45/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.97999636 seconds)
    (46/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.167418148 seconds)
    (47/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.90895086 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.878585949 seconds)
    (49/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.892186693 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.531289312 seconds)
    (51/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.231258645 seconds)
    (52/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.813512496 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.057966677 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.179476536 seconds)
    (55/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.136730209 seconds)
    (56/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.37208729 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.114770665 seconds)
    (58/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.887945867 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.954305844 seconds)
    (60/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.962706505 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.880287785 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.019493557 seconds)
    (63/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.990104926 seconds)
    (64/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.883331993 seconds)
    (65/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.575719799 seconds)
    (66/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.911638362 seconds)
    (67/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.879084736 seconds)
    (68/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.907416031 seconds)
    (69/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.87916861 seconds)
    (70/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.240936475 seconds)
    (71/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.063131817 seconds)
    (72/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.96322892 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.866150428 seconds)
    (74/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.992293027 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 3.201779053 seconds)
    (76/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.780624234 seconds)
    (77/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.063007368 seconds)
    (78/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.335271399 seconds)
    (79/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.024040633 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 5.539538016 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.153077586 seconds)
    (82/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.871309666 seconds)
    (83/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.484755185 seconds)
    (84/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.006102419 seconds)
    (85/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.029883344 seconds)
    (86/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.295568809 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.535986929 seconds)
    (88/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.871919294 seconds)
    (89/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.486193254 seconds)
    (90/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.087615426 seconds)
    (91/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.97619548 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.012923172 seconds)
    (93/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.957478271 seconds)
    (94/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.339653551 seconds)
    (95/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.178021662 seconds)
    (96/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.466455927 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.573441565 seconds)
    (98/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.885755303 seconds)
    (99/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.982787883 seconds)
    (100/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.177506273 seconds)
    (101/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.132099312 seconds)
    (102/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.964021951 seconds)
    (103/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.945687648 seconds)
    (104/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.067523531 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.807209146 seconds)
    (106/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.982637732 seconds)
    (107/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.266464345 seconds)
    (108/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.007122789 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.081414631 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.181656444 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.181930812 seconds)
    (112/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.036804455 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.188081557 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.885556195 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.870879636 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.011982394 seconds)
    (117/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.1064002 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.958218291 seconds)
    (119/309) benchmarking ("sort", Float64, false)...
    done (took 5.639682819 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.88645641 seconds)
    (121/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.849738276 seconds)
    (122/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.923176768 seconds)
    (123/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.271165418 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.871195041 seconds)
    (125/309) benchmarking ("sort", Int8, false)...
    done (took 4.843777883 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 2.108088801 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.905098797 seconds)
    (128/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.979238886 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.792493674 seconds)
    (130/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.421521787 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.138993529 seconds)
    (132/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.88551423 seconds)
    (133/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.011379918 seconds)
    (134/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.244439443 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.182355219 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.108270453 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.137845667 seconds)
    (138/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.021823492 seconds)
    (139/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.16165734 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.989285392 seconds)
    (141/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.071069044 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.922373723 seconds)
    (143/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.257628742 seconds)
    (144/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.327145687 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.114444128 seconds)
    (146/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.886841569 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 3.437436521 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.892472339 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 8.640340156 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.363232394 seconds)
    (151/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.04487971 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.260874291 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.252873927 seconds)
    (154/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.406542424 seconds)
    (155/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.906187003 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.903676463 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.229248438 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.599188967 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.17435565 seconds)
    (160/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.957922089 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.986629806 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.964346721 seconds)
    (163/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.077987461 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.913360855 seconds)
    (165/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.321489103 seconds)
    (166/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.88917843 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.944122643 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.212629894 seconds)
    (169/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.889626214 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.987129895 seconds)
    (171/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.946231402 seconds)
    (172/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.035289342 seconds)
    (173/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.071651541 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.800688105 seconds)
    (175/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.996250865 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.275516036 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.218795903 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.889872348 seconds)
    (179/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.986266726 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.988785754 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.080604752 seconds)
    (182/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.139385204 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.917742954 seconds)
    (184/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.361436967 seconds)
    (185/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.893183799 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.070854877 seconds)
    (187/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.954336394 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.184311121 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.925517227 seconds)
    (190/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.912251491 seconds)
    (191/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.113781645 seconds)
    (192/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.989249849 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.87536045 seconds)
    (194/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.962034631 seconds)
    (195/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.724648454 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.053461409 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.845738819 seconds)
    (198/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.962755985 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.947619604 seconds)
    (200/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.875774217 seconds)
    (201/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.184458592 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.892897744 seconds)
    (203/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.850413895 seconds)
    (204/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.876256623 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.977671811 seconds)
    (206/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.091718094 seconds)
    (207/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.958504863 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.984535645 seconds)
    (209/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.161723428 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.019859716 seconds)
    (211/309) benchmarking ("sort", Float32, false)...
    done (took 6.552788705 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.878890491 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.940693877 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.305242987 seconds)
    (215/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.916307323 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.563328884 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.912317242 seconds)
    (218/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.962655219 seconds)
    (219/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.983270458 seconds)
    (220/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.909818291 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.983298703 seconds)
    (222/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.461545998 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.911119428 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.278166956 seconds)
    (225/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.053068514 seconds)
    (226/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.128834184 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.156376158 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.741586736 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.895870991 seconds)
    (230/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.87968442 seconds)
    (231/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.066080425 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.969825348 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.87918637 seconds)
    (234/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.076680916 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.010336071 seconds)
    (236/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.893464595 seconds)
    (237/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.008797529 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.127203144 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.036322273 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.141945503 seconds)
    (241/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.977233678 seconds)
    (242/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.130859659 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.065895154 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.716088845 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.970194951 seconds)
    (246/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.93738377 seconds)
    (247/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.707932408 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.192115513 seconds)
    (249/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.135653601 seconds)
    (250/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.407071379 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.150236505 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.277451527 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.995820724 seconds)
    (254/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.985593407 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.029057175 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.807048648 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.135641285 seconds)
    (258/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.098289036 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.917561955 seconds)
    (260/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.313049212 seconds)
    (261/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.248657141 seconds)
    (262/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.050270894 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.846562456 seconds)
    (264/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.730757195 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.250898836 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.889628839 seconds)
    (267/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.901999916 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.993123896 seconds)
    (269/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.985467124 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.890243594 seconds)
    (271/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.062762501 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.030378508 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.987919639 seconds)
    (274/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.134655767 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.895449538 seconds)
    (276/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.02252372 seconds)
    (277/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.324430794 seconds)
    (278/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.970221234 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.076206079 seconds)
    (280/309) benchmarking ("sort", BigInt, false)...
    done (took 6.891890617 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.894411803 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.001917575 seconds)
    (283/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.027149825 seconds)
    (284/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.193620695 seconds)
    (285/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.891629685 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.988215001 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.829099082 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.06165617 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.12743054 seconds)
    (290/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.007380666 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.194900055 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.631490652 seconds)
    (293/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.891254668 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.963139528 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.70408422 seconds)
    (296/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.946443882 seconds)
    (297/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.702999019 seconds)
    (298/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.572618371 seconds)
    (299/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.939806266 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.222205988 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.984874257 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.909918012 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.042303661 seconds)
    (304/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.917059602 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.916166153 seconds)
    (306/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.921110058 seconds)
    (307/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.514110124 seconds)
    (308/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.164546162 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.038995901 seconds)
  done (took 1011.490716023 seconds)
done (took 1013.360470952 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.932314897 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.919735737 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.909041154 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.930832392 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.015774053 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.931685227 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.9212784 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.91286612 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.957485417 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.959430154 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.900848996 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.93102369 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.905881846 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.904080768 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.908860536 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.917416196 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.213810348 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.926739375 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.91942682 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.919687176 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.920729719 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.900771862 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.959189511 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.930420523 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.914543848 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.914200993 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.906642245 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.924452728 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.015310348 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.907195078 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.913351716 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.915785036 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.213281191 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.933132897 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.90541804 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.924497826 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.915705279 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.919209856 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.91515876 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.937366813 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.306784446 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.935169687 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.906966725 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.911615348 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.911405909 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.916551267 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.907660839 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.917166398 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.918718171 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.920204214 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.297337735 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.951797812 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.908583308 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.912664071 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.923397164 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.906944079 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.91586475 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.921961318 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.925679074 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.922328388 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.200415998 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.941100672 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.914864513 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.923132402 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.915407069 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.333129899 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.93929795 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.91842693 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.307930434 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.950047128 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.335003203 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.945198098 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.915164475 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.921480561 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.937858732 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.214965515 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.931387742 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.912756211 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.915582198 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.904356035 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.923511368 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.919765107 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.919201451 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.914110507 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.920579597 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.935241974 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.923172304 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.909280397 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.922113863 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.927318824 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.915216773 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.920137351 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.917087498 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.90962732 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.922618892 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.916662184 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.911944957 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.909750597 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.919327738 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.925234482 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.304126306 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.956346111 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.91183567 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.910656935 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.913323151 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.922877963 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.306056633 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.940243317 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.937685061 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.96313593 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.916090623 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.204207142 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.934675026 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.925790614 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.924798587 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.918743418 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.912342356 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.203626431 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.325087454 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.954409359 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.91782267 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.907478427 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.925242237 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.917206887 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.911723774 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.218730567 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.941746664 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.924321217 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.030464344 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.927073486 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.941256382 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.90775327 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.920102689 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.938273749 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.931385673 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.942188251 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.920026174 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.926282469 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.926456353 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.914582924 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.922387092 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.927229327 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.918874202 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.924067518 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.912318256 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.939423064 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.9236565 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.925192661 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.938222753 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.032399626 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.914968676 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.206312282 seconds)
done (took 299.915992204 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.977976276 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.902482215 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.005404354 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.906304969 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.98783821 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.992350855 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.903650441 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.904078176 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.904061291 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.281281596 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.904747583 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.905652366 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.907589516 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.905915359 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.990126457 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.907010757 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.904436432 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.246021434 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.90902561 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.979355332 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.900467556 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.905120554 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.90668733 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.288304741 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.901046512 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.904879238 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.981655076 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.907712921 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.250072428 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.902106094 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.904987414 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.251651831 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.000671852 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.927073497 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.919476143 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.915884595 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.990424158 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.911829003 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.99064779 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.989483015 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.007525963 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.950910497 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.90866162 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.904323356 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.910946346 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.910994244 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.906331647 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.936767252 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.91033898 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.907292881 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.247260574 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.918622647 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.917002122 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.906956437 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.907787976 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.932429279 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.906889965 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.910665727 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.000818724 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.911053033 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.97171387 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.28983171 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.283265992 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.9100521 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.907171042 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.907217928 seconds)
  done (took 186.890877185 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.975029877 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.98817106 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.975397411 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.912637513 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.961307943 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.977902727 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.912870666 seconds)
  done (took 15.537144669 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.916050413 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.910766469 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.964660611 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.963398431 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.912067725 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.059506178 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.912008808 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.923064001 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.908862601 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.963475725 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.911455656 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.910663737 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.918893038 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.911508907 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.961610683 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.92276329 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.028032441 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.912594843 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.912685661 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.06373554 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.910004661 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.918952812 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.965937806 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.923522183 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.91244367 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.918540513 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.497505482 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.912768878 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.909908738 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.91182947 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.911170989 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.952818571 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.912183446 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.910541256 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.90928426 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.028722676 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.91265194 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.909931454 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.912639098 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.911166198 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.913855488 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.911528776 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.912621667 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.90976025 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.911793638 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.936459532 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.912998869 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.912709845 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.912570041 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.913615848 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.964054194 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.914703268 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.910406714 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.911610934 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.967927749 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.920536673 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.916480664 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.910779636 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.913687006 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.910761082 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.065349669 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.968222123 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.913093191 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.964317315 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.913674318 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.914957599 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.914068798 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.913610117 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.011529475 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.915017028 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.964634282 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.912106231 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.074155775 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.937103104 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.915119969 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.916452486 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.917004558 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.915752091 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.912266382 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.920664319 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.911168455 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.91618541 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.920373623 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.911774362 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.912755752 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.026209134 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.02289251 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.911959097 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.927718115 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.9228501 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.91311453 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.967688245 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.91464811 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.911490685 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.972487844 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.032461438 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.970648484 seconds)
  done (took 210.112775446 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.920083928 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.923527386 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.918019463 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.932464589 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.916047217 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.91666431 seconds)
  done (took 13.364875074 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.918223897 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.914957834 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.915376552 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.915492426 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.916270615 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.918144234 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.917244558 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.91754277 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.920175207 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.915346997 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.9167434 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.917643863 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.91758827 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.917148179 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.917814091 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.915658398 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.918183884 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.914045401 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.916259871 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.916938606 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.065836285 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.917336055 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.917739113 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.917003486 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.920307845 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.916725914 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.925465113 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.916398355 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.916873245 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.925088578 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.921194267 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.918515139 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.917185079 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.922386978 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.921301817 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.917495241 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.921696851 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.918881202 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.915909288 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.917188138 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.918847298 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.918531522 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.91769915 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.918656194 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.919410349 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.921891476 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.924320288 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.926486839 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.919888731 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.920822421 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.919993271 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.918572525 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.920105167 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.92027552 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.920473129 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.922797842 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.923806669 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.922614148 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.919036168 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.920678852 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.919174255 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.918934248 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.921077413 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.922331841 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.926134162 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.920943638 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.920372856 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.923552696 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.919939456 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.919796252 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.921051431 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.916650308 seconds)
  done (took 141.174028175 seconds)
done (took 568.925076814 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.069058125 seconds)
  done (took 8.911141226 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.068932861 seconds)
  done (took 8.952261159 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.195460267 seconds)
  done (took 10.044613228 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.939000943 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.942119201 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.926550258 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.918602336 seconds)
  done (took 29.587473933 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.010503246 seconds)
  done (took 8.854264065 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.933061322 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.912979808 seconds)
  done (took 15.7166231 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.959729214 seconds)
  done (took 8.803155765 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.040481332 seconds)
  done (took 8.907356773 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.931166868 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.954117885 seconds)
  done (took 15.743664116 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.900526995 seconds)
  done (took 8.744984359 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.51366074 seconds)
  done (took 11.456196157 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.929941403 seconds)
  done (took 8.877990088 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.941648411 seconds)
  done (took 8.790812072 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.965881328 seconds)
  done (took 9.814494139 seconds)
done (took 165.048427099 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.932446469 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.920143609 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.9192051 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.918758115 seconds)
  done (took 29.54025001 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.959234599 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.959907391 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.96021282 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.969693868 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.962229508 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.959215568 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.951804463 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.951272559 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.970692225 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.962453637 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.960148171 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.961771837 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.960783208 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.952293946 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.961323338 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.960884181 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.970605817 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.960524511 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.951978185 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.962974438 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.927288963 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.970583778 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.964751763 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.927179982 seconds)
  done (took 48.849871647 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.126591758 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.000252371 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.080998772 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.979059234 seconds)
  done (took 10.037860512 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.980230934 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.980519093 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.991976221 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.030551589 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.055300356 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.989863907 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.953984921 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.949813406 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.934873869 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.982259819 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.055467009 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.974852901 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.066921147 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.927342078 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.105706326 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.926941052 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.92770984 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.979754581 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.031257142 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.050034453 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.928181069 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.979904159 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.984027284 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.97683356 seconds)
  done (took 49.616110607 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.926040762 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.934611583 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.933803109 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.926975053 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.927689767 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.927746264 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.934299418 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.929471652 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.94779193 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.928833922 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.926357919 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.928393983 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.928515271 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.927807028 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.926491143 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.939723774 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.941687921 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.928699179 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.931135787 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.933795428 seconds)
  done (took 40.482395403 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.922166817 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.776035609 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.273964413 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.17990126 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.922224447 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.923455054 seconds)
  done (took 31.850401059 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.940302615 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.933999404 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.929337633 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.9851565 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.067359909 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.934746927 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.930592911 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.939295989 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.974039929 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.990530307 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.947393433 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.957180975 seconds)
  done (took 25.38276845 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.924336669 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.938611772 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.927328218 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.953478189 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.940095743 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.936915398 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.937913142 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.922324144 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.945083231 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.946975013 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.935890494 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.940807257 seconds)
  done (took 45.106034732 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013911613 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.812909833 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.993079708 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.638245452 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.462302567 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.136502572 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.445474231 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266938416 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.928246562 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199513827 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.913699671 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160670983 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.180407893 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927293726 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.994150769 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.40715039 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.221136904 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151578334 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951790389 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.619387714 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.305602993 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.887122294 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.645798436 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.06187101 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.148699845 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.06912624 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.199273545 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.895981525 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070331723 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973620682 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949037845 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.938992832 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212624222 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308837375 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068943017 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949906803 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.592232581 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.656207709 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.931978087 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.623562201 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.85743411 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.066980335 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948045683 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939349119 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.874347287 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.530087958 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282690048 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.944457562 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.642190674 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.939589767 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950678133 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029884754 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.943573427 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.756037556 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.894759964 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.220494506 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.938000479 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946505342 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.510228622 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.026588057 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.617886175 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.874719808 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.033899968 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.630923135 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.408158027 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.095461309 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.943771161 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.944895978 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873641252 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.623792333 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060970121 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.091572634 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.959650145 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.590764081 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235604066 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.025766651 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.019168039 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225217223 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.724407349 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.003937545 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168403259 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.893183693 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875007751 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.802559016 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.876309993 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201381035 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973827333 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.621268468 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977075867 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.282515699 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.953511405 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961862831 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949011717 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.167004579 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.825215496 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942585136 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.687390278 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223879785 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964203998 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.282250701 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875593119 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.947127029 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198519841 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.153870576 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.109286993 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.517731312 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.100492771 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943172772 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.030443605 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.791653169 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.062198583 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.219878153 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007783777 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.034888856 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070194032 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.901270737 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239534836 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967514353 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.116710008 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.929061397 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205609331 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.266159851 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.19006294 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027501186 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.950048467 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.944515039 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.697375283 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.566226668 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.167558768 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.945303225 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360145325 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.062468999 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.945681464 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.879829156 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.779718613 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.909381071 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.05651984 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.169567197 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.829739862 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.327376075 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.879315891 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.091310464 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.059389356 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.168047094 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.591464035 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.021183338 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204182563 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36360177 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.216950871 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063726019 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964155374 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063487006 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966313691 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.301525957 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.308171408 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.94854439 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.949080782 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.683062167 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.004614919 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950409575 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.950848438 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.74116173 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23042649 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.976958602 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.945295572 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.883049604 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.959625845 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028891227 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.951690788 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.956074359 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.504481613 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.698734315 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.957325455 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.650126472 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171782285 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957293779 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.666828056 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128587455 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.028750113 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.221933588 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00885144 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.881171799 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.649003975 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.649398327 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946899432 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.881990934 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.947301897 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956540658 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957698673 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.170546983 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.227344313 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.995207092 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.668614437 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.057490176 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957761018 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.95261206 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.948032834 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.476469821 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.033133698 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.492554211 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.066216735 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085085933 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.961619569 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.881665314 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.952517362 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.953250317 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.947689985 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.914828343 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000602013 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.629515317 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398228143 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.207682538 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.592794099 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965985804 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.645822332 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.071825679 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.970395389 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.689324992 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960397052 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.055295143 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026617664 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.959374421 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.6753207 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.726753635 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.519966394 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258590802 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.272584633 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395764242 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.373733959 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.278551341 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.291740299 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183957581 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.477642427 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.011452096 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.296812227 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.894166504 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034688197 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.597737441 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.332170142 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967182154 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17685627 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338414762 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.737140354 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104051106 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.161716439 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984466758 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.816795352 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.983796866 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.474699455 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106487396 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.756340119 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176423705 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290348159 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.670012582 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.051252985 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.950669522 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.648640948 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027144078 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.661718356 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.312560879 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402326594 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.045433109 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439541599 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.952341576 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.396739405 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305980729 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.206580059 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.163233062 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.886821555 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.961338004 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.963013794 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.952136741 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.932666086 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.889023265 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.236263628 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96173015 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186838063 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.1404219 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.325006576 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.859664215 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.957082714 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952543323 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239263462 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.728406113 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189781683 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.332181387 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.537916599 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.96204257 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.886859604 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.886529488 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.652480732 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.960246335 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.928646598 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170129652 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.058855186 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.906543642 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372054564 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270062 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.208345285 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.965924309 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.229721032 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.23224478 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.71809427 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981412975 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.052858011 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.68967228 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.6590299 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.176727115 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.18902391 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780647297 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.184084526 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.010190998 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.921506406 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.954401222 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.167966428 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.176833445 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.922338759 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196802936 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.676906863 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.960691549 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326954373 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017051491 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.917659493 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.160691992 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.0468086 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964575645 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033617931 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962494655 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.964900676 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.963910474 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999874537 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.926238103 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.082621606 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.968176725 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045059436 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.043863533 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.541849784 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.964503918 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236531691 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310808762 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.293236458 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018743098 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.955143131 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962757854 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.889633032 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09353947 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.399676878 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230134493 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.084744226 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.096457802 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981261578 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.688519939 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275504483 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270973354 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229121946 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.849816506 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955859673 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.046664018 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.179328563 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967699993 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.167230971 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177220823 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261077159 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421708974 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.126792511 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402389039 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232029771 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.333553125 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.957704803 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.547317682 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.967406726 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.728411642 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.98985806 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.936680173 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237836555 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967985441 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.33600236 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.977589338 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.152006233 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.409781861 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.638132221 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318034904 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.940872844 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.015136591 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.237654481 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.358303186 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274943076 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039123839 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968316012 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.66925692 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095291903 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.925919992 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.225778163 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.959225789 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169397509 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.671510136 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.968481285 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239138026 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273661076 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.955677894 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.953831054 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015051689 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.96831912 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.182727735 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.216037906 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.207176074 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968061028 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.967245288 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.776970483 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.237217525 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022498542 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.892913154 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.963087836 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055594331 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.206045696 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977603415 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.476253908 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.662370502 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251264913 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.871894964 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981385449 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417770431 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406596828 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294000393 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.492314955 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184127039 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.512394874 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.844837327 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.338389163 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.965305015 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400267629 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.341501766 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.963555926 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.501009057 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074558818 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.240150557 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.288109293 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.973607698 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.755399185 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.000919286 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184120935 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.554296691 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902507027 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.965034476 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.022440354 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.959114149 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.091083305 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968648724 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.963698693 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866050103 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.804772395 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.453461869 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.965516253 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.94874249 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.693943064 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.555242111 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075423475 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116682819 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.969769243 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.669846777 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.252746297 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.216904269 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.495940657 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.03923686 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.965363734 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962047924 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.888890202 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.157374265 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.162474965 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253841373 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.33551646 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.080498417 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.965847189 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.17785264 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173888277 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.922648568 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113577501 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383038378 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079128642 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.89453576 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.677202775 seconds)
  done (took 1726.620006974 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.984316269 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.988114683 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.971809153 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.00473719 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.013547254 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.986102269 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.099936356 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.0024232 seconds)
  done (took 57.942635731 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.960221809 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.190596049 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.970372067 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.963721859 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.9960416 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.976627027 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.189107298 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.974447075 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.981738873 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.972583344 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.964266802 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.972998992 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.317152749 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.988710643 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.962670258 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.521746387 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.987269956 seconds)
  done (took 76.85808572 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.965389047 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.382973164 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.989243233 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.981383282 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.026041894 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.969706518 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.127779655 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.007361664 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.967457277 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.140334027 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.302237491 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.975775356 seconds)
  done (took 91.731154471 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.982011672 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.974040031 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.970258676 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.973110592 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.971164922 seconds)
  done (took 11.772262949 seconds)
done (took 2247.725954683 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.212611159 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.192488155 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.21510217 seconds)
  done (took 6.300000523 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.115078078 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.164438207 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.283353379 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.304572503 seconds)
  done (took 10.76673402 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.260327 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.339948787 seconds)
  done (took 6.492669663 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.311863077 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.000512444 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.386490438 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.96413445 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.967885938 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.970584481 seconds)
  done (took 22.801139902 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.969982326 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.972094095 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.968720633 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.972476092 seconds)
  done (took 9.777776017 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.950913017 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.698649845 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.953082207 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.970541613 seconds)
  done (took 21.467517169 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.719733882 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.096857947 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.713980786 seconds)
  done (took 9.42523105 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.604033895 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.20420489 seconds)
  done (took 9.702056453 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.210193465 seconds)
  done (took 4.105522452 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.000407497 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.238944722 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.493779206 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.493001426 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.587354261 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.79827085 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.290794895 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.204346272 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.410749091 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.422230332 seconds)
  done (took 25.837282845 seconds)
done (took 142.480534001 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.322558439 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.996560886 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.169698301 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.341758789 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.207234023 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.168026422 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.186331064 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.339988875 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.876110119 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.86279411 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.366028508 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.206909811 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.133066417 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.990276005 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.138831691 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.989509872 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.200920234 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.350809261 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.024775406 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.242534172 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.201051547 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.982627038 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.178560216 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.999228691 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.206085041 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.136526839 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.530239433 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.997310519 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.162183474 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.541404115 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.13356977 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.384042967 seconds)
  done (took 171.465277776 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.98142087 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.97234249 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.969934829 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.981038809 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.517735599 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.972404894 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.976360352 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.970699531 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.273522156 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.265070825 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.974343716 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.498333874 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.973775427 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.970861091 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.978646459 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.971652868 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.441879631 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.979763726 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.973043031 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.971398711 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.974182556 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.332281412 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.975327008 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.346202688 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.410036531 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.974415838 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.972357972 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.974348413 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.973668325 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.972073859 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.974537651 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.973559789 seconds)
  done (took 212.36865141 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.945823067 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.972763278 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.972925217 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.972336738 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.97562797 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.974621114 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.975500794 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.973896252 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.556211987 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.528125028 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.97917471 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.976207203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.972783668 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.971578463 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.975882033 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.973506357 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.988111738 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.978152864 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.975087215 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.976366731 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.982473388 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.607626019 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.977143817 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.615846828 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.988124226 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.974408281 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.974659256 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.975200154 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.973412275 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.97610929 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.976556087 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.975187194 seconds)
  done (took 223.511972568 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.166645987 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.981025286 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.980761924 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.91562489 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.982350883 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.982592979 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.9753458 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.16570512 seconds)
  done (took 20.056860818 seconds)
done (took 629.305851293 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.442329469 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.285732464 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.154822297 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.006794018 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.252427646 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.039389507 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.000089607 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.06500697 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.72923914 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.072833838 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.673240415 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.024047035 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.757635489 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.029710739 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.125876579 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.059639394 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.57544135 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.666831509 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.179333675 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.061552796 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.170948346 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.966460123 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.08616472 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.76366498 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.780468791 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.014948831 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.173542852 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.576935467 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.01259106 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.162368413 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.730870678 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.387725769 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.017061739 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.000953363 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.060680198 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.036987562 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.342141305 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.016598621 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.123452553 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.767523259 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.079574444 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.61666515 seconds)
  done (took 107.993774798 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.972262686 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.972595045 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.970966499 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.971117237 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.97179232 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.971317632 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.971224515 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.971587761 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.97227896 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.971997632 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.970643543 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.973167744 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.971241696 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.972144429 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.970009042 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.971878981 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.971706568 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.974894495 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.971017359 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.971716475 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.972057359 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.97172888 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.985891653 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.971030233 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.971850954 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.971475011 seconds)
  done (took 53.192949837 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.983334085 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.134109304 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.226423433 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.009424839 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.984498986 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.988748347 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.003815386 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.993304691 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.988527858 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.987139275 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.078723431 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.995491942 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.003372676 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.222567301 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.004196322 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.985042602 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.983319593 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.986713277 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.144429443 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.004613285 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.005056145 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.994495771 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.005851665 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.001896642 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.98891329 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.985668196 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.988587964 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.413906348 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.99976086 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.077903564 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.036855026 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.010610393 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.368345221 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.238184045 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.044796417 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.997278523 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.986143591 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.082906544 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.996817129 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.986356186 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.005153251 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.995192534 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.220747083 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.480815419 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.004173814 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.985303196 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.435155988 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.09344713 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.032120258 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.997202355 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.224620837 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.006456515 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.98850181 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.989248319 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.025027398 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.993330413 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.985685911 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.295708089 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.004501568 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.004912994 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.993931832 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.988537392 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.149270598 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.000511659 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.137156209 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.001207885 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.993544988 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.988979844 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.222225357 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.00627553 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.478836454 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.007624339 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.988436702 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.081535067 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.14719419 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.456792475 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.006322058 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.150324277 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.384740882 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.017451537 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.999410551 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.403413369 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.019533412 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.999698901 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.989408586 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.990318314 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.989256009 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.032369913 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.005352137 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.42008909 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.489761931 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.316269644 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.019963089 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.008553155 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.989134145 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.293572252 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.001595348 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.989389766 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.217290235 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.492440519 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.005681097 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.99698564 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.473588202 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.007864001 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.009017212 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.000504332 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.228288828 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.009720749 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.033559258 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.991504112 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.996707545 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.99289951 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.009341153 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.000483536 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.991400487 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.463165649 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.10286743 seconds)
  done (took 245.777097437 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.988822192 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.98776919 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.984965545 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.988617346 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.985664639 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.988180846 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.984506619 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.982413244 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.98981383 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.983019169 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.984050673 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.985997862 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.989144991 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.994252913 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.112376172 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.993170507 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.59263117 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.985955372 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.984479993 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.01006232 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.645326979 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.991874864 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.002403031 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.982896754 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.985454953 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.987513247 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.997053344 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.104933833 seconds)
  done (took 171.108638487 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.989604558 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.108776499 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.011553963 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.019835315 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.004385269 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.990041104 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.015531828 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.00877763 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.998080612 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.988991764 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.989424536 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.053304337 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.00144472 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.089850061 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.023339525 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.02511459 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.097208931 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.000326336 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.990486095 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.990102196 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.021746819 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.989534873 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.052579002 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.121436538 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.012342064 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.110321362 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.997259417 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.993416838 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.991526957 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.111810481 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.01105549 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.054084606 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.020138334 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.013622156 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.118100958 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.109831372 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.098669543 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.022758459 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.000780144 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.991604658 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.990838056 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.981041713 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.111095908 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.010551577 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.993273036 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.103347146 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.011174584 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.994953818 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.002934586 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.989213084 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.008894234 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.012354031 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.062419661 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.13113848 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.030589457 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.022406842 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.020131539 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.275128625 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.003289427 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.094737851 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.988198251 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.113444735 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.015464119 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.984506534 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.994359857 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.000260346 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.021719848 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.028307792 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.099198962 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.002181176 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.094648895 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.026732114 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.001525385 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.993667293 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.996245622 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.109216671 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.112749546 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.029307048 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.032959508 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.028873589 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.991284994 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.994287072 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.983932031 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.01415778 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.002083994 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.113924412 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.111470379 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.002330799 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.995490826 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.999043612 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.9971365 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.022253575 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.121429094 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.031374426 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.092053592 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.06420854 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.069051421 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.010171877 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.005581159 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.996902544 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.059745252 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.010080124 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.005227575 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.326165684 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.065500938 seconds)
  done (took 215.764354146 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.439265698 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.047029283 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.05424287 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.330708615 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.425342294 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.852139849 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.0437822 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.046978793 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.070942857 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.231522866 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.105685213 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.065424626 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.033644871 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.019007648 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.04382184 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.067374106 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.061138109 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.380851638 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.167219892 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.170768609 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.025525258 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.3390052 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.36409678 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.432150387 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.081833536 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.411229675 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.726175735 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.198981872 seconds)
  done (took 65.159882574 seconds)
done (took 860.899882278 seconds)
SAVING RESULT...
DONE!
