cset: moving following pidspec: 11865
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.162545601 seconds)
loading group "string"... done (took 0.520184934 seconds)
loading group "linalg"... done (took 9.78828865 seconds)
loading group "parallel"... done (took 0.170884928 seconds)
loading group "find"... done (took 1.501910055 seconds)
loading group "tuple"... done (took 2.256975416 seconds)
loading group "dates"... done (took 1.41115822 seconds)
loading group "micro"... done (took 0.57879518 seconds)
loading group "io"... done (took 0.560734294 seconds)
loading group "scalar"... done (took 53.768278216 seconds)
loading group "sparse"... done (took 13.626779845 seconds)
loading group "broadcast"... done (took 1.323200807 seconds)
loading group "union"... done (took 2.495717927 seconds)
loading group "simd"... done (took 3.550718705 seconds)
loading group "random"... done (took 13.455520496 seconds)
loading group "problem"... done (took 2.271363558 seconds)
loading group "array"... done (took 23.167743259 seconds)
loading group "misc"... done (took 1.107662644 seconds)
loading group "sort"... done (took 3.745270471 seconds)
loading group "collection"... done (took 20.497793121 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.770377713 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.162747442 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.247305122 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.893729643 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.306277495 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.208062632 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.200273093 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.178313947 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.710919105 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.224464228 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.199263747 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.614252762 seconds)
done (took 7.531923928 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.298355957 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.094201155 seconds)
    (2/2) benchmarking "String"...
    done (took 0.217690742 seconds)
  done (took 0.96733195 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.098329124 seconds)
    (2/2) benchmarking "String"...
    done (took 0.147124156 seconds)
  done (took 0.901201613 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.139774897 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.173090516 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.150543725 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.136551094 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.152166208 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.134764275 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.153013243 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.151218881 seconds)
  done (took 1.706830527 seconds)
done (took 4.671508856 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.519706452 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.920480181 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.539939611 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.208229901 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.358269511 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.34023747 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.32473068 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.262344884 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.155889028 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.102320903 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.230489156 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.450331708 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.474968011 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.950783616 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.101027093 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.157592735 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.193799016 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.817896256 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.130384458 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.156605878 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.540528652 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.23677131 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.162155257 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.1387263 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.249459865 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.176884785 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.172874149 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.213726061 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.720160015 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.184316804 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.243178061 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.130527073 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.171642917 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.20623677 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.286075415 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159716819 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.725769108 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.25267892 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.120018684 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.1459958 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.730139426 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.171348884 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.248600538 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.154125884 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.117718182 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.183528017 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.135956115 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.124380901 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.161253187 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.147744206 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.217594709 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.70406097 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.157972812 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.234784955 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.155960754 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.747527322 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.152731154 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.339627127 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.186107954 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.15378897 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.124901149 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.151552513 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.207235082 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.141678492 seconds)
  done (took 23.16395849 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.212756455 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.231258667 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.145349838 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.208204199 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.178716372 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.144189914 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.135201411 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.143341273 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.162623334 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.245753598 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.189552596 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.244588575 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.122300609 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.156525281 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.202618294 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.283689707 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.177941901 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.171081392 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.137044592 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.16021353 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.173463679 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.16420908 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.157639739 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.143034879 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.221033136 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.258615917 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.174953882 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.176025806 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.157876151 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.14852608 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.190920367 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.216073566 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.128076553 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.157144914 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.226595574 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.171845596 seconds)
  done (took 7.203814465 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.279046099 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.151411852 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.277418518 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.236069894 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.203823615 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.225419029 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.208357222 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.321811314 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.327561347 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.251507541 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.230422318 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.182198797 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.154661078 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.143343997 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.130099016 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.141792752 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.886361177 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.221763047 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203811532 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.222714355 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.150193122 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.129104685 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.771653225 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.13449364 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.140248072 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.130482794 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.09742412 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.300454617 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130482934 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.549665708 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.148435915 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.136869431 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.176067641 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178222454 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.241623533 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.221738672 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.169021773 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.189063428 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.148403928 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.133655893 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.277194677 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.15035697 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.127510209 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.143658422 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.177718829 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.163946826 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.143448339 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153847497 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184622221 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.13457717 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159846723 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.966017955 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.248014569 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.189662735 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.143968098 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.34055427 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.13409722 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.151644284 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.126082095 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.287594673 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.176320606 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.146896055 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.125893174 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.150457471 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.143547374 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.131666185 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.351883783 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.134592813 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.207421698 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145943768 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.135251347 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.758134606 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.152495858 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.134034642 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.150335318 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.135079328 seconds)
    (77/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.145379241 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128735225 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.149145223 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.129083733 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.155341192 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.123580659 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.150601972 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.127889028 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.209869915 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.162527861 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.136224027 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.173276364 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.130022191 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.149421026 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175503324 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.132237486 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.146138696 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.139455793 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.228637106 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.130287308 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.142080009 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.149335889 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.192565829 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.136248052 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.283088234 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.135539652 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.173246891 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.148501846 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.162378191 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.164736591 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.144310949 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.136044465 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.142983336 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.131288483 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.207646029 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.13507863 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.14523481 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.130602782 seconds)
  done (took 28.524342796 seconds)
done (took 59.545941913 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.413008665 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.114280943 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.111951108 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.133469486 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.112837603 seconds)
  done (took 1.623359786 seconds)
done (took 2.340689134 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.176898403 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.351363187 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.251726145 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.137618268 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 0.219752176 seconds)
  (6/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##1#2\"))}", "10-90")...
  done (took 0.223213092 seconds)
  (7/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.236782205 seconds)
  (8/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.135758814 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 0.219474627 seconds)
  (10/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.241978607 seconds)
  (11/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.233154579 seconds)
  (12/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 0.199009175 seconds)
  (13/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 0.216955522 seconds)
  (14/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.258921962 seconds)
  (15/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 0.217108894 seconds)
  (16/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.256859758 seconds)
  (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 0.198309994 seconds)
  (18/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149059738 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.144491349 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.166487931 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.145005381 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.14886928 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.145526397 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163405277 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.144941266 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163370636 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.139340275 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.153476151 seconds)
  done (took 2.395344548 seconds)
  (19/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.181506461 seconds)
  (20/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##1#2\"))}", "90-10")...
  done (took 0.149181541 seconds)
  (21/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146040639 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.162897182 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.138769322 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.144857596 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.148813058 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.143591514 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162684584 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.149064976 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163095321 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.141243171 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.149558195 seconds)
  done (took 2.382223745 seconds)
  (22/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 0.219916793 seconds)
  (23/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##1#2\"))}", "50-50")...
  done (took 0.193085867 seconds)
done (took 10.047283876 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.200082077 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.461108218 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.199703398 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.276223464 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.376574703 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.297440477 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.594669964 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.23747084 seconds)
  done (took 14.504763839 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.212931268 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.162002585 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.141733107 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.162281112 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.14393241 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.158784228 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.142987666 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.155595625 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.139420243 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.157750088 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.140930002 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.158535314 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.144678524 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.15540803 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.140360587 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.156474926 seconds)
  done (took 3.260072877 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.168258198 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.183233915 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.147242956 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.165030414 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.144370174 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.163626114 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.147829204 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.166679087 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.143241679 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.161877428 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.165224083 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.14752302 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.162117333 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.143507425 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.163143092 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.150646741 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.159089923 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.148522937 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.164682185 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.148792734 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.169152796 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.145200098 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.163260076 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.148755857 seconds)
  done (took 4.576338793 seconds)
done (took 23.075288136 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.201848503 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.150829166 seconds)
  done (took 1.096764191 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.205126853 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.223260793 seconds)
  done (took 1.180092454 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.165294623 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.156474577 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.169842687 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.167449576 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.140782288 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.159640691 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.181752651 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.14215872 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.156426596 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.141204619 seconds)
  done (took 2.337252245 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.145121178 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.159603047 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.155353485 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.209095514 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.148998137 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.161217778 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.145112098 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.161778883 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.161655892 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.141048453 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.161689276 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.158194 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.160994844 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.161276165 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.161053581 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.147302321 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.166843423 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.143825133 seconds)
  done (took 3.607311865 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.142337793 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.142565616 seconds)
  done (took 1.043321292 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.14377345 seconds)
    (2/7) benchmarking "second"...
    done (took 0.156799548 seconds)
    (3/7) benchmarking "month"...
    done (took 0.143325069 seconds)
    (4/7) benchmarking "year"...
    done (took 0.158645174 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.141037558 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.156456977 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.140529742 seconds)
  done (took 1.799871618 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.638743516 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.273971082 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.427766059 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.12656833 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.1402934 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.368978276 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.158021771 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108435018 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.126844692 seconds)
  done (took 3.156580387 seconds)
done (took 14.974014293 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.142113323 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.229845918 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.696958811 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.16556456 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.158784996 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.202464434 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.374054899 seconds)
done (took 2.73118062 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.374841661 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.189369682 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.122449998 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.140496497 seconds)
  done (took 1.587145474 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.134256598 seconds)
    (2/2) benchmarking "read"...
    done (took 0.167506008 seconds)
  done (took 1.073918897 seconds)
done (took 3.429866955 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.159723314 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.159638946 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.146053768 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.161248648 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.147672969 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.162638839 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.145269241 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.160122247 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.145553565 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.158476787 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.14533182 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.162024514 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.143478721 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.163064451 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.14374726 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.162003562 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.146125495 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.158807415 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.143538924 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.162466121 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.144845864 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15971619 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.162003212 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.145923933 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.16126534 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.144892378 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.158497041 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.143567209 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.16153835 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.145100016 seconds)
  done (took 5.368372053 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.170170732 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.155416202 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.14066272 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.165771639 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.138745716 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.141431533 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.154782113 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.139073341 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.158471269 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.141327469 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.279655814 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.14174512 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.156403269 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.143675673 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.15964607 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.16551169 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.167681659 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.139540999 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.155938056 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.142256568 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.1615248 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.137951831 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.158086444 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.142393317 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.158034412 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.137695094 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.158989632 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.142688536 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.158000958 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.140543011 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.160223867 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.144141653 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.156791098 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.150727477 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.161948876 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.141500885 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.164158375 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.138457551 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.158974406 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.138656878 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.155519148 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.142552485 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.155261923 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.147623731 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.139875958 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.158889129 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.137640827 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.159158228 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.140293469 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.161752064 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.137845811 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.156852138 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.143977037 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.160751726 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.144885882 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.156290405 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.142508206 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.156367231 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.142184701 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.158637911 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.139609303 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.156582621 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.146535743 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.161757511 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.158364622 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.166341544 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.138986878 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.160408946 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.144069578 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.165876051 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.145383083 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.171402104 seconds)
  done (took 11.801328857 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.142150898 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.141888294 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.160009873 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.142115418 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.159865511 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.143398682 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.16372962 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141418124 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.160267797 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.143154377 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.161146958 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.141813914 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.162039251 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.143290358 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.160447359 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.142442485 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.159664647 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.143283584 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.160734965 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.142556676 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.159787987 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.143695508 seconds)
  done (took 4.103248605 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.288685314 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.148651724 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.21528855 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.174652307 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.162396279 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.173773215 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.14844688 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.167311499 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.147641051 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.170628402 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151198487 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.166269677 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.1788534 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15238942 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.169745608 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.153644469 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.165195449 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.154544164 seconds)
  done (took 3.876870027 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.142878225 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.141337108 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.161131524 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.141539368 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.160186781 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.144814574 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.161676216 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.142833875 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.160636279 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.143581037 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.160541644 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.14307406 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.160757663 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.144420809 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.161033677 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.142863069 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.159743917 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.144543381 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.161820438 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1432238 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.161334273 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.144554765 seconds)
  done (took 4.119634906 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.158003681 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.163529105 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.164486839 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.166702553 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.144761704 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.163204134 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.150058747 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.163525823 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.15133363 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.163041543 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.146832778 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.163558439 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.160699346 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.163996693 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.151666912 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.16585922 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.146843464 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.165025874 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.146533578 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.163563397 seconds)
  done (took 3.957727865 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.237245113 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.181569598 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.181475801 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.169266427 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.180333127 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.162179911 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.186240443 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.161019428 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.177823661 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.190683955 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.160727561 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.178947546 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.170489278 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.183047021 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.16073301 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.188089979 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.187209072 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.168831735 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.180258886 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.16209694 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.19260899 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.180343255 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.1694763 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.179162378 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.161519701 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.179656784 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.159762494 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.185538608 seconds)
  done (took 5.772449834 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.155194875 seconds)
    (2/2) benchmarking "in"...
    done (took 0.171124834 seconds)
  done (took 1.126307891 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.145525419 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.144727762 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.165396312 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.144800327 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.166270026 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.146621438 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.165270039 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.145748282 seconds)
  done (took 2.021679642 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.211259825 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.233452941 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.169966795 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.157275028 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.233173716 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.223793124 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.227539479 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.151196531 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.164135677 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.137940306 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.229784039 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.158462889 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.145591489 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.162260717 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.146575343 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.171340364 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.145803038 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.173304789 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.156111542 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.167410116 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.151815744 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.170974186 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.147980759 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.173564669 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.140312186 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.169409183 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.168981964 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.156831885 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.162427708 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.149232524 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.162929448 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.147352467 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.168143309 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.150843344 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.164280178 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.214515827 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.175079108 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.142464136 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.169326001 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.170657456 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.178335806 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.166639626 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.149390855 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.164924534 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.151730607 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.16940597 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.151867426 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.165997226 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.138696129 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.160472641 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.147368181 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.161673073 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.146518143 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.166164985 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.148873121 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.173457533 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.148800696 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.164732191 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.144428422 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.162370857 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.145860447 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.162471848 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.150527172 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.169651113 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.149802709 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.168722712 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.166049189 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.148691395 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.147489007 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.167683404 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.146793108 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.205268841 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.169580084 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.151498804 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.172702409 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.147988092 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164532096 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.152180734 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.167951385 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.149718759 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.171505399 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.175600543 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.169848554 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.143367742 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.164513728 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.152897097 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.169358059 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.15052808 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.160291752 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.156156589 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.16927823 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.147891153 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.159788965 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.155419275 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.163916235 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.149431083 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.161055397 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.148955674 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.165390934 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.151791579 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.171753684 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.146661807 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.171127977 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.15257862 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.174685971 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.166407334 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.198081962 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.165456934 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.144083825 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.169408135 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.153553884 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.162691499 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.14776921 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.167241449 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.145571444 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.163670953 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.152379154 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.170332624 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.149222118 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.172163862 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.149975776 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.170471818 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.149719388 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.167982884 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.146402276 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.172292511 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.156219307 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.169883474 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.150596246 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.169371817 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.150163858 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.169533012 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.152406601 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.167463684 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.154213395 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.166502667 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.146790733 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.170022669 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.153215434 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.171211716 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.144157996 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.16883823 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.170870402 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.150087522 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.170800561 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.151620747 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.16461409 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.141147488 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.170458827 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.144793762 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.170016243 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.157277193 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.164085391 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.151947465 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.165099696 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.15523699 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.165233373 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.153505135 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.172465926 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.153567503 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1742378 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.141323418 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.166860116 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.151938595 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.170403653 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.145772867 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.169548865 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.149051566 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.17622653 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.143249501 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.17249945 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.142976981 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.166292794 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.154549961 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.17084484 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.152240868 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.166399512 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.18570937 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.180893744 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.155449936 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.17128945 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.149726652 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.17397331 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.149153534 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.17453253 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.154956088 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.175914898 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.147210968 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.169089239 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.174600345 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.146964779 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.171556244 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.150386582 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.171532707 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.143079159 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.170405399 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.151996354 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.173685494 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.152471833 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.17325632 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.155895104 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.17092418 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.148885204 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.176878848 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.146708391 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.173520739 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.142973698 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.175546416 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.158534336 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.17594053 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.156388602 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.172503151 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.147788487 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.170051582 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.158988933 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.171238396 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.151002861 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.172815272 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.144182162 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.164046489 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.159237917 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.172361583 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.145883774 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.169858611 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.151996284 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172567965 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.147711521 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.162560756 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.154489059 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.174455076 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.147795331 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.170889119 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.146877616 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.170307271 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.156954247 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.163283543 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.145829927 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.17336632 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.153077706 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.170713608 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.149950213 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.172456777 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.154659052 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.174194916 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.151908144 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.168471214 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.157554253 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.169706497 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.153623376 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.169185272 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.152807281 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.166385963 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.151827477 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.173936365 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.168217481 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.148488366 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.174007673 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.157615714 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.175803502 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.149748442 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.174242758 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.156582691 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.176819063 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.151064322 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.175021488 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.147336124 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.163403601 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.148929553 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.163445016 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.1513733 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.167656167 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.154423408 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.168417366 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.150991827 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.173074034 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.154029573 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.168592249 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.155540659 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.182753827 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.144409635 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.163948642 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.148483058 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.170714516 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.147929984 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.168729767 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.151761617 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.172879107 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.153586291 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.173173069 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.167673976 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.152777948 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.154921237 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.169294992 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.177381775 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.156963815 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.1769086 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.147702023 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.175121151 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.150136201 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.174909533 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.146038054 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.171718624 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.154825764 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.170334091 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.148738118 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.169257278 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.148064289 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.163913442 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.14808168 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.176567356 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.150560975 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.175576517 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.152686944 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.169226687 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.148111153 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.167705894 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.158181987 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.170156344 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.159008279 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.172604142 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.144276378 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.16668663 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.156044354 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.172282034 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.156907802 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.167041842 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.155187611 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.177209477 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.155356138 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.172012027 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.16000694 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.18077208 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.157488952 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.178678728 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.144235101 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.170208795 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.156816659 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.171821361 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.153825147 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.173521228 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.145937622 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.175402891 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.156489732 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.174770688 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.150025084 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.166978846 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.15130695 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.18006801 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.154997363 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.17409232 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.153678621 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.174291368 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.147923001 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.177977172 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.158483981 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.173772587 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.156744583 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.173703583 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.15458558 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.170802935 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.176626301 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.152176335 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.14537575 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.167101347 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.14925634 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.181449052 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.146357997 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.176598854 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.156418494 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.170991576 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.170904903 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.157236476 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.168704624 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.155655758 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.176143488 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.150510969 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.180444315 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.152781369 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.170335907 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.156713434 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.176965521 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.146483083 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.171836516 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.151710424 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.17916608 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.152929154 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.176844346 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.152529172 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.178073413 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.155416132 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.177123572 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.156743396 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.178509363 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.146756791 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.179378676 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.157424278 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.174914142 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.151426589 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.171814167 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.147559267 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.172146682 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.160783784 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.170038663 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.160206336 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.177475851 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.152889624 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.172812828 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.157368056 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.172777907 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.158460723 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.170991925 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.156188786 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.167180198 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.157076609 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.17454126 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.158540971 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.171255995 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.147643914 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.178746543 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.157150431 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.177036759 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.155733281 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.179958709 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.146167191 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.167793544 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.155202767 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.172550993 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.160627968 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.177552886 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.171910688 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.152041471 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.175437114 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.153986481 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.180366092 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.149351185 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.171330516 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.154260259 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.176253628 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.151897738 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.169245614 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.157090367 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.174046225 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.155121612 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.173930777 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.149695224 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.173150091 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.162170204 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.171915786 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.150485337 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.171570351 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.160678114 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.173145412 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.150800881 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.167749404 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.159040197 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.177632435 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.158769142 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.172296142 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.155039338 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.17216491 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.156147231 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.18100528 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.151486442 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1762222 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.151956823 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.179320708 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.180552918 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.146190587 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.152155871 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.185228932 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.180651814 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.156711897 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.175484117 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.153838487 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.181153413 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.161435543 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.175716129 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.149048982 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.16980204 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.153647122 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.167736065 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.157341796 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.179713495 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.154837636 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.173294732 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.15884066 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.177674828 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.156408856 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.17633674 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.149043394 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.180530708 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.152713135 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.177553305 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.148833731 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.168542103 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.156168602 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.178841737 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.153451008 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.176326193 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.15597605 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.176526288 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.149110651 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.172871075 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.158599568 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.178615521 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.159885067 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.174919171 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.153223675 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.178359622 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.164326484 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.1753422 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.15532897 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.182783369 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.160159612 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.176206346 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.154348608 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.180551242 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.160552749 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.178181597 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.159882761 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.174151755 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.153752512 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.18294561 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.161970387 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.186506608 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.153852246 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.171127976 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.158144202 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.174231513 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.148231141 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.18060509 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.160957828 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.183849217 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.176320257 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.152182132 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.185165865 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.160451758 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.176256911 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.153373624 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.174864694 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.159787777 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.174430911 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.158591746 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.173543717 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.162742203 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.183252354 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.159959587 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.185681293 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.151642398 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.181237363 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.158422869 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.183905999 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.156378476 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.1693399 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.149129858 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.177719177 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.162572838 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.181751883 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.157880132 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.17837813 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.159775695 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.178409349 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.156430297 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.174063266 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.161835594 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.180484334 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.156651694 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.177597654 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.154493599 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.17706295 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.156208272 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.181473356 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.161298864 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.178021381 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.16491315 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.181539217 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.15480991 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.17485345 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.155388615 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.179126899 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.156428063 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.181125686 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.153175973 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.171405526 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.160587111 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.185837459 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.157756933 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.183978004 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.161965988 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.175668567 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.158265726 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.184642754 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.159616387 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.17946102 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.15826859 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.18066208 seconds)
  done (took 98.459842207 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.205668053 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.185796462 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.157375389 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.17958408 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.175769489 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.181122264 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.157603282 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.181415179 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.158984393 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.190606501 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.158097618 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.179369877 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.172250396 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.20259797 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.197658306 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.16808143 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.179144848 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.15834765 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.18090855 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.159699778 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.196317633 seconds)
  done (took 4.623267945 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.158947028 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.157455707 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.178861083 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.157822025 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.179328461 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.157994393 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.179339984 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.156921142 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.178630328 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.156740881 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.179124384 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156903332 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.178569286 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.157378533 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.180024359 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.158318527 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.178325889 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.158049078 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.177992955 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.157738146 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.178449578 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.158222424 seconds)
  done (took 4.580257518 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.187563517 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.182129795 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.155731675 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.157314977 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.183677268 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.157015428 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.183605541 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.157650425 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.187589567 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.151364779 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.171951056 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.15211683 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.177438067 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.157563961 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.175392276 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.157307085 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.188939739 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.161299282 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.184460119 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.158749167 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.173117894 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.157842628 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.182696138 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.149645706 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.185451586 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.163305613 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.18460071 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.160743486 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.172567406 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.161326591 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.181715845 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.153770811 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.171659957 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.150538207 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.170858249 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.162205683 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.183060779 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.159711721 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.181550321 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.150545541 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.158980971 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.186027776 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.149694454 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.183597579 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.158227383 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.175173114 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.162486445 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.181727579 seconds)
  done (took 9.007524071 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.187465529 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.218007402 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.160980527 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.212151001 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.19539915 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.169830465 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.185371688 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.188198862 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.185323008 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.16102753 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.196273912 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.19672774 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.164778147 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.187391078 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.164983061 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.183992322 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.164774934 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.183434499 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.167659239 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.184735992 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.1671927 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.186305396 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.171199564 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.194651359 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.186662215 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.165429905 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.183842722 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.167084865 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.192827803 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.167499093 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.189860457 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.16725395 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.195146743 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.187536488 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.164988019 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.185104265 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.175358403 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.186693504 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.165461124 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.183287903 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.164168083 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.188751098 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.16675696 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.196203582 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.162432038 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.187874589 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.162904306 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.183564614 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.194041365 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.165344699 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.191206089 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.173726841 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.189086475 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.163561791 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.188940367 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.173538549 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.187258799 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.162487143 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.188081249 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.193975295 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.164065905 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.187270043 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.17480512 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.18669043 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.169003754 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.195455581 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.165707385 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.187314881 seconds)
  done (took 13.254492418 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.194352019 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.190878603 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.17533787 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.197776826 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.166284064 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.191088895 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.167020401 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.190127111 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.188719669 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.174964568 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.189553364 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.300218624 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.170021411 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.195370165 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.414452075 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.193165207 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.167555525 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.192492355 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.191206018 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1690627 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.19216913 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.175433831 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.190324482 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.175694758 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.202121792 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.185382024 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.168352693 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.190926584 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.176370962 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.190556635 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.178258073 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.192500038 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.166704718 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.198341284 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.200988129 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.168510186 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.184670202 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.169307843 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.191368051 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.166951538 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.189038634 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.174566053 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.191427556 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.16447748 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.191466597 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.191040565 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.177197534 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.200924364 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.170958821 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.196962966 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.168452637 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.19795555 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.19053212 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.169690922 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.198269486 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.180656912 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.199452528 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.197371537 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.169112986 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.199379963 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.175365597 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.20577477 seconds)
  done (took 12.710958985 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.16489981 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.164422724 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.186709287 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.16235654 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.185941871 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.162790603 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.188036342 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.162666426 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.186784576 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.162218953 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.186844081 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.163067594 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.187268088 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.164000674 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.187106475 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.163994876 seconds)
  done (took 3.714059659 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.182857191 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.203345132 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.269205463 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.166760032 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.186173046 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.173594002 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.187996113 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.166610642 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.185150151 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.170696287 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.189079212 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.167077392 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.203047468 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.165450788 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.186756989 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.167752058 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.186115777 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.166923042 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.187935631 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.269428885 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.168584217 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.189084729 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.166662534 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.191373917 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.165631747 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.191098742 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.16932656 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.187867536 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.1657055 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.18756226 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.166317449 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.195101975 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.162452642 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.191352755 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.165981582 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.188276107 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.165846369 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.192668216 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.166158001 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.188131256 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.165500236 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.190295777 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.165968941 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.191613473 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.162318896 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.189299212 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.163000477 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.193242172 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.164708515 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.189268481 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.163629886 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.197297995 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.169360852 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.196000692 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.171921303 seconds)
  done (took 10.96065617 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.176790428 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.188810812 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.177807387 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.185624233 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.167196471 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.188921999 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.167561461 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.189853472 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.16666875 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.18532175 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.167112731 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.189791454 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.166519499 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.188921231 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.165975157 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.18896572 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.163272718 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.190119009 seconds)
  done (took 4.16345207 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.163404229 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.162717899 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.188079573 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.163796248 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.187835548 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.162498667 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.188615187 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.163270972 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.187837644 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.165453372 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.187177783 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.163786051 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.187481104 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.164723042 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.187560444 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.163079607 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.186273129 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.164008217 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.185727389 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.164626032 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.186366437 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.165232813 seconds)
  done (took 4.785614218 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.176423482 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.267050579 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.193049689 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.248896456 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.187214379 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.183133274 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.171020491 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.184816589 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.177953565 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.18351803 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.16016981 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.184205338 seconds)
  done (took 3.270231291 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193891067 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.224521638 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.165754319 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.18877631 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173896066 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19557473 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.168611386 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19499421 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.177132232 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.205730142 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193741397 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.178133546 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201112376 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.178212607 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197713061 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197453531 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171149279 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192462463 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168269861 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.208496695 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171068682 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201771748 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16884689 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193860547 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19177306 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.178744518 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201689475 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.182499604 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195753943 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175911266 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198786941 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193678469 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.180444105 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.20444185 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166049677 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201269729 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169013323 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.208547959 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198852731 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.179636042 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.191221175 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173886637 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.20151522 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.174544473 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.201738922 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.193028806 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.176560232 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195344325 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.171868993 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.215766614 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197312033 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.17951375 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197482864 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176745381 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202814688 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.214557452 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.183808779 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.20372472 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173593723 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.206549799 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.202098116 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176445063 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.203027633 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.181864258 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19825056 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.201701697 seconds)
  done (took 13.491050084 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.204905037 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.192208101 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.172412987 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.208416866 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.178298651 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196316375 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.194001695 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.174036238 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193239797 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170458408 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.237132529 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171925634 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.205591786 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.20164778 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172629006 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193924381 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17180865 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.203318033 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168677735 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.217335598 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193620152 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.179564874 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.203531888 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.179258409 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.207542802 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197824737 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.173316034 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193842458 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172752484 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194412362 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176745311 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197093499 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.180296041 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.193365651 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17885368 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196075912 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195705194 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.177918994 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195335455 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.177406289 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.203457297 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.184750938 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196430146 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195141924 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.184339293 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196738566 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171668757 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190994888 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172165818 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193040959 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.183660087 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.207589387 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.207321824 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.180626601 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196480153 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172734954 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196293468 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171691246 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196479175 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.199322274 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.180464848 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196838649 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192080431 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196726623 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194451403 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.181595858 seconds)
  done (took 13.500694467 seconds)
done (took 239.436993426 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.321059473 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.352631365 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.158750983 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.374314849 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.157695333 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.891664855 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.88386065 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.253091333 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.18433657 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.158161314 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.182782671 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.177044721 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.585178186 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.15759532 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.192200139 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.195732013 seconds)
  done (took 32.191195892 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.353558437 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.402918765 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.173610066 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.188947142 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.165297417 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.188979269 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.162226565 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.19151318 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.163779626 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.193425505 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.162764901 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.184392582 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.19132852 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.161342934 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.185997815 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.165355246 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.192265441 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.16578428 seconds)
  done (took 4.566623382 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.18496116 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.244957127 seconds)
  done (took 1.41208718 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.194325968 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.2850125 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.38947774 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.239219736 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.186830462 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.205870454 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.238401825 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.177880301 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.276742734 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.19829428 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.17689519 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.18494363 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.190436298 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.193914394 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.180277465 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.186036366 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.191300304 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.204201107 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.176354619 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.191067593 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.212388601 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.166698642 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.19256499 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.180122277 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.272205984 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.199633278 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.16833628 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.187401904 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.166771068 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.201685704 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.171065538 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.205074053 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.175483978 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.245047432 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.19280259 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.246561731 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.168661881 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.190008171 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.177707305 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.189946012 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.167148001 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.192004305 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.198807823 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.165022452 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.18462697 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.171057088 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.187302589 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.166564617 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.196411499 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.168463531 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.198447931 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.170350363 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.239722384 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.192962038 seconds)
  done (took 11.751741685 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.007559551 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.214669337 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.189462431 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.151631434 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.209978098 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.179509559 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.023323636 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.191775853 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.317902647 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.087414677 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.178634518 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.199817449 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.307855 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.347058379 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.364935722 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.426550053 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.857876061 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.175572886 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.222975631 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.232737137 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.168699735 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.208202664 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.205468586 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.488111093 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.191176755 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.163020311 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.19590061 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.195601131 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.245102397 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.167519976 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.192233314 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.265916916 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.337347019 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.302339494 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.164793232 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.187565332 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.164601378 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.254314602 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.335870295 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.307678093 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.233693125 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.186345484 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.162912407 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.195274413 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.200445182 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.164158096 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.251707846 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.261344337 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.261292515 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.167543722 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.199966001 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.195882312 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1700219 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.24635975 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.186512405 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.431810568 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.436563476 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.189881479 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.170178833 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.204078745 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.33355352 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.192768647 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.305301533 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.209864815 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.283668405 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.165058769 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.893989522 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.228939798 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.190564596 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.193425854 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.171449666 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.195189207 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.169021912 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.249752779 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.48960877 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.173817005 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.194103664 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.166298521 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.293082102 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.191354082 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.164355397 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.249431509 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.193094667 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.169953106 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.199199773 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.170619532 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.257105041 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.339815699 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.199804947 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.196653709 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.170931583 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.199483468 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.167810306 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.300116796 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.297215588 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.245153032 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.297580021 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.197125766 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.252465485 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.254403929 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.16995143 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.257760362 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.197883754 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.177438835 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.19550447 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.294213181 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.22833588 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.19252993 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.172655894 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.19594915 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.20447265 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.197155518 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.171160941 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.257269448 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.549056762 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.254374386 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.190829504 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.171087049 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.199122318 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.248996817 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.17182178 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.35244859 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174324682 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.255188666 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.194785734 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.166082712 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.196818184 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.249742652 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.174209025 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.196766921 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.170020573 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.201864427 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.348040418 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.289717499 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.198832617 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.317564196 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.262172445 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.17412277 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.264359665 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.196382305 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.254018057 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.17698773 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.194238248 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.169803437 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.87596167 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.205250123 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.195122369 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.173715387 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.277697185 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.166718897 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.195291943 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166364382 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.190362056 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.863062335 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.169943468 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.190805688 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.169852116 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.197612141 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.196119003 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.173337406 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.19571616 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.251679071 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.317220856 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.199550236 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.173157075 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.189765962 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.222788387 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.19497214 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.191420921 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168331182 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.165995689 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.201103576 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.196415759 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.172152688 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.259699435 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.250875897 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.300152764 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.672170323 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.169194839 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.191339206 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.313064253 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.166433874 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.417814793 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.173667545 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.330010402 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.253095383 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.166489957 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.428394421 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.25316264 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.278511115 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.19462866 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.26236849 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.16724955 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.217481636 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.250064551 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.169200566 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.199030826 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.22430946 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.202314484 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.1988755 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.326215645 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.166780217 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.317304945 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.192351066 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.261827359 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.16813458 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.197935296 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.397307297 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.192636228 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.179282295 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.250013566 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.199307119 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.16791842 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.950442301 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.195700165 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.177583336 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.199958668 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.303513527 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.252900805 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.200584795 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.175156702 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.204935068 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.253000609 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.29798049 seconds)
  done (took 63.02407087 seconds)
done (took 113.921764146 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.402376377 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.351278399 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.323215892 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.311396861 seconds)
  done (took 2.465592307 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.318036533 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.244467191 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.317789015 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.167620757 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.323246413 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.166547785 seconds)
  done (took 2.571591052 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 1.963725834 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.921228949 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.827877414 seconds)
  done (took 4.752402872 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.451867587 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.425602934 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.626252193 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.471888988 seconds)
  done (took 3.083473673 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.373014333 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.195806534 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.224411009 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.300778123 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.332841767 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.310467413 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.237100612 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.272331768 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.199102484 seconds)
  done (took 3.527946815 seconds)
done (took 17.430288796 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.232473487 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.249917604 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.190086462 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.210646968 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.247391516 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.22447247 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.224563752 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.219551872 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.224875943 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.181947299 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.224097003 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.180229972 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.289763244 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.2493873 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.179583381 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.224484133 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.205757031 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.209498289 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.245967242 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.180029807 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.248067579 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.180487337 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.207198765 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.188792164 seconds)
  done (took 6.26333684 seconds)
done (took 7.322421238 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.31564405 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.158201682 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.176653191 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.205953006 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.288087123 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.184938742 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.221445688 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.177482556 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.215548709 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.177921089 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.195449505 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.190148273 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.203250777 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.280488322 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.179650639 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.195587791 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.168218668 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.216445541 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.193411396 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.222088647 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.287236666 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.172026415 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.214539293 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.168892707 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.289393155 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.197865036 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.1777358 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.204704313 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.191315879 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.205439532 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.178962702 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.194009797 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.196579607 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.219807351 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.170077285 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.204583488 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.170304408 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.137162973 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.208959324 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.180119483 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.220541104 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.20408503 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.180202035 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.19522294 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.181036709 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.202861202 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.171951824 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.207074657 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.170199297 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.205412224 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.173374561 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.221523002 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.178722937 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.19416701 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.169610046 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.196496915 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.191296813 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.19608555 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.193978857 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.197022331 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.171388484 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.196353531 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.181765362 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.197430064 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.180005153 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.194855924 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.179724391 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.208070733 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.177672734 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.199062953 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.169996548 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.203565062 seconds)
done (took 15.316931504 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.174228231 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.244710238 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.282414615 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.25999682 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.229814699 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.213989502 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.184892856 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.223857587 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.183461947 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.217745706 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.207576187 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.23242376 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.295638782 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.207486371 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.214117102 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.180792753 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.211020759 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.177260181 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.292413023 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.227133213 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.220781916 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.187379205 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.222886933 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.189674608 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.200167564 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.208976365 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.207251215 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.18339036 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.201722579 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.182808233 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.224633244 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.173871063 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.205087114 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.219940748 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.194805568 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.211961591 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.187154945 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.210003661 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.173627526 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.20154162 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.181453452 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.220372507 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.174346123 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.214521554 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.183163585 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.217621388 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.1819825 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.223139828 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.173998523 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.208251343 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.174991806 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.226110318 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.214511077 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.190350253 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.214455344 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.188295174 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.21779655 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.187298818 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.207259875 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.187357135 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.201958992 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.173651831 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.203939412 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.195140039 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.207573463 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.186267751 seconds)
  done (took 14.689948282 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.193595359 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.232638662 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.185782564 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.214130093 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.178668251 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.197274178 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.168813926 seconds)
  done (took 2.460710612 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.170437037 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.299821576 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.296932732 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.296931195 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.292277391 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.304766689 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.195003429 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.196282642 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.208322092 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.208922937 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.299709062 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.333232878 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.181698874 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.21432942 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.299816758 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.169690014 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.300630827 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.280641833 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.184856398 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.299772339 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.220366081 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.204748384 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.214097966 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.197482027 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.264583925 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.201802548 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.348999618 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.217779021 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.183535351 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.212760226 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.18725377 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.281101529 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.294226662 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.186080856 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.208971406 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.297101329 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.292166134 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.186680234 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.306866676 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.202574713 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.262346979 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.216113725 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.214413509 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.188790208 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.214662144 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.253553123 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.222788806 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.213938239 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.189081656 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.304995838 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.180492785 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.295400833 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.214211667 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.186339058 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.211591013 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.187454634 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.223963675 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.185686392 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.304995279 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.220301269 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.297487062 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.29707842 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.294768211 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.298511843 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.199247125 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.300390084 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.286544399 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.184312056 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.29459654 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.21662196 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.298938364 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.186568558 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.212583528 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.287909866 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.189945523 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.302967298 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.304437317 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.183234125 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.216642354 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.173861146 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.214854627 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.170081474 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.300006097 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.218653084 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.182922353 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.222134881 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.212677184 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.188255993 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.292992217 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.2225144 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.187559396 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.211454544 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.193024546 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.216641516 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.188886171 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.302442999 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.214339058 seconds)
  done (took 24.095577518 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.176607584 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.172849285 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.206353476 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.198865163 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.175410015 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.199186503 seconds)
  done (took 2.250594995 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.212096664 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.215380881 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.197312242 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.215425789 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.242970771 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.303579666 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.310028182 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.214145248 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.205692567 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.228990362 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.308696658 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.309935712 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.30703667 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.191267828 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.312143605 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.216839027 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.313249331 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.187267459 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.22344664 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.186914481 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.215015192 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.192356654 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.212487356 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.297843532 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.189865276 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.218797726 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.180561858 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.228667696 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.194597581 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.212088982 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.192120311 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.216865776 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.207716568 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.18503177 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.313561033 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.207504739 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.185126893 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.217510201 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.191519466 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.214232969 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.310822976 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.187265015 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.223071663 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.191816432 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.212411928 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.181049001 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.219008856 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.179909959 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.309632042 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.223543232 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.190740666 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.218210081 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.189607981 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.22066151 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.180376918 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.212365483 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.218093306 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.285474012 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.223691993 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.209569527 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.189811847 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.218257504 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.183615599 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.222566711 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.188969422 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.220131834 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.181603261 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.218846266 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.185838017 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.217873307 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.190580589 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.217569357 seconds)
  done (took 17.119044887 seconds)
done (took 61.686991622 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.687766161 seconds)
  done (took 2.809328407 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.32193207 seconds)
  done (took 2.446310665 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.53652975 seconds)
  done (took 19.695789598 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.686686764 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 1.618147531 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.197158242 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.250078799 seconds)
  done (took 4.87898084 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.165603461 seconds)
  done (took 2.311387991 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.536839147 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.374353471 seconds)
  done (took 2.046081279 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.848456148 seconds)
  done (took 1.999655473 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.834317478 seconds)
  done (took 2.974579659 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.595103749 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.279238862 seconds)
  done (took 2.025398761 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.69621095 seconds)
  done (took 1.848654428 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.642659866 seconds)
  done (took 14.799413739 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.324286839 seconds)
  done (took 1.480133751 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.362859411 seconds)
  done (took 1.520989087 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.99710913 seconds)
  done (took 5.158866571 seconds)
done (took 67.130522396 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.190720133 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.218344735 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.193677632 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.217446576 seconds)
  done (took 1.967289486 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.195597848 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.216319897 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.194512304 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.215876824 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.196282991 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.215859783 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.188813396 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.21968897 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.187951903 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.218634018 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.188478716 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.21528869 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.193066171 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.216141662 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.187319281 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.221463637 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.191984749 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.217138157 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.19149132 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.219437541 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.189377503 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.220762152 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.192021206 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.222876456 seconds)
  done (took 6.072884129 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.185578767 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.20560757 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.184240956 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.205338682 seconds)
  done (took 1.944515011 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.201479951 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.23302656 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.203115144 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.227287143 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.205237551 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.232923264 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.188773587 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.216033337 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.188104367 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.229271753 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.205049259 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.234710713 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.232479912 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.204578529 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.229500134 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.185055865 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.220248329 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.205579704 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.226674914 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.201501951 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.221986399 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.198569664 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.218413598 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.200548617 seconds)
  done (took 6.270172974 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.266093265 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.23365129 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.21526229 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.249218563 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.185970576 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.246652385 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.2645599 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.195688222 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.224688558 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.193446806 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.21987377 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.190185427 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.267904319 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.222321567 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.19340588 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.217068525 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.199714503 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.224087714 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.233808433 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.223133961 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.195160432 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.230565912 seconds)
  done (took 6.065232667 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.281895205 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.212276855 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.177479413 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.208971895 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.221768914 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.183695916 seconds)
  done (took 2.460516033 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.181203559 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.173020466 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.205415367 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.174264688 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.208917628 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.175055221 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.20443731 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.173841939 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.205127342 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.174023247 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.203539221 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.173306955 seconds)
  done (took 3.430152326 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311487445 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224229771 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.357706242 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.49700573 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265008979 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.266991144 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.385654209 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234589259 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.282583421 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240637025 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286254767 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233218065 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.258721867 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.313894875 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.2149017 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.257574165 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274934822 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.338033349 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213495235 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.338517699 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262096388 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.282141884 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.295921779 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2215853 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.242230245 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263894592 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.190739619 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.23017529 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237077075 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268490288 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276504086 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253466869 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.2136998 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290104698 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311381357 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277482144 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.37442408 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.236396262 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.263359468 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.297160135 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.335213507 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215051719 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.296271335 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257159028 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200462084 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.317436387 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253274037 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.290514527 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.206457749 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246525972 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284880012 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280301706 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.243448486 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238070149 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.407349357 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235434478 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.215484805 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288944705 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294052896 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307557337 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282321865 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.19476101 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.276071698 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297159785 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319814342 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.245025921 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.237758446 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227608483 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268939368 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.311149973 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257339149 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266033272 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.292085956 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23277597 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24443709 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270852948 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256562444 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309586785 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244310397 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.223557548 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251053922 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205310954 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227230293 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.257404102 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222882463 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.323125657 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201358637 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.275539159 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280944525 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.254803841 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233412922 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26577835 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26605583 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221346373 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.189812476 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214389903 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.263695125 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257045816 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200091506 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.255854393 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210334708 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.230054395 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254074069 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.19557913 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274719432 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.196831525 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263899201 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273800112 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.204579158 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285113211 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.251938393 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.236386275 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271632098 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.300207449 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232879264 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20473651 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324104273 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275208111 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.238389881 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.245526264 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.302807222 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.244681045 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20549352 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268505164 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301528079 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245723216 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.30340625 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210785114 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.23791559 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.198093906 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279980296 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.266545906 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.355245594 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199634884 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.271184416 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292080299 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.228545823 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212760156 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287528463 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234910947 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198420833 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237912307 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207960733 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.246467236 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.223393631 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.242640143 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256716025 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238401685 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.269815317 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260744959 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206107075 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274642537 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23513444 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.272927654 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.223533104 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.220877319 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.279660982 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271846022 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235136325 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286210069 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.232981792 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285271542 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277358734 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234971919 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.287904838 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202958142 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.222928977 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232101163 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.274216993 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269194358 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.294113728 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280507598 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.239075444 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.270503952 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253179263 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273436867 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.260964749 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260690134 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.247577084 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276800632 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242180377 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.225463867 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.195724191 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.232862363 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207335793 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235870288 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.239413685 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251238513 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269847304 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.282585726 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.275563184 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208525679 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.296963881 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.229327836 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263683182 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.249449458 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244679998 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.29470242 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294207176 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25299111 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245544144 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266562598 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.192875156 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230643925 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.206209602 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.265030071 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.241942289 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208987191 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246699039 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.301220497 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272872688 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221836311 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293741125 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26991952 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.311769814 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.19245946 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.262765677 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272038575 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271847139 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.26526376 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237420485 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.234423665 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.300045557 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246160283 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.299434656 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24147107 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28701953 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300739989 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.271760536 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205643399 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.249694811 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266703818 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212163432 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.269825932 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215980956 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236829069 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252402976 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.21208507 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.245110779 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291414432 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21580356 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279170836 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.261907188 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273196822 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198112064 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246485115 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281465402 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218680392 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.194891892 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240698765 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298731354 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255891828 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254781352 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243307965 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.236898491 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.457628585 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286652025 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245713718 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242506747 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242265375 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.249201871 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.262878471 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264197912 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.259270401 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248184982 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31801565 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.277580969 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.214619541 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236598453 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251990424 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.225239606 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.231707677 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.225945422 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.270010663 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.249500792 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292407714 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208418542 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.279716925 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284046945 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.214674436 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.255275968 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210364112 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.364851564 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243873051 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280914563 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.273137527 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.238741951 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291856248 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231189525 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19988331 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.239563286 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.293077632 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204128052 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284708412 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.268711056 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288971523 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283594374 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237888282 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.248773605 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.200323728 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.276953236 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255647942 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28761793 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210719255 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.245073623 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295259264 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.187941777 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237269349 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270950028 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394596199 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.224193733 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275333128 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.166835322 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.395635647 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.236483285 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207137444 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.26524162 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275782765 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.206934485 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.295469627 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281785764 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214225426 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.26698458 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208583158 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.283636558 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28818986 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272731609 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283606805 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.217280215 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270494384 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.264629671 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275627718 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219913929 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.255263466 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262977157 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272376047 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.282935212 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.23771731 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244035642 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276663394 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280643649 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278063992 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214081902 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293791689 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200554135 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271966568 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245859896 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198471886 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26667211 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.272007634 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23662611 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247669554 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28051563 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237171151 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20132211 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253961974 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270807203 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215175617 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.236477418 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291326153 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.206922682 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.293390801 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320345625 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203202586 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.27516027 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.25074718 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204923056 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24688335 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216429547 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238789514 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.255408876 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282921662 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.239791456 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279461375 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240214904 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271885692 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262198985 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.2175197 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.462589831 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.237995837 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299759138 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22606981 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.32762602 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.259394788 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285497967 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24627622 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258903384 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271117088 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219266989 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.326867474 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273213444 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.27330787 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208724308 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250692284 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210955038 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.24346916 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.259887378 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244963483 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249380734 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.210135242 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.277376055 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253508076 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.220478945 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.251663846 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.310013864 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225384248 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295296071 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.300297825 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24537862 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252029326 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280429446 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236898352 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.271780511 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246920436 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.252154272 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258475606 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.209355812 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.245869884 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323191448 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.203003748 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268382732 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281201821 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.248388151 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283426684 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.242206638 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255436533 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251084163 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284105612 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20384352 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.261051912 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.278692283 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.211399369 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.235810504 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.249128538 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267135996 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.276556187 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.248384798 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.256853193 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311736988 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.199171138 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241344866 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395354884 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234603786 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.306641159 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.228914306 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213287808 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256314647 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265652846 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.240467591 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281802945 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.238587463 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206587094 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.254642507 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.225128209 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.232954554 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2769818 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261406985 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266115824 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298391507 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.206340904 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.362932605 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250471865 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.248702437 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.210986048 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.203893875 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25070283 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209908118 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250450075 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.286872374 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328382122 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.272093749 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.226098654 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.244572163 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.203987672 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240676625 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.268441608 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228144026 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280841859 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255422285 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.167894256 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214476366 seconds)
  done (took 124.846846658 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.305251667 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.259174718 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.3131181 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.331051945 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.357765746 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.395683138 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.395619792 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.348819288 seconds)
  done (took 4.008309088 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.19696101 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.266760598 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.249532291 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.226056958 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.188106532 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.564416187 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.244408245 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.197068915 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.27118211 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.234779227 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.190792697 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.654868053 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.230361976 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.226021759 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.229372325 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.187036703 seconds)
  done (took 5.650454084 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.347783053 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.657427457 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.327133081 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.380181307 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.350822196 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.297323842 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.925524538 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.280041966 seconds)
  done (took 13.872915963 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.253926704 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.286856939 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.466988365 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.394090827 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.302480435 seconds)
  done (took 3.01883836 seconds)
done (took 180.758181405 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.202361487 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.233171411 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.20322745 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.234501748 seconds)
  done (took 2.170418738 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.243390937 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.15467798 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.190059923 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.155092977 seconds)
  done (took 2.049823585 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.493165855 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.15488003 seconds)
  done (took 1.982773717 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.223946075 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.244510004 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.215545845 seconds)
  done (took 2.010650167 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.21418883 seconds)
  done (took 1.535010003 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.197833537 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.227540317 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.295758211 seconds)
  done (took 2.041554376 seconds)
done (took 13.105424231 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.22320506 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.060655898 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.667561147 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.2120146 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.834019326 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.508725307 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.503838023 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.259923416 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.318378266 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.190355561 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.255378564 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.772053136 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.519250947 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.961939573 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.502441407 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.96129403 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.80894016 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.188527535 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.229012154 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.189239428 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.517271645 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.188134399 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.224516191 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.190088907 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.804637587 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.497608459 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.223147092 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.006563894 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.190189549 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.231370972 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.479193828 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.221163808 seconds)
  done (took 24.24488568 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.193895117 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.280579395 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.245996366 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.225993124 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.198172478 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.223958018 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.20093009 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.237006745 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.328700039 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.188858444 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.245727616 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.187542145 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.231043417 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.190084228 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.248309859 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.18897466 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.226702572 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.190387549 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.233024745 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.190890057 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.24778528 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.220465745 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.194845657 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.223131168 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.190530305 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.241766568 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.191010812 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.235611386 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.190990418 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.231787296 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.194659391 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.222801167 seconds)
  done (took 8.362325335 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.234114827 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.291642533 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.246741572 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.26420776 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.281443471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.193587327 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.314869649 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.26292275 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.30309399 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.22588047 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.213166702 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.224374762 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.263924553 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.192405822 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.247675421 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.190600285 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.225080717 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.192278641 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.231879278 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.192973422 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.247134151 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.190290679 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.226262222 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.190902139 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.224549295 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.211322473 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.22408932 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.746669321 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.196302407 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.231905607 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.196166914 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.223370374 seconds)
  done (took 9.225945702 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.205183844 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.235758263 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.215814175 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.247140924 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.201737875 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.236212859 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.206831399 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.232921449 seconds)
  done (took 3.106166364 seconds)
done (took 46.265896803 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.211358861 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.233545481 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.208640568 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.202097488 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.319830755 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.22928188 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.205415646 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.227354121 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.201738992 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.243975718 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.188904399 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.226133295 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.207380422 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.231450661 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.323537581 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.204425367 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.327839594 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.326589227 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.195257162 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.236848695 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.19457628 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.32985703 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.234857379 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.195568514 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.301274415 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.196016058 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.314855611 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.232242242 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.199862566 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.190214901 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.325673747 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.2350243 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.194623771 seconds)
  done (took 9.21358582 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.305533476 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.236226828 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.199260464 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.234801227 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.200525779 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.233152484 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.341447471 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.201507259 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.234048897 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.199811093 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.231882071 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.341522829 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.205565107 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.228117137 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.203658719 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.174845 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.344909014 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.235366941 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.19160167 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157442297 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.231126039 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.198652846 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.355782254 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.230487759 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.20101837 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.234723215 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.200365074 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.242963718 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.201515081 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.234559995 seconds)
  done (took 8.383712971 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.205155139 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.245733134 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.220821587 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.302294866 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.231230242 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.247367909 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.217435751 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.248256499 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.221303351 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.229483372 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.208961908 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.264383481 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.244806131 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.206482612 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.226614013 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.211035426 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.242036295 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.195583251 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.23488804 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.213370639 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.248078893 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.21144274 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.249106608 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.20345597 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.225174235 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.202771246 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.238396028 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.205596536 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.236142389 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.210174422 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.228546661 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.196365544 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.229940693 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.228181601 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.229915969 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.20705112 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.250450355 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.206799482 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.243750409 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.226597949 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.231197068 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.196123334 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.258501448 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.287037339 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.196946763 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.239191171 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.196479944 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.242358473 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.19283807 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.244441978 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.238772682 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.228101283 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.216237414 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.226648165 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.191364768 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.236101253 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.193537461 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.230769011 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.209998213 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.229040998 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.216082436 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.235174529 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.206540022 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.229931753 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.206823158 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.226348058 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.193764445 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.231325226 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.223665802 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.236600338 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.233329532 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.228032909 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.206115107 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.243610308 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.206521653 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.241833267 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.193658007 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.241210422 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.205571882 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.233440369 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.207462136 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.232602483 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.196025765 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.24560735 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.215492696 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.244897553 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.206306822 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.240274479 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.196264623 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.232236515 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.210861591 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.232254185 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.196768738 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.243613452 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.194786921 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.234288662 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.204271437 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.239885044 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.192773467 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.257606711 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.198293443 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.229824058 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.221293364 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.233983106 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.197633023 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.239337488 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.271551012 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.196171734 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.238451761 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.206408301 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.194387848 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.239192358 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.196217829 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.228601486 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.243480473 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.213347521 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.236616752 seconds)
  done (took 27.582759652 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.424041004 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.416467205 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.299907482 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.464695825 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.244705768 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.335271545 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.414750507 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.417796635 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.19387668 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.266722954 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.287571765 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.381077649 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.195306749 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.260922565 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.421995283 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.503997331 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.225976431 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.275368048 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.269533228 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.207566689 seconds)
  done (took 7.873842966 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.204714161 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.260433048 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.217098837 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.246411084 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.207106923 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.243669464 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.197437886 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.250101008 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.207760079 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.236636377 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.19905534 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.238054015 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.210060442 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.243786588 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.209748181 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.253801269 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.203292193 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.231626871 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.218917154 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.232574897 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.213890118 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.25805593 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.238295108 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.21762544 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.247425318 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.206876517 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.227872343 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.200411868 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.237059755 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.206042402 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.196251423 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.240001958 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.202279912 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.203562618 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.208002707 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.246194086 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.203219767 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.232197684 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.202005227 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.232699005 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.208501374 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.241539794 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.204639291 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.202008859 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.250360538 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.177762549 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.241681781 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.20911472 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.207757006 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.21707984 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.242166899 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.209478175 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.236742326 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.217662595 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.236044471 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.215016519 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.237778492 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.208873698 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.231968744 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.19642414 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.227617632 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.200250395 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.204184694 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.24467448 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.208704193 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.240674041 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.205393856 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.231459392 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.197605925 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.23489244 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.198749087 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.244748232 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.251758761 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.207935591 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.202623532 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.242080365 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.20397119 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.197769842 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.204865088 seconds)
  done (took 18.867163975 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.224565149 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.237433685 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.216053522 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.264902611 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.205121965 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.238268568 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.203714383 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.250536049 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.205668123 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.247339413 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.207299336 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.244945395 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.221197612 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.244297477 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.203200561 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.246430848 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.204791545 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.271290434 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.209628194 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.25719367 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.2044547 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.239846841 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.209464066 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.244439673 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.223949777 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.245720284 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.220927885 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.240974428 seconds)
  done (took 7.834639378 seconds)
done (took 81.081199015 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.571053833 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.809657569 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.493379989 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.49957547 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.504192607 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.543961492 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.493143925 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.507131039 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.147110537 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.469979668 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.492353811 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.495001634 seconds)
done (took 32.468093604 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.883713704 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.252817275 seconds)
    (2/2) benchmarking "String"...
    done (took 2.270830879 seconds)
  done (took 5.921651769 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.238768701 seconds)
    (2/2) benchmarking "String"...
    done (took 2.261100311 seconds)
  done (took 5.881011405 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.491747449 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.482625061 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.961103643 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.49646432 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.48283647 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.481981612 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.481589384 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.504981604 seconds)
  done (took 18.272575095 seconds)
done (took 36.832575079 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.545557085 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.826377572 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.75067025 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.467710315 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.492637087 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.489261519 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.484136356 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.56070552 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.494226675 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.467928848 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.02081368 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.780682795 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.496096745 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.925751732 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.469185152 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.487457937 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.496251025 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.863231909 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.487610401 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.468597718 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.468723712 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.477214107 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.490472218 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.504501795 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.500713604 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.49366592 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.479972209 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.496823374 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.809456356 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.516455619 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.534808511 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.485515023 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.481100844 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.488907703 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.485257867 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.503376651 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.825167712 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.506120785 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.493174516 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.502590449 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.827176138 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.51546974 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.486328674 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.501824709 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.470696797 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.52601752 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.474047782 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.678484393 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.5109684 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.493184923 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.56528634 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.894004328 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.497645965 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.500619038 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.492257081 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.847020351 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.497369882 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.609042673 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.522139163 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.500452117 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.488774795 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.502396848 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.527751958 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.501334981 seconds)
  done (took 163.431653359 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.487295766 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.492631082 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.487794782 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.489816338 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.493498859 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.491787049 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.48783082 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.487555646 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.489041169 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.492247233 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.495210879 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.490241671 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.491537995 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.501297477 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.49862493 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.512784482 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.493415748 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.508151141 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.501306905 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.488967208 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.493641405 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.495299647 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.490166661 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.489933043 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.511392895 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.497241444 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.509423091 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.526654262 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.502945801 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.489489201 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.512958736 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.496003437 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.293625258 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.452743606 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.504423224 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.503084645 seconds)
  done (took 91.037366836 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.490089557 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.490684675 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.490257106 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.528212282 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.490352509 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.163301842 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.168629894 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.571677585 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.785994854 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.899410183 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.243293648 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.883547831 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.496291742 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.588020166 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.505334792 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.492671519 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.59262585 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.516283251 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.496408866 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.493199799 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.167173913 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.51039144 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.056219091 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.687069843 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.493281094 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.53030773 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.894198907 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.494452542 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.530376454 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.839784165 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.531088067 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.491629347 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.492282643 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.939136674 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.047918664 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.494410497 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.609295148 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.496990016 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.530616848 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.491476954 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.787028853 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.493019329 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.493915881 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.497170904 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.231193227 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.495803482 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.168959544 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.497489031 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.59605806 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.497489101 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.493617868 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.137457285 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.423302013 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.497723698 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.494315933 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.497763507 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.494549901 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.494495983 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.533462531 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.191806864 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.507245719 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.501608549 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.498575971 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.533752861 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.495057368 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.495583901 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.829116399 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.555951983 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.64415866 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.169860497 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.498768873 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.524364726 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.596629641 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.619361862 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.496489812 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.49768319 seconds)
    (77/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.495921793 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.496268136 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.496097444 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.613121264 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.496672517 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.975422154 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.688331526 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.498775857 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.173492873 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.598194295 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.497482047 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.910736973 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.498107057 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.497569908 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.30435665 seconds)
    (92/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.49753366 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.595550524 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.497390765 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.49704505 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.497845501 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.97556023 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.172253678 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.892035991 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.501811438 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.969652496 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.50126947 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.994737668 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.141435862 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.218015224 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.499093915 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.614787886 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.689476504 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.499910569 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.498673749 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.26135202 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.50117693 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.560563602 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.498779978 seconds)
  done (took 408.405761176 seconds)
done (took 664.257836786 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.480365555 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.482553752 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.506218354 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.485515162 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.485834267 seconds)
  done (took 13.832815402 seconds)
done (took 15.225808325 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 1.545177009 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 1.78777392 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 1.79077542 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 1.600450378 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 1.806185898 seconds)
  (6/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##1#2\"))}", "10-90")...
  done (took 1.593144352 seconds)
  (7/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 1.792802632 seconds)
  (8/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 1.568953915 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 1.725113858 seconds)
  (10/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 1.816669983 seconds)
  (11/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 1.778949614 seconds)
  (12/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 1.801777027 seconds)
  (13/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 1.713113099 seconds)
  (14/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 1.719860326 seconds)
  (15/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 1.82742149 seconds)
  (16/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 1.691969419 seconds)
  (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 1.828655655 seconds)
  (18/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.900605307 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.949719863 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.630948391 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.862144272 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.574132228 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.900744012 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.92185766 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.809386165 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.754706028 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.558513341 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.550563797 seconds)
  done (took 20.808428084 seconds)
  (19/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 1.693212524 seconds)
  (20/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##1#2\"))}", "90-10")...
  done (took 1.835913003 seconds)
  (21/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.896262856 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.949440568 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.634369077 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.879422935 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.578239314 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.9094843 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.979477558 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.80683193 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.7589294 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.571061237 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.55383209 seconds)
  done (took 20.914092219 seconds)
  (22/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##12#13\"))}")...
  done (took 1.818060593 seconds)
  (23/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##1#2\"))}", "50-50")...
  done (took 1.720054904 seconds)
done (took 79.575097087 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.565357368 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.641073631 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.561445558 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.542682278 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.541356691 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.543648672 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.54356612 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.542829504 seconds)
  done (took 13.878143583 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.541035281 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.539600741 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.540562036 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.541446786 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.540481021 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.5396453 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.543323002 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.541937142 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.543821949 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.541356831 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.541673421 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.541702405 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.544363427 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.542958221 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.541851656 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.541584094 seconds)
  done (took 26.065393862 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.543683942 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.542313446 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.540728609 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.541088151 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.541896773 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.54176638 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.542866101 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.542176418 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.542494126 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.542195694 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.541774481 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.54272118 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.543178919 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.542895015 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.545649905 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.544966507 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.545091035 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.542652736 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.54713941 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.543382158 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.548957099 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.54364539 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.543744006 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.543721586 seconds)
  done (took 38.439604646 seconds)
done (took 79.781641998 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.524188096 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.526234237 seconds)
  done (took 6.449162983 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.660860853 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.641252844 seconds)
  done (took 4.703711205 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.544255523 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.543884177 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.54628993 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.544077986 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.545499187 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.545041587 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.546521314 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.545120996 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.543233675 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.54417779 seconds)
  done (took 16.848150453 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.544171713 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.544563243 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.543368329 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.544262577 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.544515681 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.545440031 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.547097924 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.545280793 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.544675199 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.54464391 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.54661972 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.545170025 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.545087822 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.54558572 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.545650602 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.54547998 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.545833307 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.545447434 seconds)
  done (took 29.212726633 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.566536359 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.572137421 seconds)
  done (took 4.540153186 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.729052486 seconds)
    (2/7) benchmarking "second"...
    done (took 1.62720434 seconds)
    (3/7) benchmarking "month"...
    done (took 1.711882845 seconds)
    (4/7) benchmarking "year"...
    done (took 1.700970005 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.629481305 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.576052932 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.629570562 seconds)
  done (took 13.006080103 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.546440647 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.903197816 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.090026951 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.769527885 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.537953185 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.558709595 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.491122719 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.564844454 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.562724422 seconds)
  done (took 17.427132739 seconds)
done (took 93.587164613 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.510219002 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.520809386 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.540708703 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.535867445 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.908153125 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.523713805 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.515538184 seconds)
done (took 18.4596595 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.496470885 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.506456583 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.500017984 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.522771437 seconds)
  done (took 11.429008606 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.514673409 seconds)
    (2/2) benchmarking "read"...
    done (took 1.929535802 seconds)
  done (took 5.847727424 seconds)
done (took 18.68155769 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.548075772 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.549926286 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.549094267 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.549000121 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.549124159 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.549241353 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.550701664 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.549214883 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.549782273 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.549390953 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.549480419 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.549732896 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.549898978 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.548560819 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.549266496 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.549393606 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.548552648 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.551824503 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.549957226 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.549577708 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.549745048 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.55047 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.550223111 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.549177866 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.55210708 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.549058927 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.551752915 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.551388832 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.550886673 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.550273188 seconds)
  done (took 47.899584718 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.555135537 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.554140718 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.553029264 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.552574667 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.551803061 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.553155188 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.558026408 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.551040255 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.55154374 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.550323403 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.553271125 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.551113937 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.551840286 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.551939181 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.552236916 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.551038788 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.551414534 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.55208969 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.551978293 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.551999385 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.551301042 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.552404115 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.552045969 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.552981423 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.552448674 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.552777696 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.553403404 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.55133261 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.551159124 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.552916541 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.552705131 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.553083392 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.551910477 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.552671118 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.55138981 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.552046458 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.555831577 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.556131893 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.551964604 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.551386318 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.552283848 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.552712395 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.554150287 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.552956979 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.553041487 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.553925677 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.554714325 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.552539467 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.55383237 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.55381002 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.553577448 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.553785855 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.554037283 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.554401855 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.554326147 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.553944813 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.554001874 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.55530616 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.554523309 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.554555226 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.553843684 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.556511551 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.554849747 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.555253011 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.555931589 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.554460731 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.554916864 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.553394185 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.555729329 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.554860572 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.555365037 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.554446135 seconds)
  done (took 113.245740052 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.555124364 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.55565348 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.556977462 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.55638402 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.555239532 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.555016528 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.554951296 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.555703068 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.555806434 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.556167722 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.556642364 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.557805571 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.555667099 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.55633569 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.557030472 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.55660472 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.55777044 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.556556878 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.55703131 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.5563843 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.558441684 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.556945475 seconds)
  done (took 35.651284916 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.556248598 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.557509024 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.558081164 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.557301246 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.558946498 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.558152752 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.556622668 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.558590028 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.558157919 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.556857545 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.557938618 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.558847952 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.55949084 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.556941075 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.558092758 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.558504542 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.558078929 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.559463462 seconds)
  done (took 29.456074827 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.558878542 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.557547157 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.558890694 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.557905863 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.558845367 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.560116339 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.559797165 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.559863932 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.558952364 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.558950688 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.558337063 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.558978974 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.55968877 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.559443349 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.55858458 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.558247595 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.558575501 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.559550834 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.559112719 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.560000542 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.559164332 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.561798536 seconds)
  done (took 35.714232516 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.559359259 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.558815824 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.56021691 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.562429971 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.562374936 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.560155869 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.56699794 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.561877037 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.562737133 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.562112054 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.562803412 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.560728149 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.563040105 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.561426072 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.56158105 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.561146987 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.562677977 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.561096841 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.561174504 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.560469456 seconds)
  done (took 32.648127113 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.562415025 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.562495831 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.562255089 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.562303628 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.562278345 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.56333253 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.562177705 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.562385971 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.564021026 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.562741323 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.563050161 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.5641334 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.563436872 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.563958797 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.563045762 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.562580758 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.563613082 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.563364377 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.563679083 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.565248975 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.564460816 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.56369354 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.565751203 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.562913622 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.564317083 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.563396784 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.56364088 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.565112226 seconds)
  done (took 45.192625544 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.590462936 seconds)
    (2/2) benchmarking "in"...
    done (took 1.589040408 seconds)
  done (took 4.596701508 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.564602314 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.564125508 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.563288879 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.565499007 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.563877572 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.56508359 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.565739959 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.564725095 seconds)
  done (took 13.933902 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.560079882 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.566044607 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.565896403 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.566270683 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.566706982 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.559424352 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.574025929 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.575406831 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.560891508 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.558600643 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.562699 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.562358872 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.563484435 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.5607491 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.560258815 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.57185191 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.570415623 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.567947782 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.568657858 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.568282741 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.567943312 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.56461747 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.566805737 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.571125979 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.561265507 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.579542831 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.575955504 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.570753725 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.56172632 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.574661764 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.564407667 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.571494951 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.568579286 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.568673712 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.568043185 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.569344328 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.579008127 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.568352652 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.578321098 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.573913205 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.569210024 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.568646544 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.567410353 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.568205985 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.569507408 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.572900646 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.570411713 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.569178804 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.561648587 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.567892677 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.574001974 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.563190263 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.571765167 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.576434615 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.570022277 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.581424426 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.576730603 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.565058727 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.568106112 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.581543645 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.590301252 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.578675613 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.579555822 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.576325593 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.57642777 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.583475804 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.583151949 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.578366285 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.571634005 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.570347668 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.579827715 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.593375596 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.586134312 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.576218945 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.571702798 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.573234976 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.566007242 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.576159161 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.580087104 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.581405079 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.578395478 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.572503669 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.578125403 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.575100787 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.568696969 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.575666012 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.572611363 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.571833052 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.565362327 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.585472357 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.581827619 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.571849535 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.566061508 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.570042811 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.569766518 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.575770076 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.56590695 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.57542932 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.578534533 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.574697523 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.57332137 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.570242417 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.580351105 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.579218418 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.573702773 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.583524134 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.583266909 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.567969991 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.586511386 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.582292133 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.575634933 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.568847546 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.585199557 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.57920019 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.569896702 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.57965793 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.580352851 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.577643708 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.580949225 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.575245987 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.580356552 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.590030129 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.582741632 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.577853301 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.574205421 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.584008064 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.576782006 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.580059378 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.581290191 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.575694368 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.57481339 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.577938297 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.583308255 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.57534963 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.5807008 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.577899955 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.581057689 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.576189542 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.577067377 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.57882165 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.577169625 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.576512209 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.582653074 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.587320916 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.58440127 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.580739702 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.593792758 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.580381486 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.583511493 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.582277677 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.584791124 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.577929079 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.578220387 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.582588051 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.569524658 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.579122457 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.57123109 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.580901035 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.578419225 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.580824559 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.577540343 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.571326354 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.577007942 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.582460172 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.583409943 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.578128964 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.582285499 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.579073918 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.57929741 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.572715707 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.580984495 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.571418824 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.576935377 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.583258039 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.579791886 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.580085149 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.583890661 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.586172655 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.579556101 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.579575308 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.576734793 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.584920889 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.586704007 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.589266414 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.58833976 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.579592908 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.580175384 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.57387549 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.578109618 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.58203414 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.57595243 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.588241214 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.598361007 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.596471521 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.57896238 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.584158223 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.573575453 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.584270527 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.588626878 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.588794637 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.581924839 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.58564277 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.576078704 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.586423735 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.581189968 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.587342008 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.573586767 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.584134547 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.582910649 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.581403753 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.583068978 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.579258298 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.586898656 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.586674674 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.583294845 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.582886832 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.574775326 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.586600643 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.574667072 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.578128476 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.58632044 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.581472965 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.592922536 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.590954828 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.585754586 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.592121596 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.586750521 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.581084019 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.585984712 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.58747722 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.58381649 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.595904409 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.587817976 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.583924045 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.597817851 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.586910668 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.577554939 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.589886954 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.592278809 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.589944364 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.577493968 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.589663672 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.585423188 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.582232559 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.583518407 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.577359314 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.588398846 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.593141418 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.59454432 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.579698857 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.589044319 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.581841099 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.589434313 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.590408459 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.594081063 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.58920244 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.594608854 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.594363502 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.586653652 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.585142705 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.590110656 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.58588875 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.586079417 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.579529841 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.591275678 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.595337997 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.589298401 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.592134936 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.584892884 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.592876929 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.579963485 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.588410929 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.587853385 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.609100571 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.605756081 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.600408614 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.598664886 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.592448663 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.595586073 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.589103894 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.583481111 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.584310267 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.58946637 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.586466897 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.582902267 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.592437558 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.588340599 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.592567533 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.591299005 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.589574275 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.59267858 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.589624141 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.582244921 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.591441761 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.587740312 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.589447163 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.580396641 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.589793506 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.591430726 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.597278677 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.590201729 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.585429264 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.604772297 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.595548568 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.59508552 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.593438383 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.584860966 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.58312995 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.592460606 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.594384733 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.584927943 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.594899672 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.583378165 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.59992147 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.58859943 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.603880005 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.598184098 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.585254452 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.596826035 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.590197538 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.581617328 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.585386871 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.592770491 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.600915312 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.602625515 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.583357352 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.594693851 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.590719462 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.590076923 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.591260383 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.591022923 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.592028917 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.590649482 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.603646386 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.596220161 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.589286389 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.600032519 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.601863477 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.59182526 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.590189088 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.583592299 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.60381191 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.601586067 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.594957501 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.599894931 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.58756557 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.593907508 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.591013075 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.591272675 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.591934072 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.592631158 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.605024843 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.59855796 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.597074251 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.592705329 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.604623535 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.603702537 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.605185758 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.604761541 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.593017241 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.599286893 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.593719984 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.590837354 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.589394224 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.598118588 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.597532968 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.585875341 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.600450798 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.593608307 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.597595756 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.603316386 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.60214822 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.587353182 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.60239015 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.605775567 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.588291919 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.598281806 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.595632797 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.586387067 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.597348517 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.593849469 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.587710281 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.590749843 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.593896333 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.601241401 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.590351748 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.604758259 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.593934955 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.600483693 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.596202423 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.596125527 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.595757254 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.595839806 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.589157252 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.59802926 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.606393593 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.606643136 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.596456295 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.601380036 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.593042523 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.609406825 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.606499193 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.598488677 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.601887572 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.597724403 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.592182707 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.600987388 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.602536678 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.595245527 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.601854258 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.59039463 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.594367203 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.595741959 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.604090716 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.604496982 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.602129921 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.591092554 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.594303577 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.599698887 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.597377153 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.595919076 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.601662125 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.607836862 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.589798396 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.589958891 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.599266778 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.597731666 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.608090875 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.594453457 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.598136606 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.59759394 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.602102124 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.60074434 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.598668029 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.592524161 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.59360733 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.613274914 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.607077618 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.597634448 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.595897915 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.601628461 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.594182752 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.600098308 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.602828195 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.602129223 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.60044528 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.608648767 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.60419911 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.595521819 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.595404206 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.603070404 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.611141053 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.604799674 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.595541863 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.615630801 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.614618312 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.609278736 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.593516535 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.600245464 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.597142765 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.604550969 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.602105896 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.595289038 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.615916033 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.612606464 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.605887941 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.607388621 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.602799351 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.59464999 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.605097059 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.603064887 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.606516304 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.610379784 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.604633942 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.610827885 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.602126151 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.602326665 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.593200993 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.595848606 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.598849756 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.600351903 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.604168379 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.607766812 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.605660888 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.606566659 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.610388234 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.602564823 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.602857249 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.602542195 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.595734066 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.605246589 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.597064753 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.611851618 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.603857795 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.598840397 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.607464818 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.602963896 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.599678214 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.602150734 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.610399898 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.603985185 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.597961445 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.60767951 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.61580694 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.61412635 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.604107548 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.600362588 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.612668552 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.610003758 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.604773554 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.604713421 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.599735273 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.623544796 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.618388903 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.601747401 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.605074151 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.618674484 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.615190451 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.606035237 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.60621864 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.609531352 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.60722631 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.612240775 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.60689631 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.617759982 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.611278921 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.602766106 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.610212234 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.602349153 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.604508367 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.614765188 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.615271746 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.605817611 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.605206011 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.623979488 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.616817963 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.611659765 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.63161761 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.615794718 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.61264788 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.613591994 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.598539312 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.608810799 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.610016679 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.613555397 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.607329186 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.607742647 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.6069533 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.599587908 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.617888001 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.622513449 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.619522287 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.608182927 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.599811331 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.603729077 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.610085821 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.607393021 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.609695059 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.606782748 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.610580438 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.60841026 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.605214462 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.63133147 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.631172162 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.61622969 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.608651142 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.608557974 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.617454636 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.61581176 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.61006019 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.615822864 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.609541967 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.608737187 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.616539645 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.618410344 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.610692184 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.605564297 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.606756767 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.606744545 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.613855226 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.626448168 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.631784531 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.620297875 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.613051492 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.61318866 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.613115327 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.611542572 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.615221461 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.610363929 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.616913715 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.60927706 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.615296121 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.611236108 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.611818933 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.605047401 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.619207932 seconds)
  done (took 949.738143681 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.611522736 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.612192304 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.612115758 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.61489628 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.610968616 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.612688107 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.611920692 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.612264032 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.612438215 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.612077695 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.612720095 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.612408463 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.612114991 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.613921366 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.611190781 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.614046381 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.61323287 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.613146895 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.612373403 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.611610178 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.612738253 seconds)
  done (took 35.321162909 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.612297276 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.612138247 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.613677061 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.615906465 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.613737334 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.613597861 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.613293422 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.613533816 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.614516832 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.612937441 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.614846413 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.61411713 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.614067473 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.6145308 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.614276438 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.614331194 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.614791518 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.615569619 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.614683892 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.615521219 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.614892928 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.615003067 seconds)
  done (took 36.971357602 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.615815181 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.614356477 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.608509015 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.620219164 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.614987981 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.615847658 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.613261226 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.615550344 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.615697709 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.610121161 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.610144069 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.60970805 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.613720432 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.624503716 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.618904262 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.624038574 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.615948788 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.616230807 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.614390419 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.61633089 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.625378479 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.627554663 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.616994382 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.608634729 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.6196663 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.616573448 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.618118058 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.615810502 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.607601917 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.619470814 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.617773182 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.611851968 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.632934747 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.617735467 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.610237308 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.622000605 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.617284083 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.617114998 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.617454775 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.622912942 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.630778398 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.617119887 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.631152118 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.628437247 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.617630636 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.614565232 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.624124338 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.616877747 seconds)
  done (took 79.114826615 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.617366286 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.61795009 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.61848675 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.618882681 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.618980808 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.619713582 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.620282649 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.618492617 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.619099328 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.61917329 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.618657512 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.619728249 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.618105556 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.620439723 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.620520458 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.619368077 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.619950973 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.620173557 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.619238941 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.621640085 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.619779373 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.619928833 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.619821696 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.620983995 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.621784516 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.620686262 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.619985894 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.619114903 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.620376586 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.620096173 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.620439233 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.620886777 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.620485887 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.622162986 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.619864649 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.620732008 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.619754928 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.620836141 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.620301087 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.621161461 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.621458916 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.620110769 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.62002228 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.620816446 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.621606002 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.621314624 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.620348021 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.621818389 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.622022465 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.620847805 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.622058434 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.621205393 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.622413018 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.622052008 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.622364199 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.622992351 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.623023291 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.62182258 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.622967697 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.622394999 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.621844719 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.622928725 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.6218619 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.622072961 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.623843646 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.62392117 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.624918294 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.623054719 seconds)
  done (took 111.679076441 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.623100605 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.623010859 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.622688681 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.623376269 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.624365222 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.623499329 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.623514974 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.62399164 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.624010498 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.622995075 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.625027946 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.62570359 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.623704872 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.623451558 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.624454828 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.624085926 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.623870396 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.623871513 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.623346237 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.624141101 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.624076008 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.624394834 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.625589958 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.624826383 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.624755495 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.623294974 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.625587095 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.627250365 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.623515253 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.624332536 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.625249272 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.626439159 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.625396498 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.625648834 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.625384205 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.626841235 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.625490504 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.626034987 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.625165183 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.624896923 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.625830771 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.625466479 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.626704206 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.625326517 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.626346758 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.626238993 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.626028561 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.626604193 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.627275019 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.626121869 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.626617952 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.627417984 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.626920574 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.628175133 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.628068974 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.626874967 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.627224943 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.625785653 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.626852619 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.632834734 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.626620885 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.627278511 seconds)
  done (took 102.244358311 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.628254822 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.628276612 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.62730086 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.628262504 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.628231495 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.627914416 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.628629591 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.62877514 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.6293954 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.633874391 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.62876152 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.628759705 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.628312371 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.628768015 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.62972114 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.628561635 seconds)
  done (took 27.533373204 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.628231915 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.629712898 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.630865908 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.628231495 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.629016861 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.629637121 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.629516854 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.630430937 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.629312917 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.630612943 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.629879191 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.630493445 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.630691934 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.62988806 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.630016359 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.631050708 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.630166937 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.628759216 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.62924594 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.630118746 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.630608055 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.629499533 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.630673007 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.630766943 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.629933946 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.632432448 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.632538816 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.631100087 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.631405013 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.632326918 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.63100182 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.631164689 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.631508448 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.630417737 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.631590651 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.630981146 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.630956562 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.631142061 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.630904251 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.631426873 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.631365204 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.632806867 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.631776359 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.632362048 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.633409807 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.636547986 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.63241408 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.633375096 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.631973312 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.635206754 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.633943675 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.633796518 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.634349871 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.632465064 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.633698391 seconds)
  done (took 91.192644332 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.632685483 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.634007509 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.633292334 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.634021128 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.635124341 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.632384397 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.632553762 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.636967662 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.634613661 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.634254677 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.634222201 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.634383674 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.63445603 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.634060658 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.635282531 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.633979852 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.635092144 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.633843871 seconds)
  done (took 30.891973554 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.635027541 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.634928366 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.634483128 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.634551642 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.63499262 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.634925154 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.634180226 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.634356995 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.635792023 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.634398061 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.634752367 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.636344189 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.636182157 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.635550861 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.635271846 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.634187979 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.635799287 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.635478157 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.63416975 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.636075928 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.635536055 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.636339579 seconds)
  done (took 37.45014188 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.625316319 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.626024162 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.625028853 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.64787254 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.636908786 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.626654968 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.631851648 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.626400256 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.652178465 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.658009443 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.660213565 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.63550756 seconds)
  done (took 21.130732337 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.637176557 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.637930494 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.637036036 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.637278315 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.636819738 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.637135211 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.637388805 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.637319242 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.636491485 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.637180888 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.637330208 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.638329986 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.637001605 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.637358215 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.638080583 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.638568773 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.637508932 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.636963122 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.637312887 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.637100291 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.639471053 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.637389573 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.640805929 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.638389072 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.638663688 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.638459262 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.638920843 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.639785199 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.639501364 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.639000671 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.638300652 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.638435865 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.640145022 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.639477897 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.639781079 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.640049059 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.639690145 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.63973177 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.640153193 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.640413072 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.639349809 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.639071421 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.640909155 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.642034228 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.639954565 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.639117167 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.641110507 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.640671275 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.640770939 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.640788818 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.640519231 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.640759974 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.640730012 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.641318285 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.642330774 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.641325897 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.641226514 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.641350133 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.641920527 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.643744781 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.642053923 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.642043237 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.643059777 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.642867644 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.642509567 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.643370851 seconds)
  done (took 109.689333472 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.642960114 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.641999727 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.642454324 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.643172501 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.643307644 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.64130292 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.647598134 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.642421638 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.64376685 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.642929593 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.641802006 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.643425885 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.642522139 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.642785022 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.643247302 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.645578254 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.643723898 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.644091124 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.643094977 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.644106699 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.644424197 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.643796743 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.643407727 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.643373854 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.644504165 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.644118432 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.643254495 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.644332425 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.645471117 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.645242457 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.644033923 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.644270476 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.645535023 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.645704946 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.645039987 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.646564203 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.644809721 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.644993962 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.644452482 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.645017568 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.64532082 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.644263213 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.644816496 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.6473444 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.646488495 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.647016077 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.645574832 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.647330921 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.647037378 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.646405036 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.647905785 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.646984229 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.646774216 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.648428407 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.650883398 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.645795809 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.691364733 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.646162197 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.646952661 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.646920464 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.646720997 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.647543238 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.648073194 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.646151721 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.647527664 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.647029207 seconds)
  done (took 110.109190355 seconds)
done (took 2102.809744156 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.614335385 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.610754901 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.636439382 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.778962674 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.637885376 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.297565005 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.195036045 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.637316309 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.637424424 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.639834506 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.638829491 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.610168584 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.985682048 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.636993224 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.643290673 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.613026908 seconds)
  done (took 59.302388245 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.677000127 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.653867576 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.79359575 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.643249745 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.678430197 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.91590872 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.726885101 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.651988427 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.857305597 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.652750815 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.625805209 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.677606838 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.643528622 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.61869369 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.66931123 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.914768212 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.999895238 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.62755152 seconds)
  done (took 35.5178199 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.247693788 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.631368068 seconds)
  done (took 6.368295368 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.672011993 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.645740705 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.653601831 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.64569901 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.624860327 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.613542965 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.644125066 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.621803652 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.629956785 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.804324768 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.647880572 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.668182036 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.646502604 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.647031651 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.652968719 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.707293155 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.840260483 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.655183805 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.651527544 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.658350409 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.644494737 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.89170215 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.702548557 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.654048396 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.80442932 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.665895642 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.66708888 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.668761161 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.859578372 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.656139723 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.646458674 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.647057422 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.648158052 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.617010725 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.280358906 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.617115976 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.688023386 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.66182166 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.654673475 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.860229083 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.647332527 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.660654194 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.618174211 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.274616346 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.825382963 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.93972837 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.617643696 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.659380987 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.649989709 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.857682112 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.64794776 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.650699297 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.754288097 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.630556791 seconds)
  done (took 103.808106327 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.657929895 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.617519588 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.88503112 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.641303408 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.617281011 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.617498496 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.619736281 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.028357517 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.678302387 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.618159335 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.041906726 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.441863313 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.631086747 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.660826073 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.665243883 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.691750536 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.618565601 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.617506248 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.642474089 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.624500434 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.327604858 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.619667767 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.620769583 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.778584903 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.69363262 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.323768267 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.620450547 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.620345995 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.619911792 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.61958703 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.374678792 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.619993856 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.680535353 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.618631392 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.022482747 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.163564864 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.124319161 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.624257596 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.67107158 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.620528211 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.621309596 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.324173346 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.142722688 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.620710078 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.63005554 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.326439836 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.621695259 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.624090675 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.623510365 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.984993483 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.621461849 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.623545494 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.626481971 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.62644265 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.620285094 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.704620748 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.693282714 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.324019835 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.621123818 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.621872516 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.667678411 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.625427018 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.630956352 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.626221393 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.622639024 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.147753845 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.802650113 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.627873488 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.145949496 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.368898726 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.622679881 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.459580859 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.634511065 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.626463253 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.703745567 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.623323678 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.621953462 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.317994907 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.649451582 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.623232954 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.128377429 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.623616593 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.054170227 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.64334033 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.624393437 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.35620675 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.63520403 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.686814713 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.622706072 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.624670847 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.624278269 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.633491731 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.042651653 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.700437745 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.624015316 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.62464738 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.624808784 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.624078872 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.623982281 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.63348768 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.459210002 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.629409997 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.624158282 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.626610479 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.628533769 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.633932151 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.626667399 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.625416123 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.008231214 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.626680739 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.625275602 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.629158848 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.625569564 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.632885509 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.779843233 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.631338175 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.08253368 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.627695324 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.626524853 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.627999692 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.624371787 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.656822351 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.625150237 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.654798072 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.62619653 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.045293609 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.647106312 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.64726548 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.627544816 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.640751732 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.626842422 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.646954966 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.659441679 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.629260257 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.627753432 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.635854671 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.643076679 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.62695766 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.633837166 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.627307984 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.629925914 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.628049559 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.049069089 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.036380674 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.83371866 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.627606206 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.627727171 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.630188587 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.630594295 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.898385123 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.651604021 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.628101242 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.019217388 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.882737812 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.628801889 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.629197609 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.631646944 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.010054701 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.630520473 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.050259744 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.41092097 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.628108015 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.641469212 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.6446032 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.492537704 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.640525238 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.629330308 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.056322595 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.650119963 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.629521813 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.628660321 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.631889781 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.630058473 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.634089014 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.630490302 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.63103248 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.630875337 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.746467759 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.913970485 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.648454388 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.638288989 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.328748649 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.636307034 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.63819191 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.637820285 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.636210583 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.630980448 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.694407229 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.636252347 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.66967643 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.631487566 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.638038049 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.362919615 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.642332311 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.631549026 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.915149057 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.597478003 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.637215039 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.631275108 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.632689744 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.662627909 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.362857874 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.688673119 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.090708043 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.63633469 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.70741412 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.632571363 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.659773565 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.361041024 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.637132348 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.650814465 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.524927506 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.632113763 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.322657651 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.633924328 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.635082087 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.460494802 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.634101795 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.637142125 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.633349045 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.656297564 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.055597363 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.635156887 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.679507639 seconds)
  done (took 571.726790132 seconds)
done (took 778.212121618 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.633044677 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.63887789 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.621372732 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.639216272 seconds)
  done (took 12.040874541 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.667774513 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.676276292 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.655257488 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.669112113 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.662413286 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.678833112 seconds)
  done (took 11.519793404 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.738653777 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.672314755 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.811825652 seconds)
  done (took 9.731525776 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.973202877 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.666381947 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.152506754 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.639999821 seconds)
  done (took 10.943654078 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.673353155 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.672441586 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.672035599 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.674828691 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.674425359 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.675240476 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.675086965 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.674620076 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.675514324 seconds)
  done (took 16.575559434 seconds)
done (took 62.320452903 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.795202239 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.797878348 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.657448618 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.709965352 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.864395047 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.795582385 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.803664697 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.811414776 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.804557968 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.706605778 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.80038565 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.70090177 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.797526976 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.948440301 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.705221663 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.802630209 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.699406817 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.894852271 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.801553396 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.709425968 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.821774333 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.705811821 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.709317086 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.640073015 seconds)
  done (took 45.995359886 seconds)
done (took 47.506302723 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.704833136 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.824193495 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.668798875 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.668854049 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.678542852 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.650260065 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.699563122 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.673831847 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.694959883 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.693754842 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.649577645 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.678998006 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.691846148 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.679162693 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.711760483 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.674852717 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.670345231 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.680258432 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.693953749 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.697243204 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.673938006 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.678599562 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.705906805 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.671840183 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.685581526 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.686671539 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.685488706 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.645591245 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.679083283 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.693593577 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.655346186 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.684815088 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.696766328 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.680745436 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.673896799 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.681466896 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.68189188 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.824763261 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.701356995 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.682128362 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.680751023 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.697784194 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.686710301 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.685103811 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.682014172 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.707368025 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.689017158 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.694760416 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.655134986 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.645190914 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.701789801 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.693272029 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.682065924 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.645972857 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.652450706 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.696032156 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.688302402 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.702591021 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.681429322 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.682417436 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.71555482 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.701765846 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.694034765 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.689858326 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.681762046 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.697743477 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.684088179 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.700900093 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.681930153 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.68302708 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.684447792 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.683591887 seconds)
done (took 131.031091387 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.85400881 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.644412882 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.884944727 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.682173271 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.902023085 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.851795539 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.682221042 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.682591899 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.681732642 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.535519775 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.683260699 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.682681366 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.646327651 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.683302884 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.850805678 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.683953805 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.683970077 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.435821831 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.682321055 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.86571358 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.650620515 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.684228421 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.683964211 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.541270367 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.645530622 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.654816789 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.867021637 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.683876421 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.440111623 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.65298583 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.646858795 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.445810323 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.867959326 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.703544703 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.694922588 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.69482041 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.906386699 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.688061799 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.856383413 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.854788378 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.888628924 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.723389685 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.654276846 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.65134491 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.685158008 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.68778851 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.683594751 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.712626795 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.64900341 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.684716052 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.439690411 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.694832492 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.695561705 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.688174872 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.687578707 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.704748907 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.685407901 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.68931105 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.868483485 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.687252758 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.858555197 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.543328171 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.540891967 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.687887475 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.650528814 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.688827469 seconds)
  done (took 132.514517248 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.80186873 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.813975786 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.857188543 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.677770407 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.770324425 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.857693985 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.679012673 seconds)
  done (took 13.979770473 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.693144987 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.688021291 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.771286209 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.771262323 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.686801374 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.909918503 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.689049145 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.698672017 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.688356738 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.77239892 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.688505711 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.688307152 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.698875954 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.653952294 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.76974593 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.699201484 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.853977171 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.682674103 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.687146878 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.890145109 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.689065698 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.698025286 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.773905677 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.699204277 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.689229196 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.694550962 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.503100988 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.688837736 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.689753495 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.691040599 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.690537952 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.79917076 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.689924815 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.656753976 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.691758288 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.854865273 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.691967603 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.689941647 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.694558365 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.660747712 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.692148492 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.692075019 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.691316263 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.691276104 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.691589343 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.712983054 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.691688587 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.691955591 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.692768054 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.692203457 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.772769359 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.691909076 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.690727501 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.6908206 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.777246324 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.699653775 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.690639152 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.694289336 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.693699178 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.691533539 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.89256909 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.773596977 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.69142284 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.77252673 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.692651279 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.693866797 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.692616359 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.691652968 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.831135719 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.692177965 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.774038445 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.691418092 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.922603845 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.716650211 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.694831305 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.690111711 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.689612415 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.694501515 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.65703425 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.697415153 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.692346422 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.686862624 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.697494213 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.692975343 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.692072924 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.902704108 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.855640511 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.699212169 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.708139981 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.699402278 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.694267197 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.777644978 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.694049851 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.694754759 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.777824471 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.862007732 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.779570852 seconds)
  done (took 173.438256363 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.70586504 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.705827535 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.693958498 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.722785419 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.690418244 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.686607843 seconds)
  done (took 11.734664443 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.689870758 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.69791396 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.697448398 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.699358836 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.694676606 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.696315293 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.699633801 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.687861983 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.69937937 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.696214581 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.694605159 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.697652194 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.697255845 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.69665081 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.696174842 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.701701103 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.696624969 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.697579699 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.697125521 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.695680296 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.661024003 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.696255718 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.696918163 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.690174847 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.701508062 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.697837903 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.721381818 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.698007477 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.701185535 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.698631299 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.69953742 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.699251001 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.690687621 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.695980683 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.701158506 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.691127203 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.703125097 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.698775731 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.698021864 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.698984836 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.699825586 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.698656233 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.700330468 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.700072125 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.692220079 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.693268956 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.702503998 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.722724447 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.697253401 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.702389599 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.699008722 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.700761389 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.699734163 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.699867839 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.696520766 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.695745248 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.703492043 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.698447547 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.700354004 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.69399328 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.702418373 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.70123205 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.694216981 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.702408456 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.700359801 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.700520018 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.693952842 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.703790335 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.70031636 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.699610824 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.702359985 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.699749319 seconds)
  done (took 124.798663437 seconds)
done (took 457.984059926 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.070046198 seconds)
  done (took 4.604168868 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.904145563 seconds)
  done (took 4.440429471 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.164673525 seconds)
  done (took 26.708478642 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.665575769 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 3.610146165 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.686639412 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.673064221 seconds)
  done (took 13.170170244 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.30814994 seconds)
  done (took 4.843013207 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.671517447 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.685128116 seconds)
  done (took 6.893056373 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.121786926 seconds)
  done (took 4.656123939 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.421371879 seconds)
  done (took 4.963536285 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.685497925 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.686077538 seconds)
  done (took 6.911523665 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.658675171 seconds)
  done (took 4.193350425 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.236195399 seconds)
  done (took 16.772438451 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.679577271 seconds)
  done (took 4.21775758 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.678430057 seconds)
  done (took 4.214172207 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.893465503 seconds)
  done (took 7.430968212 seconds)
done (took 115.553948518 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.665164614 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.672256787 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.673796158 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.665651338 seconds)
  done (took 12.212201426 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.823061718 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.8222334 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.826355572 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.812357284 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.809805073 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.826066779 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.741319479 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.738486019 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.800352405 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.799576189 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.828743236 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.805971346 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.827422678 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.738646095 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.797320595 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.828445642 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.799076893 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.827223769 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.737948171 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.812259366 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.706121707 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.813737626 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.798113363 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.705351707 seconds)
  done (took 44.565009211 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.281781923 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.825941344 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.907608014 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.788225095 seconds)
  done (took 9.339920461 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.872141074 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.874202509 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.886010225 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.924839953 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.954212962 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.881337774 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.739853791 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.734437389 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.721590085 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.874240852 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.951213838 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.87294767 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.092167028 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.705630863 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.088261363 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.707287708 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.705287383 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.898435478 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.922074588 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.950164263 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.70766094 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.869149841 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.879373697 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.869019447 seconds)
  done (took 46.219150355 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.721855272 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.731309966 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.710482457 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.708413828 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.707872419 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.709029479 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.730459649 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.710891518 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.721358631 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.708037244 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.709212952 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.709851092 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.731091433 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.708423396 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.709377009 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.725105266 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.711499067 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.722525748 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.725980936 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.710277962 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.708612945 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.724992333 seconds)
  done (took 39.296395932 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.672561783 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.671455009 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.113032042 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.01724961 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.671275517 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.678089022 seconds)
  done (took 16.364177526 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.802943377 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.004170013 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.702327859 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.156657352 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.284715256 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.703262125 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.703090805 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.046863222 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.430126974 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.421308395 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.792808149 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.796787916 seconds)
  done (took 25.388582026 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841200128 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.683913925 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.68319477 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.763981649 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.688706784 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.683478395 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.748416472 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324124527 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.711977759 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047223883 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.682991601 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843082001 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.020707592 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683862452 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.688692256 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.660869025 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006117887 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.377003738 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.68700978 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683614166 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747451125 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.683964491 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.688726828 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.98291801 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.687520389 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.685774148 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.031596267 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.6850735 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109813825 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069796515 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071368853 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.693094841 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04781886 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279117967 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864334075 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978153786 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.694137501 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.688525196 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.703708062 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.691656809 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.688948154 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.709203384 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06629628 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.692239705 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.685968446 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.700661027 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332672472 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.718179874 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.687201773 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.689295616 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07155023 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850076605 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.715455157 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.687228104 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680051283 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69373794 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.715740807 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887181673 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415527491 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68824618 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.703642132 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.692406066 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.702548767 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704555516 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.519235163 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.718989615 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.715699392 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716600274 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.6876475 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.689041602 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.740692654 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68815846 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.737708266 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687875882 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653277418 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.692938746 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.691630688 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.453646654 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.707100323 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.694350099 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006630103 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.689586574 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687711824 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.687385037 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.689062485 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.691318289 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.719862491 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.67934868 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.755790733 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32768762 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.98842695 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739986419 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749440973 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.996505981 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.664361439 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.689404498 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.69017366 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.692261215 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74125774 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332385494 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.688925596 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.719704719 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02962353 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.990073179 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.697851731 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.670412558 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340756461 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708079987 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.74637096 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.698148905 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.989818118 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.498228511 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085434258 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.70751078 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758171343 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.691371298 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.692221825 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.706325435 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.725874569 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.693198975 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090156157 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.678949607 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.693416041 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844507183 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.694049921 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.693644981 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.693191013 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.692798015 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.694690086 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.991816907 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.705347098 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.075280941 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.699575763 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.692512994 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.6932846 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71207847 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.699254004 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.002010521 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.710019899 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.054026633 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.693206797 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.693121451 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.694200429 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.003389258 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.710751416 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.732321059 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123128507 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704712031 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.708522432 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087526075 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764196411 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892735103 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758508537 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.706040691 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.03877197 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.72285526 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.723991577 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.712460293 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.702054919 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.700653764 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.725624327 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.691750327 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549953385 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.704362545 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.703877078 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.694995711 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.741339803 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845627576 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725975559 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.993536329 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.696508194 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.713520413 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.732898366 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.698368277 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007374332 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079721102 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.703587446 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953827509 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.338020638 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.526639875 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.747107785 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.696785883 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.697445465 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.696346721 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.696835331 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.696792518 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.698383154 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990126329 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094025854 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.693455712 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.529210174 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.702572792 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.69621975 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.751565825 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076893716 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.731568239 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.698955712 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.695922925 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.714396223 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.708863118 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.082463419 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002051658 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.744015004 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.698811071 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.347617319 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.731525845 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.697122239 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.69781276 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.757019311 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.705057885 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41221897 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130492152 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.713887639 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087282049 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.706204748 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.748458516 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.697837623 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.704630876 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.718826745 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.725651146 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.73659765 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.000530374 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.700917693 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.707663524 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.425697989 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.697140118 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.466542498 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.702756544 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.710583588 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.705407511 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348055433 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.699447116 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.701024691 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.082288467 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351415917 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.701283592 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346228874 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.716557741 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.712586496 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088938964 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02355544 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.701783446 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.705825231 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093146621 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.006173061 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756699717 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.705919377 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.705599504 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.675983098 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416185047 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.702441002 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956452354 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348791212 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.714204159 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.704647777 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.758893711 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.709282026 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.27872469 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.702836443 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.702651084 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.704475129 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.715122643 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42165802 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.712399182 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.703400132 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.542423376 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.708450635 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.358348851 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.703589192 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.004218833 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.093413625 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.084203654 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.712402394 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.70328224 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.039397258 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093082996 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.710045251 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.70549111 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.481479663 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.656571411 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.736337841 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.705557599 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.727206651 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.725197946 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140778097 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.728292474 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.711919791 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.706197905 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.706906374 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705454933 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.707510292 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.715539804 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.706234571 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.399799304 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.72701354 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.707996667 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.714468579 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.733674932 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.04622578 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.751760053 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.537817553 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032288812 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.704950329 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769338196 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.735382621 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721082898 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.682153785 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.706328857 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.706672406 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.803570413 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.018418334 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.713760318 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.680583683 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.787487571 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014253279 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.707234698 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.715104344 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045410732 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.706870685 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.732886144 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713982483 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773018203 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.719818211 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708680901 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.717665005 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.771844101 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861838785 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008115557 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.100257232 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103221366 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.293403861 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.7266262 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.716220617 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.753773647 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869092781 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.722625971 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.717186243 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.709544489 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546464044 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71623249 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.537328944 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.106665729 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.718377805 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.712953931 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.710769994 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03848548 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.71070134 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.068272997 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71130847 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.706024628 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76329909 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721438739 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.731925268 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016201641 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06685962 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.710410731 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.726826086 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.716240801 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.710446908 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110630269 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.013149158 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.412411802 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.472347357 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713255854 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.726282093 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37185853 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073706649 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.712837506 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.712383328 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711366159 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.713718484 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.717997659 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.742131244 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.727176409 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023144004 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098792381 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.325174102 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.094788939 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.75292277 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.677880546 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.732345503 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.054459858 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.643299333 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.013703279 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.554422738 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.677311898 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063407086 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86608772 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016465222 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.712728693 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038391335 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.716661385 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.719117703 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.713418935 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.71302447 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.71305583 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.096910229 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.539185116 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05758812 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.742012444 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.716529315 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780783856 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.018236118 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.020954551 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.71825258 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025027065 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113040911 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.732041414 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.715963671 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.538352049 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11542655 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.720335317 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.74136313 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051826912 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.717334586 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.783806167 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.675425695 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.716467926 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.48562174 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.016758347 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767027637 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.716704548 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.663063299 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539275001 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.736688793 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.420020381 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.720070688 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.718431792 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.081867603 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.747784408 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.723965807 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094334552 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.743925537 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.717820612 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029212094 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.532222219 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.73118055 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.740029999 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719029494 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.720812332 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719307113 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.795674716 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.725038219 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.73044582 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.295699754 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.720187533 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.717915595 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.761236048 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.735751034 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.734248328 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.724423336 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.718055278 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.749734865 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.742346285 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.714122725 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.731140042 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922296963 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442140931 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.726565788 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.421089651 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.140878319 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.058090628 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.727638061 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.700727865 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.751278427 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.722770054 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.720880637 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71924251 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.729545007 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.485703036 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.722338784 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.115440937 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757758791 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.020179312 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021723363 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.732242556 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026610367 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.740772762 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.773771931 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.695967623 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.722581273 seconds)
  done (took 1161.880334533 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.788474288 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.769881631 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.793550562 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.733905967 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.731947128 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.917887463 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.7505027 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.839445714 seconds)
  done (took 23.901659353 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.721624866 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.745708027 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.713800965 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.746197195 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.721514726 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.369019971 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.729888067 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.746411887 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.770312411 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.733158665 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.730453573 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.599063331 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.749853526 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.715816935 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.724796778 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.748856541 seconds)
  done (took 38.849041419 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.963165079 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.946328231 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.557944625 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.744062496 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.726768187 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.725399298 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.149789509 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.734398628 seconds)
  done (took 31.12666541 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.758157375 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.759170143 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.760178232 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.761514785 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.759958232 seconds)
  done (took 10.376164665 seconds)
done (took 1461.05801328 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.755440129 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.753517399 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.752388345 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.753384771 seconds)
  done (took 8.593291787 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.69805923 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.700223192 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.700337313 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.732528627 seconds)
  done (took 11.408453826 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.253326488 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.500834219 seconds)
  done (took 6.333721977 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.726248429 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.573042563 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.560970079 seconds)
  done (took 9.441151979 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.131168496 seconds)
  done (took 3.710527645 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.219748684 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.291072629 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.717144338 seconds)
  done (took 8.807811245 seconds)
done (took 49.873754478 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.716571988 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.481639739 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.875088934 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.736571529 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.885079032 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.877151207 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.992521745 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.734013872 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.716957513 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.736492748 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.739846248 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.903342318 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.971132573 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.492320567 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.981423057 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.49301018 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.959272964 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.72715399 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.722065006 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.731412144 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.996933828 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.718365234 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.729899382 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.733847789 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.930119885 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.865758977 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.717212782 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.4947039 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.72346644 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.718624345 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.867453885 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.729799718 seconds)
  done (took 94.282173874 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.718865297 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.739440888 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.719695291 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.71817771 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.71930872 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.721029679 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.719465304 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.722958835 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.718696211 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.719508954 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.720975482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.719236155 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.719433666 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.720808002 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.721118307 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.718792034 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.724118968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.720559297 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.719813462 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.720191793 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.722682263 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.73282182 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.720650859 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.720348307 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.719393158 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.721376022 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.720601412 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.724131959 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.722002218 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.719532212 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.720097646 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.722276555 seconds)
  done (took 88.672715855 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.736658063 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.722593286 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.72221272 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.721122987 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.72067265 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.721126828 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.721368688 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.728556333 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.721561869 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.722527495 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.721609431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.722265311 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.723193431 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.731170563 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.723890587 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.734932704 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.722993126 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.721740872 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.721369945 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.734414132 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.726251362 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.739113892 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.732546506 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.740011073 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.724110098 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.722763698 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.740193498 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.722279349 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.725615248 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.722073876 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.723939825 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.722903729 seconds)
  done (took 88.822505224 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.05156368 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.760201489 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.764838182 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.730725884 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.765571307 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.760519686 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.732700925 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.05605657 seconds)
  done (took 18.208605718 seconds)
done (took 291.568815078 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.748070128 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.748126211 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.791623991 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.733175426 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.786555259 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.79009705 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.049426257 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.790899736 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 2.041423563 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.733132265 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.800656145 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.753990574 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.735506241 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.96096878 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.726857585 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.734786107 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.743538686 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.725133272 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.73491245 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.077344123 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.791333102 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.745036642 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.733897237 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.734353719 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.711898979 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.842235245 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.842552883 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.979141621 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.942459233 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.842569995 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.72786714 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.753107361 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.735870672 seconds)
  done (took 79.174842138 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.755185349 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.764237687 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.766671237 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.765029966 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.764588151 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.766320703 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.757327171 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.767449199 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.765405433 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.765072499 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.765325325 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.77374993 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.766795345 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.766975116 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.766758259 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.74424073 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.758661629 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.766090576 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.756074009 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.745931728 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.764809897 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.767098107 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.766504735 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.768097047 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.767621287 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.766179623 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.766619275 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.768202437 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.766708672 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.767432088 seconds)
  done (took 54.507488209 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.766562145 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.728973705 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.734073865 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.77351652 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.760982175 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.763376195 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.169607183 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.770759186 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.764913751 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.763730569 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.732486094 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.770054558 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.831203116 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.731684246 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.764533814 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.771083809 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.769252361 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.762726392 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.748440008 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.784542853 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.180093572 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.77074452 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.166354325 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.784814047 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.766041408 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.763666246 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.773385638 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.732358912 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.764466417 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.732196322 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.745623169 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.155777142 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.73542718 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.751124986 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.74204946 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.77569082 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.770327847 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.734655992 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.766904995 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.764754093 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.163732274 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.765496227 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.732490563 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.733186951 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.765841871 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.770627745 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.733086169 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.739734641 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.079273838 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.777774324 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.735634958 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.769442678 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.773690356 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.768041732 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.080233178 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.768362792 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.764733001 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.732951795 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.779167379 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.161459219 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.77150558 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.766620882 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.735706964 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.768679383 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.735308659 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.77323925 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.788308765 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.768537465 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.754752821 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.771793676 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.736871847 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.766523243 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.772876565 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.73759631 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.752221075 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.73725332 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.768840786 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.7570726 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.755665926 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.160921511 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.775823169 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.735605415 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.19058939 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.771894247 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.776837683 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.778120807 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.774952877 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.892455947 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.160488635 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.738435524 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.738225999 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.758814721 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.169732687 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.784180237 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.769325275 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.738600837 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.778302743 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.77669374 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.739190437 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.738198901 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.769682654 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.788877203 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.740440945 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.771918692 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.166665259 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.782472199 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.738913866 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.771028844 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.894493915 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.775770578 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.790523921 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.773131136 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.188118476 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.771466329 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.7785291 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.739332425 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.759802486 seconds)
  done (took 251.397851996 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.740898895 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.741358521 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.741274083 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.741221282 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.741063301 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.770562235 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.740999466 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.742986871 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.768282056 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.741936248 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.741094939 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.773426495 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.771862819 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.740853568 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.762006397 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.742355505 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.743074241 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.746578667 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.765474716 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.742790546 seconds)
  done (took 52.59880492 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.780083417 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.528200898 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.499376282 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.782428408 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.779011912 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.772186114 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.8464971 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.779893658 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.777971138 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.193492762 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 2.007620104 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.781884833 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.77881475 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.780154236 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.497197165 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.781014052 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.192120311 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.529983806 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.781253468 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.530516415 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.781924573 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.780128814 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.770602603 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.533824727 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.205292936 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.167498883 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.852195241 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.534764651 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.781478287 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.783451164 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.53262667 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.782002237 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.775393435 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.520571646 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.782407735 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.804465917 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.782620751 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.852563863 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.853296638 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.201495735 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.540625802 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.180406671 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.801338145 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.011609018 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.783632821 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.758055197 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.546803194 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.789361622 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.757804536 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.78525698 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.794421483 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.514135631 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.776149397 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.516377118 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.784080014 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.785121697 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.53695648 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.514100362 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.506086912 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 2.00906456 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.773772978 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.173040231 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.785094459 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.547819384 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.786272263 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.785909646 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.783842764 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 2.013412739 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.539751459 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.174618155 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.200136065 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.204061005 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.783344307 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.865125098 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.78586872 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.20018216 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.864777497 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.266910618 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.206753317 seconds)
  done (took 162.513596391 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.152651186 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.900722571 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.330074446 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.535982404 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.46864081 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.981912295 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.92612664 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.11574754 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.759359971 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.943850332 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.679639848 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.904453493 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.674309002 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.871809676 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.911425329 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.969582306 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.341841026 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.757190213 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.628973978 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.660034422 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.77611748 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.937658413 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.660143863 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.271394148 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.760316239 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.660601742 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.750855259 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.486199886 seconds)
  done (took 67.424012231 seconds)
done (took 669.204068495 seconds)
SAVING RESULT...
DONE!
