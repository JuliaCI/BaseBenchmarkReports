cset: moving following pidspec: 31424
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.346468226 seconds)
loading group "string"... done (took 0.547292985 seconds)
loading group "linalg"... done (took 7.006006298 seconds)
loading group "parallel"... done (took 0.152174168 seconds)
loading group "find"... done (took 1.093817801 seconds)
loading group "tuple"... done (took 1.747086714 seconds)
loading group "dates"... done (took 1.176101373 seconds)
loading group "micro"... done (took 0.283030054 seconds)
loading group "io"... done (took 0.895822192 seconds)
loading group "scalar"... done (took 35.959614636 seconds)
loading group "sparse"... done (took 11.138443207 seconds)
loading group "broadcast"... done (took 0.905200218 seconds)
loading group "union"... done (took 11.771516071 seconds)
loading group "simd"... done (took 4.098335785 seconds)
loading group "random"... done (took 8.155700215 seconds)
loading group "problem"... done (took 1.878455946 seconds)
loading group "array"... done (took 19.557207962 seconds)
loading group "misc"... done (took 1.58564097 seconds)
loading group "sort"... done (took 3.285232632 seconds)
loading group "collection"... done (took 16.290254161 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.48436104 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122888858 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114018104 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118216365 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144605333 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114564689 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122631428 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083763728 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.82870009 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147337143 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118661805 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410229277 seconds)
done (took 5.193254083 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173694339 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082573252 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081248856 seconds)
  done (took 1.360589778 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06556529 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120939636 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06637503 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06721718 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066127662 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065894361 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065786531 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065929601 seconds)
  done (took 1.720488031 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072459796 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068722124 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068528584 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068338949 seconds)
  done (took 1.481781582 seconds)
done (took 6.011191351 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.762475511 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202627885 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181844103 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.395364327 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127828248 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152777707 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638223222 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314544658 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182261192 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080795083 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103669903 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.315562971 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107159185 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.634161766 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073467258 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090220211 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13659133 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444536739 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067107842 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081649926 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088712083 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127492403 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084349594 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073914925 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14346742 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067046972 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129373563 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079786248 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066083198 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205750917 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172111596 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663631513 seconds)
  done (took 10.238539925 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094934434 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096712998 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067937653 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135747901 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095125252 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068901886 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070727087 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06724731 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08626753 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127410434 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088286225 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100444872 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064613224 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068646678 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083502826 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20388597 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079344674 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081182944 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069718435 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074557989 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.117575787 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077310095 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07705247 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076970867 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127868831 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17987843 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096926904 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097252837 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066187778 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079382642 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114554571 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124696513 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065076213 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065630473 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123342737 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093526322 seconds)
  done (took 4.638324951 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.279290195 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140018471 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090127492 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130722431 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06440393 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106673847 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065920454 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080345291 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199020191 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.306208517 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.57142309 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111129187 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103140792 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067238864 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067939461 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066437249 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.339397527 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106653761 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102373164 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.079731047 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069198239 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068153936 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341766307 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067185174 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063244505 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067302972 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057415315 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122353802 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067531804 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.920016773 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124086567 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066270705 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100261379 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16593949 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081937187 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08569423 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139509436 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066659545 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.062784488 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.147690578 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.068582961 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064139878 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08108776 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10163237 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.109829514 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064138134 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065318152 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.15805086 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062964003 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.077085874 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.9477647 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151936701 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.074158382 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062331869 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.088212107 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083543132 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066620979 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.236584293 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062122954 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.163650349 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126350787 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.064949184 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.064002248 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065776891 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066697477 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.352748686 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066033417 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.943925256 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067637053 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.073552569 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.066864632 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066736165 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070423148 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071767782 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.082854945 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.061839852 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.063779597 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.071954868 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.063376193 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063404377 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.064662909 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.081922181 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.348218237 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.064096975 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065695178 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062478925 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087750389 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094196805 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.064331481 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.063021569 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097802419 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.280122765 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067789599 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065219275 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107607618 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068281432 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084592774 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069857797 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114074985 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066597003 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.084778131 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065610385 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09615594 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069448672 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098932328 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081266933 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068305523 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.394368084 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064854081 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064273293 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068121271 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06476086 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066930459 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065874626 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078979699 seconds)
  done (took 20.879357478 seconds)
done (took 38.239961702 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270645672 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078843405 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075355623 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074674812 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07483579 seconds)
  done (took 1.879397576 seconds)
done (took 3.167393181 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119087948 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098460117 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063792982 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094503847 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064054804 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099251281 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098219256 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08060444 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098806122 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063500182 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095077976 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064031082 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063910012 seconds)
  done (took 2.410872003 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082544086 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083186394 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069634463 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081519094 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063651895 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081998399 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080051403 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088476529 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081641553 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07246871 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063504169 seconds)
  done (took 2.128999466 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081475936 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082989328 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069667537 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081185787 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065426367 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080852667 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081106477 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086388018 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082631568 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074377922 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062990694 seconds)
  done (took 2.128714129 seconds)
done (took 7.94516779 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076846927 seconds)
  done (took 1.34586407 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.589017623 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.041174694 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081316386 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11117757 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183913822 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118946909 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277925701 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086567772 seconds)
  done (took 8.938469978 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101185877 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071632768 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069606906 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071846701 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07070752 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068925131 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07081233 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071706583 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068093993 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068562663 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068144088 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068666758 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069103378 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068746435 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070635023 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07139676 seconds)
  done (took 2.486108992 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092041957 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090004201 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073195713 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074504323 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07157964 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07141542 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074695082 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073330863 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070609021 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071895913 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074236313 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073378501 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071321732 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064366285 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.0739256 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075299212 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070407385 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074145409 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074263151 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07434465 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073909493 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064338781 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07097973 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073449689 seconds)
  done (took 3.146644622 seconds)
done (took 17.194920463 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113321504 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07133033 seconds)
  done (took 1.460910959 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081896402 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082823235 seconds)
  done (took 1.453507442 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083094554 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065156973 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091651713 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078241501 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066032826 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065427154 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088258625 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06571866 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065600636 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065781325 seconds)
  done (took 2.020322628 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068519991 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078402258 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070522989 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080729608 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074068693 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064166978 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072510599 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067555043 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078502144 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062720185 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071427347 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082290946 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071271795 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084223574 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072691333 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069046928 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071335758 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067347204 seconds)
  done (took 2.591194276 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065122613 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066945365 seconds)
  done (took 1.421532434 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067002952 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06406515 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067568401 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067239795 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063630019 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062378556 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063581657 seconds)
  done (took 1.740548015 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.389058597 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111056988 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.298390698 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071845964 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081384886 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250080828 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065572611 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070474557 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070349464 seconds)
  done (took 2.733538648 seconds)
done (took 14.711118416 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07827406 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085131919 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094024552 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.360344397 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091435548 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06562867 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113724508 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187534831 seconds)
done (took 2.375297706 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214544719 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.609033281 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.385618769 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196692695 seconds)
  done (took 2.481764035 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328880572 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086140417 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058946943 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066180087 seconds)
  done (took 1.835488911 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065211897 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068073964 seconds)
  done (took 1.427132508 seconds)
done (took 7.252562091 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065925105 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082359733 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065663419 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062919616 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065668543 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064085371 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064783469 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063303655 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065652878 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066005128 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068008761 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065283242 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065554078 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066285716 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063308906 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06321146 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06545354 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06476392 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065276231 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063179565 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065355964 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063638479 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063262486 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065514717 seconds)
  done (took 2.904137675 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082831681 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065535294 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071741487 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070693745 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070162927 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07048359 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070747156 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065635706 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070872621 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068117125 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069328194 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06952337 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067375613 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069638285 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068019396 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069518679 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071455683 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065913041 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067812886 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069593837 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070692652 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066174567 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069676919 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070646392 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069035471 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069363778 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068125571 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06574798 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070784122 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069611947 seconds)
  done (took 3.39050222 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069544678 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063111716 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063831487 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.0703111 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063088454 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064849516 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062856139 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064115889 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064190968 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062913339 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06451856 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062677083 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063247594 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064489316 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064243599 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066613723 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077870686 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063540665 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063300719 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063571906 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066575396 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063375698 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06315557 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.170046008 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063285003 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062441927 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063302095 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062589789 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063437405 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063066808 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066047549 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067003055 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063125402 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069354182 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06627299 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062883242 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066774598 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062929397 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06364566 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062604998 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06277025 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062987083 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063136715 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069596995 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063601989 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064513779 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.0630734 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06388739 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063427511 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065615873 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062291387 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062759386 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064856365 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064191347 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06647191 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062120773 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063240156 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062173624 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063829587 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062560388 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063099882 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062414715 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06525556 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063430698 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077154317 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069431157 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063037193 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064463156 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064240289 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065473694 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064429345 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075828381 seconds)
  done (took 6.076498879 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090080409 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087067337 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065129832 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064605989 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061766961 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063900142 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067196626 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064063259 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06479302 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069233781 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063779715 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064848492 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064681401 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076592831 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063956649 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065057896 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069738625 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061470206 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063638842 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066788444 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063637828 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066691874 seconds)
  done (took 2.803210401 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15232716 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069604593 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105838166 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072650667 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067232345 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072287034 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069707055 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069225079 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069170153 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067540289 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067431313 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069415183 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066999653 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067100434 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067693722 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067848196 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069504756 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067768349 seconds)
  done (took 2.667048792 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076230999 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066282719 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086188146 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065776563 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06582824 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06749199 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070300673 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073351348 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068010207 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065547427 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073473911 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06761154 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068221064 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065381422 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067721917 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066145805 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067912003 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065606925 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073231944 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070279301 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070145124 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073349922 seconds)
  done (took 2.844205338 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079684646 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067513735 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08370588 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068647085 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061797192 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063850557 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069620387 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065470288 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069511462 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067306823 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065432653 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064168569 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069121039 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065976989 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068968314 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065320145 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067119028 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06536782 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067009463 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061667465 seconds)
  done (took 2.667543846 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086225466 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067700275 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067343203 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075335417 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067255712 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067032706 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074905321 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067233568 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067087531 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088627687 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067057464 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06643806 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07428841 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072303327 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066537691 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074126161 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074108187 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074051742 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066474214 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066753877 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086453773 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066566232 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074224056 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06645785 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066912943 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066629121 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066627354 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071318719 seconds)
  done (took 3.307815966 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065951244 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066086251 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062774934 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063044415 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063030484 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063322428 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062879629 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06478548 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065826809 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063066097 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065228985 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065301982 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065283787 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065488804 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065302735 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066259645 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065528563 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063499444 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062929287 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06309787 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065304265 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065746369 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06524066 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063532113 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063270807 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065587085 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063108743 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064493219 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067635354 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064734794 seconds)
  done (took 3.252224048 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074608906 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072141735 seconds)
  done (took 1.463703107 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063034572 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079935407 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063688491 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069219762 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06958946 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066001532 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07311482 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069564589 seconds)
  done (took 1.865583278 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081367451 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07742562 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067695186 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080220254 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076076669 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082237985 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131066277 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067034788 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072297166 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063680045 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07940306 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064942132 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071903282 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066145327 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07267783 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074131793 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065622878 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073734587 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069775812 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066059504 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069042658 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077022797 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070168746 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06292294 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068892316 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088934736 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076642327 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065276352 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068611116 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072510193 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071473465 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060201432 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065198954 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066224286 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063723462 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076083791 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083021664 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070609107 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07652639 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068354064 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077511752 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061327781 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070633108 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072948141 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0761505 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066594859 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066269594 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061245244 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06365549 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067877092 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061110014 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065674792 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060069738 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07453264 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06935617 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076246524 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064428021 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067228266 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068596713 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.0688056 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07243584 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067656449 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068670074 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065323584 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0755841 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069790345 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074220849 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061023644 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060512947 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063607696 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075214366 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087978402 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071721119 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066097349 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06664982 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063351848 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068511341 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066524824 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071331713 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071728117 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065582162 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071308611 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072819806 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066022442 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06795719 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073762285 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063791997 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068224561 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063806404 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081572954 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064546905 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063520989 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063687972 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076124343 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069470695 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066003552 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064253813 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072915057 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060174053 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066549673 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066746934 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066385678 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075874951 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070686728 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070769324 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074592756 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073211517 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065845081 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068133969 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062316582 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06658925 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064694413 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072327687 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059644275 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068238174 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.0661936 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066164278 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200037828 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065454406 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066581208 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073788015 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071907172 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064969186 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062888291 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069153494 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066558417 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069350617 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073597263 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065379288 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061018877 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061234394 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069677196 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067063164 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070193275 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071521727 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069896399 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061119832 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064687531 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071764121 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074719928 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066950656 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067765918 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072727041 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067788842 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065346082 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072771734 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068794433 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066232682 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071724462 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067399482 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061269985 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069853247 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069393451 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064557903 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069551511 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069572638 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068585008 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067225015 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064806726 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073756425 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067011893 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065350536 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065764567 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064958863 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076816841 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068298729 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061237506 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064197087 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075101656 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063980288 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065446813 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065913381 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068167909 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06716376 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064678495 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065551299 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068261457 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07650662 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070378778 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066804473 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072058286 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077762985 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066022182 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068694902 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066196372 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06715029 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066887598 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074330528 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071129531 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070224249 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068238258 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062454369 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070797227 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072801921 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064789033 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063383382 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064832016 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070004307 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07111253 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069820652 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066535377 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063867899 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0675091 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070644436 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07015828 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067034364 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066366125 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073187327 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063989612 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072865383 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066297387 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076287469 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068721287 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060829379 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068463669 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06382826 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07169893 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060868784 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063256209 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064704491 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066418887 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064454102 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068220964 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060153991 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072588084 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073171107 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065988331 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065130688 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065947297 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072540444 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06872896 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071434818 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070538221 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072781472 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076082712 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064746765 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068267202 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.205142594 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068515814 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061380437 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070989012 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064984596 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066968197 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067680912 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066128132 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07157727 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076099038 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073697122 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060074237 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068894436 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065528589 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066101044 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062783975 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071164214 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069160767 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067433659 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073425234 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067500156 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067065064 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070372713 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066415396 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067920881 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067807932 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06966082 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06678723 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067838061 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065486728 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068711162 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065473746 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064529715 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067930571 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066341695 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066798051 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072007758 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.0659619 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067473714 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068797539 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067029397 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067361507 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066477548 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066024976 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069420099 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067458272 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066274056 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068442968 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061985076 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074048163 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066370107 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074442683 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067058299 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.0633053 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073948677 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06860789 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072421214 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067096215 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067208735 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067807342 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065675458 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069384023 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072454301 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064062881 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076423354 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073181705 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066490715 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068705203 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066245006 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067700762 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06509943 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067460988 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066732472 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066391173 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065563174 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070951436 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06802558 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066210177 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067469324 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06652908 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066313238 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067350113 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060731978 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065190435 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065416933 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065831422 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075468223 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066364833 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065894879 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065535952 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06845703 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065298601 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062734623 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074029739 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074803529 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066494059 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072941368 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065200863 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067565817 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076810782 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060172211 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064135238 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064020277 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063930117 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07279732 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066474778 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07487377 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06685835 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065251445 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063281971 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066591095 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064454608 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060347258 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064208906 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070024876 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065262297 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065319758 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065935483 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068310811 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066658203 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075328879 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065435094 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06632324 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066049491 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.195347548 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067349342 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066466694 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069310811 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067001324 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065039199 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064800027 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065475711 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067289171 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067809524 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067013719 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068074299 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075567499 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066549489 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069737972 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070078684 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062401594 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069880766 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066708038 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066696165 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065818613 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07021137 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070196019 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067280513 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075563683 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066068817 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068284205 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066235369 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064749092 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066212522 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066631645 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067257392 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065993233 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06790003 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074479892 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064309156 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068590476 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066592213 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067114044 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072529222 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067113435 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068732174 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073647625 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066326802 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068280275 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074388993 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070820533 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068955988 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067490794 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068157068 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072267558 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065983912 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073855255 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067068587 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067192475 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069000676 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064363321 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066093235 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066357942 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0660982 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071604816 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06711707 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065088374 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065832108 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064101787 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067642864 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069594856 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073309009 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068276751 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068895191 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061171651 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063594495 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067111873 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064069096 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067341323 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06922753 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071720948 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068323226 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066175514 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064670083 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074353871 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071861277 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069285156 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064128463 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069477872 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066304086 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067818265 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06667571 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066526683 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067847012 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070818943 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067710635 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066133602 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072954687 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06943421 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06670284 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067365709 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066989494 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066083622 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061107509 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066438278 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067504581 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071065527 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067713197 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065884194 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075920968 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063883831 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06593461 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068576269 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065360494 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070589881 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061057177 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067410699 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066458098 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066756578 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061378585 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065077741 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063717883 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067801664 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064604562 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060874475 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07542046 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074252545 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068351099 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.195263158 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067427903 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063846008 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063050282 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065785232 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067200719 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068766637 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077710664 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065871011 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065153322 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061261424 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067304707 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069854153 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069899211 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064281513 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062458154 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065997687 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070338507 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071991545 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065393031 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066381756 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069787101 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068918599 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065029171 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069984872 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063589309 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070312696 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079114684 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067206676 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067507058 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073155512 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074186444 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067321206 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062224354 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067269728 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069787465 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066986059 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067268759 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067910377 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081245811 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069165655 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066345705 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064874488 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068827425 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066187239 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07346715 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067609371 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066983779 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070226663 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067832447 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075093748 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069471823 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074261218 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069670998 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069074723 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065811947 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066442705 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064109754 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065375369 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067126036 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066659986 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071477398 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074863863 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066159555 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076713873 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075200895 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068297366 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062807226 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065341304 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065820986 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061392919 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067169426 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064765924 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064014159 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064595823 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064716458 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066776792 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071312741 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066982515 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066332132 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066639621 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061055255 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068110524 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067992004 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066774473 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062601709 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065617926 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066388927 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069569615 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069487199 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065038637 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067425082 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067263511 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066770041 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061363206 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072528406 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064822811 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067707481 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065238303 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066014804 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067110968 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069322493 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070525841 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066938787 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068313885 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069669963 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068139151 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063128694 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063650585 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071436952 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064025827 seconds)
  done (took 42.53112003 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09951401 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063029108 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061442225 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061809682 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073305283 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06274178 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06154771 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063163968 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062819671 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065026519 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061818246 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061753699 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070579379 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077681897 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07339601 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066003865 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061616718 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062573731 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061296897 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0640065 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070548676 seconds)
  done (took 2.80201964 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074167826 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070510862 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072461699 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075237894 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066894105 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070229784 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072276507 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070244969 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075766026 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066789519 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083354869 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070309579 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066675183 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067045549 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066379131 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070486291 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075856943 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066638412 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070090849 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071970774 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070419905 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072198245 seconds)
  done (took 2.94461541 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06622701 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066294451 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067869347 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060892321 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066054733 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06125567 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069263332 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063976849 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068750369 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064445338 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064789962 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064959812 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067207078 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060849057 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065809308 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063464297 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107617419 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068661022 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065516997 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065962749 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061400235 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067110781 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061026012 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06188181 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064634208 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068677465 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.0661235 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063725102 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065161726 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064802531 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065271901 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063336294 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067312969 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066099778 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065156292 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064897372 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065656954 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065687962 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061057745 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063780971 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066206897 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061481466 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.0654813 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067113111 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063590888 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063347428 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06735172 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065662562 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060778942 seconds)
  done (took 4.605374558 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08035766 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108202643 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069399404 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090666572 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08173654 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076992473 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071194085 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090906743 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065240278 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065830289 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08553573 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079076909 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065831865 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069760499 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071689262 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065050324 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066362042 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064123252 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069233394 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064828714 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069366577 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071674571 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079314444 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078495036 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069469775 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06425151 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064745492 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070099557 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.0775622 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069956119 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069937228 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070859876 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079882366 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070419356 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064864416 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067208737 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080676809 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065246798 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067686909 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06257322 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066996628 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068956861 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071156566 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080667223 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065375747 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069900872 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06499684 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062213809 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077415165 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067063983 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072853951 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079246494 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069077746 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065414077 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069182431 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079082949 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064893119 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063356951 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068228945 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076811908 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062594382 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069180413 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078035604 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067096897 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07211822 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079146738 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070102636 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069260537 seconds)
  done (took 6.412828474 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074459112 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072196646 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080461061 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079606969 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071459669 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072118968 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071688851 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071573768 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071249737 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076244463 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071931832 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091995397 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06704583 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074607149 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071858746 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071914749 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071992714 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071779262 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071809347 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071966749 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071713423 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079554432 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072105063 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079160627 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0977676 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06728102 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071610351 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072111262 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079869655 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071802434 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078897777 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071894403 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072231722 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079771563 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078635811 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071477077 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065337924 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071338754 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071637679 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07159335 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067081546 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079065484 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071028099 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066883172 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07141764 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071087483 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.0791643 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079113277 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073832985 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076137143 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071372971 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07901279 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071522497 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07141654 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079023294 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103535442 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079177237 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079320801 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071801421 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079014876 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082794646 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085294703 seconds)
  done (took 6.060409299 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083548636 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075139272 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076531965 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060848394 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063643296 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069346655 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06361123 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063725835 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073955665 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073937864 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076450067 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069136902 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071949281 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076312142 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069150681 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071976849 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069361899 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069075024 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073684749 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069201719 seconds)
  done (took 2.818817735 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07396551 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08161198 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066412745 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071732229 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068446118 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071239726 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067626326 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068466333 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066297843 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068457223 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075447885 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075438447 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066099345 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070958961 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075578003 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070879155 seconds)
  done (took 2.53031011 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075740583 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072064566 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080298719 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065746324 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063568035 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062149618 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065279989 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06153548 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062453067 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077328014 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065464355 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067942473 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065379754 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064463766 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062602829 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068289488 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062304644 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062859167 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065240968 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07740665 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075993575 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063867854 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06621821 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065567874 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065454245 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070314001 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06466829 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063159226 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062582201 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065714974 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065561794 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068691113 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062344031 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063338791 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064129864 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062799645 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065022831 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065418983 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06782702 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064888043 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063307152 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065056672 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065292809 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066402119 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061747548 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065346598 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061310671 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070400989 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063102864 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06534191 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064831382 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067826444 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06558553 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071754173 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068091868 seconds)
  done (took 5.037605565 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078866765 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068546302 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062126902 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063901147 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068816869 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067026078 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068676878 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066912552 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06723271 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06368408 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067173433 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068124467 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0674725 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069057792 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067025735 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068823302 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061371893 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067069572 seconds)
  done (took 2.613599914 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070843621 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06564402 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072482446 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065309622 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06575512 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067368431 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062056301 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064294229 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063911005 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065254912 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06517152 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067886501 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063815279 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067741179 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065206344 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065247472 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067921458 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064296462 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065269587 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061528087 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067514852 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063820066 seconds)
  done (took 2.843965136 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093379478 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080697009 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.136812552 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078783955 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08301634 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073133544 seconds)
  done (took 1.942452161 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089243332 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07924293 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066271996 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08755959 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073005497 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066756257 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06683447 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067329333 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075324067 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077081401 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067123802 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075245344 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075540575 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074707969 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072541946 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072440812 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066865868 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066936757 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066194045 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083538403 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066998577 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075884115 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067043465 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066800383 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067227122 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074805398 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075594364 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075471985 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067136235 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075418633 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072445306 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067241941 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075597314 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075600301 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068438577 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075820512 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067212246 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083605187 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072322121 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074476706 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068265124 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072652233 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075308355 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071530506 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074990625 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067102486 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071428703 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066742785 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066921495 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084675095 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072300655 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074430667 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072785568 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07533135 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075416236 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084998309 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075344118 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074679869 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072668691 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077140528 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074333536 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072640783 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074165041 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075148388 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072663574 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074705849 seconds)
  done (took 6.230779458 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081942361 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086111677 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067619125 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076088173 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0747666 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067154119 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067359551 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067331834 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067319927 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067129527 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106924433 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06756265 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074966002 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075004886 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067273361 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067285022 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067220422 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074676851 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067395672 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085361449 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067138602 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074614006 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074715644 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074525404 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075798864 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072873829 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067019014 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067428481 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067043125 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066934458 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071833957 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06767678 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075290322 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066820783 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074566737 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06730109 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067202009 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07204984 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067313141 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072356793 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074872895 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08291967 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066857688 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066755475 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075290691 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066948661 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067331956 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06693041 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066556676 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066642781 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075332703 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075301927 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075711321 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074511144 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066763523 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066889147 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067185707 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066749391 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066797869 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072155303 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074558831 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066763564 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085597626 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067000484 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066830907 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074517626 seconds)
  done (took 6.144601006 seconds)
done (took 130.055655179 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.181176122 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165617379 seconds)
  done (took 1.736892889 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069074819 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096092528 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076680144 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128140461 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066113252 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099812535 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098836575 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.0770915 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065641265 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065883383 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065631338 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068352702 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130745095 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066220697 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065850779 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068307206 seconds)
  done (took 2.712373985 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096136987 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157212912 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099348147 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064536488 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095859255 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072850892 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06456908 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074330319 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070578185 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064465786 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072537243 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070257846 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064820667 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070327208 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070893615 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07243807 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064557323 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07211073 seconds)
  done (took 2.822157331 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100270702 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091127527 seconds)
  done (took 1.605509866 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154069673 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.110845293 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149565106 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34314534 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166635766 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228386965 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126487514 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126603465 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116663953 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122690427 seconds)
  done (took 3.050225275 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097031183 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151812835 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.253628615 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114921382 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072034719 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094324453 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114955665 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076970182 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080165343 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079739906 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079646659 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075929757 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09783587 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073187886 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072899039 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075289778 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101439061 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071825584 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073480907 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076329207 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098541078 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065246963 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072927027 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07157992 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076699333 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076974867 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065103951 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065201512 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075826859 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073772313 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076777472 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092947882 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076945718 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106317787 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069857104 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107016242 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076055581 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073315077 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073560118 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073399614 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078282451 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078162048 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071925969 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075937001 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065393313 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076054571 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064827415 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065028615 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077274799 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066669923 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077068405 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076447905 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105900134 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066428948 seconds)
  done (took 5.97775403 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100925997 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103570314 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071352756 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109699652 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099726851 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070747574 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100931151 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092961701 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102415723 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069997223 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067997874 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070371977 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081532656 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082519897 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110805916 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103635877 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073476249 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070310594 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10303348 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102618789 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068026401 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094838863 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089260495 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101133216 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06746619 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070041697 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067709739 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069822074 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076753111 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077668565 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070047409 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080671735 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083974043 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078004688 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066855599 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067925067 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067791731 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07888916 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078605512 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078280813 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077482035 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06707285 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067483462 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069301345 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069501751 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067397002 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078423004 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080258335 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07851728 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069095273 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069980851 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067517896 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069356003 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079960124 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077447731 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080303422 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079416343 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068071345 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068091289 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07103237 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080092667 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079551743 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078665614 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069477198 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078166496 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067907034 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079780402 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083209522 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06785364 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069509278 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068403771 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069084348 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069132597 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077949851 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077745609 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06951927 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069250751 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067526602 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079271581 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077836743 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067957558 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076469932 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066751795 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068472951 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069427804 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069182436 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077086475 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079024787 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069960243 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067454653 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068620939 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068133734 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06667092 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076036833 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079414088 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078613587 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078457645 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069759692 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078514476 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077948271 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069627667 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080646417 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067832467 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197528265 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071568077 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078810287 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07856886 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080256744 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068742698 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06877666 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078714594 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081500143 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06839415 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079021375 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080901657 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079814607 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068197574 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081447361 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068625126 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080039677 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068898986 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080002688 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06900388 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079252533 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069140114 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068201419 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068661321 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080294303 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070092777 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068514994 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070172215 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069632567 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079788959 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082481243 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07074933 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08071431 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078748378 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070427559 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079607104 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068992107 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079310443 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069272603 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069604194 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067622688 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081750232 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068347433 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068401149 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070030701 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081111288 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068363874 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079618644 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078248798 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068137707 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081371281 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081223404 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076838982 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079881171 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070254089 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067705312 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068299676 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069747253 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077553127 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079746275 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070385115 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068603213 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077912197 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079252308 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066404999 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077586164 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077513739 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078004206 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068573075 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069392865 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079776827 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080238209 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07790802 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077826244 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078079594 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067997625 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077143285 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078105147 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068019268 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083707651 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068310784 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082456258 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079253944 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076904629 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079005978 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080339401 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080231632 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080362404 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082499717 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067747522 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067595355 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078773161 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067822468 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069068785 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077909765 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069362809 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069518868 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082797963 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068326915 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079431919 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067457671 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07797277 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066602611 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069426523 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082576331 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.199103332 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071750179 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079485842 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070903921 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077776351 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080550968 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079068463 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068346956 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070699749 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079699088 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078930347 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06843139 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068597315 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070726221 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078483714 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077817506 seconds)
  done (took 18.64714621 seconds)
done (took 37.968771676 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.21132832 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.14906307 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.197088797 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117818808 seconds)
  done (took 2.186005876 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121658868 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100496624 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094997544 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065048456 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101106303 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064598648 seconds)
  done (took 1.987021027 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311007154 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210013918 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183144261 seconds)
  done (took 2.14479985 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198726061 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.185685183 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.390769021 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252591147 seconds)
  done (took 2.572864443 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14721953 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092292549 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068784012 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085231329 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137312525 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.1611947 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100341197 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124931527 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07766206 seconds)
  done (took 2.492283991 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146167874 seconds)
done (took 12.975525373 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.124711749 seconds)
    (2/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.181061902 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.142712762 seconds)
    (4/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088401172 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.081340478 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070745205 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.118086037 seconds)
    (8/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.187856322 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065137237 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070597477 seconds)
    (11/309) benchmarking ("sort", Float64, false)...
    done (took 0.124746476 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076916121 seconds)
    (13/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.216584171 seconds)
    (14/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.111964619 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072800477 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065940066 seconds)
    (17/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187958104 seconds)
    (18/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.215679634 seconds)
    (19/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069556696 seconds)
    (20/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088364208 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.083487657 seconds)
    (22/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.189576096 seconds)
    (23/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.161794958 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06671896 seconds)
    (25/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076305761 seconds)
    (26/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071921455 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075883539 seconds)
    (28/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.165472269 seconds)
    (29/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068003669 seconds)
    (30/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.205458761 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.140379353 seconds)
    (32/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078072875 seconds)
    (33/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108380258 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.216643051 seconds)
    (35/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.153943825 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144385985 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071240973 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148516163 seconds)
    (39/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074207891 seconds)
    (40/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086868396 seconds)
    (41/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077126746 seconds)
    (42/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.188906581 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065056197 seconds)
    (44/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066977723 seconds)
    (45/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098693971 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075151479 seconds)
    (47/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07720055 seconds)
    (48/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.0728454 seconds)
    (49/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.094468164 seconds)
    (50/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073820238 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088633839 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.192876061 seconds)
    (53/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072243448 seconds)
    (54/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.061307966 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.162572016 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071532545 seconds)
    (57/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071324925 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08522067 seconds)
    (59/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067516156 seconds)
    (60/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077680699 seconds)
    (61/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073859405 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12096006 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095495256 seconds)
    (64/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070035379 seconds)
    (65/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064318044 seconds)
    (66/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.062482822 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066653239 seconds)
    (68/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.091655513 seconds)
    (69/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.172587462 seconds)
    (70/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.179278309 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050906254 seconds)
    (72/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.15451759 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.101518873 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071435893 seconds)
    (75/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.149479438 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.194949341 seconds)
    (77/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172405289 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090594083 seconds)
    (79/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051737607 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087791448 seconds)
    (81/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074945746 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.169456028 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.136901601 seconds)
    (84/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.184335329 seconds)
    (85/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052339871 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.228537164 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.067728035 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090743833 seconds)
    (89/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.274213938 seconds)
    (90/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069936756 seconds)
    (91/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073439668 seconds)
    (92/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.063669631 seconds)
    (93/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.118186436 seconds)
    (94/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073901398 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076227205 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.181852309 seconds)
    (97/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.107441517 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.094437582 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165468801 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089436706 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079191857 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.169629786 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051946013 seconds)
    (104/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.072560188 seconds)
    (105/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05333914 seconds)
    (106/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072891285 seconds)
    (107/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.095790621 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.075571127 seconds)
    (109/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050977229 seconds)
    (110/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074840481 seconds)
    (111/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.10664139 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07192696 seconds)
    (113/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067118202 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074648096 seconds)
    (115/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.133823621 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.175564226 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135193057 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089176463 seconds)
    (119/309) benchmarking ("sort", Float32, false)...
    done (took 0.125994359 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100442616 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090301801 seconds)
    (122/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052522346 seconds)
    (123/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052009564 seconds)
    (124/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.0718342 seconds)
    (125/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06518902 seconds)
    (126/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065507627 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066047571 seconds)
    (128/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.13344639 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05249617 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.132249373 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072832981 seconds)
    (132/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081414739 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064950034 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084986759 seconds)
    (135/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073161683 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089419723 seconds)
    (137/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053382537 seconds)
    (138/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066489993 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070197253 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071263945 seconds)
    (141/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066579176 seconds)
    (142/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073584356 seconds)
    (143/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051850409 seconds)
    (144/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073067037 seconds)
    (145/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070387453 seconds)
    (146/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079007846 seconds)
    (147/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.14162039 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070935165 seconds)
    (149/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050735331 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086467942 seconds)
    (151/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.109716891 seconds)
    (152/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.099634383 seconds)
    (153/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.100673528 seconds)
    (154/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072780165 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064627895 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064955404 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071954525 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.136718164 seconds)
    (159/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052034741 seconds)
    (160/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050808754 seconds)
    (161/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070934874 seconds)
    (162/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074508091 seconds)
    (163/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.148730414 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077519509 seconds)
    (165/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.185627782 seconds)
    (166/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087088548 seconds)
    (167/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072178666 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072868577 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.075054915 seconds)
    (170/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052122625 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050982377 seconds)
    (172/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150427573 seconds)
    (173/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051326236 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.179425725 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064324415 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.110649032 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050612749 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064761074 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087460868 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.193980749 seconds)
    (181/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071198729 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.105815677 seconds)
    (183/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060057442 seconds)
    (184/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051002476 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05294239 seconds)
    (186/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071465222 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052099945 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071207438 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133780185 seconds)
    (190/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063717674 seconds)
    (191/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050654323 seconds)
    (192/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.107089284 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072258069 seconds)
    (194/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.0624584 seconds)
    (195/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059745936 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050518854 seconds)
    (197/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.14705047 seconds)
    (198/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.305508591 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051217589 seconds)
    (200/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066830145 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088336083 seconds)
    (202/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118009244 seconds)
    (203/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.0517223 seconds)
    (204/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072800454 seconds)
    (205/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.099565792 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064742468 seconds)
    (207/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066061505 seconds)
    (208/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.149774964 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064415726 seconds)
    (210/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051545184 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065616122 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092135996 seconds)
    (213/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050962139 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174834611 seconds)
    (215/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066752162 seconds)
    (216/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071030836 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076135899 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050974773 seconds)
    (219/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052048491 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.087461615 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072210337 seconds)
    (222/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066127231 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089789977 seconds)
    (224/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052955676 seconds)
    (225/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.150753682 seconds)
    (226/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.05252154 seconds)
    (227/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.185828145 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052293236 seconds)
    (229/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071576041 seconds)
    (230/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.18570003 seconds)
    (231/309) benchmarking ("sort", Int8, false)...
    done (took 0.138888279 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065200037 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050919254 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07057015 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065839801 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088654366 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094191406 seconds)
    (238/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052772786 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063739881 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051354257 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13470341 seconds)
    (242/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.097423303 seconds)
    (243/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071036915 seconds)
    (244/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065571578 seconds)
    (245/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.1738817 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132227222 seconds)
    (247/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064204972 seconds)
    (248/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051509421 seconds)
    (249/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050806157 seconds)
    (250/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068535522 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065054943 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164203608 seconds)
    (253/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06602322 seconds)
    (254/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051060877 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.137496042 seconds)
    (256/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064663365 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.077954022 seconds)
    (258/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065951628 seconds)
    (259/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050954982 seconds)
    (260/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064917968 seconds)
    (261/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061370947 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064951801 seconds)
    (263/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064200396 seconds)
    (264/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069186383 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064815382 seconds)
    (266/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051215099 seconds)
    (267/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052970185 seconds)
    (268/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050653218 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071181283 seconds)
    (270/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051966093 seconds)
    (271/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061651325 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100036783 seconds)
    (273/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052830781 seconds)
    (274/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061134446 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072014479 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064751473 seconds)
    (277/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.079668162 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117137175 seconds)
    (279/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.085793761 seconds)
    (280/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084620013 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087904973 seconds)
    (282/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053855262 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088566759 seconds)
    (284/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078905449 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064874006 seconds)
    (286/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060066 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066420723 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066337484 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072241183 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063683071 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063884195 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.106304061 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071636549 seconds)
    (294/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065500697 seconds)
    (295/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087474948 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065331866 seconds)
    (297/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070251903 seconds)
    (298/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051763972 seconds)
    (299/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068825062 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070521178 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051097348 seconds)
    (302/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060387553 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.130697332 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.172662699 seconds)
    (305/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05120051 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.094429609 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070254771 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085086148 seconds)
    (309/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051061151 seconds)
  done (took 30.259329971 seconds)
done (took 31.715363031 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084406949 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092550824 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074639969 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092075646 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08057058 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075752235 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071574963 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077621455 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079246728 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080498445 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077496277 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054270445 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073279829 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073157169 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073314067 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090137799 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077004801 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07204321 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072431152 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063995849 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07172495 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06491599 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066212213 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054538493 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07637901 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070736587 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071835778 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072946005 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065421652 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065504532 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.0680804 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072491742 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065014945 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076596198 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071115594 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072353075 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073870666 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07549911 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066697302 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065469928 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073825924 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065104525 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072211795 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072910831 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071278466 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07074543 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072941323 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077407681 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090787761 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068045827 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073787479 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075212204 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075916012 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071637746 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068891011 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072495653 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070304316 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090436919 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072893425 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067194326 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073245193 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073067427 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069820136 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072177187 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072003068 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074248774 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074881678 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070471324 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073701777 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070040635 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065299658 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072344548 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068102926 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065622408 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074877335 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079828985 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064105059 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070469621 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071925941 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070704843 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064404754 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066605014 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066441672 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071177272 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066774981 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054036898 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068438654 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070908105 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063717999 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.0723336 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070727648 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071057704 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066218632 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074457196 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06382737 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069972681 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064903937 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064934092 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067056983 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068461166 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064365493 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067094495 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073477894 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065850791 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070095594 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077894732 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064486182 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070791268 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063679222 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063890913 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078055058 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073595155 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064824628 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067053002 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063353447 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071709463 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063691128 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064759785 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064533747 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064958156 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07016787 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064361905 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066663621 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071943757 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076691987 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064673116 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067822863 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066412428 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06438084 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070030129 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064333853 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.198035959 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067494212 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061369509 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067194371 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065367452 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072381088 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067376791 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071918331 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066741066 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072723028 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069189185 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070185009 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069812751 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064006743 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058058495 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067710236 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067559475 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067687189 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065026518 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066634972 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065675091 seconds)
done (took 12.384722761 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067118704 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141370595 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098495439 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094761282 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085153564 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065923329 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075741503 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101062578 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067218839 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101895034 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086678247 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084572728 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111114629 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064489719 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065950036 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069030389 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06678669 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080812363 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100469092 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088297143 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115039513 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064696133 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093831589 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089634052 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086436654 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091650339 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066469974 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069429787 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068789634 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099596456 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085331006 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068904151 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066229122 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099067004 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092159265 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082311127 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066027635 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081928437 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065937225 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065353568 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066859046 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097280181 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079164496 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079557292 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069555869 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068816867 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066654028 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082446766 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088318637 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077840245 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085991385 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101653579 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068390166 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065162072 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06411028 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084510498 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064736179 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068089239 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065846647 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067533691 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065443786 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068378801 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080657877 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081205262 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069180922 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079910461 seconds)
  done (took 6.794807617 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083263229 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.08905866 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082288543 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08225266 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064944947 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065879004 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065895818 seconds)
  done (took 2.062216284 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067312965 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088775212 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088429402 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088586725 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083390653 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086820347 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075174056 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065988677 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079864475 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067418801 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086817401 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101332745 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066884676 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072120607 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089603235 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065893286 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.08962717 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06583166 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068804415 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089277793 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067709047 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081231798 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069271723 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066839479 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079560379 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066373915 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112216867 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070262946 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067578466 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068696884 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063927614 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106376153 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080146652 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074855918 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065863952 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08170597 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080222928 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064326642 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082024829 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071022552 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079652415 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066322578 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067131718 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064188723 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070409357 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076595339 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067089161 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066666263 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068730742 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085468966 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066873221 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079517676 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069475934 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068677725 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06783796 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069782136 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075873721 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067256024 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085431202 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067806352 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08213511 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082239759 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079251586 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082420201 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06852218 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079386053 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.078919805 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06823737 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067744002 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06894084 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081769652 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06405695 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067180103 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076238423 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067610081 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088224089 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08871552 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067640582 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074881152 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066509358 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065961906 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065953556 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088187849 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068312487 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06591559 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070216339 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068762986 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064449985 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065119156 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069378604 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064273748 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067778126 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069001012 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069133273 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069310614 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082424417 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068242765 seconds)
  done (took 8.740023501 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069183905 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067894852 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070247492 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067833694 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068349856 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06864498 seconds)
  done (took 1.964657154 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093502606 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069447958 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080821171 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072149561 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104429268 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086302931 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086248988 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078220139 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08355289 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078736936 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086420748 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08839776 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.0923929 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072451043 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086257037 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071754067 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086649114 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07559168 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077980447 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072514068 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085828425 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07287574 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072613293 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081233763 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075223277 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075236179 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066691284 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078437015 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077806762 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078392964 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071985999 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075097951 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070660085 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077631832 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086312672 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070375972 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071844688 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076676774 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071996896 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075193341 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087302727 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072418705 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074105044 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076720417 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077637321 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07049958 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07675188 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075626396 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085950453 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076875935 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076511218 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071103464 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075383615 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076534505 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069682581 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077619341 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076539763 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085812762 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071833424 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069855157 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068602461 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074868663 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077477374 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074488123 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078516978 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076497038 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070096877 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072452368 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072167772 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071043798 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076114209 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068689392 seconds)
  done (took 7.090214303 seconds)
done (took 28.175937021 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543659867 seconds)
  done (took 2.060070068 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.596638221 seconds)
  done (took 2.137455351 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.592934762 seconds)
  done (took 8.137462447 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.399987009 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.489235278 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.696035443 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130573582 seconds)
  done (took 3.307721781 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.687455584 seconds)
  done (took 2.23902742 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209238387 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195460892 seconds)
  done (took 1.965205363 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377808706 seconds)
  done (took 1.922211479 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.112288429 seconds)
  done (took 2.652339484 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.264983925 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163215986 seconds)
  done (took 1.978359507 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.464766803 seconds)
  done (took 2.010544473 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.834072742 seconds)
  done (took 6.380134582 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21408719 seconds)
  done (took 1.809712286 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241451691 seconds)
  done (took 1.793707285 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.715304582 seconds)
  done (took 3.264742531 seconds)
done (took 43.207130965 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079791674 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080601538 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082558577 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077113274 seconds)
  done (took 1.857543734 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078084548 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071920367 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075902465 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073034563 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075847863 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072436109 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073617359 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07571515 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071540585 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072485601 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071845321 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072177674 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074089772 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073632519 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070306896 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074116404 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075140134 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071830402 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074912703 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072049876 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070848864 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074094858 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074427352 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071433914 seconds)
  done (took 3.31643751 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078900261 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072468898 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074129686 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071905069 seconds)
  done (took 1.854743258 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078468777 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092220535 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088105067 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076608754 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091607696 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08551744 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068457331 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06845477 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071885663 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076473454 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067272399 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094813018 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086895638 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076159045 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07811411 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065724706 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06790196 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085954293 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076447301 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077094985 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069663204 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076287945 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067197471 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086967212 seconds)
  done (took 3.427964199 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079191516 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102296217 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076500928 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086987562 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089485367 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065269801 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073825533 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088852492 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121778993 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064719829 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070018295 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065055853 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072203372 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064741985 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075587324 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103415407 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107419025 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067967901 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094615912 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064864715 seconds)
  done (took 3.201085813 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074855739 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069035917 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065734073 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068627665 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076754616 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072002886 seconds)
  done (took 1.995511283 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07020917 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06811275 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066695496 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06697672 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072097909 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067006515 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065485889 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066817942 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066956819 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066842798 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066175067 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065053977 seconds)
  done (took 2.37094831 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.172113442 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068048806 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068461196 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065533284 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070539323 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065687312 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079310437 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067211409 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089682703 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065747256 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066191981 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067855431 seconds)
  done (took 2.511571754 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210046571 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076826339 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235857892 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136522871 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110293696 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114571985 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102912821 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112592751 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142412341 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10104633 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1658219 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16411989 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106554722 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135768077 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088171503 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097324501 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153989305 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160930678 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102809754 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163666268 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142695961 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123230175 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145741984 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100289944 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10478105 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121148645 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070226209 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079246079 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168408387 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130133537 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14459249 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109870551 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092801481 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175220666 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169073379 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140902599 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133484532 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083751547 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101888496 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132471788 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198200595 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087918155 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161791945 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24500488 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080653554 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133792326 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120510023 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11991265 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105533021 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089294335 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145765836 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181930667 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138791005 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086316106 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111217978 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114113042 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115124967 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103052639 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181271068 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15981214 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126448085 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070749945 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098474674 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152806096 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130622931 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108404495 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125113154 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092523058 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132890907 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152186689 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118100804 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14161092 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127735454 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087583498 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119801252 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138367014 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126979957 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168394744 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123131812 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072197044 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123223592 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10184203 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080286812 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140000713 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074452893 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173179101 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0977102 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105300451 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112262033 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10799746 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107639153 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159787591 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142673952 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243449125 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065240506 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103245091 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11984518 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146297819 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086596836 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108558683 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11573527 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076933323 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138836682 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074699501 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122735879 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074863195 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124608321 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130700325 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075600392 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121299437 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099846686 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.09889472 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13221605 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157771292 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087860645 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08159751 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16581943 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121751792 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104036544 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143115914 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153639043 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097496305 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101969364 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148489484 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177739273 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088375888 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160691989 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106075095 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082762632 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086585901 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121950171 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111172278 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12101427 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081875524 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117460762 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166865033 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07407326 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094411766 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132751819 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078494572 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079969367 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102788735 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099259823 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094022742 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099167239 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102993562 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136096848 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121765569 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104123292 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267980318 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098286861 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167726645 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088431358 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100558172 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102668127 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069381161 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136461578 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15488301 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078548997 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164375171 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122968678 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104550785 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117413147 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081933561 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139708974 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07806129 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070193147 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143331439 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110079859 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109403737 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14846677 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103364097 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126778542 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119081788 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133551772 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131791743 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126984317 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1050416 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086740794 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110671487 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124454027 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072441218 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090378905 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078978749 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102817956 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094598444 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082819478 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140586279 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123595782 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099521618 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110268241 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095615629 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145203841 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07563175 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127473278 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117645055 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093266273 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15080519 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15142776 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129701379 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098543847 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143216149 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069528644 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072761686 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.231506216 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123179774 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082622118 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083043325 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117021058 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144753776 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128190681 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138080405 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11058215 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120164377 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154409102 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069234443 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115134489 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147139111 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119359427 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102767645 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089482576 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098306184 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14082509 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107774417 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180725881 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112895012 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124444729 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151949245 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098306888 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078585284 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102450428 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136428293 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10375126 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143616975 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098965751 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08704257 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108946574 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073575931 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099112736 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126471113 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118564651 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13424887 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113458464 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131257791 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076608567 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115624394 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11954155 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123179857 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063739159 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119151753 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160715825 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093203356 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117424902 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151160425 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078225737 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123131004 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.317950044 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146678746 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084572427 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10906372 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118281452 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127460517 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119911713 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139532383 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108389666 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133996319 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109203695 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084737448 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086772177 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095572864 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10404882 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093800195 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107166065 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113351442 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094611849 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131656847 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102935198 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108660437 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117333944 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095911218 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089089239 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095942712 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17257518 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118672074 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170213088 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098330775 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142951535 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162974813 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073984627 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078053838 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077083079 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138041675 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083071184 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129749722 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096846104 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104826339 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123504862 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141296645 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093720729 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067817874 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10769522 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135795222 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110984522 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097159619 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103825214 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161404847 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099675911 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078598487 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112369727 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103616856 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101219096 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315884173 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061653154 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097004663 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075104899 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080478359 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127344263 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152106867 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080757271 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102602568 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117924418 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109318884 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126851765 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100566959 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098303909 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112947085 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148390591 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127569513 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089139027 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112042943 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129550577 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15566816 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104121651 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094523325 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170641888 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165830156 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15851251 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087540925 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113476126 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112622912 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107157066 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137638314 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0820085 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162328339 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081066264 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135384573 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102737993 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08902833 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128863152 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097973821 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087776295 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146184341 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11637491 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081574686 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076598111 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116940679 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119339683 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106043923 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074748595 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138106994 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072149066 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130576489 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166947365 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080592064 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.249325011 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097220161 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080223941 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10740128 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102420396 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088855836 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098694775 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171639311 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087366823 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148725755 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140881253 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112717142 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136331237 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099491215 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634320054 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077285505 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15065464 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116434716 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172932338 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096518272 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116327809 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108036104 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122082404 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142443734 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104242623 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175485682 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131640954 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114771579 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079223848 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102601645 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102566606 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088552037 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103938805 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112342131 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115288935 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092901975 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114841005 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12193881 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081361415 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093994381 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154217166 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115996729 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142415969 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13916866 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084294325 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117485298 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137707188 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078915817 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120838107 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150187506 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104631094 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241740293 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082615932 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102981583 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17021055 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073022643 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16206202 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118852294 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108221283 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112099654 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113885272 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130066558 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107994421 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121484195 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093212681 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110080307 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112296175 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080833128 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076258043 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104068668 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111657775 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096437096 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097331767 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097517504 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150813001 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071592746 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095742294 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102005997 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14445439 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173211674 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08714499 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082587443 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119112275 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111381117 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112177661 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119880129 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078961283 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081286042 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081220141 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076513965 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107471373 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111210295 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103326693 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110262979 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162872747 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081613845 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222361301 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09453143 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103397012 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069028921 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077907154 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094858401 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096421812 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107102045 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100334575 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168857137 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093442026 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088750522 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091483319 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07224608 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08124336 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271443174 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111226207 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118163687 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096713512 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062512849 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108548363 seconds)
  done (took 58.461613174 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109319985 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082253791 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096582184 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14904593 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121119694 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211398947 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156396406 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199118585 seconds)
  done (took 2.779857559 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069685262 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09372699 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099074944 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08230596 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065898604 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068584997 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.222283948 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079980043 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066182542 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088253529 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078182802 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068252372 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.415142448 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065647799 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068641911 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062634305 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066274289 seconds)
  done (took 3.406900265 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.365815636 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.603592169 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.369670672 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072547648 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.827844364 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090514757 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.042523786 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.1266276 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073220862 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.522630474 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.700048421 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123838841 seconds)
  done (took 18.574714046 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078134434 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070490752 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083438564 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083301359 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072185606 seconds)
  done (took 2.041222441 seconds)
done (took 107.392900204 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083023263 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.393869436 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053448473 seconds)
  done (took 2.131409877 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085298525 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086766257 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.0870745 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085836857 seconds)
  done (took 2.010002482 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076314788 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076695337 seconds)
  done (took 1.81071288 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221438493 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139859951 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086195784 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085104689 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080186495 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07823849 seconds)
  done (took 1.897846947 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074409676 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077803706 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07457522 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078283806 seconds)
  done (took 1.954637782 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078238108 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054678516 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056588961 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055398836 seconds)
  done (took 1.895859046 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088254699 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079962747 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07745524 seconds)
  done (took 1.896053916 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103483742 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084058203 seconds)
  done (took 1.838540752 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084352692 seconds)
  done (took 1.740798539 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100343021 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112040299 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128387283 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108313855 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135744975 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108330887 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084619021 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085852569 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076584908 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086198944 seconds)
  done (took 2.682412796 seconds)
done (took 22.043222607 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080347613 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.364768415 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360160936 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088168686 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668575876 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.389138574 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.966842464 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091231471 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112065189 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067849897 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083483363 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676671225 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.957409523 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.316368216 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.944458216 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.314387076 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64781982 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06756076 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067302362 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067419006 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.95377323 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067377767 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066994196 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068015586 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647239028 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370345933 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067710047 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32992804 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067236644 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069165568 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354598305 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067651543 seconds)
  done (took 16.101378488 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072866423 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116627199 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072514714 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082587132 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070714646 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068749752 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071009736 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068493286 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118434356 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067349837 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083983907 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066986522 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071568644 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067947399 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086398478 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067867976 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067999386 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067934551 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067376817 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067923535 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086086784 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066929732 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06769728 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067734885 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067313382 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078707875 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067558036 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067626623 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067785975 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069285551 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070431125 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068416849 seconds)
  done (took 4.040332343 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117325626 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124312065 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073848713 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102837279 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111081653 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069949678 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14166202 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09194316 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125838585 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067886704 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083661108 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067590431 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100274087 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068065593 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08696344 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068250785 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068817091 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068359496 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067905428 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068543519 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087112646 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067492129 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068035913 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068256924 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068031856 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080847661 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068454127 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068200652 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067685601 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069551645 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071211385 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06809956 seconds)
  done (took 4.299305012 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075123895 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07577007 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082195867 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08363226 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068364041 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070386207 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072263025 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068939718 seconds)
  done (took 2.269042038 seconds)
done (took 28.372914413 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081334111 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069759508 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071972188 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080855706 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071926691 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078157309 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066797337 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074844522 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072101129 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072356878 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074535798 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066997119 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070345485 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06697084 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073111554 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066701158 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078448521 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071192855 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078085479 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078664723 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069510232 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072295871 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073627079 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078598213 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078382837 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078809785 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076418716 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071914085 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068612657 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071276323 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075863692 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08286013 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067943185 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079039123 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067544891 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067523816 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07092096 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067745354 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078557686 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076143327 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069385145 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075744942 seconds)
  done (took 4.732411993 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089389572 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090246346 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083543202 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06063122 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066307087 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064199726 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087448166 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059419563 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059615445 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08671518 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055468739 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058764976 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062143837 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05362512 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.0588039 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05612926 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060972432 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055514092 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058413009 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058613274 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057586771 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053492532 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059415051 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06209198 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058308109 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061287724 seconds)
  done (took 3.360132057 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076267524 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086767387 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088461677 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125459237 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103508312 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076455975 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077290068 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091038109 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084223739 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066216611 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070116352 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092077665 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087239288 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072810812 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066841799 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08334225 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081185724 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068338645 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072737266 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089765077 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083562291 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082763722 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091476296 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08010267 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066547819 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068785981 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070336022 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080470629 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071305566 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075418274 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070375897 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070244581 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068425475 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077800435 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07043702 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06817323 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089999713 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076528292 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07685807 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06745174 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070305279 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068680223 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.099828696 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121329783 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066351034 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073297393 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074504888 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076073437 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06718285 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085281091 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079381557 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066860751 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069985508 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066350019 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066870438 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079932262 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068867162 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069466891 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075820516 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070090083 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08494777 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070880254 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082005487 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066708948 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074440916 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066227959 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067741053 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066263522 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091665635 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068775621 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106999421 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067859681 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067937841 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075908377 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075487569 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072826357 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067543909 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081677456 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077332112 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070366208 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075165973 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069865545 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069986263 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087178661 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069117834 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068325479 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068113275 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073060442 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069964535 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068330901 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079651225 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066853648 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07016207 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083295851 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066868984 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068331326 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072597541 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07148896 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066326311 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077739165 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071749244 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068029366 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075911635 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066987864 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070168148 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077051607 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073595945 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066045806 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07172699 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072897529 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067898984 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068495302 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070211109 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068939653 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075086987 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073291107 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071225786 seconds)
  done (took 10.523584308 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160477751 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152913724 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070411296 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143833041 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075899887 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078351945 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146496311 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093603158 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067132449 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068049756 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068064794 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108677531 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104590515 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114426847 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078060895 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067181715 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082845429 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112608292 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148904299 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14216794 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083722064 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076578505 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069629929 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068863401 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069779914 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077806991 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084951472 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075793043 seconds)
  done (took 4.407237989 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082622091 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096058151 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074264229 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089323603 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090572027 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067400273 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069481468 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069418783 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080288302 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078183987 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066781665 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073019623 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073749031 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070834938 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06830602 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074160394 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074515695 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068658521 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070003574 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072376392 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076970964 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079992298 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071109137 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066886008 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073555598 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066746299 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063619253 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083599718 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067637847 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089444268 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065390879 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074393286 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080769865 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067920661 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067271412 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067193402 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066714975 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066785538 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069331009 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065967813 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066075314 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057472143 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066294598 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078679856 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073104365 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056079021 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07166093 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072984547 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.0727097 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064993173 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070541575 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07013204 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070374233 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074200364 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072295885 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071880618 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068622566 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.064963262 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074831828 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067270652 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064171345 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065265361 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071704954 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065355379 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074678385 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072148534 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065737652 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066418238 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068955912 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072622613 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066357173 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069951679 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064800311 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069240976 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071550383 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068732473 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068188227 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065598111 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067046752 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067149578 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.0551995 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066785506 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053204535 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069680192 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065286577 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065978324 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067017644 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071310982 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078938791 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068273752 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073027766 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067775185 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065803638 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069642288 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059684347 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.0698666 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.0821649 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082118512 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066572431 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06484659 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081080596 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071509142 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065836111 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055716831 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07442099 seconds)
  done (took 9.109803342 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091094219 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069302518 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08247831 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090053878 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085772024 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074123166 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07621922 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068910031 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081787478 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072799149 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075658795 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067906541 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076352451 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076661343 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069454829 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076433974 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071258926 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081915333 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080956858 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067479592 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075149031 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079372885 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088391267 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079366864 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077711384 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079250743 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088287527 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071672261 seconds)
  done (took 3.896032765 seconds)
done (took 37.695697294 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.76297085 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.015346439 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.755911298 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.173738022 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.067184417 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.776239309 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.825973507 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.746509147 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.865979759 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.789711448 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.995641882 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.792752112 seconds)
done (took 65.253481628 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.764478924 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.899668461 seconds)
    (2/2) benchmarking "String"...
    done (took 2.020891305 seconds)
  done (took 5.608993739 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.040401846 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.446267934 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.993797172 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.744191252 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.75270305 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.050816069 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.558770925 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.272549656 seconds)
  done (took 30.508843382 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.88305049 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.97006427 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.437598567 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.491158867 seconds)
  done (took 15.527027025 seconds)
done (took 63.221917956 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.772640593 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.794147834 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.768133958 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.728759943 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.802698585 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.747916975 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.859873687 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.941523144 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.742029514 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.732184576 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.748020362 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.177395388 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.751268135 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.870998586 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.745757375 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.747934746 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.7592405 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.150900004 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.900683693 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.757730094 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.743943006 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.811077336 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.745491681 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.753555053 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.766059149 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.739551152 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.170826066 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.753732247 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.563545808 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.753529817 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.798215574 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.072893495 seconds)
  done (took 203.85943852 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.747290062 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.594820945 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.669230244 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.790644268 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.089040964 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.928384279 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.861346904 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.15034085 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.751441445 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.768639316 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.94659639 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.74505297 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.987196154 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.695345227 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.780261459 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.769170431 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.920987541 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.00193714 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.781463801 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.915569091 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.753062497 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.753087538 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.707741604 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.941534475 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.768246162 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.754064239 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.758874902 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.756418397 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.944148062 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.886675573 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.763113395 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.766459148 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.947670493 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.62642692 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.766748921 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.760769223 seconds)
  done (took 168.242064752 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.913069906 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.752994785 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.753859354 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.752917998 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.761053582 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.753373952 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.876252568 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.873444489 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.212166771 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.032104477 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.802505015 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.571513398 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.752202175 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.822492457 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.766780875 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.757631031 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.76607953 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.780680053 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.752637496 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.75369408 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.875226832 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.764405936 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.953458648 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.757476389 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.754548048 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.75839178 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.123351959 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.754945428 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.759180414 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.996643797 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.749735737 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.753165628 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.648652691 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.749232212 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.752647253 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.837413834 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.756190848 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.755593185 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.755550163 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.973298968 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.753094334 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.754339982 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.761733608 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.928596199 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.753648773 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.884084615 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.753114697 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.243521415 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.753086752 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.752766548 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.004629938 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.419377039 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.749637799 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.750762907 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.751973478 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.750802037 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.757631644 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.755701628 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.758701392 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.59504974 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.827653644 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.755990357 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.757625294 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.75958047 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.753903191 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.915591973 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.751473311 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.780746223 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.813961101 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.8665661 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.872674009 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.75395998 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.822180415 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.845774764 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.752694477 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.752079932 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.75414716 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.758202451 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.753157229 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.834628682 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.750777338 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.873655724 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.763967155 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.753395298 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.804233253 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.824130971 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.752033658 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.661554598 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.751982627 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.754745539 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.064696139 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.819574373 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.752928094 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.754921698 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.755322392 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.757500926 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.875785968 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.87271818 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.551667545 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.753614225 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.846432325 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.758960499 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.88699141 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.751989279 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.929272491 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.752485801 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.837494891 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.7565107 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.755196776 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.753578784 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.784926666 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.752266778 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.815313963 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.750861702 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.125523673 seconds)
  done (took 398.655473027 seconds)
done (took 774.41861534 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.435456935 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.385753416 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.502885974 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.412608285 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.396680622 seconds)
  done (took 13.825689927 seconds)
done (took 15.518963793 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.840939946 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.84611781 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.777787218 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.845520025 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.772722656 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.84429653 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.824152286 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.778552546 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.811850301 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.782140444 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.814830819 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.779650517 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.769271666 seconds)
  done (took 25.180658104 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.989110318 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.998627747 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.827622998 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.998941103 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.804014529 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.992427097 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.917059226 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.90757224 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.90693167 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.769571929 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.770707086 seconds)
  done (took 22.579904457 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.003527015 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.999541783 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.830641579 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.002346064 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.80543873 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.998183652 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.921281365 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.90927269 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.912704607 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.797108951 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.768878763 seconds)
  done (took 22.645040943 seconds)
done (took 72.100418927 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.76398592 seconds)
  done (took 3.457854343 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.790070561 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.926560268 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.771849342 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.768390178 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.76691594 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.767974887 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.769251483 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.76416747 seconds)
  done (took 16.022510242 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.763600369 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.766616359 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.762194101 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.765672842 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.765615933 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.764226185 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.766272432 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.76786988 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.761822668 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.764152744 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.762874593 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.762831093 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.76855357 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.763545882 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.765268111 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.763916113 seconds)
  done (took 29.931121389 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.765162804 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.765156961 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.762474895 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.76310811 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.762591605 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.761959277 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.762841813 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.762606105 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.762086004 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.761302384 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.762720456 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.761195234 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.762242542 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.763444855 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.761219018 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.761126979 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.761096473 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.761225736 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.768089104 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.761858968 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.762077961 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.760864359 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.763582878 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.763637457 seconds)
  done (took 44.001037059 seconds)
done (took 95.105844027 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.669627074 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.370870138 seconds)
  done (took 8.736189706 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.766402282 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.763967847 seconds)
  done (took 5.271976921 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.76627304 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.766867961 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.766391227 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.766623117 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.76564589 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.764792049 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.76665893 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.766777868 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.766008284 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.766429376 seconds)
  done (took 19.359383594 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.766388492 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.766490225 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.765363242 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.76509317 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.766296692 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.763922328 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.765406535 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.767075395 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.768843735 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.76378362 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.766932336 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.764679941 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.767177104 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.764706989 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.767592577 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.764765055 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.764375741 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.764770346 seconds)
  done (took 33.481805002 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.76823324 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.767760312 seconds)
  done (took 5.235459285 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.766380897 seconds)
    (2/7) benchmarking "second"...
    done (took 1.765985169 seconds)
    (3/7) benchmarking "month"...
    done (took 1.765932215 seconds)
    (4/7) benchmarking "year"...
    done (took 1.764487793 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.763351803 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.764562557 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.766511353 seconds)
  done (took 14.053718959 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.769646904 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.936687955 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.009964791 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.444097996 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.770028372 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.773796637 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.667451928 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.771477266 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.774853427 seconds)
  done (took 19.617355657 seconds)
done (took 107.452443309 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.602099804 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.763702765 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.152867012 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.820146559 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.808681073 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.106121287 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.78091239 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.987343801 seconds)
done (took 42.721602116 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.765955849 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.329339038 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.352087522 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.107919281 seconds)
  done (took 12.489196428 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.748657166 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.283100395 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.805634766 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.35725898 seconds)
  done (took 19.918897488 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.133186191 seconds)
    (2/2) benchmarking "read"...
    done (took 2.127563783 seconds)
  done (took 5.966828359 seconds)
done (took 46.843548518 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771363289 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.766239322 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.768844854 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.767421194 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.769006889 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.767100089 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.767863932 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.767076438 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.770136569 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.770715532 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.769564946 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.771963934 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.768969847 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770121798 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.765949384 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766972183 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770152414 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.770935823 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765541297 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.768893225 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.770075589 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.768416433 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.768241716 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.771300014 seconds)
  done (took 44.154431001 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.771891257 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.769880903 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.768743486 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.773519678 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.767523485 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.771523284 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.772157962 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.769257323 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.770791499 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.772957982 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.768261754 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.767416788 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.771827281 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.767363989 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772557642 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.769358555 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.772490872 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768150015 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770911197 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.768951817 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.772285828 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769692141 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.767900444 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772117696 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.769096908 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.76883885 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.771570002 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.769667376 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.771742083 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.768889257 seconds)
  done (took 54.809569403 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.775830203 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.779989012 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.772946955 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.774041328 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.77431458 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.772307773 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.773340128 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.774286096 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.774409926 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.772685614 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.774095794 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.774717085 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.773994764 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.773496923 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.77367105 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.775133302 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.774688974 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.775328223 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.774959444 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.774459691 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.77263103 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.773466129 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.774517795 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.774688601 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.774839356 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.773591073 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.773988514 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.77386132 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.775299436 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.774876565 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.77507756 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.773392421 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.773836146 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.774413259 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.776663079 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.776206822 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.779316424 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.781591518 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.774491852 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.776223067 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.77677706 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.775841448 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.773954924 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.775937142 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.774888374 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.775194991 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.776020572 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.774706532 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.775892127 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.775076634 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.776034591 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.777019917 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.774113096 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.774874858 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.775518583 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.774293972 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.777033941 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.775843227 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.775870634 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.773506187 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.775074348 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.776198364 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.778690062 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.775685553 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.776240216 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.776593735 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.776300513 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.776461754 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.776329234 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.77812417 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.776710641 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.775108083 seconds)
  done (took 129.524307715 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.77688186 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.774017866 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.773085753 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.774961475 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773542237 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.776614255 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.774235733 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776603568 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.773788196 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.776256604 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775877378 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.776368097 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775746461 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.776837439 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.77635832 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.776004954 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.777814626 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.775113616 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.776184111 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.778300567 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.776714642 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.773675189 seconds)
  done (took 40.77116054 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779081823 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.779683612 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.773993084 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.7768606 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.775876213 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.777109679 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.778966238 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.778717494 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778211631 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775242486 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775425066 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778547737 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.7766975 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776841241 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.77631749 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.776052974 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780032838 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.774250049 seconds)
  done (took 33.696432947 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.777745111 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.774365257 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.780397672 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.77621806 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.777192936 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.778843485 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776598594 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.77857594 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.7788058 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.777309367 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.779785646 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779417463 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.777806069 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775711879 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779054033 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.776791483 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.779628804 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775676639 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.779858069 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.777467583 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.777620123 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.779583496 seconds)
  done (took 40.825591156 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77940035 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.779760428 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.776791924 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.779127672 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.777677499 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.779594079 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.781510608 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.777320091 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.779426361 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.781595295 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.776669573 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.781172435 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.776636862 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.777900879 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.780079381 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.77580833 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.781292954 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.776697717 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779312259 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.776677865 seconds)
  done (took 37.286469975 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.781885919 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.782865777 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.780629056 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780796664 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781108213 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.780613842 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.78162699 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.782219854 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.783533333 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.784332126 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.784208164 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.782600429 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783160878 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.782614118 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.782147466 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.783371766 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.782551457 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.781517194 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.782937035 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782862641 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.78265851 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.783481465 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.783880469 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.782292686 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.782396366 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.783470789 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781642641 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.78472742 seconds)
  done (took 51.625393427 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781934701 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.780534215 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.779928464 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.778183112 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.778936336 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.778286041 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.780845929 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.779811389 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.782818457 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.779810801 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.783285111 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.781963871 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.782551156 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.78232587 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.78374607 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.785911461 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782164565 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.778929287 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.779329258 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780375725 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.783688522 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785580656 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.782635624 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.780220314 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781535896 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.782270527 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.784108943 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.781376634 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784589428 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.779999219 seconds)
  done (took 55.160368385 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.801747104 seconds)
    (2/2) benchmarking "in"...
    done (took 1.802330035 seconds)
  done (took 5.317754481 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.779861642 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784291128 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.783297377 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.782484076 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.781088841 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.783335428 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.784741662 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780959104 seconds)
  done (took 15.974501397 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.785326192 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.783136527 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.783663316 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.783983851 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.784822798 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.783413847 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789317358 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.784643569 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.78510987 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.78571029 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.792218634 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.791915089 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.785835381 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.78465381 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.784503412 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.784205574 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.784575326 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.786672109 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.786520078 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.786857182 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787530534 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.787896937 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.78749356 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.783828413 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.787512929 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.795445716 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.788530376 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.787134428 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.785082786 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.788774414 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.785548856 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.783535454 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.786344978 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.788409543 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.787231653 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.786471146 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.791757577 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.785291709 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.792408607 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.787295517 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.787668302 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.784571378 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.788279188 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.788313929 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.787783697 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.788837883 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.786628089 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.783915367 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.785542158 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.789478629 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.791941951 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.78515954 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.782948287 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.790049097 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.786897193 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.791857311 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.788097734 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.790082213 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.796616123 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.795212957 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.799694505 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.792976812 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.787577727 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.787008935 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.797775907 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.812876533 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.79126469 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.785589955 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.785574173 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.786219762 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.794003426 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.798752978 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.794984872 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.78784858 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.787756101 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.78641177 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788857705 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788292247 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793057393 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.790215959 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.788138552 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.790893697 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.799252684 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.81009146 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.786673423 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.788410563 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.790708975 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.788322059 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.789431629 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.796880829 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.788664743 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.787801182 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.787925574 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.786931761 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.78693397 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.789127071 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.786403735 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.787087936 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.784865544 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.788069109 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.789426583 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794179355 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.798014701 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.791080373 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.788381486 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.795114724 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.788044904 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.789657588 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.795503802 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.787554513 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.789028122 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.791718143 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.795961265 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.787049679 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.792089569 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.798147484 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.789545583 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.789650593 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.79061584 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.78946253 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.799056738 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.815709925 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.787506592 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.790298198 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.794656448 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.801490142 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.793162145 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.793302234 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.791412068 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.787987487 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.788189083 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.791419685 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.792809133 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.791909148 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.791628495 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.792546833 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.788854271 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.790522877 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.790923814 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.79183999 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.790552104 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.792427321 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.791536549 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.793909117 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.793017778 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.793876426 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.796833978 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.789881232 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.792713582 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.794424362 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.789608602 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.791289146 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.790638724 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.791121525 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.793650614 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792612771 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.791502945 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.792964803 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.792506626 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.791403252 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.793183631 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.791970452 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.797085108 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.793308842 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.796882035 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.791190359 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.789910525 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.793088204 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.79444168 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.792677016 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.79444028 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.791966126 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.795125885 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.802228572 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.79330835 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.794211979 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.795967315 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.79384375 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.795474852 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.79506547 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.797730748 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.800697428 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.794238862 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.798589271 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.795455874 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.794109807 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.79437036 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.793174819 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.793077253 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.7941978 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.797580747 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.802947714 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.805909951 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802532111 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.795770987 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.798092759 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.7958702 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.800074992 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.798746805 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.794577831 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.795257429 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.795029617 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.794814894 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.796026028 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.796239418 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.795767297 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.794537645 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.797053798 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.794394905 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.796404784 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.794837412 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.797338417 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.796406372 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.793758963 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.796155397 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.796858241 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.795471605 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.792562971 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.79616504 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.795526574 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.795507134 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.796594399 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.801217458 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.793165735 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797215194 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.797068816 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.796796314 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.795316324 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.796914335 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.797746504 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.796156798 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.802795575 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.796208882 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.796035258 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.802891095 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.796940314 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.795915779 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.796611822 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.796343056 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.79307996 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.798490203 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.804822001 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.795907649 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.798604222 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.798876418 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797431421 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.798421316 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.801815732 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.794124667 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.798334259 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.796500531 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.79821878 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.793664092 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.798646407 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.797044255 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.799985023 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.800277252 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.797801778 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.797853065 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.796725408 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.800071378 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.79963262 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.799516068 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800500454 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.805225247 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.802057087 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.797349564 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.798227938 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.798668819 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.801893832 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.795264163 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.798642457 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.79703739 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.809714697 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.80767098 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.80347541 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.800328611 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.797656204 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.801471443 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.798741581 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.802061506 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798375162 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.798008279 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.797104763 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.79671641 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.796676124 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.797614135 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.799421505 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.79835747 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.798288515 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.804088829 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.798689145 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.80052825 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.800301514 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.802119978 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.799457121 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.799484559 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.800344981 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.800332446 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.803293392 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.797431064 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.800863982 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.805587383 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.798540481 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.801538622 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.79963255 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.798937147 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.799338757 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.799740648 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.801585405 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.802371987 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.809037269 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.801529911 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.809985774 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.79982669 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.809127439 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.799762614 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.803656982 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.810379944 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.796686836 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.797215854 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.800205538 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.801414192 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.80506472 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.80098748 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.80244034 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.805541818 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.801804133 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.802545215 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.802876686 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.802302686 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.802778555 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.801133361 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.808126482 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.803386517 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.805569267 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.804491463 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.798071386 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.803415335 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.801811675 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.799629845 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.804775857 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.80202802 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.803413929 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.801846563 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.801916625 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.8011631 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.802607342 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.801290322 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.798826039 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.8017881 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.809023727 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.803847723 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.806651389 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.802691861 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.807344719 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.803211983 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.807834219 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.802384487 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.805650869 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.805646751 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.803667901 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.805330673 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.804442554 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.803219028 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.804435326 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.805692987 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.806279563 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.805999503 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.80745947 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.804448194 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.806457137 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.803781675 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812475458 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.82928015 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.803747817 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.808247264 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.800723059 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.805932104 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.809512073 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.804399444 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.802766722 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.808414735 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.816188481 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.811386 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.803896795 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.805029533 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.805449073 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.806720305 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.804888927 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.804729312 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.80531039 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.8027839 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.803619297 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.804852055 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.808874372 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.804678291 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.80657098 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.807976469 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.808129789 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.814391969 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.806392479 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.805408671 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.807739421 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.805415494 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.806434641 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.806507031 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.807135945 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.806042076 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806716213 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.807679118 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.813079132 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.814307953 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.809640736 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.80454097 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.807157918 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.805870687 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.806447557 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.808239519 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.808342303 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.806794544 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.809556271 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.806384832 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.80596257 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.805716712 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.805568815 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.806432103 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806218874 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.808446358 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.81438834 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.804896877 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.805152942 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.806227103 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.806488626 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.805543873 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.805794027 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.811835661 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811137765 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.816150051 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.815763879 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.810974571 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.807606095 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.80947354 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.815692444 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.804517187 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.808938325 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.808443566 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.807099295 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.807869247 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.811338881 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.807748717 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.814082167 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.806055671 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.808696292 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.814671149 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.808916508 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.807915513 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.809823432 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.811315991 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.808599475 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.805271084 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.809774616 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.80843894 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.814307444 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.808888456 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.810533844 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.81190623 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.80787115 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.809775542 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.816163445 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.809940202 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.810467579 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.806772401 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.810023573 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.811177262 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.80944123 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.806745593 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.810094905 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.808354371 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.812838204 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.816559103 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.806893688 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812048774 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.808578657 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.812584679 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.81064542 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.810657343 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.808037766 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.806337445 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.810523986 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.8119765 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.810768097 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.813842563 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.810446989 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.810905348 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.810828362 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.810547207 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.815256397 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.823195102 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.819767627 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.810474275 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.810518855 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.810161754 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.8149123 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.811619869 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.811991929 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.812381485 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.812730571 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.81182227 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.812046562 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.811263025 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.813874573 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.825798937 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.811912584 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.810464579 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.810742728 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.815092363 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.811478733 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.809207399 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.81209358 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.814800631 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.815060464 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.822839423 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.814658797 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.818441004 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.81147645 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.81438159 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.817117495 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.815197439 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.82086046 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.815999969 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.813234974 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.81421933 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.819051852 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.832834728 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.812527998 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.823314506 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.842060375 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.812814226 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.815567214 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.815565036 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.813054835 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.814674906 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.814412614 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.814009513 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.812591459 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.814269399 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.814092624 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.81399129 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.82045458 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.815188339 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.814371234 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.813661821 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.812629453 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.813453648 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.809612922 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.814681495 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.813740449 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.814033507 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.816303038 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.815219812 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.813708677 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.82551329 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.823576871 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.813755937 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.816286985 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.81170142 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.81786834 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.816684145 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824874968 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.821207351 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.815179026 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.815506355 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.816185227 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.815655453 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.81188109 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.8166262 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.81441189 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814605843 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.812487808 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.8275015 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.825692765 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.820183823 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.816975871 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.815958667 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.81647075 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.816123056 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.816794602 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.81617122 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.818143421 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.816857951 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.820622573 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.81603816 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.817211124 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.819622223 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.825204474 seconds)
  done (took 1075.529786975 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.814796214 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813909466 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.8152477 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.813648442 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815093078 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813862208 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814026948 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.814796799 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.815056347 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.812331885 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.813860161 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814860777 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.813146069 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.813974737 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.8151668 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.815097827 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813928456 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.814649015 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.813513513 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816176062 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.815162526 seconds)
  done (took 39.848000869 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.816935944 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.814775717 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.814775778 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.818714894 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.814778587 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.818355159 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.815525893 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817267107 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.818293418 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816446722 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.818004503 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81881424 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.814181539 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.814801911 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816940747 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.816391574 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.817894119 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.814839863 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.817369424 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.816195499 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.818292809 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.816700894 seconds)
  done (took 41.71366395 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.821215786 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.819994967 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.818223739 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.815735984 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.820457524 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.817212323 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.818792171 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.820461825 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.819605706 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.81822501 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.817350703 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.819835204 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.823947352 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.825081816 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.818508387 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.819447228 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.961858675 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.819052896 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.820343389 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.820254654 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.817281982 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.822630935 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.817441275 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.815118731 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.819513746 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.821351612 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.818815779 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.819746435 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.819694117 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.82189265 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.825039043 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.820032072 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.819728033 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.821827033 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.818366923 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.820278843 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.823482058 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.818479738 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.818240924 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.820193567 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.829602274 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.841633407 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.820256756 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.827383433 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.819950053 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.821196808 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.822432915 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.829698627 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.81753321 seconds)
  done (took 91.114850245 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.821538491 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.820149607 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.818191019 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.821757209 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.822212444 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.822373525 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.820730656 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.822186231 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.818900638 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.818882441 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.82225752 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.817990665 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.819613484 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.820478127 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.819860881 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.819985016 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.818892651 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.818836196 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.820541921 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.818639128 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.819169351 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.821270524 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.823701443 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.82129591 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.822770433 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.820588288 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.819037181 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.82196287 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.820126486 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.820931303 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.823364571 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.821802148 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.824088256 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.820591635 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.82082002 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.822734602 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.824042228 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.820570457 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.82285125 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.819863508 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.823380793 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.823681371 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.823628685 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.823559751 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.820128439 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.821544382 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.821042827 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.821754822 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.821360857 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.823217076 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.822969275 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.820472808 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.822268722 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.821438047 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.822884314 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.82235179 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.821989975 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.819483624 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.823786274 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.821836195 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.820809653 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.823988992 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.82277294 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.82407025 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.823561148 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.820301443 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.823139079 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.824901713 seconds)
  done (took 125.615211564 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826371655 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.824750924 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.826289038 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.826347893 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.824380119 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.825923573 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.826071436 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.825194136 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.825594763 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.826722906 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.826451335 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.825430768 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.826816774 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.825694396 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.826850561 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.827521836 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.826623156 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.828325665 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.827153467 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82723084 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.828366407 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.827059414 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.827102037 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.826504323 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.826393222 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.827009435 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.828067113 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.826340707 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.827055194 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.82744144 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.828204649 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.828322701 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.827250205 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.828484303 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.828232441 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.826502075 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.827930958 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.829159368 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.829245253 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.826534766 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.829853158 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.828017689 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.829538354 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.829508671 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.829357163 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.827870055 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.829103208 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.830600913 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.827643022 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.827667214 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.829109021 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.828617435 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.829751477 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.830076163 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.828338941 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.829007238 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.827563535 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.829306482 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.829403148 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.82945367 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82868351 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.829050805 seconds)
  done (took 115.07116568 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828407937 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.827263729 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.825104784 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.824557823 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.827646835 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.825244846 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.830199829 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.828588497 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.829575064 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.82684789 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827688391 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.824956433 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828570528 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828361037 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.825546804 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826481225 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.827836851 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.825635806 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.827562244 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.825961254 seconds)
  done (took 38.299111641 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.827163325 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.829375824 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.826989104 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.828561914 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.830151927 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.828119856 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.828413068 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829767299 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828584892 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830859223 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.829722805 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.830776526 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.827808066 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.829764729 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.830444135 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.827836091 seconds)
  done (took 31.022144657 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.827509842 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.830708595 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.832823382 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.832134074 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.829374499 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.827774483 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.829311235 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.827146736 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.82728296 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.830863512 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.830991609 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.831340659 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.830378786 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.830890312 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.828689158 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.83134152 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.827528965 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.828677052 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.829719922 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.830209809 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.831083719 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.828745906 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.831107456 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.831542823 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.826969736 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.826879839 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.828393907 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.826488229 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.828023289 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.829981547 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.828511304 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.827150776 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.828453532 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.827297181 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.830830536 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.829754675 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.831348645 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.832401516 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.831528433 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.832691421 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.833453656 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.829472559 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.833222436 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.832761686 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.830021383 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.833308294 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.829157908 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.830805342 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.829821333 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.82852984 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.833656722 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.833691933 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.834396948 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.83330691 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.833444876 seconds)
  done (took 102.423978456 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83291203 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.833104257 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.830730871 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.834870191 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.833116682 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.830725159 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.830792033 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.831534495 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.829584517 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.831324182 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.83021733 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.832494823 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.828223766 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.832804942 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.831562589 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.832039861 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.829395799 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.831243164 seconds)
  done (took 34.72895387 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.831587745 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.830763571 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.833037452 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.830273232 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.831125381 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.834786529 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831598809 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.833753264 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834667781 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.832622738 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831045849 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.834048248 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833627015 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.83492934 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.831083909 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831793819 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.835352645 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833661081 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.830184427 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.830444416 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.833460063 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.833794525 seconds)
  done (took 42.080251398 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.834062726 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.832909849 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.849379284 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.855539247 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.854451493 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.867530565 seconds)
  done (took 12.856872344 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834097498 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834166514 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.833531175 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836995517 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834399431 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832208533 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834002114 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833132781 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83603744 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834461749 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833962733 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837183515 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835212637 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832511996 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835208694 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836452749 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832991681 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831953178 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832974874 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835373295 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832572368 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835901152 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832865696 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832013815 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833121368 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834878794 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836952337 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832491247 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832264924 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836258079 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836692826 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834931108 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837944311 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835093117 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837399328 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83663939 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833078009 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837873945 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838761678 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836058588 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.838581097 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836264308 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836973302 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834023901 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837186719 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835491972 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833910852 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836639907 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836986533 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839881357 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838593583 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835443167 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838466455 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840521736 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83919088 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839853236 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836079905 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835550398 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837736188 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835930961 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835988425 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838889979 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836043495 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837808669 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839373133 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836551604 seconds)
  done (took 122.922839958 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835663481 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836720836 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835988677 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838569279 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836333093 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837426312 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837416207 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8366413 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835195812 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837542449 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840048758 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83745565 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836432807 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835978754 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836035687 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838870483 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838358063 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835964225 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836106655 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840423177 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838010932 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837725974 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837200344 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838133093 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838742821 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840394613 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838144211 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838880006 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835868572 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837278058 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838384169 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837063503 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840213432 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.838162241 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839376735 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837997386 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839078654 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83818862 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838155918 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841194176 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838820089 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841873539 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839095799 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837187523 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838616525 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840007549 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838523765 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838765442 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838902673 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839641753 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838291988 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839802862 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840888137 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84071863 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837688982 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838759636 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840060615 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840405954 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839286714 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842231598 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837322722 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839374032 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841560265 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83932419 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840689887 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840578902 seconds)
  done (took 123.109494562 seconds)
done (took 2507.183025924 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.860442006 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.887864193 seconds)
  done (took 15.518452604 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.005821123 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.958140386 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.842578955 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.871460813 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.840430808 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.866810678 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.857401299 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.840837754 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.84226253 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.842770036 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.840716739 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.030942528 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.844263127 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.839420356 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.84414894 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.935932726 seconds)
  done (took 51.888075762 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.846595546 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.84667043 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.859584951 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.850544548 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.846548285 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.859136215 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.87825202 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.850388105 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.878949809 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.857552757 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.916527418 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.854957989 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.844577691 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.892985359 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.860951225 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.860970273 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.93158466 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.919233882 seconds)
  done (took 35.429897108 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.922292459 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.847498036 seconds)
  done (took 10.550678065 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.851446176 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.853077213 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.8461885 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.839632292 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.859625619 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.845699815 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.855021373 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.877972851 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.877057004 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.874199058 seconds)
  done (took 70.35756066 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.851066923 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.848437717 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.84746145 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.847481334 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.839967152 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.84010449 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.848827133 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.841684873 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.52675485 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.878002319 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.85018909 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.853227214 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.847051903 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.848817413 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.847186072 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.872164768 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.971944439 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.845875755 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.84488184 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.853997526 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.848482848 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.945247007 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.857014605 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.844598035 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.878676046 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.529744473 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.853887254 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.855744333 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.96886097 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.845930836 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.847243636 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.851773634 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.850883191 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.229601642 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.149472565 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.846627669 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.855481906 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.853410788 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.845920849 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.991480096 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.848193002 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.855771493 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.787959602 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.125880192 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.951547557 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.888932051 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.205416638 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.85047876 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.851466208 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.878754071 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.848354677 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.852385495 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.861292574 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.366986714 seconds)
  done (took 131.508418582 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.84662609 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.143396141 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.996016273 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.840860882 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.116560987 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050924606 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.845399099 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.894549962 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.846534295 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.048386254 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.008232104 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.953035553 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.846829696 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.841485658 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.839798663 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.841169848 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.007831082 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.913917204 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.845030267 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.84172356 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874468367 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.057615494 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.976712931 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.849230459 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.865352419 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.05621203 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.967429785 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.955148384 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.124181543 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.844286505 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.910314521 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.844049733 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.845025918 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.842412091 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.002938921 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.945315743 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936592319 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.843654896 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.840802321 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.841806463 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.507132483 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.043670083 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.94374575 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.986585478 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.039343198 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.048370872 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.488266415 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.84405009 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.48150797 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.009433353 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.063267498 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.055552844 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.969618926 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.846998937 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.073214839 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.842937422 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.84194005 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.082983691 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.991654507 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.954328267 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846013062 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.84722047 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.843508742 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.093197569 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.846777897 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.945548668 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.844668206 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.843213456 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.948540389 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.955410791 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.986830879 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.059913604 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.883784589 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.730024729 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.35815453 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.06482601 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.914599047 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.085047194 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.84646149 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.842654991 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933859185 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.595157197 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.00728947 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.094435001 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.068394046 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.880888138 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.453390139 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.84638462 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.039099274 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.032040764 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.041174794 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.070309015 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.998548771 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.055652121 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.84906825 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.84637878 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.066523866 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.983273615 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.849101509 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.206221724 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.080991016 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.472654525 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.872461711 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.144513744 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.982533142 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.226848516 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.474148487 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.850346857 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015531475 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.888197785 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.847759629 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.847498837 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.040212237 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.654846121 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.849944899 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.368859903 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.911797599 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.85206412 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.052190719 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.849056137 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.05914186 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.850580496 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.087674789 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.958831795 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.88355065 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.024113542 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.061508057 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.641524137 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.100981308 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.0927962 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.967243988 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.075428253 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.436464199 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.850996589 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.124088167 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.850001486 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.850003485 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.018936648 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.851869454 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.997269354 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.851702311 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.080112726 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874317354 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006006139 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.85067492 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.085213827 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.886021762 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.901520201 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.853025633 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.980517626 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852784768 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.73212086 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.007684639 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.849001742 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.848508688 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.282600801 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.848367257 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.996908131 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.086050602 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874216178 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.921242506 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.373024664 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.852002579 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938762336 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.875171099 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.317570043 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.850641737 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.007916198 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.795610956 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.281392833 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.852579492 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.093052314 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.036142482 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.855467062 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.851461524 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.595668563 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.537210915 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.850592879 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.012055826 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.329329059 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.492787476 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.055617044 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.851073973 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.978663295 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.857385083 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.922847847 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.196894264 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.849236699 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.850927348 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.851900039 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.852813317 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.850480491 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.060509129 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.884321043 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.347920541 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.990827433 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.071102653 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.160457394 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.071111984 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.894350721 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.855019655 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.118636415 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.853561744 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.91633549 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.851302127 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.877928248 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086503817 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.851993055 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.065765972 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.103011257 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.788695495 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.905862446 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.854349471 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851597992 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.85038485 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.00395961 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.948372283 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.853344764 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.8540293 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.967097846 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.986374238 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.046463816 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.44331769 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.028739087 seconds)
  done (took 893.695936082 seconds)
done (took 1210.71889127 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.85414344 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.854420585 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.840932974 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.856481848 seconds)
  done (took 29.194117392 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.862647561 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.859694219 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.862853435 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.85879069 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.862640542 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.861820203 seconds)
  done (took 12.956128686 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.904550003 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.852974162 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.855781692 seconds)
  done (took 21.402027558 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.930991163 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.268484659 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.964148676 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.342160276 seconds)
  done (took 10.295784756 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.862891001 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.862579858 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.862644543 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.861639133 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.864570407 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.864192814 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.862124867 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.865035031 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.865893571 seconds)
  done (took 18.563629959 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.22239736 seconds)
done (took 98.422549095 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.178965192 seconds)
    (2/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.988431719 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.932025594 seconds)
    (4/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.917294469 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.995784863 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.074464425 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.842292432 seconds)
    (8/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.861722638 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.228861468 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.989647289 seconds)
    (11/309) benchmarking ("sort", Float64, false)...
    done (took 5.645641041 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.898661606 seconds)
    (13/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.442899431 seconds)
    (14/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.854496767 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.9465468 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.237810394 seconds)
    (17/309) benchmarking ("sort", BigInt, false)...
    done (took 6.85688839 seconds)
    (18/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.195053039 seconds)
    (19/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.01292071 seconds)
    (20/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.866391296 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.193062293 seconds)
    (22/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.400473978 seconds)
    (23/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.91354361 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.07304715 seconds)
    (25/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.799879015 seconds)
    (26/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.957788678 seconds)
    (27/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.940938461 seconds)
    (28/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.837596596 seconds)
    (29/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.921680887 seconds)
    (30/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.424349005 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.964114864 seconds)
    (32/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.001656252 seconds)
    (33/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.159789221 seconds)
    (34/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.840354022 seconds)
    (35/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.114923235 seconds)
    (36/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.856643546 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.963893742 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.87929634 seconds)
    (39/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.965577276 seconds)
    (40/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.873527434 seconds)
    (41/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.944600846 seconds)
    (42/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.05266211 seconds)
    (43/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.027670953 seconds)
    (44/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.968205063 seconds)
    (45/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.519712654 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.963059945 seconds)
    (47/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.882643059 seconds)
    (48/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.884590044 seconds)
    (49/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.803766539 seconds)
    (50/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.981958025 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.154249039 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.843043373 seconds)
    (53/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.869398392 seconds)
    (54/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.092509535 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.72793419 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.967727423 seconds)
    (57/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.263243367 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.114705776 seconds)
    (59/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.920949995 seconds)
    (60/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.859019755 seconds)
    (61/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.983750865 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.882043723 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.908047756 seconds)
    (64/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.954473872 seconds)
    (65/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.0027464 seconds)
    (66/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.272716672 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.916943546 seconds)
    (68/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.753133973 seconds)
    (69/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.042694998 seconds)
    (70/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.250835203 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.22920094 seconds)
    (72/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.363225217 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.515756634 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.892216781 seconds)
    (75/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.068373967 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.159592742 seconds)
    (77/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.864933675 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.447558519 seconds)
    (79/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.210603523 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.652304699 seconds)
    (81/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.876679452 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.963071421 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.9678181 seconds)
    (84/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.456994108 seconds)
    (85/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.464157304 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.507918911 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.545586722 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.544409856 seconds)
    (89/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.395420265 seconds)
    (90/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.944478029 seconds)
    (91/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.113681847 seconds)
    (92/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.845509291 seconds)
    (93/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 8.328142335 seconds)
    (94/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.886765056 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.023622669 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.227237803 seconds)
    (97/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.993404378 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.863499642 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.900068295 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.203060083 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.426089985 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.31007154 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.847775848 seconds)
    (104/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.218664381 seconds)
    (105/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.845274991 seconds)
    (106/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.990254372 seconds)
    (107/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.992047933 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.103846584 seconds)
    (109/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.021602293 seconds)
    (110/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.321862549 seconds)
    (111/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.490083194 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.075460429 seconds)
    (113/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.972166642 seconds)
    (114/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.863222725 seconds)
    (115/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.055188732 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.029343547 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.861752869 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.124167231 seconds)
    (119/309) benchmarking ("sort", Float32, false)...
    done (took 5.638075845 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.938459455 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.102906706 seconds)
    (122/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.459022216 seconds)
    (123/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.041642394 seconds)
    (124/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.893931259 seconds)
    (125/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.522462359 seconds)
    (126/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.611240333 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.958468395 seconds)
    (128/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.174887791 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.75589341 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 2.31411885 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.886859217 seconds)
    (132/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.722045251 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.115021822 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.145980082 seconds)
    (135/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.948248435 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.781885954 seconds)
    (137/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.852877865 seconds)
    (138/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.338086772 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.086426667 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.143879408 seconds)
    (141/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.988879907 seconds)
    (142/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.949059257 seconds)
    (143/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.237296375 seconds)
    (144/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.893398426 seconds)
    (145/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.9495744 seconds)
    (146/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.37160293 seconds)
    (147/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.384589606 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.965707591 seconds)
    (149/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.170363784 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.807452125 seconds)
    (151/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.158702044 seconds)
    (152/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.007529746 seconds)
    (153/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.852268679 seconds)
    (154/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 9.623431084 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.177045204 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.524722938 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.888220484 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.867546976 seconds)
    (159/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.211586247 seconds)
    (160/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.743832798 seconds)
    (161/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.881941051 seconds)
    (162/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.864056851 seconds)
    (163/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.545380814 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.531919744 seconds)
    (165/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.853756221 seconds)
    (166/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.972421983 seconds)
    (167/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.893677594 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.889798144 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.193710649 seconds)
    (170/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.850812676 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.227508033 seconds)
    (172/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.968900522 seconds)
    (173/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.012925402 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.068615331 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.136295742 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.964831394 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.246472355 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.165456902 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.85710616 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.8223889 seconds)
    (181/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.982166803 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.851026592 seconds)
    (183/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.071373538 seconds)
    (184/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.93669072 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.850984932 seconds)
    (186/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 3.586912322 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.84901404 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.972901876 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.868451363 seconds)
    (190/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.974274468 seconds)
    (191/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.970238365 seconds)
    (192/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.149911278 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.908266761 seconds)
    (194/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.229442361 seconds)
    (195/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.178713248 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.156721856 seconds)
    (197/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.960461064 seconds)
    (198/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.859628989 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.937109927 seconds)
    (200/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.925368669 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.798646574 seconds)
    (202/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.873841542 seconds)
    (203/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.851897202 seconds)
    (204/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.905710221 seconds)
    (205/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.002020134 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.227634464 seconds)
    (207/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.871257032 seconds)
    (208/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.114181537 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.92926167 seconds)
    (210/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.03943138 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.260849785 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.92222489 seconds)
    (213/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.181709941 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.872058702 seconds)
    (215/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.983263646 seconds)
    (216/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.895704038 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.872311033 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.093898755 seconds)
    (219/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.009932547 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.645559986 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.085242235 seconds)
    (222/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.868772091 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.288029708 seconds)
    (224/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.374884647 seconds)
    (225/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.181597555 seconds)
    (226/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.036179384 seconds)
    (227/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.466377435 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.125913117 seconds)
    (229/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.897911556 seconds)
    (230/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.153495307 seconds)
    (231/309) benchmarking ("sort", Int8, false)...
    done (took 4.869011801 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.251496026 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.952586314 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.894154752 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.869901362 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.995911633 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.893881925 seconds)
    (238/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.309568179 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.918757267 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.165942533 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.878089281 seconds)
    (242/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.027441133 seconds)
    (243/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.01389281 seconds)
    (244/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.630618373 seconds)
    (245/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.962562869 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.75104122 seconds)
    (247/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.95899361 seconds)
    (248/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.202586465 seconds)
    (249/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.22107024 seconds)
    (250/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.708149809 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.640882374 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.867983586 seconds)
    (253/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.979620794 seconds)
    (254/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.053642261 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.869509381 seconds)
    (256/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.272721559 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.869502055 seconds)
    (258/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.711051301 seconds)
    (259/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.939122789 seconds)
    (260/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.874727281 seconds)
    (261/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.121419294 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.97301965 seconds)
    (263/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.788610197 seconds)
    (264/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.954744209 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.161267871 seconds)
    (266/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.756574047 seconds)
    (267/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.903240391 seconds)
    (268/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.052864042 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.903139436 seconds)
    (270/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.220360116 seconds)
    (271/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.171386439 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.944395234 seconds)
    (273/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.856363019 seconds)
    (274/309) benchmarking ("map", identity, Float32, true)...
    done (took 3.448527545 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.259856714 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.19369694 seconds)
    (277/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.715544104 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.749274339 seconds)
    (279/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.394161816 seconds)
    (280/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.976834375 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.04521016 seconds)
    (282/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.863274341 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.011346742 seconds)
    (284/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.394594729 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.170546597 seconds)
    (286/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.072530528 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.878243878 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 8.177716929 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 3.24138572 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.95329852 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.987953446 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.859781511 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.676473816 seconds)
    (294/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.872495645 seconds)
    (295/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.930609071 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.175604678 seconds)
    (297/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.902491286 seconds)
    (298/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.089819489 seconds)
    (299/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.896958756 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.914072839 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.177535098 seconds)
    (302/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.049564765 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.982782726 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.871926353 seconds)
    (305/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.172930009 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.155590043 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.987883901 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.768109169 seconds)
    (309/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.079616771 seconds)
  done (took 1016.346437122 seconds)
done (took 1018.202047815 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.905926271 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.90020066 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.886627834 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.907064535 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.996018223 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.915570988 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.895293341 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.887233787 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.930652384 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.935066521 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.885175699 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.917996435 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.88193241 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.884623567 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.882500438 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.898889709 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.191170223 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.909632455 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.903668547 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.894854053 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.90102226 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.881938741 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.937056321 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.916735995 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.888535425 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.889002754 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.886959005 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.907610229 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.996046656 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.888060399 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.88752265 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.895419587 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.192866698 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.90853889 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.881593122 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.907822794 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.895861341 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.897916042 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.889590484 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.918124169 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.332481679 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.890235913 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.889814212 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.888388925 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.887947782 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.890193856 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.887646486 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.893433627 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.900736642 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.902952353 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.329305796 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.905150375 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.890456655 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.88980898 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.900784776 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.888588593 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.893760574 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.90398295 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.90842677 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.903783802 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.182030471 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.914930136 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.891522725 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.907609278 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.895746166 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.368323674 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.890017138 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.891233085 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.328256971 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.897674153 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.36579255 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.899771837 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.891452168 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.901434547 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.919560076 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.195824682 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.908232469 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.888452656 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.898685692 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.887904839 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.897537175 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.903220263 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.895601453 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.889690602 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.903645005 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.92280301 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.898513585 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.889344217 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.897892068 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.911661717 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.893906203 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.903168056 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.892247024 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.882917114 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.896937347 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.89533913 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.888953183 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.894330783 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.893560424 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.902260431 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.32762946 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.910070488 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.887048071 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.886776096 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.888865131 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.904750901 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.329346139 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.893625429 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.910442614 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.938105289 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.890078433 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.183365361 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.917112805 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.906770229 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.900354542 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.897131907 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.884624484 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.18384292 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.356464186 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.911178315 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.893129434 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.890257856 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906613533 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.896052661 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.888735621 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.200128756 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.916469792 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.905182794 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.012354057 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.900374097 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.921312994 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.892168197 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.893109863 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.921198387 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907138626 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.923475002 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.894738564 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.905692931 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.908522287 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.887430962 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.906066115 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.903632978 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.89177609 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.898189638 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.886765012 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.920711709 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.902438641 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.903458298 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.912647095 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.011141199 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.888266704 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.186042933 seconds)
done (took 296.830805696 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.961630003 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.889664808 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.985475095 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.889254236 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.978205606 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.980003882 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.888289373 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.886073462 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.888730396 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.27173484 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.886943857 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.887800344 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.88420322 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.889143599 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.973249314 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.892262069 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.886506031 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.234927001 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.892777818 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.962493163 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.887845947 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.887092805 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.891731265 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.27368812 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.892570005 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.896764102 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.96653991 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.891458717 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.240410361 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.884223318 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.884709679 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.242321842 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.986433295 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.910967254 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.899280755 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.898878838 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.978173644 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.898236346 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.978977273 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.974249568 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.99198119 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.932904736 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.889059668 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.891519738 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.897989312 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.892295127 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.890609378 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.918535364 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.886127154 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.889471161 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.234142552 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.901747353 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.88939897 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.889503671 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.888835143 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.925546054 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.889680972 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.893188362 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.984107128 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.892603327 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.956361101 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.277571304 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.273065138 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.896324103 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.894287094 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.891201284 seconds)
  done (took 185.848688101 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.961091413 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.970866303 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.962817952 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.903432179 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.388351191 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.967200249 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.900384503 seconds)
  done (took 15.872938141 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.898615602 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.894352588 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.940111315 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.943063419 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.893640885 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.043370507 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.893528064 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.90550244 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.891855913 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.94667455 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.895423838 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.893814088 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.901684017 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.886655741 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.944337589 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.907762643 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.007907217 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.895219441 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.895104354 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.04816862 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.891494653 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.899656937 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.949339656 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.906047404 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.896502034 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.900251009 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.477860348 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.895514957 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.891450619 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.895209135 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.892778133 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.938484149 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.895465189 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.893182454 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.893150124 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.008837809 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.894688769 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.89057092 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.894376932 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.887229124 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.89555126 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.894063458 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.893595442 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.892851452 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.895851063 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.918054782 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.894248287 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.894176807 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.896819339 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.893630111 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.945193275 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.894673977 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.892492857 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.894703313 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.94950603 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.903854977 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.898121319 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.893517469 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.896065741 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.895666387 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.051492296 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.945773393 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.896313799 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.94563937 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.896323113 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.896262849 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.897885783 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.896203367 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.952806655 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.897405035 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.945143278 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.894988408 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.057207855 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.921932864 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.898180289 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.901151396 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.900266918 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.898508339 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.893597235 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.905472117 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.896882458 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.898608565 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.902217456 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.895515231 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.895713885 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.008471989 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.007554018 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.897471795 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.911016715 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.905435269 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.897202471 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.948726117 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.899537727 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.895555364 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.955535073 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.017037432 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.954052431 seconds)
  done (took 208.354145282 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.906196425 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.909224353 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.900060362 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.916006737 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.899362919 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.899761957 seconds)
  done (took 13.254535593 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.898919977 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.90120526 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.898505339 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.901797351 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.902138961 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.89794269 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.902397955 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.899954859 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.905049998 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.899344401 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.900237369 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.90263023 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.901527646 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.902601454 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.902789863 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.901557459 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.902123711 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.897948662 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.90066524 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.902085303 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.053242779 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.903289465 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.900323492 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.90206367 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.907707558 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.900706023 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.908720096 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.901537354 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.90026094 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.910671544 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.90448646 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.900530969 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.901413717 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.9084365 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.906817024 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.89986824 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.905016964 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.904290372 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.900286487 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.901732522 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.904798936 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.902201221 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.901769277 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.905435357 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.904798668 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.90604471 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.908930902 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.908230644 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.902662744 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.903277566 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.906175121 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.90030821 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.901393172 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.905454122 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.905864062 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.907906931 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.909887537 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.905393266 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.901420995 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.901476063 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.904270654 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.903466169 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.904662119 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.910724066 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.908644791 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.904553397 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.901739667 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.909165184 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.901835277 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.901586204 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.90490554 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.902234186 seconds)
  done (took 140.024179975 seconds)
done (took 565.18437514 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.146334902 seconds)
  done (took 8.974424974 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.983211698 seconds)
  done (took 8.902233082 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.448115828 seconds)
  done (took 10.277445773 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.915263327 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.91378483 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.909261191 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.903941051 seconds)
  done (took 29.479968919 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.960241229 seconds)
  done (took 8.790725722 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.909258302 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.894392336 seconds)
  done (took 15.668465511 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.964130726 seconds)
  done (took 8.793522941 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.051029581 seconds)
  done (took 8.885706361 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.922052975 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.913326137 seconds)
  done (took 15.678541927 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.883254737 seconds)
  done (took 8.712944159 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.613035013 seconds)
  done (took 11.452509087 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.904439117 seconds)
  done (took 8.747588038 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.959218665 seconds)
  done (took 8.79042097 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.109962833 seconds)
  done (took 9.939316417 seconds)
done (took 164.921125826 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.90310481 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.904048744 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.90279272 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.899902277 seconds)
  done (took 29.438724696 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.936860065 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.9362959 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.941045202 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.948899207 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.942870178 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.939745559 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.930336318 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.930747813 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.949489401 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.942607442 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.939512564 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.943053688 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.938493594 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.93181826 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.939097343 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.942074033 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.948436 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.939603044 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.932051436 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.941070277 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.905826575 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.94931353 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.940763399 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.908658984 seconds)
  done (took 48.330403739 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.107310185 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.97918243 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.058987736 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.958930677 seconds)
  done (took 9.935365576 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.95458302 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.958046032 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.97154296 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.009657594 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.039418002 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.967032546 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.933730265 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.927168206 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.917563447 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.960287966 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.032772103 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.974637169 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.043165115 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.907428465 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.091929698 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.906268419 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.905554387 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.95892712 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.010432681 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.021320237 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.905637676 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.957678461 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.961340744 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.978327161 seconds)
  done (took 49.127346025 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.903689999 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.915708886 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.912290484 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.905325148 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.907169551 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.905641977 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.912878246 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.908346076 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.927106077 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.908687108 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.903260245 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.904955973 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.905853995 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.906490511 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.906004447 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.920788881 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.91892997 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.906830009 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.909170071 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.913067938 seconds)
  done (took 40.035035047 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.899750524 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.753294055 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.251975911 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.156266278 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.901429313 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.901529505 seconds)
  done (took 31.697060097 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.92414981 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.914938297 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.910511288 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.967193504 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.050325458 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.921986926 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.910288005 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.919966754 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.956528799 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.976929081 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.931556296 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.939029069 seconds)
  done (took 25.15738439 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.902655948 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.905437012 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.917613365 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.921131516 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.920678066 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.918049648 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.916866313 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.903122391 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.921394248 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.92586764 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.914217 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.922377566 seconds)
  done (took 44.829716377 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991409604 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.946884933 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.952899103 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.590004316 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.280294435 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113270366 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.55744035 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.248619803 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.906674186 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176118643 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.027862477 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007090531 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.162141654 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385342931 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.935494388 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.394534959 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.201009218 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12155609 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929573356 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.608245584 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968577216 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.07276892 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.689985534 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.964646906 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114560555 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.037759381 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.165335049 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.904604105 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041603627 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940220836 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916323053 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.905340787 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177517589 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286078927 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008274466 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916579845 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.527494932 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.624558242 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.898027713 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.681170812 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.642644026 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.027549824 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915982047 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904792875 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.838521205 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.038797442 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292714467 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.912397875 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.617267072 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.905688144 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917754961 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000854 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.910256754 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.721802777 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827880804 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.905245135 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.905073225 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915362968 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47817239 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.031778603 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.084706967 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.878480477 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.00106313 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.625700881 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299775152 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.05716669 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.910276696 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909425862 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843158361 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.694809004 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964193982 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256117997 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.926998735 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.558505607 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2115842 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.09791922 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848131201 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199878872 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.428782438 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.878431966 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136103338 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906186469 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843956048 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.85449944 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.84576797 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17379087 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946522092 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.667794498 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948902373 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.251473458 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.920183877 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930845133 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933658761 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.133204244 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.795239207 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91115699 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.768500041 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.061577358 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930966748 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255632307 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843448442 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.914559999 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168221285 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.121594238 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.97497863 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.420294687 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072842142 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.464794024 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.965468314 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.055013928 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.957949675 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.201155873 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971172925 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.038143913 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9661594 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.909083478 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21338012 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.488114113 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.049186461 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.046578897 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.038812201 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.246081032 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937405159 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993358215 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914710935 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.912275007 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.709693078 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.465516874 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.910175345 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.913380456 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.974365124 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.960184385 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.915059596 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859672791 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.540793357 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.033294135 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.925376673 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.13543627 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.476864838 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225734896 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847610147 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241274422 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.966532554 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.133987415 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.559702313 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.98389677 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174209796 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.97354911 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.997005835 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962538698 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93151486 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012406441 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934937282 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.049112647 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.209170714 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.916605366 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.917586047 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.707717917 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.949905215 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920186626 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.918017643 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.663708839 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187355268 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.938309099 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.921612792 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.804264664 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.926341907 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978203241 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.917817885 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.924091572 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.455063559 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.626045927 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.921016375 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.505827461 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140463205 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926099863 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.696062203 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031138224 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.005316007 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.185442165 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97433484 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.848765935 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.627240604 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.608009137 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914105915 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.851720364 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.916200857 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925523773 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927583409 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.111082294 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.220802201 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95869938 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.603641809 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.960489266 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923872076 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.920296914 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914652467 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.428483337 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.039424967 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.089776218 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.964331042 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058358321 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.929769337 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.848585359 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.919666411 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920726803 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.91647169 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.917942864 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949234299 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.638591615 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296011066 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1770338 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.566205697 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929968207 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.724465493 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.976866842 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.91880742 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.638890221 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.215413502 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.954959416 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929311733 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.929055666 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.677246411 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.625295293 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.482616533 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257839821 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223448275 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356970945 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.120565487 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.94513841 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.268931796 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852563838 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.47519347 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.97688999 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.269580803 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862555206 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006999422 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.563071067 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257452316 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931489126 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145536906 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313407059 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.731020204 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060708845 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.129748739 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953949174 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.056884104 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.879387114 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.442943146 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061718761 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.623489995 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124482909 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261989888 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.646910931 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.044073501 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.916653884 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.62401562 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005092787 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.634995234 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.091209076 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.087955366 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.953520801 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400278189 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.927675663 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.14575423 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277091815 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.068558242 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.046779898 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855795173 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.93255954 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.931107125 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.9223486 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.916933346 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.787687416 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.176058235 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928942587 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85280965 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.017593782 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.229600382 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.824469113 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.924516706 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917925257 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21721462 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.452949349 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09002783 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.003152466 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.441577071 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926647531 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.853942909 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853112334 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.612999227 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.92641801 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.894357234 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127477398 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.025844485 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.834263859 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.97995921 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.169075291 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.177479509 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.933595287 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.190296538 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.19687944 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.618347988 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945140321 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.019836844 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.648079694 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.030999731 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.920178772 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.156381454 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.676126362 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.147146093 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.969821647 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.883429941 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.919704887 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138065106 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.919194206 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.912933137 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15228787 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.64128407 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.03376182 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257461646 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998682342 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.906321425 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.966276839 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.017789651 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932352268 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000736146 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93156693 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.9321554 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.933015814 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970088548 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.910448999 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.046599948 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.93505743 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013923785 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.056897496 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.44644375 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.928137758 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197068852 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28334256 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.281610025 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983762469 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.922369308 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927160837 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858626372 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070911511 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.148314417 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196441895 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.055771472 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.04088694 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948575812 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.659994105 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.113377235 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166722116 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198888818 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.818821641 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.421239385 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.966782538 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.924412746 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934011131 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.134629828 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136416729 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22727566 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.063213562 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.9967184 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.301551405 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196901669 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.923828081 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.923714429 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.514588843 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.047133923 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.616776201 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.966692985 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.914212507 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200717836 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934215431 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.304654785 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.945285815 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.083961587 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.697636698 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.617077991 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.215990222 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.914593099 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.984757726 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.198400567 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.312448832 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240496717 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9932651 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935995478 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.04033034 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071479802 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.792420671 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.928569214 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925826459 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.975439231 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.635331382 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.934733542 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230402434 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239036575 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.924089024 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.810333878 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949029407 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.936218987 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.149196399 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19851813 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.18057091 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934637857 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.932667867 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.741201475 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.22281154 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986617062 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860075258 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.930331796 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023714354 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174407069 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947499484 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.379426255 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.638027287 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215866619 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.928374753 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947863691 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.074060179 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320356564 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270613698 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.464465043 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143226905 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.519061884 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.490823849 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231057096 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.932841203 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.073751789 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233369167 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.931797499 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.993315347 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969718554 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.197536344 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241344757 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.944228716 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.621761115 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.898676578 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.270961082 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.491223308 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867330097 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.938329131 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.992172135 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.93013057 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.060722087 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940481883 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.816937472 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.080661555 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.692421243 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204813322 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.933257694 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.923103813 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.709213808 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.201041279 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966504599 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074444554 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937572186 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.601035219 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.279763186 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.187305514 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.003731579 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.942393119 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.933720598 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93052564 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.916981956 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.125505512 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.12937454 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206382496 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.031864824 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.970869779 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934740831 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.147046148 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143731789 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.895890228 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067675798 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.99737825 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974950977 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.847750048 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.432805298 seconds)
  done (took 1699.502062899 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.944654284 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.946254752 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.009949616 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.006982896 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.983728253 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.022480472 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.123131249 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.965734123 seconds)
  done (took 57.867111696 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.933509063 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.132295769 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.942870924 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.939469627 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.939404784 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.932442302 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.099141815 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.940725512 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.939926894 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.941962016 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.931724132 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.932264044 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.249505879 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.954522745 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.932788836 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.917884995 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.938978542 seconds)
  done (took 75.491045239 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.970315996 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.008390923 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.956826985 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.944317898 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.89686407 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.936481612 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.766023441 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.955735779 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.931684115 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.160752404 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.565038731 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.945843301 seconds)
  done (took 90.905357815 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.943434235 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.938969833 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.939607359 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.93946309 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.939497606 seconds)
  done (took 11.571417716 seconds)
done (took 2215.743205272 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.187398788 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.148259875 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.170011088 seconds)
  done (took 6.184136348 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.085692863 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.130960194 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.250271536 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.274347717 seconds)
  done (took 10.612112263 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.224790442 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.321088391 seconds)
  done (took 6.413785803 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.335906253 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.94859899 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.319097879 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.935117105 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.936925215 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.9388978 seconds)
  done (took 22.688179521 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.939617848 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.943325916 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.940555549 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.941145662 seconds)
  done (took 9.634024453 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.924731113 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.614576196 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.922852031 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.93925517 seconds)
  done (took 21.270833042 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.691157831 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.699894758 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.685697395 seconds)
  done (took 9.948597241 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.385657203 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.824887112 seconds)
  done (took 9.082569847 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.197134647 seconds)
  done (took 4.068094996 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.073725995 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.250671087 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.415325532 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.442466161 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.526565708 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.619917315 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.258279668 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.178867859 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.355106168 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.37060331 seconds)
  done (took 25.362992575 seconds)
done (took 140.919975397 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.316794086 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.937750635 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.148962977 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.277717317 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.168775837 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.149368025 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.154923535 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.261986121 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.783220065 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.782101201 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.276297472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.193626997 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.084634886 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.183355889 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.083263307 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.175519884 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.172141351 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.34045501 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.968944709 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.170874643 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.140237018 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.916724998 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.116512731 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.929203923 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.171642037 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.105814508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.494592379 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.174686432 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.123031233 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.498065999 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.10226228 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.321760094 seconds)
  done (took 173.596662471 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.706653454 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.93878724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.937430922 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.937811488 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.391784367 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.936658738 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.940071619 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.935512297 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.107544127 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.091902869 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.939034333 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.374041445 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.939737655 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.93941947 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.940183394 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.938150319 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.267331328 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.769739138 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.948507127 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.950776966 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.956176746 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.320886349 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.956076568 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.370702331 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.2954612 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.957654938 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.939244811 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.955235856 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.942096406 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.94434875 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.951815993 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.938859727 seconds)
  done (took 210.333216006 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.940097634 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.939484498 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.939208545 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.941527004 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.944702393 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.946030224 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.94263611 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.940277747 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.654836042 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.650983982 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.948548121 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.945126668 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.950169262 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.940427966 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.943816891 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.940448685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.947788884 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.950716504 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.947104029 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.951077918 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.961016774 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.78767326 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.960900335 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.795239224 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.957271454 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.956873803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.942041369 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.958087706 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.952459237 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.953494656 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.958312122 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.941472192 seconds)
  done (took 223.320834843 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.139857919 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.948064241 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.949652496 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.882092246 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.94898121 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.947830213 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.944129614 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.139265763 seconds)
  done (took 19.799956655 seconds)
done (took 628.932000657 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.407421989 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.24453025 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.132030116 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.97325879 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.231900189 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.009033636 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.969726168 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.028570318 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.709065133 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.038861663 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.613968761 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.983703281 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.708448814 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.990101577 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.093869152 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.021574969 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.532031707 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.61923834 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.143980583 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.047142398 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.146220332 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.903255057 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.042152504 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.741028032 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.72590642 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.94702624 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.146124438 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.540318278 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.978981956 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.131545116 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.700595472 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.363340542 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.979008658 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.966049134 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.019581923 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.00345216 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.320127236 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.977305385 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.094804191 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.704005146 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.054161818 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.603204621 seconds)
  done (took 106.463822691 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.939825838 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.939239637 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.938218643 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.939971155 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.940370935 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.939676298 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.938728619 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.939255578 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.939480806 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.938962795 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.939897561 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.941425645 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.937432292 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.939375426 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.939226763 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.939366729 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.941224425 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.942853381 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.938573758 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.937786972 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.940993211 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.939875632 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.940281675 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.938219217 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.940112032 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.940929456 seconds)
  done (took 52.327576712 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.954634602 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.096726233 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.177161103 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.971068627 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.95207926 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.955288294 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.970651994 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.959437783 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.957357472 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.955864048 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.045436304 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.958750915 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.973425593 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.177104438 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.967274992 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.955172374 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.95180883 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.952626322 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.104169285 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.969062249 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.972472196 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.961810618 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.969525187 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.966557712 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.955336765 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.95260533 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.954933163 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.391706239 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.960605548 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.048229108 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.995116839 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.975380204 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.347350957 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.184948913 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.006167179 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.961259488 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.954000017 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.05396397 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.957664842 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.952552278 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.970981321 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.95566814 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.185630005 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.457662337 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.966650001 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.95410496 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.399554019 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.061787672 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.993473747 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.96598476 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.180941878 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.970692827 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.956144032 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.954788819 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.989924243 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.964451872 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.952397281 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.258542994 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.966291914 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.970716342 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.963881521 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.955311667 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.109473158 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.961941957 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.10046651 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.964560233 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.962248978 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.955342224 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.176764625 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.971408746 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.456813873 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.97824306 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.963050755 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.056869117 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.110410659 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.43013957 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.975974933 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.119669957 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.37140985 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.987777312 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.970556996 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.388938371 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.989883882 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.970765513 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.963038747 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.964060815 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.965216247 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.006329348 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.982474567 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.412041216 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.474563801 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.282596979 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.991842525 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.978289445 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.96622688 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.275346246 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.972940097 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.962730415 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.177723659 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.482697142 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.969146787 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.96530014 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.451593908 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.979913623 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.984306715 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.97383039 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.189516181 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.980811416 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.01011952 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.961786079 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.972400896 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.967421731 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.981239241 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.972840957 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.967319059 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.441731309 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.078096489 seconds)
  done (took 242.086789316 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.959433587 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.956609804 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.957750644 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.976315792 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.95355703 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.963213805 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.95862149 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.955289087 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.964341483 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.956104314 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.956158586 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.959265142 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.956376677 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.963805936 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.472621185 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.967735109 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.567159598 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.95975874 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.959329674 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.972788344 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.640566079 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.969276712 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.959364257 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.982003187 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.961107404 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.964575889 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.962123644 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.008832713 seconds)
  done (took 170.681812668 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.971313785 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.151860138 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.989066427 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.004602453 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.980491815 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.966873733 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.98755083 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.986403785 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.973411977 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.965978021 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.964766386 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.028973299 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.978883932 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.101877862 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.998519278 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.002491164 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.075798084 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.973707404 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.968367876 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.96602303 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.995828818 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.966179202 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.030019864 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.094590465 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.980752872 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.083099968 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.977826302 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.967856834 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.965192462 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.08404479 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.981662719 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.028435207 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.997730973 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.983721651 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.094894471 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.084958024 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.079408262 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.996028396 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.973018615 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.965212967 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.966134209 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.95627401 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.086482819 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.987460985 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.973198256 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.076307254 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.985527246 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.972026161 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.975311899 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.965021164 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.978091656 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.988834391 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.038962073 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.105298312 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.001165238 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.995063107 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.992382112 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.243871561 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.978929923 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.06668086 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.961187971 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.085490107 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.990033065 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.95599012 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.969193895 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.975113554 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.994813871 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.002526853 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.078392119 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.977277381 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.071999285 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.006960023 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.980314363 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.97065259 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.969843154 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.084229418 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.090381905 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.004243946 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.008276753 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.001049332 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.967286502 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.969562735 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.95792249 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.98395556 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.975478195 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.088643591 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.086488993 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.978647608 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.969508215 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.972978215 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.970343618 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.996940755 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.096560305 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.00556121 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.067761793 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.039255 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.045824522 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.98600068 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.980795069 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.974160176 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.036536514 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.989337074 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.986674052 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.297105217 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.04127448 seconds)
  done (took 213.242632685 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.426886931 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.026903781 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.029542892 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.250247747 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.406410478 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.760200318 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.017038173 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.024700836 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.045808463 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.183394636 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.08476343 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.033663302 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.009879893 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.993459765 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.019974577 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.042755049 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.022308182 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.296739493 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.147870977 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.137610598 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.00310862 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.322431374 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.347325569 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.399226123 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.054659366 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.346424148 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.701349884 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.26142419 seconds)
  done (took 64.30446056 seconds)
done (took 850.981426437 seconds)
SAVING RESULT...
DONE!
