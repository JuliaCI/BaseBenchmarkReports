WARNING: importing deprecated binding Base.Associative into Parser.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/nanosoldier/.julia/v0.7/JSON/src/Parser.jl:315
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/nanosoldier/.julia/v0.7/JSON/src/Parser.jl:315
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/nanosoldier/.julia/v0.7/JSON/src/Parser.jl:384
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/nanosoldier/.julia/v0.7/JSON/src/Parser.jl:395
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/nanosoldier/.julia/v0.7/JSON/src/Parser.jl:401
WARNING: importing deprecated binding Base.Void into Writer.
WARNING: Base.Void is deprecated, use Nothing instead.
  likely near /home/nanosoldier/.julia/v0.7/JSON/src/Writer.jl:266
WARNING: importing deprecated binding Base.Associative into Writer.
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/nanosoldier/.julia/v0.7/JSON/src/Writer.jl:276
┌ Warning: `using A.B` will only be allowed for modules, not single bindings. Use `using A: B` instead
│   caller = ip:0x0
└ @ Core :-1
┌ Warning: Replacing module `Compat`
└ @ Base loading.jl:350
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/nanosoldier/workdir/tmpnmN3IB/benchscript.jl:23
WARNING: Base.Associative is deprecated, use AbstractDict instead.
  likely near /home/nanosoldier/workdir/tmpnmN3IB/benchscript.jl:23
ERROR: LoadError: LoadError: MethodError: no method matching start(::Array{Int64,1})
Closest candidates are:
  start(!Matched::BenchmarkGroup) at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/groups.jl:37
  start(!Matched::AbstractString) at strings/basic.jl:141
  start(!Matched::Base.EachStringIndex) at strings/basic.jl:485
  ...
Stacktrace:
 [1] macro expansion at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/execution.jl:277 [inlined]
 [2] (::getfield(BaseBenchmarks.CollectionBenchmarks, Symbol("##47#48")))(::Type, ::String, ::Type, ::String, ::Array{Int64,1}) at /home/nanosoldier/.julia/v0.7/BaseBenchmarks/src/collection/CollectionBenchmarks.jl:115
 [3] #foreach_container#11(::Tuple{DataType,DataType,DataType}, ::Tuple{UnionAll,UnionAll,UnionAll,DataType}, ::Function, ::getfield(BaseBenchmarks.CollectionBenchmarks, Symbol("##47#48"))) at /home/nanosoldier/.julia/v0.7/BaseBenchmarks/src/collection/CollectionBenchmarks.jl:68
 [4] foreach_container(::Function) at /home/nanosoldier/.julia/v0.7/BaseBenchmarks/src/collection/CollectionBenchmarks.jl:63
 [5] top-level scope
 [6] include at ./boot.jl:292 [inlined]
 [7] include_relative(::Module, ::String) at ./loading.jl:521
 [8] include at ./sysimg.jl:26 [inlined]
 [9] include(::String) at /home/nanosoldier/.julia/v0.7/BaseBenchmarks/src/BaseBenchmarks.jl:1
 [10] top-level scope
in expression starting at /home/nanosoldier/.julia/v0.7/BaseBenchmarks/src/collection/CollectionBenchmarks.jl:113
in expression starting at /home/nanosoldier/workdir/tmpnmN3IB/benchscript.jl:23
