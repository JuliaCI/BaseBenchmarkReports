cset: moving following pidspec: 27342
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.320292442 seconds)
loading group "string"... done (took 0.481220196 seconds)
loading group "linalg"... done (took 7.775821981 seconds)
loading group "parallel"... done (took 0.173828447 seconds)
loading group "find"... done (took 1.184125651 seconds)
loading group "tuple"... done (took 2.11959176 seconds)
loading group "dates"... done (took 1.340438964 seconds)
loading group "micro"... done (took 0.247295464 seconds)
loading group "io"... done (took 0.67321875 seconds)
loading group "scalar"... done (took 41.254115467 seconds)
loading group "sparse"... done (took 12.82518698 seconds)
loading group "broadcast"... done (took 1.126851808 seconds)
loading group "union"... done (took 14.030889101 seconds)
loading group "simd"... done (took 4.815262437 seconds)
loading group "random"... done (took 9.69038683 seconds)
loading group "problem"... done (took 1.999254501 seconds)
loading group "array"... done (took 22.706187851 seconds)
loading group "misc"... done (took 1.452843035 seconds)
loading group "sort"... done (took 3.637566573 seconds)
loading group "collection"... done (took 19.574537954 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.524296354 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144621037 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.1386963 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.16327589 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.232385572 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158239129 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160045989 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101225797 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.720655792 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.186858853 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155379301 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.531630015 seconds)
done (took 5.969496275 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.242860481 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094490819 seconds)
    (2/2) benchmarking "String"...
    done (took 0.108308823 seconds)
  done (took 0.882564934 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078754329 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147928998 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096191455 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079648451 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096903487 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.096048011 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.081567599 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.095067025 seconds)
  done (took 1.374351514 seconds)
done (took 3.266293195 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.7489758 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.285457647 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.207723304 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.502232254 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.179343563 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214395447 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683256061 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.34748317 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.266978108 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10097565 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.148942231 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.3910853 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138268727 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679842153 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09257252 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127355766 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178333813 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.454572789 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08402835 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.11231485 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117539464 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143558447 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131824674 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093573007 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186436713 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.085480403 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.201329981 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108882241 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081720264 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288648068 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202044637 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.685679414 seconds)
  done (took 10.988122435 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117264454 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138289774 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098823151 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140472951 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137519926 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101695841 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085877573 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098667985 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123860226 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178205574 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132068588 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.125905155 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095722686 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.099491209 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.105935659 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247690542 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124307249 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120509537 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086680517 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106372737 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122575481 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115299 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111753445 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110601692 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166113832 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207296441 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112048245 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127812865 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098255242 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113395214 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144477625 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144404682 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096249146 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081455743 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174161851 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125723877 seconds)
  done (took 5.208870585 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195341465 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122149393 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.174550436 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.167095989 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150574326 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162480566 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118174848 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.250807896 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.130447732 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177721076 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.146096274 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101449341 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098549964 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085956969 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.142569241 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099430219 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.647389291 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.167337398 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.138571288 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120113742 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106825856 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.089466854 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366318517 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104072724 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080582689 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103933687 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066916697 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165414761 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100832709 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.192577434 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123937207 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100931325 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118453662 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210544285 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129179797 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122683237 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098521843 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097127735 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181695059 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089812585 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098278447 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108841665 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136388003 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13746167 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100426852 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098362913 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.21282518 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081954211 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115465589 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.01976621 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183196025 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096534756 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097250979 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.334500325 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098669702 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099792538 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07894917 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.306863244 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.142406278 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082836081 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09781746 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080804511 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.100700937 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386682558 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081043894 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.05651714 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083561673 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107505401 seconds)
    (69/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080309706 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099779038 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097075508 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089099934 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104543608 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098967474 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.09855882 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082588411 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098326877 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095915601 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084911224 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108795844 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086958085 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09739139 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161694302 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081160903 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095433899 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10060934 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13029096 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10124916 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08072362 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132388683 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102130416 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082363113 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.138507214 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098364034 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.092604425 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10196017 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144846048 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097783659 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.206811803 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095796902 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124783331 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079491109 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102045302 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131483754 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11162157 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084328051 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103640315 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079586309 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096796242 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161599786 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081247453 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098612279 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083501972 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112269094 seconds)
  done (took 23.343434226 seconds)
done (took 40.219155111 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.348341798 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10548157 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104287342 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105216877 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10270254 seconds)
  done (took 1.519236218 seconds)
done (took 2.246630481 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.28537337 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.176788555 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096755585 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169475816 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094750363 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.177866374 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1622338 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114057594 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.186683094 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096118405 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.165820345 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077416017 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096000782 seconds)
  done (took 2.650769863 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096823982 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117834991 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084004536 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112729667 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078095995 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112751975 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110956527 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102667216 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111806335 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086361323 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095077607 seconds)
  done (took 1.833640231 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095478919 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115015516 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083471015 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11217951 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077748088 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112468901 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094785513 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117947685 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111739209 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086405098 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095793349 seconds)
  done (took 1.825130386 seconds)
done (took 7.026814659 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.097748251 seconds)
  done (took 0.815936177 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.024111112 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.055503884 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.116605418 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.156661411 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.308084381 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.2021734 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.557337851 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.129533851 seconds)
  done (took 15.488327618 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.116161363 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.120390437 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.10458852 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087175327 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103381145 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103460214 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084680179 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100481093 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085759411 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100894185 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100588507 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08763909 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.105021108 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085217437 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104198416 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103223271 seconds)
  done (took 2.377040811 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120995432 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120262227 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107417491 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110752562 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.106652929 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.088770937 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10923284 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.106174259 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086989843 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105211207 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.109165984 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091196674 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106694121 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097479207 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091080323 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11149543 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.104639808 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090883197 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108352481 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.108323767 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091762334 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098718993 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105465542 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.09187413 seconds)
  done (took 3.297968885 seconds)
done (took 22.701804347 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16287388 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110203024 seconds)
  done (took 1.002191037 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.10307077 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.122452922 seconds)
  done (took 0.961496149 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108261895 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097854977 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136864168 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.115840732 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081354655 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097503175 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.13282525 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097624258 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081359657 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09843196 seconds)
  done (took 1.787014849 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088134135 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.116871028 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.107461416 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.103239204 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110990326 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.102946139 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096855152 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.104296191 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.119155103 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082281975 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10831932 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117376462 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.107504265 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102619575 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.113108994 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.106858616 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.092607145 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.104467788 seconds)
  done (took 2.621447012 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081042225 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.102883112 seconds)
  done (took 0.923833447 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.086047598 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098769066 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085926906 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102453908 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.0990136 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.082482874 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099100396 seconds)
  done (took 1.39171079 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.480769974 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137935619 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259246884 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086808845 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123148078 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.30891016 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099488415 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104159389 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086296695 seconds)
  done (took 2.480239122 seconds)
done (took 11.903932363 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094318903 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119625062 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.117781678 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.494727088 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.122658466 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.081945665 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.162701144 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.258028717 seconds)
done (took 2.196704275 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.151714714 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329290701 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.118558055 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067816437 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09639214 seconds)
  done (took 1.356379789 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081385958 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101464073 seconds)
  done (took 0.924196378 seconds)
done (took 3.175028914 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082933492 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099435074 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079497257 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098628291 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.079178762 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096607945 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.133115194 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081750915 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100857319 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080589353 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.10016295 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.081428998 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098552906 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078784171 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096218857 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081174856 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096213386 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079779548 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09577483 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079375092 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096317974 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081677229 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096337432 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07912763 seconds)
  done (took 2.948174454 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10971348 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099378339 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104905354 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08756447 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103019044 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104868878 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.087260875 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099915638 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088246951 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100528759 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102324819 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085839005 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101086494 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.10278498 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084711385 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103031821 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088115525 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098996797 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101212436 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08535814 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104979173 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081685786 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102048963 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104573244 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085423898 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102387889 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100826294 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082158931 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105201862 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086265472 seconds)
  done (took 3.643229165 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087772682 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095575083 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07959276 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10362655 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078972292 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.102644654 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079936963 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09731743 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080115208 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096231561 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080917999 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096968005 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096647251 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081009165 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.097768699 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083166992 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109969865 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080367857 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096766491 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079800179 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100706744 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079811441 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.100084791 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079652235 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095829543 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078787842 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096405625 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096788415 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.079809682 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.097613031 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082461878 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100697224 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079213347 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103349761 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082857404 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096245384 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083870983 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096291131 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079828642 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095854331 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078603337 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095692926 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079784566 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.1035574 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.100142764 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081610859 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.096577542 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080848497 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.097788349 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.082793435 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095816182 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.078928098 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09827952 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081172154 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100507191 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096176244 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080185051 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.096903691 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08164685 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.097225874 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.078740377 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.095845343 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.081981895 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097286337 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095778288 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103639502 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079959367 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098273091 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101135118 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081579472 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098925854 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093383309 seconds)
  done (took 7.271740129 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084040104 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108078357 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081945605 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099232557 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07834845 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098523078 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100037251 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080203994 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099947297 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087133255 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097426922 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098176169 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081943144 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109739575 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080597997 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099393894 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087230004 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095424967 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.096795214 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084413455 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098391949 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083294816 seconds)
  done (took 2.789181225 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.222779094 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107109633 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143991902 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123794773 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09900924 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112057146 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104514368 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089036434 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104322736 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103053107 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085328634 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104699913 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089550356 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102263715 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103492825 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086790181 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104949147 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104270426 seconds)
  done (took 2.750020992 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096083063 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101187136 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.122727106 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.082941463 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101131327 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085915155 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107490447 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.12218991 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084830466 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101830387 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110543686 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086025924 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103392905 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083554425 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103125088 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084388823 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102657657 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10126629 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093467708 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105649005 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10737026 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093642301 seconds)
  done (took 2.93960882 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099319559 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102809028 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120271633 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086521782 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097656289 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08245193 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107043439 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083285085 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108316448 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102936608 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083084884 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099508711 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.091026692 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100889132 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105839852 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08400304 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101694534 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082815154 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101264374 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096045937 seconds)
  done (took 2.699645224 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10804831 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101846705 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10213502 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093516107 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101738351 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101564117 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095053985 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101578045 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102465054 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109668119 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10172196 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102097291 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09493952 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108750977 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102181773 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094780807 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.221528955 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112436811 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10140046 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084216776 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127194748 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102422485 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094210837 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101963551 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10207715 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085305738 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102297295 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10736775 seconds)
  done (took 3.725679436 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083137472 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100483679 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080327589 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098078801 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080531924 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098172755 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080672004 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097961024 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082940055 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09738177 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083054196 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100211927 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082382008 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100099209 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083272376 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100408917 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084381255 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098325334 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08000307 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098391497 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083323258 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099856772 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.100174864 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080225783 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09859783 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082185736 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097652435 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080754723 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100812396 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080348541 seconds)
  done (took 3.477691434 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093656434 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109142151 seconds)
  done (took 0.971866531 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080427082 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117868352 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081033942 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104901375 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10611481 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083607427 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109941596 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088290817 seconds)
  done (took 1.538646771 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100235237 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115516177 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084824265 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113491437 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.116065568 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099361692 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163200458 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10267689 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089535022 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099409969 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118551618 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082358189 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.10774324 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083260157 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108947047 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089835106 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098712598 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106756595 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086719786 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09934917 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08473375 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112213901 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103149894 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.08079429 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103315463 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094209356 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11054355 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102799179 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085984304 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.11137237 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088878361 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095155933 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083523798 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101058328 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099775884 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096437061 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113794953 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085713845 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108760454 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103016064 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112809931 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096328532 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.107305811 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089510127 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114859758 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08442135 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101481125 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079142869 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098881655 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.10413818 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.079077572 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101636758 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079092775 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108426264 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087267126 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114413145 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.099675916 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084924759 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104898497 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086221938 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108368001 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085709414 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103232349 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101498765 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091195442 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.106016026 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090765285 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096275704 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07790855 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099382593 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109941581 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106622115 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109349804 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103102096 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084347471 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099507791 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087712163 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103497381 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108712212 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091979891 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101972958 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109047458 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10889789 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101499038 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087967592 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111528974 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082006781 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10391417 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099131175 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099002171 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100145761 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081725896 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099612049 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092982065 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105454499 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102258912 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080576772 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108389929 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078023874 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103253614 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085219493 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102190871 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110706117 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090611794 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108334658 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110407519 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094443699 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102139031 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087412542 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098088139 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085336395 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104863871 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108703534 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078512641 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104899101 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08493526 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103114204 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091638379 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099784732 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102227529 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091642373 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108734674 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083275455 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09830705 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086352054 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100929296 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106629153 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090697511 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100210354 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079683646 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.0972257 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088131253 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102415331 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.107031203 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089674059 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104913342 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078147326 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099336642 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107502003 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091437183 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102447136 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085153596 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106581884 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102824142 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082936046 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108029929 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086535226 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100907694 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087642815 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10398555 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07972957 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106088135 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104771719 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082023854 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105826832 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08872771 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104041557 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103383615 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082252933 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.10791741 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085481643 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101195181 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083947228 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100500206 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111982789 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085621567 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097995085 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081780738 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110159803 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081439247 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101682996 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101199006 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087156891 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10305644 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081692991 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102232097 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085784456 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132855195 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107278776 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085026751 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108387479 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11218071 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083772481 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105052114 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083687654 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103447124 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085906153 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109080456 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108039488 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089253208 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104909744 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081742691 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109209328 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11061337 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083091922 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100129304 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082954976 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105875003 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091455459 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105935663 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10346192 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083537796 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1026258 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088367565 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106106548 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101902878 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08406828 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107955136 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08445282 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110075803 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103838663 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093154104 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106749677 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079960772 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106793787 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082752243 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108924672 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097378281 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081801077 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101282017 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085475693 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101798773 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086511291 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09731981 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091734945 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111008813 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102805525 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084033699 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102866759 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093476036 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10377313 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105280104 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08704566 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107610798 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097922974 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.1020375 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087579632 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112969424 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103162911 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078672709 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108641194 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082258081 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102252033 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082642779 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100451689 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106135393 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09515289 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108411815 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079104213 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105535539 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101366213 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083361738 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097954568 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091403816 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106848507 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086262489 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111471112 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103965712 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085720012 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106283325 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083770721 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103902507 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103751958 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08833556 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103322759 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087029365 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102019473 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086548497 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102144325 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082382604 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104286484 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103302858 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084283348 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108967646 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086469735 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103786806 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087800707 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104810152 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104499006 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085832133 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102025954 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088839405 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103890108 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085128187 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105553093 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079777619 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110119588 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102699085 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093047755 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102783971 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081100232 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108162426 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104960988 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.090446667 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104158367 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086904755 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104248507 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.08526038 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106011348 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111752487 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081843403 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111570585 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090506919 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10340786 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106840629 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084916852 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104172333 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083928841 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104806409 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08573589 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10384911 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083887072 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108382415 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105964622 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085510933 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104168512 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.08618763 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.102863891 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085325042 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096909401 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102611951 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083858944 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103785131 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091543272 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104165945 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087518828 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102171605 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105234162 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083984525 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099314269 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093428327 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113551949 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103874488 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092470297 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101871864 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086705139 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113148781 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097234377 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083281689 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.101522437 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082858927 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111969296 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085830402 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111547634 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084150539 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.10267898 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100388052 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086059024 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101024006 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079335527 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100645056 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088164328 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105967042 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083353188 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103801947 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114149518 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086211549 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110595047 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084194897 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105491961 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08569881 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.101636392 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102873485 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083749043 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106443208 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086687288 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101387807 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08269965 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103167895 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086882918 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104454046 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084646182 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105396944 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110796923 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084610184 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106377829 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088580478 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098513179 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105620799 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085109264 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102833367 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084367617 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107591204 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088456011 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105365152 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110506519 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084668961 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103753778 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085267483 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101922543 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084299314 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103360497 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104714346 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084406689 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105356605 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093737786 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10186146 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087669552 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103562534 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08603505 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108138858 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104184847 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086893461 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112192885 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087983799 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105326669 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109473203 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088406203 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107212999 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086572719 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105244659 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110929808 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084955577 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111853392 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085205476 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104657542 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086221831 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101115023 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103714789 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084767011 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101869324 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089803362 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105257675 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084877336 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102778336 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082222215 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106122313 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107519903 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093174585 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107352463 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088527502 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098946533 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082405268 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105591024 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101225089 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087121585 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106030446 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091812631 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106466231 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087125356 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103354198 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111932843 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091476671 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109023785 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083403473 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109489054 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105410512 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087807476 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104931808 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085180042 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105890694 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090110396 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.105555687 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103315822 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093504107 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.108281607 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087313248 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104563172 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085384674 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105582231 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099794015 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087540765 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106564018 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091507631 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106690656 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085484532 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113923753 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103736905 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085185706 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108238947 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084885339 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111917901 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098833957 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086048449 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105345344 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086627334 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098778292 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084669867 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101504174 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087450024 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104173953 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098606449 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095592132 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111359786 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087260504 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103147026 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08433848 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098905745 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098860298 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084794617 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10628518 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087716107 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.112902626 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083680406 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10238174 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080291575 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105283299 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10717741 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089126093 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101353921 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081458258 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102539741 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08769255 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111096433 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102745855 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085377361 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107178566 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088006615 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10194989 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089440807 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.101459318 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.10839402 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096340986 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105834098 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085717149 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111126602 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112662677 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087336084 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098845081 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087041469 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106392668 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086345105 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105263087 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106021657 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09929606 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107152979 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084461483 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103292938 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088234194 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103559961 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111390021 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086939478 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106611853 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089760345 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105982504 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114734476 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08765062 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109959719 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087769254 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.106825895 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10241296 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085993046 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102816339 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083493035 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10581619 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087770922 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11048308 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112575415 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085482284 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114254345 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094060338 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109740869 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101133527 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085324769 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103587769 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081402937 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105636564 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083774699 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103731497 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083346421 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103418968 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085550477 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11150208 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106114698 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086722867 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104243096 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079547208 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105796493 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087920327 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10598449 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081401819 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105127115 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106002626 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09143893 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110949679 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085646458 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106686732 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106049248 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086209232 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099258956 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092536112 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104536807 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087397175 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104040653 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085833248 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106410912 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108176374 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091786063 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106410969 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08796749 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117273039 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10790564 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.084321752 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101588861 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090665799 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102873996 seconds)
  done (took 58.912217892 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150101782 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093266552 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101093491 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08232215 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119242245 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100702707 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081116578 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101038593 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082773482 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106845462 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081027712 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100129776 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113863766 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127869763 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097783713 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109628842 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099508477 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083410942 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100384818 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081832424 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11375315 seconds)
  done (took 2.944585909 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10694067 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118915654 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116641193 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120535456 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092006256 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116761722 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114835791 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117327668 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101863935 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112361942 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121406142 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11755106 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093606692 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112004344 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111968503 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096381653 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119963161 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110650808 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11865589 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097535251 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114814518 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116149589 seconds)
  done (took 3.265026437 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.098579547 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103891339 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089683013 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098943518 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085332052 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09971003 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089767121 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102795988 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107876462 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.084692251 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.10292926 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.084829035 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109134072 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080849141 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10424312 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08322291 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154910573 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109365018 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.105066866 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087079482 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.100414365 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087611472 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100203771 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080966406 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103784722 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.121703887 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087133839 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.10237393 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085204973 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.103579025 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085349808 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.102271725 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08693174 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105846351 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084747097 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.104046543 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085139718 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104831776 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.10007233 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083524573 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.105384944 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082082253 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105042553 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.087028047 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.102751964 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083252673 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.106197568 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085165924 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.100529299 seconds)
  done (took 5.575775919 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.107546536 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163633774 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08841329 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143880159 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123362177 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11528245 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089979282 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123782627 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104482052 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084367542 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124934063 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122698427 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105485469 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091618881 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10972987 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104716683 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087959212 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105114823 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.110341993 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085821293 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110024462 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.11190599 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101660284 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120011479 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110303239 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085377076 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105771353 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10982188 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119449014 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092020613 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111982973 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111562686 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.103860716 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107492472 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10398422 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088922547 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124311716 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106064081 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088763724 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103498531 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.10921813 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092419429 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111265545 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124387221 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087184234 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111149709 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10530965 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083327201 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119560023 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.107638399 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095066282 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121915169 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110467721 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10593369 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092976664 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122355876 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105139209 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084751307 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109231619 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118647154 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.082898828 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109303915 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121126788 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088640741 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11404229 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.12036933 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110017512 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091238924 seconds)
  done (took 8.24309684 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095911728 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112611426 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122394779 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12297483 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093890502 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113296477 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112404257 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113334804 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09359028 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118245677 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112314561 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.141176753 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087914449 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116790616 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113104847 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09274045 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114693258 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113236626 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112930322 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092753404 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113438935 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122671916 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112841285 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103189228 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143450639 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109014851 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112465168 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093128177 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122512431 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112218494 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126350427 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113054977 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094254481 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122866851 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125716847 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.11364477 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085561394 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112045965 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.112636207 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093800053 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10813532 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122845147 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112778638 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088886295 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112907634 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112661141 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103408186 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125968281 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117212772 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118755005 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113207856 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103231921 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11261705 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112848795 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122498966 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.150038193 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121914917 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102520349 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112701168 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.122563109 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122862147 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131706041 seconds)
  done (took 7.822053835 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115573028 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.120306312 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.127436464 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101575107 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084715945 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.1137407 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084133116 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103585889 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.118251132 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099750523 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121563069 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11440663 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116670163 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103244724 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113481489 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116741514 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112809218 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094220837 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12001459 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.11339283 seconds)
  done (took 3.022706708 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095752498 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126316073 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086208239 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114568322 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.11002687 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092667644 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108538259 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109196029 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087163184 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109996259 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117890081 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098421639 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106930925 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113860286 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099090708 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113570192 seconds)
  done (took 2.520313225 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.0983904 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118848445 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.125150004 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085651923 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104836752 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.102171924 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086487684 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102171471 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083592727 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123357864 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.106709432 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089476088 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106928682 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084239802 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103222089 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089027554 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102152973 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.10404512 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086573561 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.127356099 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.117584481 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085710926 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107300143 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088519612 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106566318 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.111993241 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.086869795 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10514204 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08356634 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106748927 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106225097 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.095181649 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103578615 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085528986 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104291507 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.103249017 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086952156 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107092883 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.090355808 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107061625 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085175814 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107484278 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106319059 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.087986949 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101975246 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.08663145 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10279001 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112961428 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.085064549 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106355585 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.086469986 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109974114 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106878923 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.097898226 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111073283 seconds)
  done (took 6.346898715 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101787719 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110684252 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082359508 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105516636 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089333653 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108914903 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109884994 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089510025 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109208376 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083997234 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108253361 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111047161 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087834883 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109392152 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089574371 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111209471 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080992764 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108920238 seconds)
  done (took 2.633654103 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092659132 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106638293 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095817304 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107250082 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086666406 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10997693 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102512194 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085904254 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104697966 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087399797 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106033795 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088670039 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106253217 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08819949 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107997874 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106842789 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.089040384 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104629502 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08700563 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102165889 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089044366 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105759845 seconds)
  done (took 2.997653698 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.123470681 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126329554 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093857304 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.235975151 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.105039648 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134532283 seconds)
  done (took 1.656443947 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111662064 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122931153 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108718699 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108622227 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117324154 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108680145 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089395145 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109841815 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119823345 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123978669 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090658967 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120110568 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119675569 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119752821 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096639685 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116411277 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109530496 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089281252 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108076364 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131047333 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110197053 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10095303 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110150957 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109231143 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090224482 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119250019 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120207128 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12481688 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088225649 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120762256 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116467843 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10891844 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100643779 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123796481 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111247544 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120448823 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090101568 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131857202 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117131415 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119635037 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091471675 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116714703 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120480579 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115875354 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100817982 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110618308 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116076997 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088839337 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111143694 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13898269 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116787308 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119965348 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096752284 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121391534 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119994667 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138497789 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125406871 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119733934 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097381784 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125255122 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119979879 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117343138 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12025498 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124690046 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096767831 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120905721 seconds)
  done (took 8.293929618 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104066684 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12802737 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109891291 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125052513 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098996061 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110496968 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110794703 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089820731 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110366529 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108473135 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15488033 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090703214 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120934572 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120182454 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110726974 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089804975 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109829878 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120163248 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089231858 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137763819 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110600601 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119797623 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119440753 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119934357 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105601163 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117855629 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109070168 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089757407 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112290442 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110035686 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115575115 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090153146 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120742065 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108400376 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099378381 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111153315 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110400563 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117561233 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089979997 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117966224 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119946904 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130851005 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089952018 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110038609 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125663639 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109245178 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090728589 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11035366 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090034219 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109465335 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125463947 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125837877 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125551124 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098524173 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111198899 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11044511 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088971219 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111175888 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111035935 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115805412 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100098276 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110576149 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138247194 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111016535 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090361833 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119828058 seconds)
  done (took 8.16652751 seconds)
done (took 157.897846245 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102506752 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141052696 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100263293 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169838917 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107821022 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12026121 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.14238525 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.1015419 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10887669 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087294472 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108909186 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110604662 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153043807 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108169217 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088771664 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10966017 seconds)
  done (took 2.709312227 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201999626 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.271086078 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104163541 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107744639 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.112490214 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.087707275 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.106739802 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.095513248 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108929293 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086538329 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108736481 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087324549 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.108068592 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086984147 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111075271 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.107765544 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.087476491 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.107140102 seconds)
  done (took 2.942288087 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115567758 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153326321 seconds)
  done (took 1.124270997 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121599084 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.185084975 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30166548 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155321623 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120180588 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130299576 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157846546 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132734577 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.212817613 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125701828 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125959691 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.120492113 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.12244062 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11805023 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116476319 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099897095 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.14535464 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.116037118 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097356489 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11952598 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140289868 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.087193597 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.118124508 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11587475 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.196170127 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.10114366 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.108358439 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086998139 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120019753 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.117466202 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.095025656 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12829197 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.121965099 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174163345 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.125944732 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.161252191 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.121174729 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113550661 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097420544 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113867305 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121225759 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.1008971 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.128866261 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119809046 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.09002693 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121183096 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086126168 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.108711571 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115874052 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.100876833 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115754082 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114321805 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.16005667 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120864524 seconds)
  done (took 7.72849 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.825467112 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15567163 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114466038 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.896344285 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141077121 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127218212 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.797046764 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137627342 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234368442 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.796131513 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132602994 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104826056 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234594216 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25851896 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.935597874 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.293733396 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.705239153 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101985463 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.140201121 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156227682 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119609026 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137129458 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108806889 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.435925573 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117149435 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112655042 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095927218 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122446497 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163386231 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.113668539 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093000966 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203900941 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250613586 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209166432 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094184074 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112573623 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110971484 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.173099637 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271508271 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219221096 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180892669 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088280573 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111271242 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100303433 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131333593 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108846837 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167575712 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.178515168 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.195847978 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092506668 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12206282 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119911856 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099451113 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.190747228 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10154813 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315045665 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320445858 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113536357 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119531466 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107474176 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268617257 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125383249 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230567249 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115524657 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216830784 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112569224 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805792312 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.172885087 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089539302 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119268363 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118277552 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094815585 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121366976 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169339749 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394770903 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125685252 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092449328 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112519342 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.238652087 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092681576 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111966574 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166706315 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115308397 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099410923 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125268543 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121513507 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.174091266 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.231128507 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125242713 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120058457 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09434147 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124416137 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116833447 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214616567 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225151044 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.166562603 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210570582 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121576664 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.188486783 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172388988 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119645091 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.176278882 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117836512 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10605391 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122784038 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220241864 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147920093 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126216998 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094434216 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119410186 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151421038 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.114060211 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097051864 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.194872034 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.467547568 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170871834 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110210907 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093760324 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120693968 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163935893 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11902974 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261105604 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098747619 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.194362691 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095488094 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110609132 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118966132 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.168450319 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123346471 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09843814 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122416934 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120613126 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.240027848 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220746477 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123258515 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221825413 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183052491 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120548454 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176791109 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121550973 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170600597 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120720164 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120723547 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096106988 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801846583 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124006527 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096842686 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116714879 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.191377554 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113158452 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103387439 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113925424 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086683863 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81292685 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115807601 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102010187 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.126319044 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118919786 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097120693 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11873412 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116400968 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.167627686 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237065812 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122025104 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097070233 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.11408928 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.163986613 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116812902 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.090363884 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.114471089 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.091127415 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121211839 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116022968 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104642367 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196151295 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.168110186 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227302349 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.56444271 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091248013 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.114195375 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234571577 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090995825 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296176605 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119631428 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.229456106 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.169322656 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123283344 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319741244 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.1705362 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189375105 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.092338987 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.200083004 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087435373 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119209686 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168423311 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113598946 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118253008 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.167245591 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124502645 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102437862 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.961629511 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113124181 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229495816 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108865971 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.175712342 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094048863 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121792679 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293937883 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112396529 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107263826 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.191284501 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094897994 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.113956268 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.702417723 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114480879 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121143115 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097096098 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225955518 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.189350099 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099659965 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120405629 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121933578 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.167139053 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210772812 seconds)
  done (took 44.309432007 seconds)
done (took 59.666823134 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301567929 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216313892 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262642191 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173017203 seconds)
  done (took 1.911745815 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180597838 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150895975 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.125700834 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109747383 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.154407029 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086067314 seconds)
  done (took 1.689436806 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.392641065 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278693046 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243745082 seconds)
  done (took 1.801876257 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.252191271 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.271727157 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.331511203 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.419616711 seconds)
  done (took 2.25558808 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.285241106 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.14875353 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.139522852 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.170605771 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.206271438 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.297840793 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.169317288 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.249398599 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.16140956 seconds)
  done (took 2.755049242 seconds)
done (took 11.301691766 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.212472908 seconds)
    (2/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.25348565 seconds)
    (3/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.206511586 seconds)
    (4/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.275982747 seconds)
    (5/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.106482809 seconds)
    (6/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.186840115 seconds)
    (7/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.126380282 seconds)
    (8/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.116761091 seconds)
    (9/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.188187228 seconds)
    (10/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.160494454 seconds)
    (11/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.238138941 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.218169056 seconds)
    (13/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.096506648 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.137908435 seconds)
    (15/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.129046392 seconds)
    (16/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096183403 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124563011 seconds)
    (18/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.125057935 seconds)
    (19/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.170649223 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097117703 seconds)
    (21/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115014625 seconds)
    (22/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.21984478 seconds)
    (23/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.199834525 seconds)
    (24/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.120751496 seconds)
    (25/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.102016178 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.15339549 seconds)
    (27/286) benchmarking ("sort", Float64, true)...
    done (took 0.237003716 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.229858976 seconds)
    (29/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.120764011 seconds)
    (30/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.193891887 seconds)
    (31/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092140966 seconds)
    (32/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.119263245 seconds)
    (33/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.19267803 seconds)
    (34/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104612657 seconds)
    (35/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.154618786 seconds)
    (36/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.197181206 seconds)
    (37/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.112851178 seconds)
    (38/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.189457309 seconds)
    (39/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.121932328 seconds)
    (40/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067356071 seconds)
    (41/286) benchmarking ("sort", Float32, true)...
    done (took 0.236868518 seconds)
    (42/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.245306894 seconds)
    (43/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.091283605 seconds)
    (44/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.101319003 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118867425 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088005883 seconds)
    (47/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116978161 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133574581 seconds)
    (49/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.096235941 seconds)
    (50/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117803167 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09118523 seconds)
    (52/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.163774613 seconds)
    (53/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.198047627 seconds)
    (54/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.147839914 seconds)
    (55/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.140909639 seconds)
    (56/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.201679102 seconds)
    (57/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.116852967 seconds)
    (58/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.169884576 seconds)
    (59/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.154672352 seconds)
    (60/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.184772124 seconds)
    (61/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095993475 seconds)
    (62/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.19239574 seconds)
    (63/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.089580616 seconds)
    (64/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.187517627 seconds)
    (65/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.183034862 seconds)
    (66/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.127196527 seconds)
    (67/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094651231 seconds)
    (68/286) benchmarking ("sort", Int64, false)...
    done (took 0.110083043 seconds)
    (69/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.101452791 seconds)
    (70/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.222720413 seconds)
    (71/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.208432488 seconds)
    (72/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.146238892 seconds)
    (73/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.093223612 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.098782597 seconds)
    (75/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117968947 seconds)
    (76/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.139128641 seconds)
    (77/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.099068629 seconds)
    (78/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067888997 seconds)
    (79/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.185298347 seconds)
    (80/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.188468357 seconds)
    (81/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.192200901 seconds)
    (82/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.100441028 seconds)
    (83/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.135962428 seconds)
    (84/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.178458755 seconds)
    (85/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.153460272 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.11475389 seconds)
    (87/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.23052026 seconds)
    (88/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.139207368 seconds)
    (89/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118744538 seconds)
    (90/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.118691717 seconds)
    (91/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.113191955 seconds)
    (92/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.16994723 seconds)
    (93/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137680142 seconds)
    (94/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096570695 seconds)
    (95/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.140981928 seconds)
    (96/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095224788 seconds)
    (97/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.186897681 seconds)
    (98/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.179346922 seconds)
    (99/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068748347 seconds)
    (100/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090674533 seconds)
    (101/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.086943698 seconds)
    (102/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.195958631 seconds)
    (103/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.125713947 seconds)
    (104/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.123704836 seconds)
    (105/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.133731358 seconds)
    (106/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.092536002 seconds)
    (107/286) benchmarking ("sort", Bool, false)...
    done (took 0.189069348 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087567257 seconds)
    (109/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.121792351 seconds)
    (110/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.156685226 seconds)
    (111/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.097211063 seconds)
    (112/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.195682833 seconds)
    (113/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.097517591 seconds)
    (114/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116515238 seconds)
    (115/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.184943151 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088129226 seconds)
    (117/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.092772117 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094971905 seconds)
    (119/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.10643419 seconds)
    (120/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068907642 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.133706683 seconds)
    (122/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.115550032 seconds)
    (123/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.14772277 seconds)
    (124/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115059337 seconds)
    (125/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.100945154 seconds)
    (126/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.133037637 seconds)
    (127/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.114621085 seconds)
    (128/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.120030396 seconds)
    (129/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.186718824 seconds)
    (130/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.098910579 seconds)
    (131/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.164629222 seconds)
    (132/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06919485 seconds)
    (133/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.187862617 seconds)
    (134/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.067891642 seconds)
    (135/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.154919697 seconds)
    (136/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.068431307 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.11138461 seconds)
    (138/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.068179805 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119127984 seconds)
    (140/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069708968 seconds)
    (141/286) benchmarking ("sort", Float64, false)...
    done (took 0.179245545 seconds)
    (142/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138780568 seconds)
    (143/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097021556 seconds)
    (144/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.113157282 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.09889741 seconds)
    (146/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.114488136 seconds)
    (147/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.095341494 seconds)
    (148/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.183152105 seconds)
    (149/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067537283 seconds)
    (150/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.162932308 seconds)
    (151/286) benchmarking ("sort", Int8, false)...
    done (took 0.196220198 seconds)
    (152/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.095805372 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087889596 seconds)
    (154/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.112204315 seconds)
    (155/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088387905 seconds)
    (156/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.177557605 seconds)
    (157/286) benchmarking ("sort", BigInt, true)...
    done (took 0.242354823 seconds)
    (158/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084594984 seconds)
    (159/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.091464071 seconds)
    (160/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.070205798 seconds)
    (161/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.150908095 seconds)
    (162/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.100069904 seconds)
    (163/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.137877282 seconds)
    (164/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126569035 seconds)
    (165/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095389491 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111158885 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088583075 seconds)
    (168/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.191779947 seconds)
    (169/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067855581 seconds)
    (170/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.160409217 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.119359138 seconds)
    (172/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.080503025 seconds)
    (173/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.110371711 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098935431 seconds)
    (175/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.122245378 seconds)
    (176/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.152760538 seconds)
    (177/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.112425668 seconds)
    (178/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.094865336 seconds)
    (179/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.092001024 seconds)
    (180/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094212749 seconds)
    (181/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.124105135 seconds)
    (182/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.06932468 seconds)
    (183/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125677898 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.088705164 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 0.228999513 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111746941 seconds)
    (187/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111136249 seconds)
    (188/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114413098 seconds)
    (189/286) benchmarking ("sort", BigInt, false)...
    done (took 0.22426505 seconds)
    (190/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.177978393 seconds)
    (191/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.111688187 seconds)
    (192/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069444871 seconds)
    (193/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068446703 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.112784264 seconds)
    (195/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.07938652 seconds)
    (196/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12730898 seconds)
    (197/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.068917091 seconds)
    (198/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114007386 seconds)
    (199/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.069012899 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120273424 seconds)
    (201/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.092560854 seconds)
    (202/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067219659 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.12151674 seconds)
    (204/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.124604899 seconds)
    (205/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095651219 seconds)
    (206/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.090844925 seconds)
    (207/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.068052743 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.0955101 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.111478316 seconds)
    (210/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.08879059 seconds)
    (211/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121639232 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086807105 seconds)
    (213/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.332332749 seconds)
    (214/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.122156755 seconds)
    (215/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.098446123 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110380655 seconds)
    (217/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098521987 seconds)
    (218/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.090125084 seconds)
    (219/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.06987193 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06820851 seconds)
    (221/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.101693724 seconds)
    (222/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069217347 seconds)
    (223/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.112378977 seconds)
    (224/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068456014 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.088963742 seconds)
    (226/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.101725617 seconds)
    (227/286) benchmarking ("sort", Float32, false)...
    done (took 0.181255116 seconds)
    (228/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.068675925 seconds)
    (229/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089566703 seconds)
    (230/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138658136 seconds)
    (231/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.092656016 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08926542 seconds)
    (233/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.076199553 seconds)
    (234/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137613386 seconds)
    (235/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.12530774 seconds)
    (236/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.067589772 seconds)
    (237/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.123643291 seconds)
    (238/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.078340163 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11808495 seconds)
    (240/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098406071 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120104185 seconds)
    (242/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.06873087 seconds)
    (243/286) benchmarking ("sort", Int8, true)...
    done (took 0.227799659 seconds)
    (244/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068808116 seconds)
    (245/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.112115145 seconds)
    (246/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.184816181 seconds)
    (247/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.089856129 seconds)
    (248/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.113064437 seconds)
    (249/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08962631 seconds)
    (250/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.111064266 seconds)
    (251/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069257766 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111340369 seconds)
    (253/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069369192 seconds)
    (254/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.118182382 seconds)
    (255/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070365133 seconds)
    (256/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068767837 seconds)
    (257/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.113914423 seconds)
    (258/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.069563494 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120445574 seconds)
    (260/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.068192938 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.110440722 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.087529514 seconds)
    (263/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.09123653 seconds)
    (264/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.089776554 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.11923824 seconds)
    (266/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.152583963 seconds)
    (267/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119807307 seconds)
    (268/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068866184 seconds)
    (269/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13659362 seconds)
    (270/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067793786 seconds)
    (271/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111045972 seconds)
    (272/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068732507 seconds)
    (273/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.091478082 seconds)
    (274/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.077409227 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.095390268 seconds)
    (276/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.118747087 seconds)
    (277/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.069130554 seconds)
    (278/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.166287862 seconds)
    (279/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.122057464 seconds)
    (280/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.088792541 seconds)
    (281/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.114607011 seconds)
    (282/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.07995401 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.118369759 seconds)
    (284/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091884745 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.114224118 seconds)
    (286/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.06957541 seconds)
  done (took 36.862650454 seconds)
done (took 37.753608959 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.102607611 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.153697492 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098056006 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.140674083 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125309802 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092855351 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120321908 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.123490322 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102582524 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127171785 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099637536 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094514293 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099625711 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122365064 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.122266768 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.120536395 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125311847 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095484552 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120783965 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.110795311 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.097221698 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110442719 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.090493431 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.094270748 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100112002 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118043888 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095057438 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.123091188 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088053718 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111878628 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094290612 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119848061 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08754073 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126903584 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.117702751 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.09742326 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.123062678 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099565478 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113849411 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088548705 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.12039317 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08787191 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11993384 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.119533897 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095193149 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.116931826 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.097637448 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125066277 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14398027 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094899014 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.120038018 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099006501 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.121417705 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.096210918 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.11611837 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.096325467 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118274136 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.144695932 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097640022 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116301668 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.096736239 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.120852659 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.093087824 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.120951618 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121148537 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.099766849 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123329253 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094477842 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.122129349 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.092974383 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.113040091 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120199498 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092389332 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110926763 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.097989089 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122939887 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088568158 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118021871 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.096108506 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117128515 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.089151283 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115369818 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.090154737 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118985668 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091012888 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.094978695 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.093303895 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117910228 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.087370155 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.122431303 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118105303 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095671127 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113473593 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.10151397 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112467714 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094094413 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111941857 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088762149 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114694247 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093087631 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112782897 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091612591 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121641048 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090665197 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118416242 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124673166 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08924635 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117774711 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088547425 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111621048 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.104671584 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123365296 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088580352 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117731896 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088084286 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120379395 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112581983 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.088945328 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111320967 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.08977442 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119168783 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.090359798 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114603777 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096442669 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127081569 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089370967 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.117130146 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091207237 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112711584 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094835381 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112983309 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08901984 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.115884894 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079883115 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115345454 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088935536 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119858428 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09145585 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.122247302 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11507991 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099596458 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116758618 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095638947 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.118613765 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.088257114 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099187 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094290576 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115138603 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.091567054 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.112818539 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.090908863 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.112325333 seconds)
done (took 17.269225574 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.089411438 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18726102 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.157337489 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.148110501 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109631057 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114010183 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123909826 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.146684078 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091954141 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146233745 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.136308372 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110473048 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.152491921 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088853788 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.1146417 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092556816 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115249093 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.129360416 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.12927115 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.135447688 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.167531652 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.11204476 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149034203 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.113595757 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.12279093 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.141057581 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090092737 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.117210986 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093506819 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.130218244 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110033303 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116791464 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.0897441 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136622999 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.130242285 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.098102355 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11355697 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.096080414 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.113171492 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088420817 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142044218 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136402045 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.118012456 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.096106456 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116967148 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.09266981 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114467942 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.098436098 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.124361127 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117680499 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.104576797 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159408244 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.116901116 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123899075 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.089458669 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124343634 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.099305 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116075529 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.089750267 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.116608201 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.088944896 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.117217924 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128816375 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143468663 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093646662 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123898068 seconds)
  done (took 8.784497041 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106614491 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.143630696 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132171326 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109184832 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114581833 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.09052684 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114197165 seconds)
  done (took 1.762431123 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090951755 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139829614 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118055276 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140875613 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.138176052 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.116495905 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125124827 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090496474 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.1362079 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.116343467 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115721109 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156174169 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.117441736 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099830884 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.143127161 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090930369 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.142219069 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.114826854 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095093008 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.14255213 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092925335 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137224918 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117501727 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.090596964 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.133639892 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.090982303 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.167382173 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119904233 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092311655 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.136685589 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089667142 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.154225918 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.134185763 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.10205838 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114887197 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.108983681 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.13388012 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088957038 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.132242319 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.120454006 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.109246672 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.118227466 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092040272 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.115115904 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.095760054 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.13094939 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119020972 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.091809026 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118110198 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114641259 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.116064183 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108161022 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.116146273 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.09557765 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.117520154 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121941856 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10158507 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116719817 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115047905 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116708093 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111581802 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13634905 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.133926551 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110520381 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119321427 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108673242 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.134028315 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118203002 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09275108 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118963346 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110429019 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11351557 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.092364638 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.130110609 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092251289 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.142766026 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.142853658 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092835182 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.127000332 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.091105092 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116383318 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.09084064 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.141803787 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119661288 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091690545 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119960049 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094188584 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113918487 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090397195 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119923168 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.089327933 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117773462 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095603468 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116826456 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118221258 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111255262 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11652108 seconds)
  done (took 12.15874224 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092040979 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116976387 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094974837 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.117171806 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092627552 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.1172866 seconds)
  done (took 1.596697674 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119176346 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119206213 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.130846934 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099745175 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159566923 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.136761167 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.111282422 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125352213 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.135215456 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105321071 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.135471276 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110605141 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142027093 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122310854 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109748656 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122244283 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.135729259 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103087237 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12902431 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124074369 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.113766917 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123287068 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098852173 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.137642304 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121288693 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098641338 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127501153 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129182924 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104531348 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126096696 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123008055 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095967124 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123008949 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.100134729 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.135997945 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.12310232 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097648553 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122045222 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128123131 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.096237666 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.136270144 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099261002 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129065759 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121589507 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.101512939 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124101047 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120892749 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103389578 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136416315 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121429858 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096231259 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123051193 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095264469 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121158734 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123598373 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100634727 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.12115397 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110209744 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123984037 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123302709 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095358719 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121166638 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125746365 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096609584 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.133475647 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096493926 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123716405 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123827559 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098952552 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.123119143 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096993237 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119734456 seconds)
  done (took 9.456732844 seconds)
done (took 34.707196205 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.688738464 seconds)
  done (took 1.652054543 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.848975354 seconds)
  done (took 1.814636785 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.638559159 seconds)
  done (took 17.634105853 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.507315763 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.600714263 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.996295532 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17389261 seconds)
  done (took 3.244173174 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.932039192 seconds)
  done (took 1.916160064 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286203511 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.237014027 seconds)
  done (took 1.489993695 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769747972 seconds)
  done (took 1.748356145 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.435849967 seconds)
  done (took 2.409295396 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.336587439 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185661211 seconds)
  done (took 1.510231328 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.559281786 seconds)
  done (took 1.537889606 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.073613898 seconds)
  done (took 11.057427663 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270974658 seconds)
  done (took 1.263013733 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307233423 seconds)
  done (took 1.291351723 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.515162185 seconds)
  done (took 4.50030732 seconds)
done (took 54.04424873 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100343952 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128228984 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104578129 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.1265058 seconds)
  done (took 1.436407779 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106643059 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123013784 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106537068 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122225142 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132073055 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097658472 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125087099 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102484819 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122673459 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.123828836 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.098655583 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120992826 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101460975 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12545863 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095557003 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126051327 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126037483 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.098203317 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.127873548 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098357882 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120811237 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.124873713 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.101410059 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121552464 seconds)
  done (took 3.735241838 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102501964 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.12086194 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098348499 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120384384 seconds)
  done (took 1.429577803 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10364979 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132905504 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.108144806 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127814473 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.134137167 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109240348 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119238614 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094423898 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121200368 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101283014 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.118256136 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.141449329 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.109745641 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.126567513 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103752129 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116946156 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118269233 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.108485957 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127216303 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102467085 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.12039133 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101711014 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.117957579 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.135981431 seconds)
  done (took 3.789080676 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17416072 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130346188 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141626504 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09712075 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162934728 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142783238 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091567459 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143543835 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.090219702 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132713464 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.120872291 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135902677 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130452176 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.090411733 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11600515 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.114515014 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.104366912 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130111084 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.093351319 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129906363 seconds)
  done (took 3.461595595 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10038626 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119409848 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090764967 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11823128 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101583786 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12330821 seconds)
  done (took 1.645950178 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.099335685 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116443507 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095013261 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.117421066 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096251888 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115865727 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090521291 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116957554 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09246205 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115490757 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093419967 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115789475 seconds)
  done (took 2.258197734 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.514470089 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123013385 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122854785 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090568364 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.127742301 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090765415 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.132669196 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094445821 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.145534433 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089653432 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117855579 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.119141424 seconds)
  done (took 2.762109018 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245649028 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128032725 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288634345 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.393628749 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18563198 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17063069 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.307750058 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168246991 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.236565977 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167999824 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229709194 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180543064 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156714185 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219219611 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143589992 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.121629956 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222262247 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.311377855 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154748887 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222091233 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174065907 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171707716 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184696743 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157265931 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141603725 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199901305 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122843139 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106183876 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21713696 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182071904 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190447354 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165180847 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164793353 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236496999 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293668525 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197128449 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28430422 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136527637 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.145497084 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169533189 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27451299 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145423697 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21354438 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165161052 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133741416 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236576003 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161283236 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.20279741 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149233328 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1188388 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231511631 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198786569 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.247192147 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14111823 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307807339 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154133817 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.175980185 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194907113 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255459465 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205687858 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223185679 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096869277 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216958121 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199983835 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191723139 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.171710282 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.195090734 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145791329 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1811175 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226709967 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19219621 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174884966 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.212090911 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11305889 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172047056 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174811794 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199500657 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23646878 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21519473 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.097958415 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171090844 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152236565 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136152111 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196702056 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101235187 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249619182 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147435437 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.166656682 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214214609 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161441932 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164393206 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189988863 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178136656 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150652372 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112308904 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129504525 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157511765 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175633216 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141697455 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160402728 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152382285 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.132665102 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172329913 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099492505 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214371943 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093076398 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170783571 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213852234 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.103213364 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169146566 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1551726 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.154636686 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197708377 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20172039 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143601771 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137233981 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213278518 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185217141 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144346506 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18009667 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236391257 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146475363 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125157279 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231124286 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246443383 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120178341 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233274662 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150136528 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111045953 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136064352 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186890643 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160443786 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165256674 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135923634 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.186034212 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231107888 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101269782 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141488384 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202481879 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136259828 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134892904 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149648726 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124059732 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.13954188 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145357725 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.147997863 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179773209 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182084105 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15681639 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170083814 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150196301 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242625782 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142246254 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.127352354 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151228301 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.1233343 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.218778061 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20043697 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133051278 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203709738 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.198967409 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202278896 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169861723 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137167726 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180783936 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131889795 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096079841 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221017196 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168234565 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164446464 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198749469 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199536493 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.221464784 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.186050235 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168944207 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177750358 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16998489 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157950069 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141325058 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164003987 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161836428 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.098943364 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142350378 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136208526 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15371119 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144684286 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109478489 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227260339 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175880036 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193932994 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162599373 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153343923 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185468378 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131663777 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176789003 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179382324 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149857512 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.227550113 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197069654 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192155178 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147582259 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232063205 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.096690174 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127820186 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.145341726 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17175817 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10987936 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138576944 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167311356 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186488532 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178573208 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20203253 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21213118 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189687498 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223790646 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098414104 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170581138 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181911135 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180286081 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183309294 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143700894 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153573142 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182518872 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122802173 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242655842 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169626244 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179005125 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233360881 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153224249 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107561582 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153490037 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174601192 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15761211 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175597244 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149385995 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140376471 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157153861 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.105704936 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191284798 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184117669 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164218641 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18343925 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152348081 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191237119 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131130563 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167039202 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163905429 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165976634 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082811372 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198832524 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199532441 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145214915 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164410026 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185010313 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13280205 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.312746952 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204077268 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220764817 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11268562 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15946002 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164335781 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165764598 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167267863 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182154316 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162322567 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189878494 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161183561 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139430811 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140583357 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150384692 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127629395 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136053573 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149737462 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179212611 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140817821 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184483077 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150737397 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162013131 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176071859 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15304012 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146209534 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125334896 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248983812 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186450926 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224505247 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125826216 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.205827079 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206795229 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099173289 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134649109 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136280549 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182436095 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137972023 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198393541 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191230386 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230367515 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186142489 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174735995 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143149722 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121796441 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15997174 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172690139 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207933086 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14855631 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.151686649 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200395866 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140372181 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134496875 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141175336 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319320662 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147014799 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191068149 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081396886 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28390494 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126114055 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135578786 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165706871 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188083847 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137805987 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155370671 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170133047 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154421063 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16756506 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152358385 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220849548 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217551764 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202184942 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214175075 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.108379238 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161253034 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171106426 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216005208 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159629998 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112910119 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187979346 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224981169 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.19814214 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.145658413 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172291409 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170914787 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16204243 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193269807 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138371714 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234054967 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109683149 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224314327 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156414138 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140557567 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175970017 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191780329 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143365681 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183891029 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184645649 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139343449 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13548717 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16454201 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181437431 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152146299 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100521191 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210300991 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099135753 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226526674 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267910157 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109082338 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158360035 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150061437 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137370095 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157828712 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161734758 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112688175 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168531334 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197552953 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138617018 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187185552 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235416606 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174450284 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168605411 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147810158 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.753936905 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133565779 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198013332 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150428785 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187728215 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152065556 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176430275 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162821536 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170147048 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196842941 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161237821 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.236150354 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221952469 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.182712364 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105962599 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190123078 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12260929 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146061639 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157314709 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169944532 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162924402 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.149960527 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181672288 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16002417 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.137152063 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113452513 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230864469 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149712118 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186128157 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18391139 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140766318 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177018171 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193613927 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13768285 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.193227491 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215352669 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116800882 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152890069 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.137502128 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154759089 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266993416 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.099653615 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18537328 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218598433 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162922669 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171121324 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.151120496 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197607112 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160859822 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218695346 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117956557 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160605344 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160395869 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14064622 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13372809 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158586952 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169674419 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.124113127 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19220697 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142154545 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195655006 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127323091 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148292336 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29315942 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176218182 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245773823 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.10990216 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139936022 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162402026 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14991855 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181049463 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183890181 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138979968 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13724447 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109984194 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158324208 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114342568 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161045 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194818001 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162153814 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235590952 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109798706 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282926324 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142967856 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158510114 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089342637 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134597681 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1533616 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149434879 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152441017 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19703007 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269000542 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148180732 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.108300166 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152316012 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129204371 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138446705 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139239165 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163168526 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210089444 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116808184 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110753079 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160089512 seconds)
  done (took 83.739051736 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172631599 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.136761585 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150659329 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204700151 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179695368 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.29361765 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212576389 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256517427 seconds)
  done (took 2.6924524 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09539668 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.154270834 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15928586 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134765431 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093957845 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.12192244 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.369324764 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134812801 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118520696 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.123990457 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.17344946 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095700511 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.585318747 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.092492291 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121459186 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109574188 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093585643 seconds)
  done (took 3.857038403 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.17096273 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.478404279 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.922015025 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.197815486 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.180259773 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.121157745 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.688554275 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.119461431 seconds)
  done (took 11.969566273 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.126632068 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146603554 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.137726348 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.165943474 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.15131099 seconds)
  done (took 1.824446661 seconds)
done (took 125.577951017 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100158132 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129327977 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099765049 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13135845 seconds)
  done (took 1.541413169 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.098926793 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072175838 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102319178 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076324905 seconds)
  done (took 1.439508046 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.195705789 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.170906165 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.391949458 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073243271 seconds)
  done (took 1.585857418 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.116642207 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135079528 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.106569947 seconds)
  done (took 1.454874558 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107937677 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130946172 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105379445 seconds)
  done (took 1.438194062 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108662887 seconds)
  done (took 1.201075625 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.111902679 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.142068545 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.113827093 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.14048488 seconds)
  done (took 1.601284403 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100502335 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128727449 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113991091 seconds)
  done (took 1.434966455 seconds)
done (took 13.155591079 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.107468142 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.432455239 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.418635803 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111877279 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729253819 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381762702 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.046019003 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147958083 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171177795 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094883484 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141457483 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673981139 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.038292184 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.381233802 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.994143023 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377785451 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704469806 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09453816 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120820046 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096215842 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.030947082 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093124068 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123915458 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09392111 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704597198 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427547853 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097088971 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.377588874 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093626819 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131757833 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.380983808 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124226821 seconds)
  done (took 17.023661259 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10074371 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181503644 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133148435 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096191564 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.129200365 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096237085 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126047401 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095837774 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185039189 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124485903 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112823372 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122929597 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127547645 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096892324 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143667392 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09370673 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126753598 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094497579 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1231777 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123129117 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114002059 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122657996 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095338984 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123606429 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094881019 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136557107 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124550936 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.095031189 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123753751 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103528284 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126849032 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096736769 seconds)
  done (took 4.88891553 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146711222 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191199482 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134154188 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128673978 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.175098805 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125564226 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200229179 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148466712 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188080326 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096807075 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141887628 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093881276 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.159294894 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123922197 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115699189 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123228076 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095538699 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122256471 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121932564 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096600513 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142063265 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094072806 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124992544 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094571601 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124733434 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138382165 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097467132 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123748864 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093956693 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132389495 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.0973116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124979031 seconds)
  done (took 5.220536735 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099489991 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127958991 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112233676 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141493668 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097189038 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.128019378 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.099941705 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12733443 seconds)
  done (took 2.036709859 seconds)
done (took 30.26469573 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113493782 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128679146 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.109000428 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.137243473 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.1046233 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.137028163 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.094337432 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136602177 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.136077866 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104427178 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139124105 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093226702 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125203853 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093160225 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136560748 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.099619099 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.136268373 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.132772198 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.10883753 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.136586666 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09557521 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135035478 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104991394 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13731168 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.136844395 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.108465654 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139547638 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100327785 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124162645 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096459725 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.129002803 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10697972 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125320302 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.137831681 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.100809374 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.127512699 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.096367739 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.127751783 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.108985792 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.135461575 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101063201 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135231202 seconds)
  done (took 6.105289792 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.112780376 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.144446412 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10889057 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082482186 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117985036 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082101225 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.141998018 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080449831 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111970943 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.112156314 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.104453977 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079384536 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079398281 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102679104 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078780918 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076260964 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110189799 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076566028 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077477878 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10660257 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080807016 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.102861469 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081667087 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079014846 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.10534289 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082917139 seconds)
  done (took 3.628952607 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102643969 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.143188384 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116004132 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.176664654 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.157847872 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.103507012 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136557111 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.14159541 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111470407 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122603362 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097829891 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152969146 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111145315 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131390562 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.125331694 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.110213889 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13788796 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.096057156 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.135474347 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113631659 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140198879 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133537774 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.114249288 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135112405 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093955523 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126792879 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100598295 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.143932275 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.130678905 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.104681195 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129896327 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097639007 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12579922 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106708772 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.129768516 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126347229 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.115647469 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13793096 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.103583497 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.126808872 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102047609 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.127011938 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144271258 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13367418 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.123722062 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.101144934 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127457008 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133585652 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.09593378 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141109877 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104359728 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.123649424 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.098061602 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.125293289 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095685777 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139754441 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.095476766 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.13304115 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131949251 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101016351 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.135661503 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.099095097 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140798645 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.094681997 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132552137 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.095571779 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.124137442 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121664818 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.117615418 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130916474 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164387882 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095993453 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125415863 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.104315542 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132206553 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.101080631 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.124643543 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110600076 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133723037 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126784729 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.106937097 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12700178 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097333558 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.143691719 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097337431 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.12646301 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.096540002 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131156287 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.096462131 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125326142 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137778504 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.094431223 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126589527 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109201583 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.1243892 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095997585 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130976393 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127907192 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095478488 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137678788 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101254819 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125461364 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105061103 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.125128219 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097083219 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134260729 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128523976 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094862444 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128685748 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101619259 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125752636 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098445712 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127005003 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095935324 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134708447 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131134804 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099419699 seconds)
  done (took 15.135620956 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235161851 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.220444447 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191307951 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.301167772 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137179518 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.120049788 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.217622446 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.161223655 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125270763 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.163195191 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172319553 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.186838238 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.143726078 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.185372514 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.17247246 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.125140732 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.144012202 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140162741 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.25046817 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.265258928 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.146129759 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103236675 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163636711 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.16329699 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.139490936 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135223056 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111914407 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.137786262 seconds)
  done (took 5.883024676 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.11158416 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157510409 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.100479662 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147606261 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.152103442 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.096222666 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130077813 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.126555448 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109237442 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138744743 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095330042 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131934899 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.133089034 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.104872329 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125967144 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104437628 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.135335337 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.097169917 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128510719 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098903491 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135685632 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.133458657 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.098641614 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123744213 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104388007 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124988339 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088555311 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144880161 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124957287 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117406607 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122846264 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103342244 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138519147 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.125063433 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.095684456 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.127112342 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.097018817 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.127099255 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.097256694 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12286728 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094705265 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.108615661 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.094723469 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.139744725 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100995125 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.111673097 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.101400157 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.131810569 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096031378 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122772361 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096466891 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127060349 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.127049136 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104063117 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126480336 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.09643048 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.127569343 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087628146 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.130930302 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.097524468 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115573052 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094659345 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128900603 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.090155707 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.13435292 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.100469312 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124297683 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.097165539 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.130015212 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102316055 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.127358887 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.102285641 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.123790476 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127105681 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098023589 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130701528 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.099094081 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123185941 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.094976978 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125100143 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076755542 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124869332 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076911053 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.097999913 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.123113672 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122955791 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.098282898 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130211056 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.111383916 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.12689361 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133549218 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096243088 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.1236021 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09915396 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114068848 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.098397552 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140905684 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113947889 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.12549996 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123352393 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109965042 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127278774 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.094816877 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107204294 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.104788657 seconds)
  done (took 13.200908745 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132299669 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155341684 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127479683 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.11401771 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15923244 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.160482709 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103402896 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132716419 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097100201 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144321402 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.096460817 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.135725917 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094998165 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139570349 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159367842 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105835277 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12870323 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110431947 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13106069 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171404989 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.114536385 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143768683 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143960807 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096386807 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132114544 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.113238744 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164377248 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.13976632 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108512081 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145223233 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110218427 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162626741 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.145935781 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099651565 seconds)
  done (took 5.561965041 seconds)
done (took 50.619003556 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.211640999 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.434321471 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.194787758 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.027936906 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.217649607 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.244967249 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.207856506 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.208526291 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.311394793 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.194890145 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.4372173 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.698191011 seconds)
done (took 60.516226637 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.296484083 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.350502053 seconds)
    (2/2) benchmarking "String"...
    done (took 1.482308141 seconds)
  done (took 3.953904226 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.795623108 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.140747311 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.459280881 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.196771588 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.197805145 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.485486423 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.882624033 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.573152974 seconds)
  done (took 28.057076195 seconds)
done (took 42.226602455 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.195616405 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.247210387 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.237598609 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.177380892 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.308166005 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.220291149 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.568928549 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.230748252 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.215430097 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.183473446 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.233537008 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.210116021 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.208979126 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.52913206 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.209345423 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.198457735 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.276214333 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.724663675 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.600308544 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.203714588 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.22872828 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.262285601 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.233909839 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.211965601 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.269142396 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.207311432 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.204250458 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.204331147 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.732963242 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.201917939 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.210946242 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.729192705 seconds)
  done (took 190.799004922 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.199541199 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.321820013 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.432137628 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.248864838 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.824394745 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.396841143 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.346674768 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.909176201 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.217486581 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.215738204 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.508071851 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.202695336 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.563658288 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.243680659 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.229622995 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.261861965 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.405347327 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.558350103 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.236975191 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.358921851 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.205606034 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.513401828 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.456021007 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.454546006 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.204127301 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.237018894 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.226648945 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.239182684 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.382489917 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.362203762 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.258263133 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.207227223 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.818485 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.056919439 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.212842794 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.21321002 seconds)
  done (took 150.853394889 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.201449245 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.200600355 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.2010768 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.234045519 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.201093894 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.770294792 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.765493203 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.708656955 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.587917316 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.566988756 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.462861736 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.202310922 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297145081 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.217791963 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.204277419 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.202916659 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.218170911 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.245730166 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206232993 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202871759 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.762802341 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.213823338 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.279408676 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.39660556 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.218790405 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235259281 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.592092363 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.202750881 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235272655 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.535459458 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.252791301 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203839962 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.586236666 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.304600809 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317928625 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205380192 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237425916 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.203101929 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.484344449 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204355467 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.204296897 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.208076803 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.885733095 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.207080224 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.775276446 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207461517 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.153024841 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.204192842 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204573835 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.424811736 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.87784537 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.223673175 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.204541268 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.207238117 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.20506994 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205160775 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.236925739 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.394944436 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.302353253 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.221525618 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.208901616 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237594033 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.205490861 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.418640888 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208975306 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.405895014 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.264018723 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.322110086 seconds)
    (69/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.206032136 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.771132679 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20672857 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304647213 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326379289 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.206524572 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.206021667 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206429842 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206385812 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.316858153 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.205479051 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.609928613 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.381509314 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.222667433 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.576657256 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.209551458 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.303126611 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.206662191 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.618438819 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.210257083 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.207105628 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.957678777 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303626777 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.207086992 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.206410596 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206776666 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.613211421 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.770379096 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.474200808 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.210562462 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.40244995 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.210761624 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.632641767 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.207782219 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.761134136 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.888226675 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.210940195 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319403445 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.382404257 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.225602369 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.207262553 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.581991012 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.210936529 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.265929296 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.210765385 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.605595621 seconds)
  done (took 365.509255094 seconds)
done (took 708.284944778 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.821025927 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.814068543 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.92357547 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.808575177 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.772441688 seconds)
  done (took 10.271183022 seconds)
done (took 11.403623521 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.39474463 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.39409456 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268229766 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.395428506 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240530454 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.411454799 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.374542214 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.229172423 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.308060054 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.28944325 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.309622171 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260871083 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.242537215 seconds)
  done (took 18.250450932 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.530892605 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.515333497 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27235277 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.528131948 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249173256 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.540874376 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.411338009 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.424666396 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.432599943 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241917527 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22323343 seconds)
  done (took 16.503769511 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.54020167 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.516346876 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276594589 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.530291928 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250412442 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.539579391 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413494101 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.425852432 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433541383 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.242524819 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222514608 seconds)
  done (took 16.525055197 seconds)
done (took 52.411927884 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.218553149 seconds)
  done (took 2.352433653 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.255023535 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.418014284 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.235957847 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.224025064 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.219235698 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.221216845 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.224686566 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.21977339 seconds)
  done (took 11.153032971 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.215863158 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.219203606 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.219649521 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.219504292 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.217202098 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.219156933 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.216310619 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.216432217 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.217039857 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.216983966 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.21668415 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.218847775 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.219831301 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.217284264 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.218653383 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.220623705 seconds)
  done (took 20.624621378 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.218649626 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.217004086 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.215788339 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.21777391 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.218169972 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.217321706 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.219855532 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.217935821 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.217610034 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.216973365 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.218065829 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.217161378 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.217724679 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.217268019 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.218123812 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.219094104 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.218170331 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.217341017 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.221354151 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.219322037 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.218688859 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.218561256 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.218844739 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.219274166 seconds)
  done (took 30.373265289 seconds)
done (took 65.638667657 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.837261509 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.855248472 seconds)
  done (took 6.828421576 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.278148991 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.283239531 seconds)
  done (took 3.699122455 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.221302692 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.221408688 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.221713002 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.22057807 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.221574598 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.221213216 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.221614065 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.221127111 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.221541172 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.222132104 seconds)
  done (took 13.351581501 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.221905097 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.221388149 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.219837118 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.2221432 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.221175666 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.219943642 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.222686893 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.221521031 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.222830792 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.219228966 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.223252266 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.220606388 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.221697961 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.220758132 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.222653895 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.220858579 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.220819336 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.22166779 seconds)
  done (took 23.122826788 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.223410978 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.242612779 seconds)
  done (took 3.603670478 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.350876827 seconds)
    (2/7) benchmarking "second"...
    done (took 1.263153927 seconds)
    (3/7) benchmarking "month"...
    done (took 1.33179708 seconds)
    (4/7) benchmarking "year"...
    done (took 1.318594143 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.262443221 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.242566095 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.263088 seconds)
  done (took 10.170696286 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.223724749 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.399510278 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.497518492 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.821581444 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.224376092 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.229067162 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.114433091 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.227918243 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.230843041 seconds)
  done (took 14.108131602 seconds)
done (took 76.022490809 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.243381473 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.233735796 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.505162732 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.225903082 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.231866042 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.516625944 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.265692112 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.346218453 seconds)
done (took 37.709629297 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.221103661 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.203988198 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.007194348 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.215651228 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.299755847 seconds)
  done (took 18.867109962 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.252508935 seconds)
    (2/2) benchmarking "read"...
    done (took 1.568127242 seconds)
  done (took 4.960370253 seconds)
done (took 31.190220332 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226414392 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.225457247 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.223311029 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.225320506 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.222445473 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.223284393 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.225338438 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.225412982 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.224794403 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.226062392 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.225983487 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.227192824 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225301998 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22298066 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223158224 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226326411 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.224070118 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224227288 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.223073111 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.223983515 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22328712 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225928963 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.224024243 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.223678825 seconds)
  done (took 30.532135699 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.226967514 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.224728378 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.225455293 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.227256645 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.223950695 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.226797335 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.22567836 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.22345892 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.22761358 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.226654365 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223939909 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.225278846 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.226881954 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.224792884 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226113699 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.224838476 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.227588057 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225150287 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228759542 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.226638724 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.227908701 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224953591 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.226824766 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228485339 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.225353125 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225033431 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.228118414 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.226537242 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227822104 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.225880718 seconds)
  done (took 37.928322835 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.23247719 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.234899727 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.228589079 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.229161943 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.227717536 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.228265456 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.228075001 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.229393315 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.228863989 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.228446054 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.229217722 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.228345387 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.228744643 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.229652149 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.228711151 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.228741256 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.229001476 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.228934133 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.228794894 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.229465137 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.228987016 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.229632388 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.229666773 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.230079837 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.230173705 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.229952718 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.229565381 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.229711288 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.229826661 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.230462366 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.229971727 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.230323343 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.230821274 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.230340477 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.23040928 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.230983203 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.235546325 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.236770715 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.230275334 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.231130756 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.230815139 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.230404022 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.230751989 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.231404157 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.230740481 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.230925838 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.230819302 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.231238057 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.230905773 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.231238006 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.230888118 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.231309083 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.232527558 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.231127881 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.231024641 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.232356368 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.231207543 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.232138299 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.23155761 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.231858837 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.232207584 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.231410598 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.231491342 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.231937883 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.232911159 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.2320096 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.231284352 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.232007372 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.232426447 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.232338709 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.233128708 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.231715172 seconds)
  done (took 89.757272996 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.232799064 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.230953936 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.231197294 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.230203988 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229888938 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.238971216 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.230801542 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233060689 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231016641 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.232231528 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233880066 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.230381583 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23154914 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.233325513 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233089851 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.231907091 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.233998978 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231155164 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.233839722 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.234950848 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.2340641 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.231759336 seconds)
  done (took 28.263226941 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23500275 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.236287727 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.231542568 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236403354 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234175001 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.235117852 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.23516057 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236528644 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235486422 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233427679 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232304655 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234817266 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23396551 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232180146 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232415379 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234384682 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235376184 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233373084 seconds)
  done (took 23.367229177 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.232908491 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.233207171 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.235109185 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232313718 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.233415108 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235052841 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233231329 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235669344 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.236084736 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.23370677 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.236742939 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235066977 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.235689207 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232920711 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236585921 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.234175225 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.236010806 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2332894 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236319281 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23510111 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23441384 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236472737 seconds)
  done (took 28.314507961 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237890643 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.236513051 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.234247896 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.234120868 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.234942132 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.237179625 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.236956296 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.234312619 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.238338593 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.236613384 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234454603 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.23681498 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.2369955 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.235619914 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.23566858 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234349397 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.237422098 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.236558819 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237652219 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.23471207 seconds)
  done (took 25.873571686 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238935059 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237445004 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.238646281 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238248433 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239194974 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.238053522 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237785278 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.23870387 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237940989 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.238287817 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.240162038 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.238320966 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238962439 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.239217496 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239491411 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238743091 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239067779 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240247903 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.238436117 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239807152 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.241002166 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23929915 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.239665682 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.240141404 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.239077131 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239758559 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.23899598 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.239736653 seconds)
  done (took 35.846304154 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240711409 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.23979827 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.236776272 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.238743405 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.238248764 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.237853085 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.237967374 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.238260158 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.240038102 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237537983 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.241076529 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.241188518 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.240422053 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.241478938 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.241507861 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.240555989 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241315183 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.239328378 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23850656 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238403556 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.240849683 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240803709 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.241479253 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.238139117 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23979727 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.240741627 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239394093 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.238739928 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241811932 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238868491 seconds)
  done (took 38.346068935 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.260188498 seconds)
    (2/2) benchmarking "in"...
    done (took 1.259722691 seconds)
  done (took 3.675224032 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.238959721 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241719893 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.243135062 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.2400574 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.238705382 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.241788226 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244060876 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239951057 seconds)
  done (took 11.084400566 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.242821452 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.242793657 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.242750577 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.241963445 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.243267928 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.242133556 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249628861 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.262951214 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.242741889 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.244721128 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.2506482 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.250278132 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.245323641 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243001411 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.243581477 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245701055 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.244066832 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.243408929 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.243091726 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.245316822 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.242493819 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245658646 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246018169 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.241547007 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.246151609 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.25392615 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.267150151 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.244851012 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245697727 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.248386586 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.245576853 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.241479249 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.244069437 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.245079066 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.245830412 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.244769669 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253996893 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267410687 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.25186715 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264608792 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246431883 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.241859444 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.247699777 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.246931992 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246816955 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.245212608 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.247045946 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.243716616 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.245592334 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.249983597 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.251727193 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246821699 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.243636766 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249161581 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.247238075 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252217452 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.264971361 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.250667734 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.256361583 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.25602818 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.278663004 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.271273026 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248492257 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.246908642 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25745281 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.271696729 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254315989 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.264291037 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.24486147 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.24819782 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.254326935 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279138231 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.273216955 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.247361141 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247846678 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.248093595 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24865967 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247337391 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254765518 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.270307206 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.247644007 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246747842 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258924687 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272370689 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.248250246 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.248168503 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.249166112 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.248277746 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.25050834 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259623754 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.267850947 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.24941281 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.248133635 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.249486466 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.249699057 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.249429906 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.249408876 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250329365 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.247195043 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.250589919 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248943267 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255240622 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.259413738 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249152341 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250140322 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.256378294 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.269422496 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251291957 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.255528481 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.250028554 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250917309 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.252413252 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.256807279 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.248688246 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253570417 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.259100627 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.25036814 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.252802876 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.250949139 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.251116741 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260795493 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.276320244 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.251773309 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.251297835 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.255303778 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.262707017 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251491743 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.253685661 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.251107824 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.248809017 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.249085067 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.25296468 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.250263224 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.25164164 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.2515378 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25263346 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.249880785 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.251008348 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.252146734 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.253998387 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.252117571 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.252906962 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.253078244 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.255309748 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.25269922 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.254263552 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.258677326 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.272863129 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.255211013 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.252526418 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.249690426 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252827722 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.254244704 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.253171729 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.253162823 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253203832 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.252852552 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.252493436 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253454782 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.253794789 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253927635 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.254763546 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257694294 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.252879598 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.258587802 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.252682861 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.252505857 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.253346988 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.254803101 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.253975884 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.253895248 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.254103207 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.257186233 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.26207973 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.254856151 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.254341845 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.257832669 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254566873 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254989181 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253858838 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.258355867 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.262291954 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.25446494 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.261159786 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.274569904 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255194119 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.255562133 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.255663792 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.255173249 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255558667 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.259015229 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.262682346 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267805269 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281784953 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.256862908 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.259996056 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.256715369 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.259544136 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.260929208 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.255886546 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.256499709 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257858785 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25719193 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256783294 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.260622583 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.255214019 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.25588682 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.25740353 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.256316327 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.256005843 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258614701 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.257592711 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257619175 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.252915003 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257193411 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255913073 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.257442322 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.254548389 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.257181136 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.257793711 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.258242016 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.256639148 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.263177938 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.254660502 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259599591 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258837626 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.258828835 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.256087207 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.259273193 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260075628 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.258038791 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264231499 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.277044472 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.259441631 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264984486 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.276708645 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.258314588 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.260583406 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.258581618 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.255873054 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.261797652 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.266570101 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.259172593 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.258473538 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.259743248 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260164401 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258892639 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.264669021 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.275913745 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.258954897 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.259322673 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.260663899 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.255788956 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.259388432 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.260224474 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.259746473 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260910092 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260280553 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.259533414 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260485158 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.259001697 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.259702718 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.25995403 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263266774 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.26750175 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.265208328 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.259603506 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.262296191 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.262181803 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.265108936 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.261818651 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.259943949 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.261175843 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273498108 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.285202812 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266718667 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.281744723 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.261372106 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267156547 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.282511355 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.26535049 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261793609 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262067948 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.26242877 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.262041473 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.25927673 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263160173 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.262787793 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.264197116 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.262446549 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.266802587 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.262924224 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.261879283 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.261620583 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.261636743 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.262994573 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.262389779 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.262850514 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.263507059 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263436625 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.261347755 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.26357895 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268825917 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282961148 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.263985181 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.262760873 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.264501063 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.262172439 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.263728375 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.26174924 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.266088664 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.27024735 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.266608439 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.272814176 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.265305654 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273069185 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.263388095 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.266417182 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.271753996 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.261307061 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.26284532 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.26425728 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.264028972 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270648434 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.283002301 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.26493564 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.267594662 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264561661 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.264267034 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.264257937 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.263516688 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266099757 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.263545554 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271483244 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.287296238 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.268910245 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267460171 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.260636044 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.264509966 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.265139327 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.265124844 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267322689 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.265455645 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.265799371 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.265767722 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.265408107 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.266621492 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.265451872 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.26594758 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.262654133 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.266547607 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272226983 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.288450793 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27020583 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.267009113 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.27216728 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285961108 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272369537 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.286342401 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.266948935 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.265825678 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.266097663 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.268993101 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.267408303 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.268645156 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.266203299 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.268687752 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.270914901 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.267141773 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.268221927 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.267740108 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.266785693 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.266651747 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278173812 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.290439567 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.269352271 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271702606 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.264220929 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.268654677 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.27241456 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.267655824 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.267149587 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.270927688 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278733479 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275675151 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.268447726 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.267374133 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269105654 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267853311 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.268357808 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.268322019 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.26637286 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.269228075 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.270289458 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.26860259 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271423206 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.269032391 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.268355112 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27029999 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.27069295 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.278446134 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.288780378 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.270401691 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267877291 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.269506194 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.270061592 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.269745133 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.268300342 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270076696 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268984632 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.271058115 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27775882 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.275998081 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.272876508 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.270774916 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.269383457 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.270115154 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.271388164 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271077737 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.270263682 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269832613 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.272068013 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.271267264 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.271110511 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.270549343 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.27105714 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.271094486 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270197786 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27420377 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.279186849 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272108489 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.268579652 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.271054735 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272869722 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.270380145 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.272236621 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.279020933 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.294456619 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.282534053 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.28112331 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.274816251 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.272440939 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27456603 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.280891182 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.269880017 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.273333065 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.272316334 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.272885314 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.273180737 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.276717702 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271774252 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.277659895 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.292072286 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.271837181 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280132961 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.295051996 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271556387 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.274423722 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.276679837 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.272845213 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.26981457 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.273937882 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.273468326 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279954927 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.293863873 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273258719 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27475621 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.272448272 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.275450711 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277309294 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273385731 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.275435503 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.271483487 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.275053164 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272694544 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274271585 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.270782613 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.273559008 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.274584898 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.277575947 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.280762055 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.272111284 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275956363 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.275033002 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.274325841 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275191372 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27610661 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.27217757 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.271602059 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.274683967 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274462709 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.275244331 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.279301653 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.274101498 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.277533692 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.276304774 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274633187 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278187364 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.285652956 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.284694497 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.273639437 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.275603796 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.276743353 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.277533806 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275995106 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.276602921 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276421111 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.276847448 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.275937622 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27624748 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.277263347 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.27934844 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292700784 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.299008886 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275557191 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.277523682 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279973343 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.276808736 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.274808456 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.277151317 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.278716522 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.280394195 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.284679627 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.277448563 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282891887 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.297540909 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.279471973 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.281315905 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.281725027 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.284907537 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.28014149 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277248329 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.277398847 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.282363443 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.294257707 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278972893 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28768177 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.30699262 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.298637293 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.278454524 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.277967851 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278867199 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.27868831 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.278930321 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.278292755 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.279666553 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280066135 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.279131417 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.279181823 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285502383 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.280588655 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.280353852 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.277572089 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.278414802 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.279107966 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.276492407 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.279791874 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.278211666 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.279305811 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.279384586 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.279548933 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.279980687 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293608418 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.306357614 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.279859586 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.279383081 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.276823622 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.282474444 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.283374891 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291060995 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.287169797 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.279466018 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.279638555 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.281473392 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281087242 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.279966293 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.28105976 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.280161512 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280661436 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.278299176 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.294552298 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.307991029 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.285676058 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.281505995 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280928314 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.282008811 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281950924 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280192484 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281519617 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.282426161 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.284389028 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284717481 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.281739629 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.281324819 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.285362316 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.289120876 seconds)
  done (took 755.396100537 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.280646669 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279683919 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279743486 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279044698 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279765674 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280382345 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279973626 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.280174972 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280378014 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28124814 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280238165 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280811887 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281509386 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281265972 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280119257 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280379791 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280710745 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.281091218 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281602338 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28031588 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280732707 seconds)
  done (took 28.082653767 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.283164211 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.280610095 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281589427 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284567224 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281252509 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.283721374 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.281884723 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284091314 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.28443218 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281556791 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.28392354 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284519959 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.281964 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.282180677 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282789489 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283943487 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.284484543 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281488719 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.283869176 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28317893 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283895643 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.282742821 seconds)
  done (took 29.420643543 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.284890268 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.28476567 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.284519484 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.282149024 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.284843644 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.282193134 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.284481816 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.285288613 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.285767752 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.286134722 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.284188706 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.285879048 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.292840189 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.290679992 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.286278865 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.285901713 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.429388555 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.285405908 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.286752617 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.284758437 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.282152299 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.291414543 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.30535548 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.284366519 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.286144358 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.287377247 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.286862303 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.286236593 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.285992646 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.287830585 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.289928847 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.285622816 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.287431612 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.289821443 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.28616895 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.287943304 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.291056617 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.286783071 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.283803311 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.28692681 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.298009665 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.308098811 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.28836054 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.294717819 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.308439643 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.287720913 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.29215077 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.29580358 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.28482545 seconds)
  done (took 64.471299949 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.287639981 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.287948528 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.286723574 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.287364808 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.288855253 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.288235723 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.28905889 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.287990876 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.28522205 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.285815734 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.288465428 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.286037975 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286711768 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.288567992 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.288813356 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.286041886 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.286173564 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287142455 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.285841508 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.28701471 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.286335597 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.290420366 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.290288286 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.287196505 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289792021 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.286572722 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287580955 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.290051656 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.287914707 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.288136115 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.289400495 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.290505365 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.289303794 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.288260853 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.287971439 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.290581634 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.2915232 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.288655008 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.29033378 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.288634275 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.290129819 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.289848799 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.290207398 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.290848464 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.289038455 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.289682117 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.290262608 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.288428873 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.289585634 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.29160725 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.291809503 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.289241121 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.29318955 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.288802118 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.291160604 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.292124436 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.289775515 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.288613316 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.292504381 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.290134415 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.289810899 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.291046071 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.28994001 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.291188428 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.292222829 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.289275242 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.28966583 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293223137 seconds)
  done (took 88.859567424 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292795475 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.291489974 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291533137 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290564818 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.292637328 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.291636555 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.291761814 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.290843402 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291400339 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291409279 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291532689 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.292249538 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.292839873 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.29271813 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292400731 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290600259 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.292456477 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290984278 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292775586 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291796211 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.291763771 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292796246 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.291988084 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292647184 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293134715 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292467142 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292161573 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292292756 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293464912 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292983899 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293188826 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.293389446 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.292681174 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292408412 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.293861833 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.293426491 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292672885 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293877119 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.293289465 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.29406986 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293921811 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292510568 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.29329092 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.293544565 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292104843 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293356803 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.294290131 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.293181741 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.294417329 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.294359638 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.292913569 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294386777 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294566026 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.294936748 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.294165871 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.295760939 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294176366 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296063631 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.294649546 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293788897 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293995705 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.295195125 seconds)
  done (took 81.369047829 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296479487 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295695397 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.294467079 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.292257811 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.294625224 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29354329 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.295979018 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.294221564 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.29458695 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.296728454 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295826491 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291820825 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294045489 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295833188 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.292284677 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293834394 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293345707 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292728353 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293268117 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.291611177 seconds)
  done (took 27.089143388 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.290271917 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29396437 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.290677869 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291014648 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.294701868 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.292201383 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.293883533 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29369333 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291195656 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293339732 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294167721 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293324906 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290949398 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291299365 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.293155954 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.290344239 seconds)
  done (took 21.881485056 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.290225449 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.294289486 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.292266484 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.293565342 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.290548786 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.289958336 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.293208762 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.291033184 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.290801846 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.294405838 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.295273949 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.293246834 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.293353098 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.292585696 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.289980404 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.292763277 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.291028736 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.291239599 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.294112768 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.292539267 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.290986367 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.291265995 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.293656176 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.292870133 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.290916785 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.290906511 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.291866472 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.290609405 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.290721142 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.293213746 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.291021906 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.291923551 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.291952168 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.291942432 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.293691539 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.291027955 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.294894929 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.29471674 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.293995709 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.29375611 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.294589553 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.292036615 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.294539321 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.295472304 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.292339575 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.293889138 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.291701507 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.291661111 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.292150872 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.292517437 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.295665131 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.295454087 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.295317486 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.295194295 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.295642412 seconds)
  done (took 72.30627526 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294262266 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29525013 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.293634089 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.294868109 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.296002112 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.292135874 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.296396635 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.294380165 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294030921 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.296602475 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293436018 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.297263995 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293206063 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295454391 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294559707 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295103078 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.294027591 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293564209 seconds)
  done (took 24.509841561 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.294394476 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293989878 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.296270309 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.293848206 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.294429662 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.298198253 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293906241 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.297319716 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296973243 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.295070339 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294161685 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.297530552 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296641071 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.298073877 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.2957438 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294457469 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.296715845 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2981857 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.29409003 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295411508 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297104388 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297558431 seconds)
  done (took 29.715769332 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.296667063 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.297491616 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.296358121 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.314270478 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.316242864 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.321184157 seconds)
  done (took 9.049095477 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305769545 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29915041 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295831072 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299863109 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298939723 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296148474 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297068672 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29664796 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298101098 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296206975 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296727021 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298393675 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298845629 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295999296 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299927671 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298985053 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296437651 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296318404 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296574186 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29795595 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295995944 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29972105 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297227837 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296409909 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296662577 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296867055 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299134768 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297886651 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297839556 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299939297 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299397094 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29732663 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299677386 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297354807 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300882677 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299794321 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297704533 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300545343 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300936062 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298381911 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299700654 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301076163 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300253718 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298089978 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300544489 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298405017 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297753831 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297836895 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298235927 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301224517 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300899 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299249668 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300571419 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301101058 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30091491 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301982403 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302408111 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298804032 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304673591 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302733781 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300421317 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302684415 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299922897 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299955139 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30220873 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298851077 seconds)
  done (took 86.972478826 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299225985 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30055121 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299802127 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300015276 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298919305 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299511164 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298974835 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299366431 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300892523 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298851181 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302439035 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301181288 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299606063 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299052853 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29892972 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299644462 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301318038 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300654743 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301112538 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302927803 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301166303 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301012417 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3000159 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299826088 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301604923 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303383032 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300633169 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301279679 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299951967 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29997877 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30056507 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301892419 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300918338 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300991931 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301439693 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301238841 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301901418 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301528627 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300702782 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306417818 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300628674 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302625836 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301340724 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301531115 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302742433 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300437482 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301312921 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302269155 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300895694 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300563748 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301181148 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301048595 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301982524 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301286387 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302066065 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301057799 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301284154 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301596845 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301871858 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304483882 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301367131 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30303944 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304180356 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301716031 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30062966 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302140772 seconds)
  done (took 87.088411348 seconds)
done (took 1760.341432066 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.464198083 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.421006026 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.303175527 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.301580075 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.30315557 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.307329362 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.323044713 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.303970379 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.303924469 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.304011854 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.304154295 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.491913927 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.302123907 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.304340868 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.304115367 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.398081942 seconds)
  done (took 42.654350401 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.332874927 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.310845396 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.424790869 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.328709195 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.334710939 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.499509683 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.363785505 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.308321091 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.483554986 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.352674987 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.89421236 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.333110154 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.309782793 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.438495381 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.327588725 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.498819722 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.559475903 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.898540064 seconds)
  done (took 30.214306971 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.768475554 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.321264324 seconds)
  done (took 9.30561225 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.329474288 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.310370527 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.31091653 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.309171043 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.301511508 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.304025312 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.308665664 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.306519638 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.108284374 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.47049313 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.311872573 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.320718355 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.331860075 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.310700463 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.307788507 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.347929203 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.46365253 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.308085189 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.306508268 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.316195446 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.311578837 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.43439669 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.351989518 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.30916167 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.439134111 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.08916821 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.311829359 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.319141981 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.464454323 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.308239348 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.310115207 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.310331654 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.311131842 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.228808046 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.768221128 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.303979987 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.35638204 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.319836322 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.307090399 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.50292013 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.313228332 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.318612662 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.304925123 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.747652517 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.454323376 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.429261284 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.535157431 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.330750005 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.313031878 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.372791146 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.311581535 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.313360884 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.356407828 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.1107707 seconds)
  done (took 110.885066625 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.349834484 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.702291914 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.47378931 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.329884336 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.940943899 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.970814918 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.321586819 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.600363647 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.359984881 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304021758 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.603387464 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.824370774 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.327262137 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.327854977 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.971659479 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.400295719 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306509358 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.085193503 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.32433572 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.310342678 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.814833865 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311865391 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.3055923 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.496397148 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.344604575 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.769053668 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.796282249 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.786002123 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.326344243 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.306050832 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.779163403 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.328575862 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.376058283 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.306323489 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.571929707 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.672260085 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.66710546 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.327883233 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.316417696 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.31128493 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.31626301 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.763430561 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.672652293 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.324814217 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.309206805 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.768176285 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.32514463 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.316720275 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.315506476 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.510013718 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.166958768 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.309490722 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.789616813 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.314136941 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.669212651 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.366487561 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.370307649 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.798144701 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.325705841 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.416468856 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.329554909 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.308302146 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.31138468 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.311459822 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.325669811 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.663293916 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.70213018 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.312382785 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.661274036 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.792146431 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.326211047 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.867164714 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.196991724 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.334526012 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.365561887 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.310918471 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.904276485 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.808997835 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.352583019 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.310215933 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.652046105 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.328700609 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.595726525 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.326697091 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.311505067 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.826203987 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.323380682 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.368694122 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.309665487 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.313781758 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.953701397 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323769479 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.581223214 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.330498157 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.310326499 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.311430283 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.347546606 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.311274481 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.310816282 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.317074333 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.845794917 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.335318 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.44198606 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333516479 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312159952 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.334597142 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.311046749 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.310870639 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.530366182 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.777356953 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.338671492 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.311969606 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.323237102 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.312079958 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.477088426 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.313621878 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.625876459 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.329423905 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31482945 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.321666004 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.044788648 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.375532238 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31318776 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.314199034 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.190241213 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.525997071 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.332298718 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.331814699 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.312665474 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.330335222 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.601464717 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.33298187 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.34885443 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.313449077 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.027621545 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.348461944 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.34156284 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.838901861 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.322552106 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.236554221 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.33822515 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.315590168 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.600166802 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.582409056 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.57523162 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.315058105 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.337897815 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.000703186 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.338317374 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.452528187 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.334442314 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.36237086 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.512625118 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.471495472 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.31636409 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.946847163 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.315798337 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.528277731 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.314496329 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.614476944 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.809666881 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.331888092 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.317417262 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.026021148 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.050017468 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.995368166 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.316930246 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.59384973 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.263501399 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.784500592 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.314705561 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.316133052 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.764871364 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.316152706 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.324676923 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.315849449 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.316454215 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.388688386 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.489255453 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.972370372 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.323811414 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.773574852 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.374657516 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315888525 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.339169554 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.320004528 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.666533323 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.38618523 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.317113291 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.327220217 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.318057817 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.319901778 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79504496 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.206126564 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.322361887 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.46771659 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.958380664 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.334367074 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.318105276 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.946371514 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.648713021 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.833761328 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.378618968 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.632284286 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.339428791 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.356493292 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.899296292 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.368569444 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.799081028 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.339180925 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.319160248 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.91812282 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.335737882 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.372652904 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.318675874 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.319584143 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.861776209 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.338599827 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.320412288 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.595446787 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.338632279 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.567555404 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.318847805 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.357695154 seconds)
  done (took 1107.651078509 seconds)
done (took 1301.924440393 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.319576828 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.319417733 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.303958145 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.328164126 seconds)
  done (took 26.503878389 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.340590869 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.329552517 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.330986908 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.328303319 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.332180323 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.328698406 seconds)
  done (took 9.228038107 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.413279959 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.323770299 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.330596367 seconds)
  done (took 19.304092482 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.540074786 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.63785093 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.673627752 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.60027363 seconds)
  done (took 10.689749452 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.330789065 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.331565401 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.330912617 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.333056451 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.343182731 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.343343652 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.332883435 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.33300361 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.343699646 seconds)
  done (took 13.259321865 seconds)
done (took 80.217904926 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.325381883 seconds)
    (2/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.299294097 seconds)
    (3/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.275812292 seconds)
    (4/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.311554038 seconds)
    (5/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.123999021 seconds)
    (6/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.704744328 seconds)
    (7/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.469967606 seconds)
    (8/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.335027938 seconds)
    (9/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.546311798 seconds)
    (10/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.644591317 seconds)
    (11/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.325704429 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.291833734 seconds)
    (13/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.423527669 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.226984834 seconds)
    (15/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.583772395 seconds)
    (16/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.369588713 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.366584157 seconds)
    (18/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.454769593 seconds)
    (19/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.342582403 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.351997929 seconds)
    (21/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.390406777 seconds)
    (22/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.416118893 seconds)
    (23/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.325799977 seconds)
    (24/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.305428826 seconds)
    (25/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.446649301 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.059340659 seconds)
    (27/286) benchmarking ("sort", Float64, true)...
    done (took 6.326996159 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.343333127 seconds)
    (29/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.437920452 seconds)
    (30/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.432941812 seconds)
    (31/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.389871603 seconds)
    (32/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.409270251 seconds)
    (33/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.832320081 seconds)
    (34/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.328063146 seconds)
    (35/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.361673333 seconds)
    (36/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.108925452 seconds)
    (37/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.470040358 seconds)
    (38/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.30506016 seconds)
    (39/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.427731869 seconds)
    (40/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.339588656 seconds)
    (41/286) benchmarking ("sort", Float32, true)...
    done (took 6.345686725 seconds)
    (42/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.206337213 seconds)
    (43/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.551291472 seconds)
    (44/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.429865198 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.438163247 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.218132748 seconds)
    (47/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.354872212 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.585015204 seconds)
    (49/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.374842542 seconds)
    (50/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.778338206 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.386704647 seconds)
    (52/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.176299129 seconds)
    (53/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.760316208 seconds)
    (54/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.308177066 seconds)
    (55/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.781548123 seconds)
    (56/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.307792887 seconds)
    (57/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.588176071 seconds)
    (58/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.181168086 seconds)
    (59/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.687269542 seconds)
    (60/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.421060358 seconds)
    (61/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.354682438 seconds)
    (62/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.126944774 seconds)
    (63/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.434052129 seconds)
    (64/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.308469998 seconds)
    (65/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.965047757 seconds)
    (66/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.418868488 seconds)
    (67/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.355168507 seconds)
    (68/286) benchmarking ("sort", Int64, false)...
    done (took 5.536618947 seconds)
    (69/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.355149941 seconds)
    (70/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.190942262 seconds)
    (71/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.510555507 seconds)
    (72/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.312647198 seconds)
    (73/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.607495602 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.766426291 seconds)
    (75/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.110598354 seconds)
    (76/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.60190814 seconds)
    (77/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.448503561 seconds)
    (78/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.222727459 seconds)
    (79/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.448017587 seconds)
    (80/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.307775498 seconds)
    (81/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.31022155 seconds)
    (82/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.387419691 seconds)
    (83/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.824993415 seconds)
    (84/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.34928197 seconds)
    (85/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.830425555 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.011516405 seconds)
    (87/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.309860656 seconds)
    (88/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.770043164 seconds)
    (89/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.542130516 seconds)
    (90/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.330439953 seconds)
    (91/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.332947168 seconds)
    (92/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.380163935 seconds)
    (93/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.414564937 seconds)
    (94/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.35763669 seconds)
    (95/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.191946662 seconds)
    (96/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.371475909 seconds)
    (97/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.318478849 seconds)
    (98/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.582929138 seconds)
    (99/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.310967339 seconds)
    (100/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.812378955 seconds)
    (101/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.830360241 seconds)
    (102/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.932948799 seconds)
    (103/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.987918484 seconds)
    (104/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.346050835 seconds)
    (105/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.666675768 seconds)
    (106/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.384714255 seconds)
    (107/286) benchmarking ("sort", Bool, false)...
    done (took 1.872804406 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.767305436 seconds)
    (109/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.37015474 seconds)
    (110/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.109317621 seconds)
    (111/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.61078837 seconds)
    (112/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.371518712 seconds)
    (113/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.418150478 seconds)
    (114/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.350903877 seconds)
    (115/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.320166345 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.302007977 seconds)
    (117/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.175879132 seconds)
    (118/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.117541367 seconds)
    (119/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.32902429 seconds)
    (120/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.957534619 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.61237292 seconds)
    (122/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.360756043 seconds)
    (123/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.972457475 seconds)
    (124/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.402238282 seconds)
    (125/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.426071676 seconds)
    (126/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.833296583 seconds)
    (127/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.906603596 seconds)
    (128/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.434098002 seconds)
    (129/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.312023112 seconds)
    (130/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.359495753 seconds)
    (131/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.909599651 seconds)
    (132/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.329765566 seconds)
    (133/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.316317942 seconds)
    (134/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.971040613 seconds)
    (135/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.710399416 seconds)
    (136/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.516855518 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.137856596 seconds)
    (138/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.714086944 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.378515902 seconds)
    (140/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.31356069 seconds)
    (141/286) benchmarking ("sort", Float64, false)...
    done (took 5.669235303 seconds)
    (142/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.19609619 seconds)
    (143/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.37724755 seconds)
    (144/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.418450033 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.355629677 seconds)
    (146/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.449913145 seconds)
    (147/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.19184259 seconds)
    (148/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.121319032 seconds)
    (149/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.840554357 seconds)
    (150/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.576810329 seconds)
    (151/286) benchmarking ("sort", Int8, false)...
    done (took 4.358720242 seconds)
    (152/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.313762614 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.550022016 seconds)
    (154/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.351390721 seconds)
    (155/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.155685867 seconds)
    (156/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.313248119 seconds)
    (157/286) benchmarking ("sort", BigInt, true)...
    done (took 6.337089504 seconds)
    (158/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.940230034 seconds)
    (159/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.586109757 seconds)
    (160/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.316193581 seconds)
    (161/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.332334489 seconds)
    (162/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.337004041 seconds)
    (163/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.027427386 seconds)
    (164/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.751873535 seconds)
    (165/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.361152573 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.289562168 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.282270113 seconds)
    (168/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.314837296 seconds)
    (169/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.352523282 seconds)
    (170/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.456783905 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.361773973 seconds)
    (172/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.314740024 seconds)
    (173/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.435542361 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.739535804 seconds)
    (175/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.395265501 seconds)
    (176/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.558161521 seconds)
    (177/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.343371249 seconds)
    (178/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.851750026 seconds)
    (179/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.518855086 seconds)
    (180/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.481229954 seconds)
    (181/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.457671105 seconds)
    (182/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.315484685 seconds)
    (183/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.711270861 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.991354157 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 5.445029738 seconds)
    (186/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.419174379 seconds)
    (187/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.754703399 seconds)
    (188/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.358786153 seconds)
    (189/286) benchmarking ("sort", BigInt, false)...
    done (took 6.336781882 seconds)
    (190/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.33478714 seconds)
    (191/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.183303907 seconds)
    (192/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.884738087 seconds)
    (193/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.340881094 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.992310668 seconds)
    (195/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.675129065 seconds)
    (196/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.061686514 seconds)
    (197/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.333931112 seconds)
    (198/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.418602802 seconds)
    (199/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.317085546 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.55198466 seconds)
    (201/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.432710384 seconds)
    (202/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.139611108 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.015718218 seconds)
    (204/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.352054881 seconds)
    (205/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.364363027 seconds)
    (206/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.632107744 seconds)
    (207/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.757047814 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.360164974 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.699023166 seconds)
    (210/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.152629841 seconds)
    (211/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.365601146 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.379973493 seconds)
    (213/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.368581276 seconds)
    (214/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.401656296 seconds)
    (215/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.421430363 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.138846037 seconds)
    (217/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.34759514 seconds)
    (218/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.15745286 seconds)
    (219/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.345161743 seconds)
    (220/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.31977109 seconds)
    (221/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.326041489 seconds)
    (222/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.38749615 seconds)
    (223/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.389750857 seconds)
    (224/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.203294077 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.346684387 seconds)
    (226/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.678112911 seconds)
    (227/286) benchmarking ("sort", Float32, false)...
    done (took 5.342920197 seconds)
    (228/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.550148088 seconds)
    (229/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.455770464 seconds)
    (230/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.339696307 seconds)
    (231/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.955402364 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.559478704 seconds)
    (233/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.717415946 seconds)
    (234/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.882791632 seconds)
    (235/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.065491735 seconds)
    (236/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.173403883 seconds)
    (237/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.359627631 seconds)
    (238/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.716689116 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.372275881 seconds)
    (240/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.349986669 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.724225865 seconds)
    (242/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.725543137 seconds)
    (243/286) benchmarking ("sort", Int8, true)...
    done (took 6.364403794 seconds)
    (244/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.340582541 seconds)
    (245/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.810023392 seconds)
    (246/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.35852704 seconds)
    (247/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.355043099 seconds)
    (248/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.350194201 seconds)
    (249/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.360324917 seconds)
    (250/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.464648393 seconds)
    (251/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.863059629 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.700961025 seconds)
    (253/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.968312253 seconds)
    (254/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.427163089 seconds)
    (255/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.319770607 seconds)
    (256/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.372669684 seconds)
    (257/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.342608201 seconds)
    (258/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.358307962 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.450590447 seconds)
    (260/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.767133202 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.424432382 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.457098049 seconds)
    (263/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.319992338 seconds)
    (264/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.363875695 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.163354476 seconds)
    (266/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.333296112 seconds)
    (267/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.369453127 seconds)
    (268/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.321381358 seconds)
    (269/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.396620146 seconds)
    (270/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.575711381 seconds)
    (271/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.817850319 seconds)
    (272/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.330178186 seconds)
    (273/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.320864235 seconds)
    (274/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.840677527 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.403602821 seconds)
    (276/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.42691929 seconds)
    (277/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.334230615 seconds)
    (278/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.366232265 seconds)
    (279/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.358442252 seconds)
    (280/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.349972953 seconds)
    (281/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.450628494 seconds)
    (282/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.251006398 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.371528599 seconds)
    (284/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.393473914 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.947976366 seconds)
    (286/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.322930505 seconds)
  done (took 943.209218917 seconds)
done (took 944.448577316 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.375757166 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378697644 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.354308154 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.375060765 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.473108682 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.377122821 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.364999993 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.355608935 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.402504524 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.403993502 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.359781309 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.37547732 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.362177568 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.360755317 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.35562034 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376529476 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.49394293 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.369532505 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.378530263 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.364653395 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.378439177 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.361173718 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.405326933 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.37646151 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.358724122 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.357955421 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.364672596 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.38208207 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.474096337 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.366185423 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.358316707 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.373946796 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.493658239 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.361676184 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.351463824 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.3815706 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.373906784 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.366344504 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.359677145 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.39535269 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.898373379 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.381787432 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.365042905 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.357747978 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.356935454 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.360209628 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.364372621 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.362961318 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378286128 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379448886 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.858973597 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.394968492 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.366388576 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.358232185 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.368354445 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.364122182 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.360822211 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382368465 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.383677379 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382648006 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.487361196 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.367942282 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.359529176 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.38172004 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.371915138 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.894285446 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.372124475 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.36090253 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.925605905 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.387540181 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.971511256 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.396747344 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.36076807 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.378755035 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.39722436 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.491725182 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.359231271 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.358182267 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.374984068 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.365636273 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.369552342 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380972814 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.364327528 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.359828454 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380643123 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.381489199 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.370448506 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.367796883 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.368539205 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.385874507 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.373547591 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.378013444 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.363873155 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.355245942 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.369733991 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.362422305 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.369408829 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.370518861 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.365729864 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.371232173 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.869322416 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.404575497 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.357935775 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.357943563 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.360060396 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.380459926 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.867675511 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.384401536 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.383711621 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.40830826 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.363289797 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.48138993 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.37555327 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38690786 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.369848791 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.366775682 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.35756962 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.489052671 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.868827597 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.40005453 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.364390343 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.3665014 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386289316 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.363833553 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.359031234 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.493515864 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.365697435 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384364987 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.490166187 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.372676311 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.400094784 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.368033646 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.365738029 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.384230039 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.386608544 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.400318801 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.365823703 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388038723 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.384270415 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.360301146 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.382627527 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.373225418 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.364480254 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.370361304 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.358234574 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.385621991 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384026994 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383732892 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.385685664 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.490715202 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.361428115 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.490413991 seconds)
done (took 231.477566554 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.423913906 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.354890598 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.446094406 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.361153559 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.462395262 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.462775763 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.357856202 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.358732072 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.35817962 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.741006539 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.359097511 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.359499848 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.361801699 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.359165644 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.445215753 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.362402031 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.358773977 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.703435809 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.362769229 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.431598919 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.354981302 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.359653375 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.361898721 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.747326431 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.357024329 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.362952666 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.433089945 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.362453322 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.711812063 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.36101779 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.365026603 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.710568526 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.451423498 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.380321869 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.371882887 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.369479746 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.46527888 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.382098173 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.445012854 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.445469533 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.449976042 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.40107321 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.362994006 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.361540083 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.364373284 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.363184949 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.360713404 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.391176953 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.355786159 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.362765026 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.706796492 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.374238062 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.372295697 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.363710587 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.362077592 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.381919907 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.362882919 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.36488876 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.453799978 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.365285733 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.426867 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.750882245 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.744006774 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.364950359 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.358833799 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.36341422 seconds)
  done (took 150.387429127 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.432247891 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.438345702 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.480215545 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.381984567 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.415132282 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.483240618 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.381649471 seconds)
  done (took 11.282264607 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.369907848 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.366919338 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.415629661 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.415100036 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.36498401 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.543419479 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.36651441 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.376372295 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.364370794 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.418160208 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.367712128 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.367746368 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.372038999 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.35820034 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.413683006 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.378217817 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.481322569 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.367877526 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.367213458 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.527074596 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36495214 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.373763099 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.418731471 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.37799558 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.369342693 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.371933833 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.173371235 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366748706 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.365227464 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.368200197 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.365310719 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.442420854 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.367859289 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.366429483 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.365745626 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.483980856 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.366702083 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.365308889 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.367627155 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.364977702 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.367776206 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.368362055 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.368257507 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.366062638 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.366459419 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.391417337 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.368308915 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.369199445 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.368334591 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.369100652 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.41865176 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.370042062 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.366211917 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.366458111 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.424366032 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376821446 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.368494707 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.366751343 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.371442615 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366731617 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.530732416 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.41663685 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.370126575 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.416587552 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37086977 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.371129957 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.370097916 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.370932128 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.424284651 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.370950818 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.417140001 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.367748072 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.557016791 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393777551 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.371537922 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.373530895 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.373667352 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.369961582 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.371301544 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.376524269 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.368143333 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.371770687 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.376831277 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369002267 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368218144 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.537865534 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479579919 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.370460514 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.385486966 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.379369606 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.369964822 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.425147723 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.372017861 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.369632654 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.423612595 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.488421693 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.426590449 seconds)
  done (took 157.048601009 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.377772319 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.381132342 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.374950066 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.396191856 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.392192493 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.372431854 seconds)
  done (took 9.570791101 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.375059238 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.374367505 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.372129303 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.373542372 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.373335908 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.373472659 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.372369086 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37506315 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.377499391 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.3734122 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.374568444 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.379874495 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.377689007 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.375353131 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.376263237 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.376398491 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.374824677 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.373208655 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.375601369 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375817146 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.468786672 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.375250128 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374357972 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.376425114 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.379679812 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.374836442 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.382873564 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.375523341 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.374992779 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.382922557 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.394019178 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.377094455 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.376711233 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.381816887 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.379597186 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.375478766 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379859698 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.379501159 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.373075182 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.376963314 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.379935959 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37625274 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.375862243 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.380548639 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.378787447 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.381395129 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.38486527 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.383883041 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.377370875 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.381172342 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.380572124 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.376861533 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.378325376 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.379940414 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.378587859 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398894122 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.385620974 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.377186005 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.376541983 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.37862843 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.379339787 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.377917028 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378898234 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.380450901 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.383845109 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.380980284 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.379084963 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.381186936 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377349467 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.376636139 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.38230474 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.375505674 seconds)
  done (took 101.603700399 seconds)
done (took 431.158348946 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.870784473 seconds)
  done (took 8.152042333 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.738738264 seconds)
  done (took 8.021278308 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.932826181 seconds)
  done (took 23.220111428 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.440817006 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.419677967 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.381961613 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.371068027 seconds)
  done (took 26.895203579 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.780041174 seconds)
  done (took 8.061303825 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.384314295 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.37044199 seconds)
  done (took 14.037537226 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.485326432 seconds)
  done (took 7.767326601 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.422666176 seconds)
  done (took 7.710501507 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.388333826 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.393957085 seconds)
  done (took 14.078399369 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.36746959 seconds)
  done (took 7.649967466 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.920654846 seconds)
  done (took 12.204060432 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.371173302 seconds)
  done (took 7.6556359 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.378310102 seconds)
  done (took 7.661429263 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.78591556 seconds)
  done (took 10.068124481 seconds)
done (took 164.466267527 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.371723641 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.37987974 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.379678459 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.380363056 seconds)
  done (took 26.794532693 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.413986364 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.413959655 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.413819816 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.42481785 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.416363207 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.413259387 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.406404986 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.405932656 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.423940046 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.416358618 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.415289597 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.416470296 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.415169843 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.406361516 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.416133316 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.41584299 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.425450877 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.415492435 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.406228719 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.41707126 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.382468837 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.425473338 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.417584313 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.381537138 seconds)
  done (took 35.190490563 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.903093931 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.453326083 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.534318249 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.433582838 seconds)
  done (took 7.60914512 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.433051967 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.435364174 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.448483517 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.486920912 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.510561708 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.444273257 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.406702429 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.403494263 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.390616402 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.434838769 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.509829026 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.450969436 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.518854235 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.382179834 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.58706875 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.381964465 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.383626047 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.434911343 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.488128828 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.501393879 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.384321792 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.435662085 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.439003983 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.452894758 seconds)
  done (took 36.030607682 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.383642423 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.401088785 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.380450494 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.382201083 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.39134332 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.382893928 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.383248606 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.382970688 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.38283068 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.389160437 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.381944177 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.39579561 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.383267064 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.381908289 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.389460275 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.384439349 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.387830593 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.382146108 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.382802265 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.38948726 seconds)
  done (took 29.006564466 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.375738973 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.359015308 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.729474866 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.633374819 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.37758881 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.376425461 seconds)
  done (took 28.138770206 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.459807049 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.614132934 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.384378068 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.771914553 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.86432694 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.403414369 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.38542653 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.641654844 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.98020865 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.97851211 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.445590672 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.456588114 seconds)
  done (took 20.674112613 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.390625074 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.384669533 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.386792747 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.400708153 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.444367147 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.406003175 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.392546306 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.378739397 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.451473938 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.466548935 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.407198672 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.446182174 seconds)
  done (took 38.245540926 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467202922 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.431686576 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.396081449 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398897859 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.10488965 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592153397 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.38282533 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.107808726 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.404496016 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653913338 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381505854 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469525667 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.638109065 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387753425 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384309225 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.404509131 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626705177 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888461395 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385461636 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.696215092 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413648133 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385637012 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.780122228 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.629963104 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614046496 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.365748047 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.643061845 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.15735393 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68847932 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39952404 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393117496 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382239752 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657248699 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058746019 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497997201 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606574592 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415068315 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.93278016 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.362812748 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.715781922 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391682904 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402716396 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394667943 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383109656 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.318149903 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383429725 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135962021 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.409076552 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.094830648 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.383619531 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664898451 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486548617 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.387617162 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.957695197 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451750407 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.411100775 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.386998479 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479061427 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97553889 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.98174971 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392271987 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.327067201 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38912777 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.700087904 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037294801 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.40885965 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.388183125 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388344666 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319601685 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.697221397 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408190381 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547444241 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.41062294 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047254956 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149842159 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.410275909 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.334951644 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946753458 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391368046 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.325473367 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614752326 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.163889027 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325453067 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.337993263 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.321420344 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114714145 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394494178 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.965875109 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40846765 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.138735035 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.633204749 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422857609 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409539105 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610282948 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.263890579 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385632877 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.386645653 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503407328 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409745748 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.119482598 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342173784 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.391867638 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646732061 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.599091731 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387324203 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.422842699 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905067983 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42403204 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.408693593 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.386905778 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.624094881 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.029450379 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428724169 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.977915651 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411144909 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.164644097 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153765381 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399254759 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.399395359 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.390195817 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676698957 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.165387966 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.272647139 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456276998 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392296755 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388745998 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.779642249 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.247593095 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.288732569 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.602184789 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425467423 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.406457451 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.39039832 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350638253 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.388524908 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394889448 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.188413588 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615220826 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396051413 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672560246 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324558587 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528227222 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40587308 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.612987583 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.653320195 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.412609676 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650993294 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389146676 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397980509 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408495266 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409199067 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493448801 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412345689 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.398994579 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.654214822 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.394602299 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.393795658 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.879080156 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.175798079 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393817573 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.396652827 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391351179 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04221467 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460599296 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400591736 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327579632 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.406198436 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460360979 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398822656 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61890033 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.777881626 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423549027 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.399186995 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.400682414 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62332811 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402760548 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.709047466 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478934552 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.890341314 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031297858 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42359313 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.326083783 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.102902944 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.085400311 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392787409 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.583328842 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392210855 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.619267927 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.426015359 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390926601 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.018882896 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418862672 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.731086274 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.404066561 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406876871 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.399399757 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39341032 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.777165897 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.028087697 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416303045 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.410633521 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53784822 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.408764329 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.328144586 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.911764715 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400740747 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394402432 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.169697931 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428240645 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.727545772 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236109886 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676689599 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41710232 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679729573 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.823035848 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.432592936 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.429375946 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396832814 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396304455 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.407319821 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423237776 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.40620894 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.626445323 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.842944938 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966910798 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176780104 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97817895 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.758636936 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.420042461 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.284211253 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.133788029 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350192659 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.054986445 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651273432 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.152623433 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371794207 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896649061 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.677416327 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227390806 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67854374 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630589841 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.734695119 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.416589041 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681779239 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613481239 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431752391 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403965896 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.333934658 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.914751968 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977749298 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420145467 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4741715 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13411584 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420743268 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.175028169 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.452093148 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.192694845 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827967372 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.96609414 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.794055485 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.412663149 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.417017219 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230964459 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426877304 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.9279951 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059122562 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.42125413 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.902361454 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359563447 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.631746292 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.429863138 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.396141275 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.070166064 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.416114247 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.658925085 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678751344 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333095539 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409078242 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958663039 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.286751979 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.406398465 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400168949 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179517943 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416694217 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.711965457 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.404053876 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.800372199 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427576872 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.333895464 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334276811 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.092616819 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403996098 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370612765 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906393206 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.416777418 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403296827 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422184567 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253655213 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658970334 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.414410703 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.014877029 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645702176 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404008006 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423903295 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.404976408 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401821752 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.382815795 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.294463787 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.637972361 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418397916 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.648444556 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.457531714 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.301461996 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.440268178 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615366064 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.284702075 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402969571 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658291459 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.132073884 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.413679426 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177391821 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449584856 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403073219 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.439341868 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418799995 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423817613 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492686862 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632307171 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.433807527 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.414350764 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835216664 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423264958 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404727293 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.418216441 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497432427 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.950515185 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.804541092 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.200399342 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026109797 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189326764 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.047796134 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.705696804 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407570649 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404527205 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338363801 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556585098 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.933526885 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678955595 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524280692 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.418303034 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427346414 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40712494 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413485122 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61928928 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680379645 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.280809789 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880000722 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.144034824 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.298509871 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415234805 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.616937461 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929296728 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005216588 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708331017 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.405531629 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.154237521 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699667516 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.496535465 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405144288 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.000957993 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.406371057 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.190138157 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.411262842 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405107473 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571562524 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687636982 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095200654 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.437064004 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.561954162 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.179069759 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.738663241 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.666527027 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.917856399 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.6367118 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052309449 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.179514687 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677572767 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476998067 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635607065 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.538828316 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553834025 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.417879072 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.291857121 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407989619 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254200554 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.116680142 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.417137923 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037821432 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694493232 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.41086357 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.421277153 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436225189 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.41813318 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.63108527 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144016681 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.6333044 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417504189 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.41083602 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.398840725 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039875988 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.713959803 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347760265 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.411353484 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663596065 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665154839 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434198862 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.860339311 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.118982192 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976120774 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.383825529 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431297803 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41626688 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.171166118 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04827094 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.826891925 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94749228 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.073829451 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410005087 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688528481 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.414678421 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412422849 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690833489 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.414962563 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.418532136 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647095912 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.059853646 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264725768 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.430589138 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.804522675 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.351434164 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.63781806 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.467426268 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345766667 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41978089 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.848088751 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.431315483 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530056202 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421517645 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.419315519 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420742224 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.174404298 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.698826626 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.415751984 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.399916233 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.398746826 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412427232 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511943494 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998572733 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43762758 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.211369071 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.761186626 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.667696258 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.417365593 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.398266572 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.414495834 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410417087 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.134507011 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.389018604 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411510249 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00655539 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.419996834 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.425950415 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414913047 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.626747019 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622414377 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419553625 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644765226 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43686985 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430799374 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.30988799 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.1841306 seconds)
  done (took 1698.962841144 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.423859404 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.436206795 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.451008713 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.515980021 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.456322549 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.499100621 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.457762389 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.444798527 seconds)
  done (took 53.004543013 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.412932058 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.570955233 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.445023464 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.413830297 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.421572833 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.415301381 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.899211209 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.435003651 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.421777386 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.423289688 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.429865422 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.424964885 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.118603806 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.445189 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.414670102 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.41021439 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.426349741 seconds)
  done (took 66.854063134 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.753583262 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.666492638 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.657011991 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.494399202 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.417123301 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.425667383 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.754335972 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.437825529 seconds)
  done (took 54.928684451 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.42456676 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.424973488 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.425188831 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.42593707 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.426331958 seconds)
  done (took 8.446953333 seconds)
done (took 2105.172485518 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.418276615 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.420161235 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.419004598 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.42075933 seconds)
  done (took 6.999791458 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.393478225 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.139101291 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.393897105 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.408914517 seconds)
  done (took 18.656597391 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.422371636 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.463186157 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.173236574 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.087779191 seconds)
  done (took 5.585514127 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.165161508 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.178954923 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.161530386 seconds)
  done (took 7.829897522 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.415017836 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.417508526 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.419134836 seconds)
  done (took 20.574955074 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.708591828 seconds)
  done (took 3.032021773 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.563253204 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.611858708 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.750864163 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.74783334 seconds)
  done (took 7.997425096 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.804428552 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.790138523 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.613725178 seconds)
  done (took 6.531722651 seconds)
done (took 91.416228177 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.456575137 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.444560403 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.626040895 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.428873089 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.6773868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.626978316 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.781629923 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.396999838 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.938937066 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.926916597 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.430202776 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.655774595 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.738513126 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.445003377 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.738046025 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.439189254 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.6524141 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.502460249 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.114951456 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.314453831 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.785105903 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.065051639 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.265255223 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.088784359 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.649802041 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.5736639 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.64857295 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.442869525 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.292961904 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.670655876 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.574501961 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.428991693 seconds)
  done (took 196.147367418 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.41831656 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.418498309 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.418544845 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.41892081 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.440567217 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.420624212 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.422037542 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.422419354 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.418483012 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.430028932 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.41758427 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.436865248 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.439478628 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.437128493 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.421402351 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.419315506 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.418516518 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.419747097 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.436386504 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.427750367 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.420275764 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.452562205 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.419331072 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.43231197 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.419761828 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.419609995 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.452750441 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.418667239 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.437487753 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.418717697 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.420519396 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.437743052 seconds)
  done (took 206.978255296 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.420627794 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.419405289 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.438753167 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.437912155 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.420815845 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.425226335 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.439579889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.437975512 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.447887827 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.427304491 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.422292115 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.422699441 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.423070536 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.439007117 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.438221333 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.43918291 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.432169804 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.420566264 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.438810122 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.442491996 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.4255594 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.438163333 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.429278058 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.424206904 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.43030237 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.420996072 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.421298876 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.422259504 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.426936436 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.42196266 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.446200537 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.425807202 seconds)
  done (took 207.096078076 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.62516327 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.4291109 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.428996147 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.38352967 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.429887996 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.429389898 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.425889572 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.621522403 seconds)
  done (took 15.103487039 seconds)
done (took 626.650262749 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.833710602 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.564874458 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.641038084 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.453348738 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.345452948 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.474321666 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.450698679 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.631886144 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.388337719 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.646466842 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.747325073 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.47056306 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.896837599 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.452648012 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.719139949 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.558027174 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.407383579 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.537266256 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.789754134 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.086054115 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.726696133 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.986295841 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.653871783 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.373618187 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.907277242 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.94520441 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.218739913 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.365123957 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.468282577 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.793105683 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.167628311 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.487245096 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.496016126 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.519844671 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.576335906 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.561439824 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.452304752 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.515292633 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.663424999 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.706421957 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.067672703 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.186040437 seconds)
  done (took 97.263983121 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.415184483 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.414695977 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.413425546 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.415575493 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.415483035 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.413537289 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.413574624 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.414299767 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.414531801 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.415617787 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.413709037 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.41633898 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.413685836 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.416806352 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.413889627 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.415154593 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.416695365 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.417380246 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.413925725 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.415239781 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.414123933 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.414176579 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.415753068 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.415670167 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.415692013 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.415357473 seconds)
  done (took 38.122998856 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.43349796 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.69836086 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.877590622 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.445551816 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.434607078 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.43877166 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.519735442 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.43988624 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.437096458 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.439260915 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.602613976 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.442031654 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.472398882 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.904734334 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.44527618 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.436023382 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.435238836 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.435948513 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.707519007 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.45318017 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.544668264 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.442705743 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.522121289 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.453077162 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.461296132 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436063697 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.440752679 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.031162982 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.459597736 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.602198581 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.299000063 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.522405819 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.991176866 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.92465791 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.298852017 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.443264346 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.437928711 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.606745253 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.4436104 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.437435784 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.523806986 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.442698909 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.889016563 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.133218617 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.461098033 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.437258807 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.049119493 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.624723718 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.703249667 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.449148683 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.927085578 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.446336992 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.439768064 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.440072021 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.705970863 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.449007219 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.439747665 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.066060595 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.467805412 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.524659544 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.445002758 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.439939395 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.713722542 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.442648965 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.701554522 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.445650042 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.449010992 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.45948967 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.891243532 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.446434732 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.164646947 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.462910717 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.440513902 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.604731413 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.706534923 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.092867553 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.462982952 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.71566855 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.007174577 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.546093444 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.447784752 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.021656346 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.551150762 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.448343442 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.442015928 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.442061213 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.440519827 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.485142993 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.522295719 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.102196001 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.161967176 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.09756822 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.549027389 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.453348077 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.441643693 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.066946374 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.464184245 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.440260537 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.891423585 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.154443593 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.464980157 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.450248142 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.155276228 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.466660215 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.529588221 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.453029168 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.904100403 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.44877877 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.48886664 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.442475766 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.450460348 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.466344865 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.529348047 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.452029144 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.44369277 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.124568432 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.635819516 seconds)
  done (took 190.424556039 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.441127404 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.436027586 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.437028282 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.435641983 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.43500905 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.444081534 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.435822924 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.437898261 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.442166737 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.437483899 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.43620478 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.437312073 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.437792336 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.459883806 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.450410905 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.444182481 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.048210154 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.439641241 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.437035156 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.437077553 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.253530852 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.4431303 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.437711142 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.438047207 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.438281891 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.438622044 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.440116303 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.440437585 seconds)
  done (took 155.083008322 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.444810179 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.073034345 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.4670944 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.587727033 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.472043156 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.44205357 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.585199369 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.509702814 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.466496283 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.442647696 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.442598797 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.774468288 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.450070086 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.997993954 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.65468954 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.610282166 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.999234524 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.463267605 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.443869643 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.443762005 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.590260375 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.453244743 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.769707174 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.049232437 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.466820911 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.046605627 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.429935843 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.447234551 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.445189316 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.049731132 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.462826612 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.770005654 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.530378799 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.509570784 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.072526558 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.01870067 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.01284425 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.60754273 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.451460953 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.443907956 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.443762105 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.428163273 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.050651671 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.467585731 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.447884001 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.03836665 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.466804825 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.448242331 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.452588532 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.446963038 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.512275828 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.536756128 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.797180426 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.057763061 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.547774464 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.458854527 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.591054354 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.844996643 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.448988446 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.996804089 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.42907918 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.08526096 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.471841459 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.430801108 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.448222305 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.453800528 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.610587763 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.596166091 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.02394339 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.471499968 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.020174633 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.633526088 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.451214027 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.448531216 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.449849064 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.086371845 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.045039868 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.634927351 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.600744737 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.663748438 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.43757729 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.449099398 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.431606981 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.533775361 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.45273498 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.085335004 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.041280316 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.471839697 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.451680852 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.451269602 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.45053165 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.641708702 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.108287116 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.557011868 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.993163111 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.809290188 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.794812848 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.455317286 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.513179747 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.471878146 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.791936812 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.456407648 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.513510776 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.905455502 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.794963941 seconds)
  done (took 173.348576006 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.710273151 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.688249125 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.540121854 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.606442345 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.094982665 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.042721019 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.831099825 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.60719921 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.559733423 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.723121555 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.650203991 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.537475514 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.678131472 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.531304274 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.226874204 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.541658726 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.560074527 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.599184797 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.610370755 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.489277495 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.153631211 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.750337443 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.654413746 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.431853542 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.544629083 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.249533046 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.033920279 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.034788982 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.639920307 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.79486496 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.03004503 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.607360117 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.472298286 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.21410717 seconds)
  done (took 69.791388668 seconds)
done (took 725.366000163 seconds)
SAVING RESULT...
DONE!
