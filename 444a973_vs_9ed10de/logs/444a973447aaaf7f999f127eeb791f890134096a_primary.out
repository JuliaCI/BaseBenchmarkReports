cset: moving following pidspec: 29666
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.239185562 seconds)
loading group "string"... done (took 0.586979736 seconds)
loading group "linalg"... done (took 8.357728382 seconds)
loading group "parallel"... done (took 0.172098963 seconds)
loading group "find"... done (took 1.265299752 seconds)
loading group "tuple"... done (took 1.92426772 seconds)
loading group "dates"... done (took 1.313580652 seconds)
loading group "micro"... done (took 0.201298878 seconds)
loading group "io"... done (took 1.021865391 seconds)
loading group "scalar"... done (took 41.030041405 seconds)
loading group "sparse"... done (took 12.355338019 seconds)
loading group "broadcast"... done (took 1.04082055 seconds)
loading group "union"... done (took 14.123522831 seconds)
loading group "simd"... done (took 4.89932501 seconds)
loading group "random"... done (took 9.526099247 seconds)
loading group "problem"... done (took 1.729532276 seconds)
loading group "array"... done (took 22.94903616 seconds)
loading group "misc"... done (took 1.731764048 seconds)
loading group "sort"... done (took 3.729463541 seconds)
loading group "collection"... done (took 19.067204588 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.545329528 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127272386 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.139999826 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121887435 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.155897073 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117262674 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124745193 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084462982 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.915220846 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151781639 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115411765 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.443421641 seconds)
done (took 5.41885352 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175145468 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088585993 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082085406 seconds)
  done (took 1.225854211 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067018672 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128834146 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067935056 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067896605 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068793752 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068840323 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068759803 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068556162 seconds)
  done (took 1.594809081 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073330151 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069147219 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067292555 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070515231 seconds)
  done (took 1.337126719 seconds)
done (took 5.466526395 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.802956662 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210385459 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191008194 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.408022886 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.140407638 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.184289391 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.652505585 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.328886456 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.204543733 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095324565 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113536209 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.362837248 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12498732 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.648063356 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078126993 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096870761 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139584239 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444917112 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072393832 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086288515 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.096043213 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131276298 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089821399 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077114339 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151020663 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07070905 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144346262 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083677657 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06951676 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.222368945 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17634093 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.683684631 seconds)
  done (took 10.476195326 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102493513 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100820671 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071045487 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128215405 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098701395 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070930548 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077875223 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069808728 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093532012 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133623266 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09213921 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109012795 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066496223 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070608964 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083645275 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198034404 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081075239 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083272486 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069178762 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079562189 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107901655 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079226605 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081009107 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083834275 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129959833 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169971836 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096898321 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09830707 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067792319 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082521619 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11562445 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12761224 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067279931 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070991029 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127553316 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095688878 seconds)
  done (took 4.577241654 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.10428836 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152870552 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092169841 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140716338 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065930461 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112762107 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067045991 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083736371 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.237634277 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.475012888 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.625999098 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.149385924 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117871635 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105438288 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071511882 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069687318 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068795364 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.268594686 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.099680875 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113405142 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086781169 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071793878 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069894426 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065844191 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072976109 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065682937 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069571184 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.093402352 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076906158 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.33462104 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093760699 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126407664 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070893017 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.852143741 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.140656661 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069261825 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105834274 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16753282 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094133423 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064551646 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142181147 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069003092 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065967967 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.300406025 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.0671871 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075067668 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067370143 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069367435 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089099223 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112264178 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121697703 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066347326 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067798443 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173676444 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067976279 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082512647 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.231396174 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15311979 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067077849 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.296127747 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097805305 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073578557 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065768082 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.19788522 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118007832 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069180008 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068466139 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069842743 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069299121 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386011861 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069398492 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.919552363 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07158903 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080801094 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072987337 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071993801 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079694225 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079853982 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093444664 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067718138 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074584164 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067712279 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066907617 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067764765 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094096492 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.392020737 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06847776 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072990694 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.070136579 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096025759 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101644515 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067470197 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066560547 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102881682 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071002925 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066588148 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069705628 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122583745 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073163351 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115066264 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067366993 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064403023 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.181036083 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098032046 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070677424 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102459326 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077791827 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071650742 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.466759263 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066051914 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073149355 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066739025 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070031305 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068992642 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081659875 seconds)
  done (took 21.939581473 seconds)
done (took 39.15490001 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.243415513 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083391263 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085261302 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086569881 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086206112 seconds)
  done (took 1.731645506 seconds)
done (took 2.85909157 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126609019 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099506612 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067321853 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098346398 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065769053 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104243479 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106658713 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08656014 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102097704 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065359396 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098075686 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06584026 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065259011 seconds)
  done (took 2.295500562 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082714097 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083792488 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069779957 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084254223 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06502952 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084210516 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082672379 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090362392 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083499231 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074026925 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064290513 seconds)
  done (took 1.985344335 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082168492 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083593978 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069580431 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08202086 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063583507 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081850496 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082915097 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088394736 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083716525 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07595166 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064815501 seconds)
  done (took 1.975827361 seconds)
done (took 7.372001321 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076988992 seconds)
  done (took 1.186996271 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.544880366 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.590687775 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079005905 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100755702 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192842682 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.111903264 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.242506631 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086136424 seconds)
  done (took 8.231212736 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.107353707 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070396227 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070139867 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070323051 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071329464 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07177238 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071653739 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071593221 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072557936 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072552161 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072296137 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072254163 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069846878 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070269793 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069136424 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07063087 seconds)
  done (took 2.360097726 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097985584 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096179485 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074218601 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075585069 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073924058 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073488161 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077222193 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076511746 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073846647 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075281323 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077519217 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074051188 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073888042 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064631318 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074224877 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076960552 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071406884 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074688105 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075753448 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07645014 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075672713 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065764694 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074226562 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075056677 seconds)
  done (took 3.040021756 seconds)
done (took 15.93818992 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11683811 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078445421 seconds)
  done (took 1.306389152 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079141739 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080464024 seconds)
  done (took 1.283741614 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07812822 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063358262 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084383226 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07409905 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064923687 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065422625 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085199289 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06621987 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065202112 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065441344 seconds)
  done (took 1.837613511 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066501447 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073606149 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071157082 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081190319 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072574864 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065974488 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071469708 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067376465 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076489264 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065246302 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069734328 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083835 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068555162 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085357344 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06874178 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069114234 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070850301 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067980165 seconds)
  done (took 2.42400668 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063871862 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064008859 seconds)
  done (took 1.254415974 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06749298 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064126795 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066528218 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067366114 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063989028 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063244559 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06506248 seconds)
  done (took 1.581297532 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.367819875 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.123328385 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.329793015 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072647326 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083618084 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257225696 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066297166 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071980567 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071689347 seconds)
  done (took 2.615051243 seconds)
done (took 13.430868648 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081460493 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086309191 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098450147 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418402395 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096268146 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070608668 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116260476 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181539787 seconds)
done (took 2.290755019 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217224777 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.802974172 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.459141053 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214933274 seconds)
  done (took 2.608673124 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337504983 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088501409 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079848001 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069595733 seconds)
  done (took 1.712718263 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067440507 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070613027 seconds)
  done (took 1.2743354 seconds)
done (took 6.952219475 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065362401 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065109506 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092150165 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06694905 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.182713378 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066996842 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066579848 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066508586 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066951753 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066448581 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066872841 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066230031 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067104965 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.06607509 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066724512 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066424434 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066652511 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06654774 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066598895 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066851919 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066517033 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066206003 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06690107 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066448364 seconds)
  done (took 2.905716591 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081954363 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067682616 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071031766 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070674285 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071264367 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070806086 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070525687 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069265014 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070979297 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068593552 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071191001 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071132426 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068922387 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071494358 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068644524 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071024965 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070701478 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06902049 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068435011 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07097774 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07055486 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069006319 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071115803 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070783587 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071213428 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071104559 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068981626 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068966035 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07060364 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071104011 seconds)
  done (took 3.264282889 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065900034 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061055694 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063601638 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072124893 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062895258 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063713394 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063060273 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062956751 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063603157 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063046803 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063828713 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062801006 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063346701 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063415632 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063522667 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067588074 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080801516 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063087454 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062891616 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063355081 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067056243 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062572511 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063116388 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062483529 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062708987 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062675472 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066043876 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062574434 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063548615 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062590682 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066646701 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067328042 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062944201 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071943867 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067273363 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062760415 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066760428 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062770696 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063610051 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062640957 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062458568 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062884037 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062817509 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072005054 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062905563 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064290121 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062868138 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064134724 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063876239 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065511001 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062538289 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062502465 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064883367 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063936958 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067906392 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062374007 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063431761 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063083842 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063764014 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062785369 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062440822 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062463187 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066067131 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063561285 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080487907 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072328644 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062722706 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064405377 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063337853 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066247976 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063911003 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078237346 seconds)
  done (took 5.822439876 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085645266 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087814554 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066969251 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067547589 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063908952 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063760401 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072405923 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063461925 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068457478 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083232956 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064098708 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068363129 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068826504 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068402916 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063619418 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06810586 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072627616 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064287455 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063374992 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067668926 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063672429 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071551946 seconds)
  done (took 2.689295089 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150709466 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069028945 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109777574 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074387976 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072707616 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07452919 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069713395 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069689302 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070180951 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0709788 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070266917 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069634131 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072379232 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070454653 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070424141 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07025992 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069879399 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070065868 seconds)
  done (took 2.547321002 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078029552 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067925609 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086953355 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067952556 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068620455 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068789668 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073822925 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07402018 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06882316 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069042884 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073825487 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068694261 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068584402 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068996894 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068853791 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069009468 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068620358 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069334995 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073564728 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073257171 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073448859 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074666049 seconds)
  done (took 2.729076579 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079034967 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066618868 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083321049 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068953056 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063501911 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064057514 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069963378 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068697304 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07001804 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.077411816 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068538197 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063480878 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070841012 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068597662 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071918307 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068332003 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068432789 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068283276 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068113447 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064084769 seconds)
  done (took 2.549808054 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083715142 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064709387 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065046844 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071456038 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066002038 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066628296 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073279076 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066736418 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066731799 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087537161 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066454284 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067076171 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073524708 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071262148 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066629731 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073412395 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073925966 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073267492 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070184789 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066743479 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087604276 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066944083 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07320593 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066866723 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066717059 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06647361 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066674781 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070740382 seconds)
  done (took 3.136835063 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065885629 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064691132 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065271213 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064925679 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065299623 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06629429 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066650657 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066556989 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066817927 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066754532 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066008297 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065992129 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066122605 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066110035 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066392891 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066290308 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066296361 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066990788 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066814936 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066877068 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066164562 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066186584 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066497829 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066944776 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066142177 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066408956 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066478876 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066223225 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066070249 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066434001 seconds)
  done (took 3.147709123 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075510062 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074956247 seconds)
  done (took 1.310852105 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063659588 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080748779 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063078681 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074087763 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072974804 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066769016 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073231413 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072658945 seconds)
  done (took 1.724860708 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085761834 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077177783 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066092419 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079115479 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077081257 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086814103 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129400659 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065933232 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076927319 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06631571 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08415257 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068074727 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076536887 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071047724 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076136079 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080144542 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063370838 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070793875 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.066908192 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06380412 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066582126 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079394414 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075250372 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063982013 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071036006 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093943034 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082564557 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064822771 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073273988 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078191984 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075953809 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062623092 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065603173 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065808579 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064086427 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07649348 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085125861 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072815414 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078619142 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066220558 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07378352 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063262074 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074062518 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076391582 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082176529 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065276291 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065392437 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063519215 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066171096 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071549225 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063026934 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070811079 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062604994 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078096839 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073716529 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080790904 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064689339 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071287453 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071896044 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072531006 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076693887 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071808866 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075159878 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064736722 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081913523 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075242521 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077654662 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063672676 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062532099 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063624878 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079749885 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09556833 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075406681 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065299232 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065145883 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06185751 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071027225 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064196957 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074493153 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076889636 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064844646 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070069338 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077677929 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069442679 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072262792 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071527916 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06362502 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068803654 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066368034 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085894281 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064162631 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063202812 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066456831 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080817883 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071964177 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067841426 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066627425 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076897594 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062392403 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065282759 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066113176 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071196074 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079287083 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069872714 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070500499 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079372261 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074851739 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070789655 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072095116 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062223715 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065964569 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067276567 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076868164 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062246317 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072083023 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069162876 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065255091 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076375074 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06277282 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064195422 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077419694 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075827399 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062830391 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061641248 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071626591 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06444374 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06727401 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078108062 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063010596 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062051169 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062409635 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071827218 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06368157 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.076484926 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068010817 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071605968 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.187614801 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063933038 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070889211 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079945076 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070478337 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072360659 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076751665 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072408575 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064904117 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078379707 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072787054 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06873239 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075273651 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069981898 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063473753 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068237718 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072685555 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064125685 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073269929 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068281359 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072574049 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066411659 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063990254 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071480924 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06664858 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068192258 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070713281 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065252533 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081338579 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072553864 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064250333 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063568028 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074087566 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066973535 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065277522 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068112142 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072865365 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066379301 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06424861 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065953953 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071782676 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074764131 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068367203 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067025351 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075363511 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08408262 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065264961 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072712051 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065689656 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06658382 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066615347 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08021828 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076219495 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070380597 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072903388 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062777835 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075610403 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078136357 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067953347 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064040046 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068119014 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069144533 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077725742 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069607197 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065554585 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064293915 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071547584 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068371475 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07265047 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064934854 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067561869 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070958855 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063987806 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070724977 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065686337 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079396593 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074056775 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06362465 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067792911 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063807765 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076829122 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063570847 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066789166 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067906765 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066072704 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064734931 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072103884 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062559232 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078153331 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07803307 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070719175 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067875416 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065129443 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078161313 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070973652 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074523368 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07287922 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075599207 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081127526 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06787844 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072749949 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080629987 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064873666 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062541119 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077515215 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063978602 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064477632 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064559219 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063703976 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0709029 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07059081 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074617063 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061386447 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070854062 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062479123 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066652569 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062266344 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072700639 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070551582 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067638443 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075706069 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064058998 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063705275 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070475966 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062356943 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.062932194 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063883319 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069895013 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064701457 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070249905 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067033939 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070423279 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067014257 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06265394 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070423815 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064690301 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070354419 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073616588 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063843526 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069914436 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070611496 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064466773 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.200313517 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068737093 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067527901 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072654413 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070817056 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071070649 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073004349 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063881213 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077961834 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065579809 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079064777 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070943618 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062726891 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071984374 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072644238 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070764325 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066424805 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.0663745 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071284933 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064731875 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072531861 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077977854 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06672639 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081614777 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077383562 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071698678 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072726998 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071496273 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071342719 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067789622 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069650387 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066521867 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071286561 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065305681 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073836267 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073721849 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070513223 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071999348 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066423456 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071076731 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066885658 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063245958 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068076383 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068086289 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06531755 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077190584 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063928797 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067178858 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063501466 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064546126 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063451758 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061201285 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071062287 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071241972 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064714973 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074717725 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06664463 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071769327 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081820855 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063081145 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063791345 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062494194 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065368337 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076574015 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.063952136 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077618402 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069472609 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066831366 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061810918 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064485444 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063058484 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061610965 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062471977 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072262328 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066055391 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063759214 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064003271 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070541762 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064613387 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076564256 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063373173 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068620398 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063925046 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061918242 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066597448 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066748246 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070716482 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064561444 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065942548 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061671397 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06438534 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069174251 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071273771 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065004929 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071294311 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076769298 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065938021 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071576453 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06612048 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061497252 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070663057 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063457438 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063482616 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066390065 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071495284 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071602661 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064395001 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077725645 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066231174 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069965837 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064125464 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062335612 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06335556 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063441946 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063752682 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066494835 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064788259 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077852309 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063828357 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071930235 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070967042 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069368658 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076270896 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06634012 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071670739 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070647987 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066619969 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071294569 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07809251 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068467406 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071846631 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064898678 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.0705786 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074498745 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06682195 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076080564 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070036363 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064684547 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070222595 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065499452 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063910344 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064921992 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063650505 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073858582 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.195688923 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067281964 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067891767 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063428709 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068966274 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067889018 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079998926 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07267545 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072352616 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063154579 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062175827 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065574108 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065727006 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072121626 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072934472 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075622739 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072948323 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069019271 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065248798 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080755802 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075806842 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073859164 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067001136 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073781908 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066452153 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07297436 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070530802 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070731658 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066087583 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071915047 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071130389 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068160922 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07519235 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073565013 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06577337 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070289247 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071790291 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071941922 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064019013 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066066298 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072178503 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075398963 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072525469 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066765999 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081478274 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066802047 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070575882 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068373586 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065533423 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074679152 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063529588 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07236415 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066163488 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064711475 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062270511 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068478407 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067069252 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072637077 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067913076 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064218206 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081854239 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080475981 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072172421 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06551875 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064538753 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063735663 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064551547 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068703528 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066565093 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071738338 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.08115113 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068120776 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068020249 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064024159 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065676991 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073296241 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073957156 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063381963 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062341315 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067973636 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071847528 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077485865 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064507551 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065555685 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072503286 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072289809 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064120427 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068222163 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062881873 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073815617 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083127006 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065873909 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071979987 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075588537 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078974555 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.065776879 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063911323 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065358884 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070805362 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069551452 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064549765 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064926297 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083063098 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071159629 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06652457 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063048663 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070353485 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066712497 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078444518 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066506998 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068911772 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074791767 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072079579 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073101438 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07604471 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077107047 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071888124 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071800329 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064696219 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070846081 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064395522 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068597102 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066810701 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066312841 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070063981 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072278869 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067682803 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081017324 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080018382 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068298052 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061847527 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067477381 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06749255 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062955 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06518556 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063517674 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063870565 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063935159 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064413079 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071216213 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07414865 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069025574 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065201162 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06437665 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06214507 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.207727494 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072871915 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072922277 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064218268 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066424702 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066857975 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074963139 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069366171 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067477195 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072362477 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072406281 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072170324 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06456206 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077894492 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06549969 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072282011 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069292302 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066140391 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.0662454 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073278257 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070715486 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06806676 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072955828 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073975541 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068576198 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064155242 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06358305 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075313184 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064244921 seconds)
  done (took 43.285069564 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0999665 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063625565 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064082464 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063927271 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0739024 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065107019 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064624934 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064996316 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064989783 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067310796 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064549689 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064871075 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071827776 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080053315 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075197307 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068954268 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064581055 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065727038 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064862101 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065840558 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073089489 seconds)
  done (took 2.688781115 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071109191 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078828745 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076342543 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081692971 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074094564 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069243093 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0768802 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069050759 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077939509 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074841067 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077911423 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069516271 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074814635 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075318658 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075390542 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070651239 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077845478 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073440737 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070045034 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07748929 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069822612 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076962425 seconds)
  done (took 2.867134364 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064762948 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063791122 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070300109 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063580149 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065491085 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063526726 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068818407 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064236748 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067744677 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06794366 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084040304 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065669206 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070842954 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063390712 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068423912 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063280816 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110664909 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067574775 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064761261 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064826509 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062982937 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072334465 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063742423 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063781272 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067228455 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067471501 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065395694 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063556771 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064479587 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066811985 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064805517 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062838967 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071626685 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070742464 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067322666 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067344806 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064351401 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064521666 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065827567 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063308623 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070849426 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063864255 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06530493 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071759452 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063087673 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062945797 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071685452 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064741026 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062805896 seconds)
  done (took 4.533190985 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075459894 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111468796 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069136521 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09341647 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07886064 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071177742 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069692923 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094085083 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064835227 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066200971 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079737847 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080320867 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067280987 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068816241 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070500681 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067152807 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068244322 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066493545 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07079041 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06667906 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070823755 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071465109 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.077681923 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077375921 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066737912 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06441308 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065446275 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066667986 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076639045 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069299333 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067291218 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067692126 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07686309 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070309896 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065235247 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06496316 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077507304 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066082974 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065309932 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063545853 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064915323 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066831324 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069453731 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077742877 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065443831 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070208308 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065422636 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063054235 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076501795 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06588388 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069638796 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078046109 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066319482 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065742091 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066533467 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076649505 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065396221 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064244886 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065400745 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07644303 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063281104 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066180959 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077093292 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065419774 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068821359 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077291533 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07034104 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067001283 seconds)
  done (took 6.216488094 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073799303 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094327799 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079884088 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079594581 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073421869 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073543758 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073438159 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073388696 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074240007 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077312468 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07401037 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116711065 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069200555 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075275326 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073095168 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073843418 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073222141 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073353396 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073844601 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073053374 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073146248 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079498487 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07334592 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079379717 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076419846 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069153936 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072995646 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073036095 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079935014 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073254731 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076467457 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073272327 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072961188 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079693986 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076397092 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072931202 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062987921 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073281389 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073629115 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073288941 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069221644 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079282723 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073042263 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069427331 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073193791 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073266516 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079454386 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076279613 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074930507 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076661175 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073247655 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079556116 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072839549 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073533554 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079253358 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082019033 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079453815 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080204431 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073145663 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079277647 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079023283 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082059901 seconds)
  done (took 5.983384548 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077632675 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070618316 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081151921 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061834357 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066068598 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072676785 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062042515 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062378706 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070662318 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070617179 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073935782 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07445184 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076755609 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074434238 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074306074 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076598467 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071965323 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072027362 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070357851 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072674632 seconds)
  done (took 2.705250133 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076604967 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081001123 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06769544 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072139669 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06774397 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071916211 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067029844 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0677986 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068369141 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06784188 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07343445 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073751897 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068973327 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074223828 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075152007 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074081742 seconds)
  done (took 2.407320606 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083277216 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07063259 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077746376 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063315842 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068220709 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063644544 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063323114 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062364708 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062276702 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076244212 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063359831 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074609389 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063748071 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062690578 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062846813 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069041563 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062653942 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063407928 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063071338 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077107266 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070482398 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064525079 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067118362 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063300187 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06888526 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070802663 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065410109 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06699268 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064080007 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065337635 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070076246 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070660715 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063030747 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064381006 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062819383 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063554171 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063515485 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06383045 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069391739 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063400495 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062115752 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068329043 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063544651 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064729778 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062715319 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063773075 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062771675 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069392589 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063842679 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086487083 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063524405 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065875024 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063842113 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070905605 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065858375 seconds)
  done (took 4.936268442 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079247409 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067530921 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062209525 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06192635 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06762859 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069192663 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069494004 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069233959 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069616131 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062131709 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068420404 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067256413 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068315387 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067669598 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069066716 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069687728 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063713699 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069500617 seconds)
  done (took 2.49690214 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073269551 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067342574 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071987565 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067185795 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067794697 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066703122 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06242272 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062557383 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062626218 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067455383 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067128835 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067029926 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062568099 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066782285 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06753202 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068364884 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068546611 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064005944 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069599797 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063999734 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068474474 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063877055 seconds)
  done (took 2.734244116 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096044422 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083665762 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141118256 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079480389 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087396556 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073926956 seconds)
  done (took 1.830420147 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093209443 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097652766 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067083238 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068764927 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074710797 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072171115 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072117799 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071379985 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0753321 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075899321 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071241214 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079840273 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076724998 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079528356 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07536744 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075046549 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072010981 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07191257 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069002715 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081504708 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071460073 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075087689 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071210452 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070521764 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071774106 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077347259 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075043766 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075919504 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070633675 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07513047 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072943709 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070715577 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075484212 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07547009 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067705576 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07537157 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071725701 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081069912 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073450942 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076923978 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067336506 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073102383 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07542307 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074756255 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07535296 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070969971 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074579849 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070836187 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070883687 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086392783 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074462826 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077083969 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072736051 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075959263 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075343171 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081550612 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075773389 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077263837 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073145337 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075627417 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077205824 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073114513 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077263492 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07530266 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073094388 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076914067 seconds)
  done (took 6.217948941 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105299079 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068501561 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071268323 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075699744 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076988152 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071056597 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071031034 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071191443 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071158743 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068268165 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107652191 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07353526 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079552147 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080217501 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073349048 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072670616 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072647135 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077399202 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068441036 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082173841 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070985042 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077287923 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077262214 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0771619 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076231047 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073782073 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071383995 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070767528 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070735808 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072520727 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076958675 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073341572 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078528882 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068185565 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077179995 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071632896 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07126782 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074852459 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070723674 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073102887 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077664128 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080939578 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071433489 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070716209 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076841172 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072179012 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072397486 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069787226 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072239739 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069563458 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077424405 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077235564 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077424532 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078768415 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072558333 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072183384 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072339188 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072461624 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072394671 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074610032 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078935049 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072684939 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083944577 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072290499 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072126602 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078634016 seconds)
  done (took 6.240987215 seconds)
done (took 128.108474445 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209970927 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185061115 seconds)
  done (took 1.652123353 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075572519 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104694346 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083199849 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135418702 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071677196 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105714323 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10534635 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084099723 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071499575 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071215473 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071613037 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07405569 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137038191 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07165173 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071631417 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074948062 seconds)
  done (took 2.682498692 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10529879 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.21643623 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111508938 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.071285165 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107878263 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079723285 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071114129 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.087959059 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077425455 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072889951 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080217617 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078385964 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073635864 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077929004 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078790591 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080088181 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073016148 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079849041 seconds)
  done (took 2.90228455 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104098643 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094875411 seconds)
  done (took 1.480813986 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.173706642 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133669193 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201772548 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345656672 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.152294699 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.42395302 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.140342377 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.142052792 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112801534 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135309383 seconds)
  done (took 3.235603337 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105221921 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.203936041 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.303442193 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124613906 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078565907 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115200273 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126835259 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084431022 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084323404 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083867416 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083345189 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079908066 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101181356 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077008049 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075983943 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078613372 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103797403 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07535127 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076327591 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076400764 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104445164 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071822892 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077325106 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075032831 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079191521 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078791642 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071473773 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070253522 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077859053 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075870508 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079241926 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108072425 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078979343 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106060356 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074688523 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108418466 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081106861 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075798151 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075811891 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074391315 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078013801 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077663261 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078575988 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077786451 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071292998 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078198271 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070938925 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071446495 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081963374 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072022936 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080171592 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079451829 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105606983 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071429317 seconds)
  done (took 6.181362642 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10893473 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107483024 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071541953 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112890829 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104535894 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07175869 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.107381818 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099795037 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111684842 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073736492 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071813178 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073344913 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082402038 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085207208 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117060684 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108423499 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07373423 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070756686 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108432296 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107992689 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070363236 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102189271 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098566719 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107344607 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069325584 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071247009 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069904578 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071215842 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076595092 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078026533 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070514057 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079648758 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083401966 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077372834 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069075257 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069915743 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070592704 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078833234 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078992135 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078251108 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076895377 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068671496 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.0697027 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071098904 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071700495 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070365195 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077727464 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078537438 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077308696 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069736039 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071215414 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069606332 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070304591 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078971952 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07633237 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079366858 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07869171 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069287084 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06939678 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072012926 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079293845 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079064995 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078696391 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070468246 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078794896 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069695533 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082340419 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083341951 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069785146 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07067688 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069070146 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070012042 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070295366 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076542881 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076332087 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07090072 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069663154 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069655439 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078936207 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.0770095 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06942497 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076374369 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068175534 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069269926 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070323285 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070385003 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076472559 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078864756 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070787995 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06938844 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070315327 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070025345 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06835911 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075833326 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078735756 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078884423 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077966503 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071005108 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078037186 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077521755 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070775716 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078147253 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069265892 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0710467 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070052864 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077124649 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075444626 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078098438 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069412522 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068557313 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075440236 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077737422 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068240722 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074350607 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077071662 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075252394 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067982457 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078219227 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068695738 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076992242 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068695279 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210061093 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071012009 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080014009 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070771378 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070206246 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070682556 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078661653 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071392679 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070483008 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070812675 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070483021 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.0785289 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081963707 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072065169 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078085402 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077322785 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071711082 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077457567 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070466631 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079157437 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070552641 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071426532 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068608403 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080877498 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069935176 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070142496 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07049088 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079590841 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070221468 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079934976 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077936972 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069775958 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081256529 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079919819 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077566678 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079593681 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071669685 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069726396 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069506547 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07044437 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076522051 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078303239 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071281593 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069991263 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077153188 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080129644 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069143225 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077996532 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078358428 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077793364 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069949441 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070308394 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080104967 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079546395 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077447763 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077597132 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077899273 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070341667 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07710089 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077949267 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069923994 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084058193 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069925628 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081673631 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078017486 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076399656 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.0789955 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079271246 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07919545 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079771895 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082489133 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069246726 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069785281 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078216535 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069695844 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070331233 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077131691 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070879939 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070628305 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082060716 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070079284 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080371625 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069229534 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077978756 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068921967 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071153494 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082715011 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069789254 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070697489 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077618417 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072872041 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076823383 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079451543 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077032125 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069491897 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07095501 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078466381 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078264971 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0695617 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069207308 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071631894 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077671598 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076715827 seconds)
  done (took 18.546912662 seconds)
done (took 37.976582318 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210525986 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156992168 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.187531972 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116546935 seconds)
  done (took 2.045111546 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.108871099 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098695625 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087880222 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066112264 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09463222 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066149612 seconds)
  done (took 1.831651734 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.298225418 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203604171 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182481338 seconds)
  done (took 1.992321729 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209315271 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.197273513 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.462660847 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.285898985 seconds)
  done (took 2.560328099 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141915943 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08236159 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06468864 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082987333 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.1244293 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.150538438 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.094370039 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.118172062 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076691448 seconds)
  done (took 2.299825782 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148749952 seconds)
done (took 12.207413217 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.254062188 seconds)
    (2/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.204767083 seconds)
    (3/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.228777345 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.111031452 seconds)
    (5/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.190822878 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.12799455 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074906969 seconds)
    (8/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078452315 seconds)
    (9/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078280114 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070106563 seconds)
    (11/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085393287 seconds)
    (12/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.181165533 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076897858 seconds)
    (14/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.225645209 seconds)
    (15/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087627484 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.107794011 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.074927249 seconds)
    (18/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066001297 seconds)
    (19/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.099613586 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.152845206 seconds)
    (21/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.332289193 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075048459 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.185312339 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120929509 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088915375 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12961639 seconds)
    (27/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.126440161 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066296196 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084912456 seconds)
    (30/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093870818 seconds)
    (31/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.170603208 seconds)
    (32/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06745334 seconds)
    (33/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.215984015 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07544288 seconds)
    (35/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.124903478 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106898274 seconds)
    (37/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.184956998 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095024827 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074178857 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065336832 seconds)
    (41/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.153777424 seconds)
    (42/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.128030493 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.101175188 seconds)
    (44/309) benchmarking ("sort", Bool, false)...
    done (took 0.1621607 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.104805271 seconds)
    (46/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071638827 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092136656 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090013955 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.218024721 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137160674 seconds)
    (51/309) benchmarking ("sort", BigInt, false)...
    done (took 0.249807177 seconds)
    (52/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.088534411 seconds)
    (53/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.167087596 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 0.067281554 seconds)
    (55/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.183642958 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092230548 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083459169 seconds)
    (58/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.182931919 seconds)
    (59/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06481098 seconds)
    (60/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.201573507 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065405063 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074219157 seconds)
    (63/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067063762 seconds)
    (64/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073827097 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.197895539 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.106240511 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067014031 seconds)
    (68/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.129324111 seconds)
    (69/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.107285339 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065639191 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066390638 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090876071 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.080390628 seconds)
    (74/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065148119 seconds)
    (75/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067516304 seconds)
    (76/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.202701825 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11775081 seconds)
    (78/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073932263 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.099846409 seconds)
    (80/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.155738478 seconds)
    (81/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06429123 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076034083 seconds)
    (83/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178870408 seconds)
    (84/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.198960403 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13755245 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.203592953 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065809355 seconds)
    (88/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.214699672 seconds)
    (89/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.18897315 seconds)
    (90/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.309013917 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184706978 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07418379 seconds)
    (93/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078648087 seconds)
    (94/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.169877467 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066301915 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073632036 seconds)
    (97/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076177708 seconds)
    (98/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075088658 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.090662767 seconds)
    (100/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065557717 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091929139 seconds)
    (102/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065598584 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07275855 seconds)
    (104/309) benchmarking ("sort", Int8, false)...
    done (took 0.170567287 seconds)
    (105/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.07990532 seconds)
    (106/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075472151 seconds)
    (107/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065613003 seconds)
    (108/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.148326771 seconds)
    (109/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.169452341 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066509783 seconds)
    (111/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.12462653 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065415627 seconds)
    (113/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079822084 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066683535 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.099229425 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173640404 seconds)
    (117/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078171081 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075126176 seconds)
    (119/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074729873 seconds)
    (120/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075739683 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.191644969 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07529567 seconds)
    (123/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.12577777 seconds)
    (124/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.158292106 seconds)
    (125/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.166021757 seconds)
    (126/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076275633 seconds)
    (127/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.187438642 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.133627434 seconds)
    (129/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.160124437 seconds)
    (130/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.129640623 seconds)
    (131/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06627609 seconds)
    (132/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.205050135 seconds)
    (133/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067026022 seconds)
    (134/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.065866788 seconds)
    (135/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080425145 seconds)
    (136/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.126584622 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067870322 seconds)
    (138/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.065795306 seconds)
    (139/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070926225 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07581365 seconds)
    (141/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065257072 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074232158 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066446881 seconds)
    (144/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074934237 seconds)
    (145/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079056222 seconds)
    (146/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.160264164 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074020984 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06693281 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092618688 seconds)
    (150/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070684905 seconds)
    (151/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.077959468 seconds)
    (152/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066431238 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074368733 seconds)
    (154/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067189968 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.155990784 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107984889 seconds)
    (157/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.064960696 seconds)
    (158/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077425687 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066376159 seconds)
    (160/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072387856 seconds)
    (161/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065289834 seconds)
    (162/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178487494 seconds)
    (163/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08167968 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073499387 seconds)
    (165/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.079257092 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065506394 seconds)
    (167/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066646468 seconds)
    (168/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065658224 seconds)
    (169/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075544204 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088174275 seconds)
    (171/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066520989 seconds)
    (172/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076072168 seconds)
    (173/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.18104684 seconds)
    (174/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077101708 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14086964 seconds)
    (176/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.138120136 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091683695 seconds)
    (178/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067454726 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.132535828 seconds)
    (180/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065463269 seconds)
    (181/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072681696 seconds)
    (182/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078119011 seconds)
    (183/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.135282981 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072792824 seconds)
    (185/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074723726 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090897235 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12440529 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067325005 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065798348 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065392469 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130220092 seconds)
    (192/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094376657 seconds)
    (193/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076449724 seconds)
    (194/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067364438 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116422377 seconds)
    (196/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074227725 seconds)
    (197/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065936309 seconds)
    (198/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.064184402 seconds)
    (199/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.064977503 seconds)
    (200/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077219605 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086592807 seconds)
    (202/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075983909 seconds)
    (203/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.156441937 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141751685 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122040351 seconds)
    (206/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.064783558 seconds)
    (207/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.140518073 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065399643 seconds)
    (209/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078047333 seconds)
    (210/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068197336 seconds)
    (211/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077296724 seconds)
    (212/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065251304 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06489549 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064875659 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07187392 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065127997 seconds)
    (217/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068610165 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064261686 seconds)
    (219/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073832869 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111227194 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170538855 seconds)
    (222/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.076231178 seconds)
    (223/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068126197 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071287151 seconds)
    (225/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.065018019 seconds)
    (226/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066388303 seconds)
    (227/309) benchmarking ("sort", Float64, false)...
    done (took 0.129352944 seconds)
    (228/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065487391 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.130853856 seconds)
    (230/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.077187405 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066391553 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.064233981 seconds)
    (233/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075502114 seconds)
    (234/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073003536 seconds)
    (235/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.074975173 seconds)
    (236/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.064048476 seconds)
    (237/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089803424 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128241774 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133463805 seconds)
    (240/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072739809 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.064950324 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065746776 seconds)
    (243/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072553162 seconds)
    (244/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091251171 seconds)
    (245/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071105036 seconds)
    (246/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074758802 seconds)
    (247/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071223772 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118875849 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.065011061 seconds)
    (250/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07292221 seconds)
    (251/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079313122 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066877094 seconds)
    (253/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066372749 seconds)
    (254/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.160775466 seconds)
    (255/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06419492 seconds)
    (256/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065741848 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.063329605 seconds)
    (258/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06427744 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064708768 seconds)
    (260/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.064004877 seconds)
    (261/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072891006 seconds)
    (262/309) benchmarking ("sort", Float32, false)...
    done (took 0.129171449 seconds)
    (263/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.06385575 seconds)
    (264/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.06544086 seconds)
    (265/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07173311 seconds)
    (266/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067670449 seconds)
    (267/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.064842474 seconds)
    (268/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066400293 seconds)
    (269/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.063582486 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066196374 seconds)
    (271/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.065127425 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074428025 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176914281 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066229906 seconds)
    (275/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066351219 seconds)
    (276/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.063660644 seconds)
    (277/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.065922321 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071768911 seconds)
    (279/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066295998 seconds)
    (280/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077057093 seconds)
    (281/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.065538277 seconds)
    (282/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.064163086 seconds)
    (283/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.064345275 seconds)
    (284/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071253967 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088732465 seconds)
    (286/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069550168 seconds)
    (287/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066830296 seconds)
    (288/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.079585396 seconds)
    (289/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066364578 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06455822 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073212382 seconds)
    (292/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06458317 seconds)
    (293/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.068920587 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064124742 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116155912 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066120239 seconds)
    (297/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.1177592 seconds)
    (298/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066391018 seconds)
    (299/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066953864 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071190966 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.087496848 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.130832669 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139297594 seconds)
    (304/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.076718365 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063962526 seconds)
    (306/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067635271 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.0838423 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.075776834 seconds)
    (309/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.064540866 seconds)
  done (took 32.273481799 seconds)
done (took 33.596261602 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097187616 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101805998 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077718674 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096817787 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084849903 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.100613561 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078768113 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083929225 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.088099419 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.088659661 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.087180596 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.080276817 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.082635089 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.082391838 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080371618 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106498063 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.087513126 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.08109403 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.08088196 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.072227331 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.08095337 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.072232697 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071398342 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.078635079 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.084119579 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07964578 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.081646368 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080921945 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.07172184 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.072335325 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.076513127 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.08053088 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071399654 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083696597 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.080644767 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079325283 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080973115 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.083138953 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070419613 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.07061419 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.080029485 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070139524 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07823656 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076507253 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074808685 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076965748 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07818179 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082275829 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101483942 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073711318 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.079974021 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.08016277 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079886846 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073194549 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072874066 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076394439 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076332815 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102763513 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078525723 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074661641 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.079547998 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078779877 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075285208 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077796778 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077760125 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080291194 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081940446 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076150814 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080214028 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076364613 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069368291 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078222843 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074246122 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069697014 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.08421334 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082883193 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069058782 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07413997 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077961565 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078744768 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06973933 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073345772 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066809323 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072646158 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071836085 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073830452 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072406132 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074925247 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067483165 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076489477 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07512381 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075725074 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067710081 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081791822 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068251448 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07645824 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070453784 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068305342 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067251813 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07237403 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067428249 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071937079 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075939917 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066428996 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071652398 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080685643 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067404526 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074609339 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066585959 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067372904 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078337986 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077994633 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06753076 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072801506 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067221787 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073414941 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066514008 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067240084 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066730139 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06693086 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071341338 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067269185 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070944202 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072212552 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079381557 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066806074 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071342133 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070972905 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066623483 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074133854 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067007311 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066868623 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066300958 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080344753 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071119661 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067156175 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07206299 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071233341 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074593971 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065862757 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075341211 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072939255 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071367541 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073130926 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065504882 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076954283 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070656496 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070529915 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065609257 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066554904 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065705366 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066923106 seconds)
done (took 13.130789573 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070805774 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.11891107 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098547352 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098129681 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08607543 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070591319 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077639347 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.096489618 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071722969 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.1010806 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091640131 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.092464972 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113954546 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068344762 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069012718 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069781758 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06990157 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080007722 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.095144915 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089550305 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107356857 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067658597 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.087607952 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088286782 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.084262644 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088734425 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068512321 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068577262 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07027983 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090002893 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093316358 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070557044 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068835069 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.091063772 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085926445 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080906723 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068321269 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.0761402 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06841873 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068092814 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069366792 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.088495693 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07580889 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075949117 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068589154 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.075667076 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069116764 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082759879 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088398522 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075517255 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082437609 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091374527 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071480435 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084206828 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067684799 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08360887 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076887591 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067863335 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068585039 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073140595 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068635749 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070499062 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078838254 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.07649029 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072378932 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082333957 seconds)
  done (took 6.720915334 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085382919 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097827442 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084346669 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084472995 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067222077 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067531235 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068167772 seconds)
  done (took 2.008635098 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068411289 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088529133 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091904156 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092050307 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087239291 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.096237986 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078497818 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070258275 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.100255744 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069734555 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090941793 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10161835 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073874704 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.082328267 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096678419 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070129427 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095224266 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070502332 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070811908 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095191917 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075699057 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098182049 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.082513168 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070610217 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083400545 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070296437 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123527907 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07822448 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071606632 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071413226 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071140429 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111120349 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082918733 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082451323 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071628194 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086063806 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084343462 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073330331 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080539437 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.08058953 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082808127 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071279848 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069292774 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071414075 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073242098 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08188303 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069000371 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071821937 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071569655 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090092634 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069083898 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08289026 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073902045 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076956696 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075870574 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075402027 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079041247 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072110648 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089916486 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071560341 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087703314 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087006127 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08350068 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087030753 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070131635 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082702003 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083596682 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070943092 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072179824 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071783072 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086915542 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.07343725 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072361771 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081720106 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070384367 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095019528 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095279524 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069935033 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083009927 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070268852 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069355404 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.080277751 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092306 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073168782 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069378568 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07298501 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070698004 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071553912 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067628098 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07269775 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069634504 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073717523 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069515449 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072254462 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070872343 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085328517 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067557932 seconds)
  done (took 9.139471307 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070430377 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069615077 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070306101 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069448106 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069059306 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069280071 seconds)
  done (took 1.896396029 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092706095 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069340892 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08222333 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069529219 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107647306 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087338979 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087224683 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081662721 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085443029 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083868103 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087685311 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.090601114 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091615111 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074618904 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087578209 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072426759 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087515422 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07573575 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08275957 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074045484 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085264795 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073765515 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073887089 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.091750504 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074909891 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072391021 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081429935 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083023538 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082468784 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08145364 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073188179 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074607162 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07967882 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081205067 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086968815 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.079232169 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073576221 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077609257 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074299736 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075513575 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089676888 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073340632 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073704106 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077772459 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080677141 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078197053 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077453012 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079788735 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086645376 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077439743 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077379283 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071830938 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075403924 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077680765 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077946331 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080674971 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077395304 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08723861 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072973707 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.079740671 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070559215 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074642471 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080314565 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074181885 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078745275 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076674402 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.079208813 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073577829 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073962996 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071945353 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077800659 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070809492 seconds)
  done (took 7.172756448 seconds)
done (took 28.408157875 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.516003045 seconds)
  done (took 1.950335809 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.630297906 seconds)
  done (took 2.09284611 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.517062965 seconds)
  done (took 7.977299476 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.404167878 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.475052365 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.755324801 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13500018 seconds)
  done (took 3.265480751 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.703975539 seconds)
  done (took 2.178252051 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239303398 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228037619 seconds)
  done (took 1.948449833 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.353250443 seconds)
  done (took 1.813470364 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.062981837 seconds)
  done (took 2.52717 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.240442137 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161320804 seconds)
  done (took 1.869541825 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.443934897 seconds)
  done (took 1.909368801 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.271945015 seconds)
  done (took 5.740290835 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.242470238 seconds)
  done (took 1.748204076 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235815768 seconds)
  done (took 1.705532006 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.75290827 seconds)
  done (took 3.221177177 seconds)
done (took 41.423846706 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084505525 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086528936 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085855333 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082164885 seconds)
  done (took 1.790742761 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075931543 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071701213 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075067255 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071695593 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075369586 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071310301 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074308154 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077303091 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07303993 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073780057 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073963196 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073429974 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076200628 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074636869 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071992409 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076542894 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077451901 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073527226 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076397833 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073358307 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071598431 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076326759 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076327351 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072560757 seconds)
  done (took 3.254636195 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079199472 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073409059 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076083245 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072273769 seconds)
  done (took 1.777757202 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077861858 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089022344 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087876958 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078298543 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091094762 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087478599 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069783872 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07026452 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070919325 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079612917 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068933487 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097128791 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090184125 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080030811 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082373614 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066296083 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068652089 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088828033 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080347912 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080679495 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071371224 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080075531 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069048562 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090739145 seconds)
  done (took 3.388789024 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084659552 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067045572 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084251112 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092911525 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09519446 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069069544 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084926467 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097328594 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.142696662 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069130284 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07517064 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069168463 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.109646837 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069172128 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086730788 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113870047 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117035019 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072632331 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10189825 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067335925 seconds)
  done (took 3.252386248 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084208335 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069966982 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070825373 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067251375 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076794211 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073588622 seconds)
  done (took 1.927950955 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069666701 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068629906 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068065554 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068064438 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073248071 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071108588 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068701677 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070356115 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070571728 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070434028 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069927309 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.0679511 seconds)
  done (took 2.318838068 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.161253691 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070901787 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071626868 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066809851 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072932538 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067188664 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082592743 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069683147 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085554384 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067698141 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067794131 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071779433 seconds)
  done (took 2.438278986 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193473329 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074210408 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222891041 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143814902 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102846471 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109884332 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11004896 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108401495 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.13445535 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097515875 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155745863 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160451932 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10405052 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126630114 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088497183 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120020322 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145078686 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153400996 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099812824 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154267138 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135543284 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119622247 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140772163 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09727771 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10139575 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116827148 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072740862 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077812127 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160147691 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123313764 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140790362 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104819698 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089777992 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165532088 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156740668 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131477294 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138409712 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08125884 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117586251 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128807888 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193878029 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087332668 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151529563 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103869312 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078008997 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122014421 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110090606 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114837937 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.100357578 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08700434 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276308335 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17820913 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.132540822 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087439346 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119185541 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109993227 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113631248 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115733644 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17384356 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153687218 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122448802 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072684128 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108765325 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145036607 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12896433 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108208946 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.121199117 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09182027 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124726325 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147225645 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124115284 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132931887 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.113013386 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085094615 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113725317 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130195651 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120640867 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158863667 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116997752 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071520535 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115632509 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095869133 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078555748 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143176689 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074267709 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162819628 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095688567 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121614318 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123692811 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104962977 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104834752 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149710695 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133783499 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101155403 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085784354 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102723967 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118032449 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139012391 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085395666 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104648723 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113782369 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080197059 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131923456 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075937433 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116064052 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.095804467 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118008888 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121829663 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.080336475 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26502604 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100032561 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098211228 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122932552 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14864584 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085363762 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079510145 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155361695 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115184853 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104540087 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139559311 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147935142 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118206189 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097515388 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139764017 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168846797 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091234709 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156132079 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102555212 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084370572 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106281549 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11893932 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110139279 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12234873 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081502093 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11578577 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157832556 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074915999 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097229962 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126975775 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082465934 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081101623 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10435957 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101470472 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093464514 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097909982 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100338434 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130302308 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114343018 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100263807 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118303424 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093645134 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15583701 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084859095 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098216384 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101022401 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070837811 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.12584895 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145297038 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076296091 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150716576 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.116940751 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109718011 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112234594 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080824786 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130320256 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076716024 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070568004 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131871508 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106758427 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103747334 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.288500264 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1119561 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12311446 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116380278 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127278295 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123789626 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122874042 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103887987 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089729926 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113170627 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127606371 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073687511 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092798457 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082654436 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103601548 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094564501 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084858176 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13597015 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119595759 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106683313 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108830843 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093417135 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140093234 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075894977 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118280891 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115572938 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092500086 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.14411683 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142676057 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123252345 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097853814 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129614359 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071753587 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073061142 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086476691 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117608969 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082158592 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081081077 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108614638 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140641975 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120078269 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129203442 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11622223 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111704494 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147432252 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071265438 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117887872 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135710689 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113179989 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101278586 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087602754 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094402733 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133668952 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099903402 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170178074 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107816121 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11651333 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146530129 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.096835414 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076308401 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099578162 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122848217 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246688065 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137380686 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096516581 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084700936 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104784663 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076253638 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096205335 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120883056 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112664534 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129484062 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107625818 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123649988 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076135081 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10798117 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116231301 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120375271 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083595214 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112900098 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157560885 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094054345 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11171779 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141967793 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077318709 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.132259936 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16250751 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135702443 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082033842 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10091499 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113558491 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120290819 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112872543 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131238857 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100482094 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129006633 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10580956 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085466429 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084772894 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09270002 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09999671 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108851706 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100871982 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.107169844 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092933664 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122806202 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098865999 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104798529 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110928124 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096921498 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092950324 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092980871 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162091639 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110278704 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158575222 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.095259597 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.135013655 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149054004 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072574733 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075941955 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077801991 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128741225 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080957811 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267432879 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106170158 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109904974 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11539806 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130856472 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09422323 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069611952 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104271913 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126360038 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116543653 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09373819 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10094242 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149848121 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113988507 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077092732 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109284951 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109242507 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10052512 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163929061 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079528439 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103069263 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075330445 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078225404 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12028807 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142592691 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08481509 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101139204 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113522982 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106854356 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120216581 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096055705 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104688738 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122792495 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138345012 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124169561 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09057446 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109860084 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125290895 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145104682 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100040642 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09713218 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164920052 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142067468 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.149475732 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084988318 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108337934 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108381829 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103855395 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127469085 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081635122 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150670134 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078978957 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126604178 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09737585 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086727021 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121959551 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.105959325 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084670303 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135081368 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108012572 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228738047 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078292128 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107345028 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111231828 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09902856 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073520199 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132488922 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072997943 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128954787 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161907255 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081349354 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103238445 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096824422 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082554506 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103526102 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102126762 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086805373 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100029212 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164987839 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086481116 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138737562 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12676844 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106390854 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130332532 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100591015 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63979483 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078570243 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141827802 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110868178 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168014088 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095296261 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113978541 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107731788 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117067085 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134410715 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098493637 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174471177 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123581826 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109797196 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077197267 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097907098 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099168341 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086372817 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102755312 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108202627 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108885865 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091686854 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.110208918 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115833556 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080999942 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093511579 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144349744 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111040029 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134291036 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131321161 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082061088 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110667855 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125969174 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077402103 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.111411738 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.293919805 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102461989 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097516814 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081362717 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09774224 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161137221 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071825994 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148950457 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113493313 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105566136 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10813993 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.106632838 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122904911 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103756114 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117555351 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094494285 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109227663 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108051356 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081501139 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077680196 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10075965 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106571768 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.093826243 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093331584 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097389563 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141044503 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.106347941 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095342497 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108055738 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136897244 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159986959 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102779461 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081900098 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116273459 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114059548 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.106868607 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11314514 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079663771 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079043016 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079723072 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.097997268 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120296136 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106569603 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111932108 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104812668 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151168466 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081874165 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224568803 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093275872 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100051813 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086783682 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078460841 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092888321 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092948288 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099999587 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104411704 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160667955 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091298319 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087310578 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089302948 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072908918 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081481888 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119876355 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105963279 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11248534 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253674214 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.084259381 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103438729 seconds)
  done (took 56.895611373 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103326398 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.085933511 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.102497838 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145922526 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121535657 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199432127 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151369823 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189102267 seconds)
  done (took 2.677214479 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068585694 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094579014 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102221494 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082954872 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067544172 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068446297 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22755051 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081321518 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067231164 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.093481743 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080222711 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071747496 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.436689838 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06895457 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.07060642 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.079545249 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070842295 seconds)
  done (took 3.400583463 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.375914757 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.604903998 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.352565808 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075524756 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.924308081 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088928529 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.214567207 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137068177 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081191103 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.531977486 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.371061835 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130659126 seconds)
  done (took 18.467932248 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081356061 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076179378 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090016668 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090185817 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078086553 seconds)
  done (took 1.994674442 seconds)
done (took 105.078199919 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081194832 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.195737716 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068164044 seconds)
  done (took 1.868370457 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091074279 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089293301 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088977478 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086759032 seconds)
  done (took 1.933797366 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074331441 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076274476 seconds)
  done (took 1.725482546 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.2324973 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174247871 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095904596 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.0833814 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080014025 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081021046 seconds)
  done (took 1.826721562 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073241529 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072991616 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073312855 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077264577 seconds)
  done (took 1.873505859 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.071052148 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067706159 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069539247 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073504733 seconds)
  done (took 1.861073482 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084352039 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085627505 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078942869 seconds)
  done (took 1.828366508 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101369079 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094670768 seconds)
  done (took 1.775445975 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081184016 seconds)
  done (took 1.659365666 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092416904 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100646008 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13239941 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113373094 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140869057 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117316873 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087355222 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091552315 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082074903 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088166005 seconds)
  done (took 2.623734803 seconds)
done (took 21.13682513 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079306689 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372635416 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36028569 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090403277 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671094998 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357367055 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.049994863 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092795287 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.10819249 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069480556 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086946626 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650678781 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.041336441 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330804047 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.028401491 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328343416 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655288755 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068987646 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068223562 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069396514 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.033897167 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068260326 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069051499 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069478836 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65269643 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37421757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070403863 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328326718 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069300371 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073802947 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.362641309 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074325671 seconds)
  done (took 16.385589019 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070582115 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122142738 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073183801 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08558134 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07117369 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0705885 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072252654 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06941306 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118639601 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069603325 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086892223 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068428137 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073445765 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070253685 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089557669 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06947988 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071718196 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070281172 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069725077 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070734528 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089186731 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069501042 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070311892 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070520552 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070846958 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083359065 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071778451 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069730648 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070750254 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074102744 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074711127 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071073637 seconds)
  done (took 4.042099703 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116558466 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126824504 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07424085 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107514327 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118058447 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071329919 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146173133 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09349972 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120534774 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070184218 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087856553 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06923032 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105694354 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071671411 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090984003 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070030317 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073163849 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070403176 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06959669 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070688995 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089340223 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069804961 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070948523 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070494787 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070509822 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085124994 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071618671 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069922134 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069843259 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074056373 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075850101 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07163816 seconds)
  done (took 4.304803057 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07097803 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073724307 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08081924 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081831876 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068676726 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070469201 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071966998 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068458633 seconds)
  done (took 2.182671558 seconds)
done (took 28.502059856 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079253524 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06884557 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071409624 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087220487 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07427577 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079832915 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065488962 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074793208 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072574437 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072227286 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074107323 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070381781 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070444709 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065841712 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075495186 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069553167 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084781025 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073266687 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083673581 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083930605 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072485066 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075468983 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077695914 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083591239 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083824024 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084048115 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079159725 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075412721 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070634812 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074063105 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.073625479 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082187892 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.083884403 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08390679 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069675641 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070211685 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074312591 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071389805 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085462469 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07945442 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07230934 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079430591 seconds)
  done (took 4.766181532 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.083499937 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089064904 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.081893069 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079580784 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097533638 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082880091 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086537597 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078033982 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077692414 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.085855612 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073682857 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080816158 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078702149 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073202373 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077125255 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074366857 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079540245 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073802879 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077225515 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078447209 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086886757 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073293761 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087592328 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079588735 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07496576 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080424247 seconds)
  done (took 3.704411106 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073784117 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086274922 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092900421 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143743185 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11104303 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.085654169 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081969083 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092306278 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096723196 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06885793 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073010793 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095140107 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095708786 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07707846 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.115146446 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087778822 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087038035 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072775729 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078004434 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100034799 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.09231327 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089932266 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09757228 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088076075 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070531286 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073467174 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075773546 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087494625 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073558041 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083201078 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074480848 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075219016 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072601517 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081881671 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073743708 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070117315 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096389634 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080077108 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080924003 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105921636 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077679868 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069483207 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093954633 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128259606 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06996582 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075047339 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073457724 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080069918 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067904967 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095139592 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080364323 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067930757 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068987822 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067878979 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069957927 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07291769 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072584032 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07321337 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079595976 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074881261 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089915149 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073022718 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085324784 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068140235 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078455261 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067428066 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069579975 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067428831 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096552763 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069774655 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111329565 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069342266 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067022595 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079053251 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078285208 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074154228 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067962836 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085564334 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07976239 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07216289 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076325696 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07143093 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072047281 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098913448 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068538724 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068128893 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06710427 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074258457 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071619351 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068690755 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080092556 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067578521 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071706223 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085718463 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067915569 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069197095 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071888587 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070864384 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067740607 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079061996 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072377215 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069576586 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078890393 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068672443 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072138958 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081196367 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07491954 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066986791 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070598484 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072075657 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069309328 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069420707 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07170537 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070139784 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074727842 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074789317 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073742556 seconds)
  done (took 10.877507925 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164402487 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156002198 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070843752 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147567742 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076775897 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080547232 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151155199 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095294813 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069099727 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070259879 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068765261 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109863003 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105429869 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116612925 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081686516 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069238469 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094004889 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114838692 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154124532 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.151561255 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094168118 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079663923 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074049771 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072791052 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073340378 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081032773 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090829417 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.080855058 seconds)
  done (took 4.435314524 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078544122 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103033622 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073216056 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091603903 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087828066 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069263343 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070462142 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070257927 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085424315 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078135612 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068867757 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074100925 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073107309 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072071511 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069647839 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075554051 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076588128 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067978673 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073132767 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074491833 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078830633 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093307265 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07227002 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068902691 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071975632 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068814277 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077234895 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.080883206 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068965612 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104485554 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066681725 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073561089 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083400204 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069327491 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068396345 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068937274 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069269476 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069343015 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070972225 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067433003 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06825416 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072840111 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067407659 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07713974 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081548679 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070872361 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070618764 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071576915 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071767132 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066430588 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071612278 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072154853 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07166212 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076362108 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073187387 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071796978 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06974814 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.094827376 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074847146 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068836038 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068016974 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067813019 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071271504 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078578091 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083956193 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071412164 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067456162 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069658855 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082362358 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081309741 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068468159 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073881104 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066677655 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071393155 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071591243 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071447102 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070085921 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067561182 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068537434 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069373925 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069490259 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069359806 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068092413 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072225361 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067023411 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067836372 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069068757 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070813317 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.0797433 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068252935 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072749241 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072916599 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067805905 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071934562 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074310703 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072065886 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079331084 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079946835 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069358413 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067745283 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082462995 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071902456 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068408642 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07431989 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073560505 seconds)
  done (took 9.363189122 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091371305 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069170387 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085247114 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09203713 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078671592 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075014775 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078525787 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068549646 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084903418 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073466695 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076566671 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067271717 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079606219 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078305876 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06924016 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.0788859 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071933927 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086565223 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082930141 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067301976 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077336851 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081576457 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080710496 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082897925 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083027143 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083721151 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080614042 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078451741 seconds)
  done (took 3.851098405 seconds)
done (took 38.586001353 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.689260267 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.844547174 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.666248789 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.863314839 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.831784796 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.689521384 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.863911436 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.665815438 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.926630324 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.711863142 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.99306056 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.130012917 seconds)
done (took 64.603508353 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.690829454 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.818852068 seconds)
    (2/2) benchmarking "String"...
    done (took 1.926171083 seconds)
  done (took 5.350949903 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.900380087 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.415101038 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.936347786 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.664295423 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.671834263 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.122295861 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.454949579 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.115370817 seconds)
  done (took 29.987739022 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.836648018 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.89449545 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.360307422 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.391511286 seconds)
  done (took 15.131027185 seconds)
done (took 61.763584313 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.675243488 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.689697228 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.710516584 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.665943742 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.758362338 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.678788711 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.06493984 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.688052982 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.666478902 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.668697388 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.671079959 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.087517616 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.683762945 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.098919479 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.667195595 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.667918019 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.707801765 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.109351717 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.820766482 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.689646166 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.682301989 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.674740032 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.670942905 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.66912025 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.667596192 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.668883254 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.066230954 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.680119768 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.287968158 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.671301988 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.704894218 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.131996865 seconds)
  done (took 200.654193435 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.668459647 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.672973229 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.720526815 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.715637616 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.300262674 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.84401281 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.775253659 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.336916924 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.675376743 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.690896721 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.884973871 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.673533222 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.922633364 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.660196517 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.705594196 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.673559789 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.902517048 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.949541956 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.713084366 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.814650407 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.681503022 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.762783627 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.703768352 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.891066993 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.718052074 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.680797676 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.822240152 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.691416671 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.856101706 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.875244985 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.700479028 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.683377919 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.882710013 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.538577736 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.679487595 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.695917588 seconds)
  done (took 166.772794015 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.880294373 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.672267485 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.668915503 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.669068078 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.681970965 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.669747331 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.790879928 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.799026378 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.343811487 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.397986562 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.72851127 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.669548751 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.441606591 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.666929523 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.735542225 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.682724551 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.670168025 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.684544719 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.697548943 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.669102352 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.669716128 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.791092387 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.687072654 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.669661389 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.679930068 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.66985366 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.675285936 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.059408529 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.67017254 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.693738406 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.670201932 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.671657526 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.678128624 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.926752171 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.671028749 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.671173275 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.496903936 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.778056317 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.75105987 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.669715052 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.673888158 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.676959529 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.671302241 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.889847045 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.671515726 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.670451773 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.670038579 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.670250638 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.672589804 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.785970338 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.670957771 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.793368687 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.676463601 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.154324139 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.671311892 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.674614146 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.954148443 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.258403939 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.670849384 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.674148721 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.670926747 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.670985061 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.675934211 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.941213774 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.743482564 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.677030311 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.672798609 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.677093071 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.671188687 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.801496143 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.671238345 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.199853864 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.689511667 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.905995428 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792157222 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.678783539 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.734996682 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.764615725 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.67278414 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.671386568 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.671408806 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.671847224 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.753918704 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.672876049 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.75727963 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.683323898 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.674460244 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.726399676 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.744583861 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.673584345 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.499526025 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.672689677 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.672793169 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.921045491 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.736716364 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.673131012 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.675508487 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.752970698 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.798007182 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.414286591 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.672754779 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.67226798 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.960062628 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.756131426 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.67508459 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.782520275 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.67365947 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.756133681 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.681803466 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.676017975 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.708518908 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.680458311 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.68575689 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.673737295 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.049022615 seconds)
  done (took 389.405572965 seconds)
done (took 760.379172732 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.287678395 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.254163866 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.355773776 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.276691803 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.25175431 seconds)
  done (took 13.038473969 seconds)
done (took 14.652552075 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.751695485 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.762053487 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.698119418 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.759782364 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.694996953 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.761391964 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.740666785 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.699667142 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.727030118 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.701348848 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.730038264 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.700973592 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.686991042 seconds)
  done (took 24.029395671 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.90799771 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.906070743 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.744366943 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.90729142 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.721625351 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.901713874 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.829104446 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.821991673 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.813580325 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.685296548 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.685725768 seconds)
  done (took 21.540228909 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.903355867 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.909352288 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.750638719 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.907591974 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.722224974 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.90056967 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.8309267 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.814402895 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.831361591 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.684857006 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.683804682 seconds)
  done (took 21.5550427 seconds)
done (took 68.740587333 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.678497389 seconds)
  done (took 3.293872856 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.69972141 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.855717423 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.679290633 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.681335821 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.680921947 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.680411752 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.67974677 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.677807633 seconds)
  done (took 15.252356554 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.678099381 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.678761469 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.678406654 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.679366507 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.678656127 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.679703038 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.678834987 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.681351919 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.678944873 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.680431143 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.678878504 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.678499438 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.680293377 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.678893758 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.680097558 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.68013326 seconds)
  done (took 28.485949742 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.679841616 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.678633876 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.679616006 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.678733063 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.681745858 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.679478914 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.680058019 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.681099239 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.679949902 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.680488731 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.680519325 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.680124666 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.679410263 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.681717274 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.679775143 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.680208943 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.679678325 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.681032072 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.685529824 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.681994636 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.680781156 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.680859426 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.680095927 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.680141222 seconds)
  done (took 41.950142335 seconds)
done (took 90.59904163 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.376482811 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.396538905 seconds)
  done (took 9.391924119 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.6807418 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.680761355 seconds)
  done (took 4.983484725 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.681726719 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.68083835 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.68220777 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.681232057 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.681501926 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.680662251 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.681603325 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.68169368 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.68142528 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.682434167 seconds)
  done (took 18.433539093 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.68105599 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.680364372 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.680482708 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.682607898 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.68104963 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.68223905 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.682498144 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.681135278 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.681981223 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.682704299 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.681092018 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.682000383 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.682047719 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.682050641 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.681593219 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.682120512 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.681247582 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.682234023 seconds)
  done (took 31.889232494 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.682488217 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.683261158 seconds)
  done (took 4.984580299 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.680948787 seconds)
    (2/7) benchmarking "second"...
    done (took 1.681274255 seconds)
    (3/7) benchmarking "month"...
    done (took 1.681557824 seconds)
    (4/7) benchmarking "year"...
    done (took 1.683056352 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.681797048 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.683761888 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.683169927 seconds)
  done (took 13.395033423 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.684141575 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.833819105 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.898529562 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.321703656 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.68457651 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.685676573 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.598567712 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.685270835 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.686820962 seconds)
  done (took 18.698751985 seconds)
done (took 103.396263029 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.505489294 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.685246236 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.968146012 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.737914274 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.700926036 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.979948526 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.710451493 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.956092231 seconds)
done (took 41.866898164 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.703134408 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.463786041 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.485020861 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.808071691 seconds)
  done (took 15.376530877 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.699968182 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.004348538 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.705362484 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.492493017 seconds)
  done (took 21.526006535 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.043040094 seconds)
    (2/2) benchmarking "read"...
    done (took 2.028332155 seconds)
  done (took 5.696373472 seconds)
done (took 50.927059475 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.685859531 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.684321752 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.684639957 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.684592587 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.685110129 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.686775219 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.686689649 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.684472278 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.684061229 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.683453571 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.683746085 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.683954925 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.683462969 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.68369332 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.683894884 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.684705737 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.68454146 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.684484597 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.685847009 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.684249924 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.685274264 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.684350891 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.685930927 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.684257844 seconds)
  done (took 42.053699078 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.684386892 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.685194029 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.685925942 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.684426521 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.683977561 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.685374529 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.685573553 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.685848627 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.685334588 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.685542479 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.687073134 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.685396305 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.68539329 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.685181908 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.684220726 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.685972389 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.686446013 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.685177754 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.685535735 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.686129012 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.685589948 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.686383938 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.685898117 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.685112828 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.685441032 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.686380003 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.685991145 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.686189365 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.686438561 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.687179143 seconds)
  done (took 52.191327669 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.688860788 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.687242487 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.687473708 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.687269711 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.686815397 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.686929041 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.687272097 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.687602695 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.68797597 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.688458849 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.68732186 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.688703411 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.687311422 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.689035388 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.688376738 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.688587409 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.688121492 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.687932171 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.687371428 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.688310103 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.688569931 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.687059811 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.688858316 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.688318482 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.687272104 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.68727632 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.687917367 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.687823322 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.687616491 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.687966877 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.687700699 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.690169851 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.68991307 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.688160839 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.688638775 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.689066313 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.687800819 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.687940726 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.688705109 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.688320261 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.69155602 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.688782624 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.689743894 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.688580528 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.689206295 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.689797525 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.69033103 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.688148215 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.691190586 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.690570684 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.690774298 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.68858602 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.689608544 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.690945844 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.69056868 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.689141735 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.688136737 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.688914105 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.690199363 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.69001555 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.692367997 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.689947125 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.691069713 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.68987082 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.69136548 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.690764257 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.690166832 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.688130097 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.689417482 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.692428143 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.690410484 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.690831519 seconds)
  done (took 123.231801402 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.691872391 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.689161775 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.690345312 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.689583591 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.691139543 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.69017473 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.690845115 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.69087561 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.688207829 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.689096014 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692264867 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.691123937 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.690290213 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.690454015 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.690604052 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.692124835 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.692678187 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.689532418 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.692458542 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.6909145 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.693260517 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.691791803 seconds)
  done (took 38.825925445 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.690536937 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.691439336 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.690170111 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.69179584 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.6916725 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.690338105 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.691421699 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.692890778 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.691641917 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.691923142 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.692137326 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.690927612 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.691236831 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.692803629 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.690663707 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.691685429 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.691034202 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.694030867 seconds)
  done (took 32.077168688 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.692696891 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.691009786 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.692075503 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.693534113 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.69140697 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.692154913 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.691820359 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.691518965 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.692391111 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.692153915 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.691261339 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692978891 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.691556693 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.691990011 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692981609 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.692812193 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.693101631 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.693848188 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.691891379 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.69139757 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.692603591 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.693775195 seconds)
  done (took 38.860323795 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.694360842 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.692548296 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.692737354 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.693019519 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.691993127 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.693181216 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.693779489 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.691596497 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.69333964 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.692949073 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.695342869 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.694236705 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.693589771 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.693988084 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.69238018 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.693162994 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.694846578 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.69437236 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.692464303 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.692498769 seconds)
  done (took 35.497005472 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.692817378 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.694730813 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.694189924 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.693577096 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.694717726 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.697154589 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.694762172 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.693929124 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.695548076 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.695664251 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.694558535 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.696294135 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.694964925 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.694998204 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.69488756 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.69530423 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.695457437 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.696338036 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.694706983 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.694860079 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.695304748 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.695007446 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.696624044 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.695289101 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.694552955 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.694119641 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.696954851 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.696792267 seconds)
  done (took 49.094846746 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.696022011 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.695155466 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.694183209 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.696758143 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.69610409 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.695401841 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.696017438 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.69503619 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.694938357 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.696107409 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.696173983 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.695156956 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.695228589 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.696550964 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.695432763 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.69599274 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.696267906 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.696603546 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.695370014 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.696898419 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.695753228 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.696032087 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.695238351 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.696874944 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.694641753 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.698646724 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.695176588 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.696095826 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.695449132 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.69737392 seconds)
  done (took 52.51069911 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.717546354 seconds)
    (2/2) benchmarking "in"...
    done (took 1.71808331 seconds)
  done (took 5.06925822 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.696407537 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.696389435 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.69712952 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.697875172 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.696416499 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.696130069 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.695643465 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.69594359 seconds)
  done (took 15.205968261 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.697407293 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.696006868 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.697229454 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.696374444 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.696913703 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.697869126 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.704503596 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.698126879 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.701364706 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.698069785 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.707650374 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.70733033 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.700971279 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.698939302 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.697550958 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.702229036 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.699051839 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.69849876 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.701508201 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.69843673 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.697436349 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.703279599 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.702409412 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.698254512 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.700109059 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.709183695 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.701296345 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.698004955 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.70002837 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.702701904 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.70128527 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.698156206 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.698247127 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.699753011 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.697095621 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.699958461 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.706418582 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.70126451 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.705025329 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.699324937 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.698673013 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.69970038 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.704174681 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.704588471 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.702643629 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.700491373 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.700908368 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.701675012 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.70145607 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.704356674 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.709858115 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.699504394 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.701609681 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.707146817 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.702948484 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.708675906 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.699344523 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.704674195 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.710663636 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.712145488 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.711969908 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.711757204 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.704725976 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.70390227 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.710793245 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.729223008 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.711268837 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.701127492 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.703531171 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.703874261 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.712230139 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.714413426 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.713462643 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.704541398 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.701805563 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.703320169 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.703732421 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.702216225 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.709165031 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.707605821 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.701740371 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.702837106 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.712692926 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.732076799 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.70427098 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.703179931 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.701544514 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.70394198 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.706307492 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.7174029 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.703388588 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.703537807 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.703112226 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.703070158 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.705219425 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.703318232 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.70333591 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.704200386 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.707800711 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.7046762 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.7045007 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.706263503 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.712965602 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.704087233 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.703564916 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.712791894 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.703373939 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.70586311 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.709172876 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.70371259 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.704619131 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.703233011 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.709994617 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.701448998 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.707486336 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.712841286 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.703972243 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.705147241 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.701749795 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.702431911 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.713659904 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.731175069 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.703658173 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.702429916 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.708755215 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.71693939 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.703168474 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.707102791 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.704567385 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.703308734 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.703767605 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.705518032 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.703946917 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.706462892 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.70609883 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.706305555 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.704818157 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.705557858 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.706524931 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.706988962 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.706950361 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.705785668 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.707119756 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.70664279 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.703915631 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.705231262 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.710885651 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.704459374 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.705932891 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.706592615 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.702842425 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.703741477 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.705443512 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.70450735 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.705110954 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.70454464 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.703508713 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.704266893 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.70348946 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.704142793 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.703575966 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.706847805 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.710832704 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.705451881 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.709995534 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.706115549 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.705595404 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.705338611 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.703361388 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.704539212 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.704000365 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.704935455 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.707847948 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.715083055 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.705510119 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.70589544 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.708557518 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.704472234 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.705055385 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.70511365 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.708948842 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.71517951 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.707810334 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.712388211 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.707229491 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.707582415 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.705617898 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.707041138 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.705605298 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.707620176 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.710144818 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.715328567 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.718291356 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.718879628 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.708252775 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.713061912 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.708466602 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.710358894 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.712027869 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.705552062 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.707046014 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.706368875 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.707494972 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.706948238 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.709959904 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.707318584 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.707237295 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.706059967 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.706275798 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.707450624 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.706023077 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.708095457 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.709081569 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.707081108 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.707396037 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.707509065 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.707917143 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.707749839 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.707454443 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.70814221 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.706428496 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.707056944 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.714348434 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.707088929 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.709006116 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.70923918 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.709939421 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.708651314 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.707944774 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.710093474 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.708651279 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.714169538 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.708390747 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.710197983 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.715299058 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.709366854 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.70726895 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.711020899 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.710372603 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.708594569 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.711549785 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.7164928 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.707886224 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.709199324 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.709579549 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.709016952 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.708490469 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.716294244 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.708445206 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.709425074 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.708268947 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.711680022 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.708264797 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.710861344 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.710989915 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.71091818 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.712603816 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.708558825 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.709312999 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.711736692 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.708791554 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.709887207 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.71051317 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.713155239 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.718435162 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.714779144 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.711378087 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.713148153 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.711684006 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.71497481 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.711765006 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.708668262 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.71049176 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.721250048 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.718739159 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.71624851 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.713499028 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.709227946 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.716056842 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.712130361 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.715507646 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.711018633 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.712797452 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.710924889 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.711150529 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.710783118 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.715914518 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.711475279 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.712815147 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.713474216 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.715637666 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.710851921 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.711638377 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.710914509 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.710736896 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.712113067 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.7123051 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.711649203 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.715325472 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.71413166 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.712158794 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.712964225 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.719957003 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.712154393 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.713118961 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.713076359 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.713365469 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.7119809 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.713943339 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.711568304 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.71634171 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.7229838 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.714431514 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.723340185 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.714673665 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.723982487 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.713964937 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.714537492 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.720944698 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.714509126 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.712160272 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.71275825 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.713245089 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.719774447 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.712405495 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.713878429 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.717051937 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.713247164 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.712613649 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.714949123 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.713054078 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.712939448 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.713041435 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.722486134 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.715542413 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.719001928 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.715439246 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.713960288 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.714436366 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.71395891 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.713248731 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.717620569 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.714268619 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.71494819 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.715895407 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.715300233 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.713755923 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.714943731 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.71445371 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.714765007 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.712469879 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.723600771 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.715748323 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.719741215 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.715602303 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.722676115 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.714721113 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.722076126 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.71627005 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.717395141 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.715465365 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.714683833 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.717398681 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.71419362 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.717692835 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.715182601 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.717217605 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.719546499 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.715580163 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.717703556 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.717941993 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.716713056 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.718064886 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.726691052 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.741460798 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.717681781 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.721902572 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.716414042 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.716910106 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.721174663 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.716644111 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.715769221 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.716984726 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.725666606 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.724328688 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.716332765 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.716601925 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.717229113 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.715172632 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.715748327 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.715347607 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.715917979 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.716173412 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.717252276 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.716495528 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.721966328 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.715807534 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.718173039 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.718120157 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.717645999 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.727135702 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.716182966 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.71899777 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.717786743 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.715147181 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.71807591 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.717804823 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.716300293 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.719420885 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.716873726 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.7194765 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.723629021 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.726611883 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.72066613 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.716570217 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.716669962 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.717652428 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.718986843 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.718588233 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.716816286 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.717788444 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.718944618 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.716775961 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.718678564 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.71816007 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.717908953 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.720303358 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.718199418 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.720547262 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.729738992 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.719525518 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.717240519 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.717664495 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.718587012 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.719118755 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.719657455 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.727489284 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.723677389 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.728749445 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.728750811 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.724111137 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.71958961 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.721593936 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.726834656 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.718308906 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.720553691 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.718192882 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.719026008 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.718458584 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.722520406 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.719563055 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.724905174 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.720412171 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.718625939 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.727157594 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.720299789 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.719473702 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.719372558 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.724259087 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.719649834 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.71851616 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.71961405 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.719136115 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.725921325 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.72095591 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.71908208 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.721278827 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.718104824 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.719709073 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.724690575 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.71936086 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.722213641 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.719077217 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.7208264 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.71843636 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.720791115 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.718950409 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.719402927 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.721173456 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.723274937 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.728836929 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.721083073 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.721891775 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.720108926 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.720741394 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.720367891 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.720704171 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.719573327 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.720333651 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.721111567 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.720442047 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.722030196 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.72470373 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.720903999 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.721645311 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.724650447 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.720565101 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.723548061 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.731311786 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.72853278 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.720130795 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.721363977 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.722032124 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.723837524 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.721253007 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.722215663 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.721816953 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.724059421 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.720071923 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.721741868 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.720929505 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.724342024 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.73732503 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.721527609 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.722617269 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.72172439 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.725326554 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.721032752 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.720679727 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.722809029 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.723631055 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.725226202 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.728682435 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.720885614 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.72996203 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.722178482 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.723177168 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.726925481 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.725844404 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.730569695 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.726155007 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.722285356 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.721620945 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.727085767 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.740558718 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.722374533 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.732804517 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.754477678 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.723034189 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.724465334 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.723088052 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.723500578 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.723242657 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.724749573 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.723508682 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.722548501 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.722980075 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.723798374 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.724776752 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.73095003 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.723982974 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.721229752 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.721208765 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.724246241 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.725148807 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.721539372 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.724207366 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.723267043 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.722049127 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.723947587 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.723074362 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.723623452 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.735775407 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.73526596 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.723377095 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.722941652 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.723178437 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.727791871 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.727188171 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.734574126 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.733009967 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.724821286 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.725552795 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.727155518 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.72507232 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.725271013 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.725713849 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.724199631 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.723788266 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.723193857 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.734223828 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.733054378 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.728914961 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.724958246 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.725373359 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.724464978 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.726299191 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.725682684 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.724673015 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.727501668 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.724872436 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.728397399 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.725736558 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.723309613 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.729592696 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.733377428 seconds)
  done (took 1023.226828215 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.725097681 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.725443221 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.725672009 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.725258189 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.725046497 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.726466067 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.727081763 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.725610274 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.725705986 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.725289325 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.725837783 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.726261167 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.726978268 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.7262802 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.726147628 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.725748985 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.726196644 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.726273581 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.726785146 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725768076 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.727122349 seconds)
  done (took 37.908727497 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.726198412 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.72535516 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.725637735 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.725796939 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.72692755 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.726287168 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.725938929 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.726620351 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.726725419 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726414759 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.725611474 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.72626031 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.726079202 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.727180204 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726310209 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.725919099 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.72711707 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.728494828 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.731140578 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.728316944 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.726584195 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.725991059 seconds)
  done (took 39.649240944 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.726391126 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.728235164 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.727185299 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.727378329 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.727626616 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.727148121 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.727636987 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.728037005 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.72790318 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.729430754 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.727184414 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.729429952 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.735512323 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.734966351 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.731428948 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.729460668 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.872532198 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.72874807 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.731386588 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.728480499 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.728661101 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.734746478 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.728757868 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.728572245 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.729811411 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.729506262 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.728584241 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.728849977 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.729313353 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.730220925 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.735383729 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.728488216 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.729729542 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.733200445 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.730524585 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.730441834 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.732844201 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.730626958 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.728899812 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.729503541 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.739610405 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.752882701 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.729534744 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.735937782 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.729048211 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.728807354 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.732634817 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.73793482 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.729825992 seconds)
  done (took 86.613373035 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.728779985 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.729399623 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.728270201 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.729723006 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.729032126 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.728448227 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.730190696 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.729029927 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.728905759 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.72869886 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.729144809 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.729846389 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.729226942 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.729162644 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.72996455 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.728950997 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.728871538 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.729713684 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.731148418 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.729972751 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.730080031 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.730832077 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.730852249 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.730464309 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.729929443 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.730078122 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.731710613 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.731138527 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.731462935 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.732120115 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.731556825 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.730029422 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.729738924 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.732194623 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.731756367 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.731512764 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.730741782 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.732072294 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.731848541 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.731762647 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.731956693 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.730818498 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.73146312 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.731260844 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.731349091 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.731406496 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.731113273 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.729912103 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.731667604 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.730604227 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.731614255 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.73064266 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.732383655 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.732537206 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.731189109 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.733032122 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.731026861 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.731559057 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.731447274 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.732260493 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.73146719 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.731482656 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.732029801 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.731756488 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.730230915 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.732061347 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.731575757 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.732431927 seconds)
  done (took 119.357808054 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.732219747 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.733248873 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.732789774 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.730871034 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.732538862 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.734199316 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.735648028 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.733053687 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.732744198 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.731938386 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.733158234 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.731197245 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.731481407 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.730792462 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.732304143 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.734176358 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.732285581 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.730770958 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.731668006 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.731637585 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.733105439 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.732515096 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.730710457 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.733504296 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.737449603 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.738356963 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.73988934 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.742713674 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.741431444 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.74181421 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.741137849 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.740968977 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.741789931 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.741611793 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.740676065 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.741897414 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.741227023 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.739829112 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.738104166 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.740072745 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.739711106 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.736012203 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.733693062 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.736442476 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.735308729 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.732309012 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.739005401 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.728396184 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.733451367 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.732796941 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.730167234 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.733379182 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.737048459 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.731252874 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.728527658 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.729624274 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.731511944 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.730139077 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.732906669 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.727438091 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.730541761 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.728797222 seconds)
  done (took 109.216871099 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.731552595 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.739329174 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.733210443 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.737173143 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.734598743 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.737632403 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.736318669 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.737988254 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.738192721 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.73731848 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737648102 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.738887957 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738249796 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.735884119 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.735288583 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.73782758 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.736205473 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.738659988 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.73813652 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.737190581 seconds)
  done (took 36.395898044 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.737561515 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.737831302 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.735488997 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.737792288 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.738034698 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.734897435 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.737343996 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737882521 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738375421 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739298133 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.736844272 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.738682525 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736141522 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.737673948 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.73682591 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.737092268 seconds)
  done (took 29.464231451 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.738161158 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.739617995 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.740357352 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.73991078 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.739376399 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.736969254 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.739205948 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.737580564 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.73892423 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.740265711 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.739330616 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.737529085 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.735290397 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.738389852 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.738367897 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.735872503 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.736854545 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.737034974 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.736976636 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.737754106 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.739264054 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.732233419 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.73996331 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.73844048 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.738188809 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.738179887 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.739763071 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.73742829 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.739593543 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.738676637 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.739044757 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.739822342 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.740996193 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.738498439 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.740288316 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.739208117 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.73787027 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.738502558 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.740144673 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.740567037 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.73752939 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.739593937 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.739399041 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.738493762 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.734308182 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.736751076 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.738396374 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.736556674 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.738528975 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.738129392 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.740731172 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.739719217 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.738516884 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.739087961 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.738431957 seconds)
  done (took 97.283996243 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739228845 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.737557193 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.736919694 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.738954049 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.738110213 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.730698648 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.731687664 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.730826619 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.730956625 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.729091201 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.734792086 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.726365869 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.727075047 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.727621501 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.730175102 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.727853346 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.725557024 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.729085974 seconds)
  done (took 32.841205553 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.729663398 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.729156933 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.729288649 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.729082511 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.72755769 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.728759919 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.724536134 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.727362882 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.726248988 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.729135527 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.72362195 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.726585172 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726304715 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.725170216 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.723773499 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725743466 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.725532907 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.727078479 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.725010854 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.724267327 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.726531557 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.72283381 seconds)
  done (took 39.641864246 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.727166101 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.724562269 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.739390399 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.750968744 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.747520522 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.769014261 seconds)
  done (took 12.116765497 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725797719 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.727411828 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.726264089 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725660248 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724573295 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.728751985 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72494929 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725744746 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.726239425 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729236028 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.726484542 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.725310261 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7250253 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.724844896 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725866787 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.725652238 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.728744405 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728450719 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.726115483 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.72608888 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.723866194 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.727747699 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.726859577 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.727477633 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.727206359 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.728933824 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.727351075 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724892435 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730166111 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.726656714 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.726082439 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729862053 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.726411065 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.725846087 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.727475658 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725361955 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.727441527 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.730009503 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.726358714 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.726750167 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.726643409 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725911751 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.726010075 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725350996 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724956848 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.726826989 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.724303343 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.725077985 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.729114213 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722881259 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724001164 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728573271 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.72526209 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.727056656 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.72795384 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.724014395 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.724304751 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721171801 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.721375709 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722660808 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.726736553 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.72247808 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.722784667 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.723802128 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725275933 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.723614752 seconds)
  done (took 115.578088525 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.722291989 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.724297547 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725257069 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.724153626 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.721498574 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.721296278 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71835323 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.717569672 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719570184 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721738758 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720510549 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714681118 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.719490729 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718489658 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717565789 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718887314 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7186226 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.718092665 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.719095936 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.720337242 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719288667 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719242888 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.721983158 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719385612 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717134786 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71916685 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716906463 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718921261 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.721380391 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.719454392 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.717437201 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7204539 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.719263307 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.719657607 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720439686 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718899157 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718631356 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.718090288 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.718459632 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71853094 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719807569 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.722583844 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716190265 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.720192365 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722315846 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.722404748 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71918574 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719232693 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721221053 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.719948659 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.719235839 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.719017581 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718686018 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717146136 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716423393 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.720351369 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7194287 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.723209842 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.719351696 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71675896 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71756775 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.718558111 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.720138035 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.72047166 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.720020894 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.718513723 seconds)
  done (took 115.14864998 seconds)
done (took 2380.687582627 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.791994026 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.905081181 seconds)
  done (took 15.344199859 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.882708326 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.836442383 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.723420161 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.76057561 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.719634697 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.718285957 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.746129049 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.718651351 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.72053568 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.721939198 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.720988984 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.904093477 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.736383902 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.717866158 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.720736351 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.812783561 seconds)
  done (took 49.816287043 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.72396818 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.725599238 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.733505088 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.727099508 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.723013548 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.738620966 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.755125171 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.723807331 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.781923016 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.735779273 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.846664369 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.732061845 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.720624336 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.780538196 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.733444779 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.735963067 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.816602274 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.795985955 seconds)
  done (took 33.1801002 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.80001251 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.732979813 seconds)
  done (took 10.192750041 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.723346835 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.715030519 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.815404107 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.739526515 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.747445784 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.729385867 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.755531718 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.752647451 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.736997246 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.716393009 seconds)
  done (took 69.085457189 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.724018347 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.722772336 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.721713824 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.717783696 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.71710521 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.720357581 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.718159638 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.722515272 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.380051093 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.749407358 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.724348851 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.720674003 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.71748638 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.720413895 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.717804249 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.740359847 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.835474091 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.71642719 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.715336411 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.723488842 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.718349119 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.77063408 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.732386601 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.71772554 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.746813242 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.379408364 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.72375687 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.72460782 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.828564052 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.714382733 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.717654784 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.904024189 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.722677662 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.179500137 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.973381011 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.720273318 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.727609644 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.724761083 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.717061526 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.82866727 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.715863212 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.72320075 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.677681867 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.955979388 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.817048141 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.758494076 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.017473021 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.73072488 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.717835933 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.749153869 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.720882416 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.72029643 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.730170235 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.231990055 seconds)
  done (took 124.414654443 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.717218356 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.061842858 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.88285165 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.716092813 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999446209 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.92304554 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.71412534 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.762946314 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.715332616 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.941507875 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.974174035 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.818239629 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.714050741 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.718653344 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.712855615 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.712119371 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.872133189 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.783345537 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.717125233 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.711780655 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.743129062 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.95725876 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.83741556 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.7163757 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.741554096 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.925673657 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.834613432 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.817031265 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.499556034 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.715226277 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.778852363 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.716603633 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.717574382 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.713565909 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.872429208 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.80687402 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.794826124 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.716411429 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.714664225 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.717034827 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.464509401 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.911582405 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.807707264 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.842757921 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.967995544 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.919218237 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.494064846 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.717475602 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.449050192 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.881185697 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.944901053 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.94472494 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.836980067 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.718246553 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.257684492 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.716581381 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.715478438 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.96296088 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.937166424 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.810226491 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.720861649 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.717130027 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.714536305 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.006353935 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.718265103 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.809006354 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.717957087 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.712625142 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.810991097 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.81200127 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.94511868 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.926971963 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.744514642 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.060038795 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.22722207 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.96076411 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.777265026 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.962833553 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.718616453 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.713994131 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.795664674 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.545128029 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.968876206 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.99416991 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.959221236 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.750265042 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.43626908 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.717411161 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.942588214 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.934805939 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.974047251 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.960127772 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.955209316 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.029518632 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.716443317 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.71563563 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.944121197 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.840666167 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.717759731 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.063767033 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.9447764 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.239371222 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.742264962 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.016508336 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.844873911 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.718985629 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.355997077 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.721709984 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.943790438 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.7575019 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.717996064 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.716676341 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.936131342 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.701562017 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.718230082 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.725385214 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.778965096 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.717531173 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.947984325 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.719098769 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.985447207 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.719127889 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949608141 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.131739697 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.749146295 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.946744729 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.964616393 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.722087863 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.958932652 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.973984368 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.832412306 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.992809371 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.616244975 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.721198243 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.999853092 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.718630332 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.718897208 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.889591235 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.72282183 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.860150301 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.720865471 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.010518465 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.737545612 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957570689 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.722656751 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.970217965 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.750920377 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.768800572 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.722368228 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.848516742 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.720555874 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.549779775 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.878163919 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.719520689 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.718655059 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.539928317 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.719876382 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.869633398 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.945531408 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.740262647 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.793631187 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.378581286 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.720590225 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.797018503 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.16197861 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.109731245 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.723242544 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.975435015 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.721144876 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.723451014 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.723539798 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.006967163 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.952731362 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.721755977 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.719512822 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.627031139 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.719226599 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.721560828 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.901830673 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.0506383 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.721949855 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.922483947 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.720636473 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.847460977 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.724308623 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.783770748 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.059399501 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.720505322 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.721175172 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.722802376 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.725303697 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.724176129 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.984806242 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.744692719 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.228551935 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.860468121 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.992166236 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.030110294 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.966920637 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.763511781 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.72435701 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.973043854 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.721589108 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.783195734 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.724007749 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.742744912 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.948581779 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.722632436 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.928519424 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.989157667 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.570789866 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.767181378 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.72470913 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.722428335 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.722474959 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.861885861 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.802644131 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.72508275 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.723681279 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.837176929 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.842939022 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.928292174 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.724069626 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.74632851 seconds)
  done (took 870.128733988 seconds)
done (took 1173.814748072 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.725081725 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.722325666 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.723154925 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.722964628 seconds)
  done (took 28.550667092 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.726766932 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.725238743 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.725472237 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.725129012 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.724522107 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.725185047 seconds)
  done (took 12.008902515 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.759796663 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.722948528 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.725252843 seconds)
  done (took 20.865606461 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.794563775 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.106901822 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.855931956 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.144922824 seconds)
  done (took 9.559542054 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.726687457 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.728136791 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.725257973 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.727917039 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.734469613 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.726555945 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.727903613 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.728361718 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.728611884 seconds)
  done (took 17.214248898 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.149628088 seconds)
done (took 94.006788894 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 6.73485923 seconds)
    (2/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.06060969 seconds)
    (3/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.721030543 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.559161448 seconds)
    (5/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.960241251 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.82585353 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.79463711 seconds)
    (8/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.723520517 seconds)
    (9/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.894212294 seconds)
    (10/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.830454201 seconds)
    (11/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.088720437 seconds)
    (12/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.91450565 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.733977807 seconds)
    (14/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 6.714656845 seconds)
    (15/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.899352153 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.668683074 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.882088283 seconds)
    (18/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.089085616 seconds)
    (19/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.728876442 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.71659869 seconds)
    (21/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.819679475 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.737423201 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 6.716871627 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.848158012 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.795312531 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.818474389 seconds)
    (27/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.790450146 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.972869917 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.801195295 seconds)
    (30/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.721159796 seconds)
    (31/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.97440358 seconds)
    (32/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 6.717865198 seconds)
    (33/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.276590649 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.813810868 seconds)
    (35/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.815185159 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 6.039714242 seconds)
    (37/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.989559949 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 6.716679471 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.88531749 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.821867294 seconds)
    (41/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.85954531 seconds)
    (42/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.81114228 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.683745519 seconds)
    (44/309) benchmarking ("sort", Bool, false)...
    done (took 1.938163676 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.332643335 seconds)
    (46/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.805710402 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.482786834 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.64309866 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 6.717933604 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.939597052 seconds)
    (51/309) benchmarking ("sort", BigInt, false)...
    done (took 6.717634175 seconds)
    (52/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 6.718152419 seconds)
    (53/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.007527238 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 5.442303088 seconds)
    (55/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 6.715191212 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.362895325 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.970510985 seconds)
    (58/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.026411055 seconds)
    (59/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.800215215 seconds)
    (60/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.718034216 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.44429613 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.737358714 seconds)
    (63/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 6.71659276 seconds)
    (64/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.888636317 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.715888378 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 5.546460078 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.121721124 seconds)
    (68/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.001919925 seconds)
    (69/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.582607785 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.814380459 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 5.656756189 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 6.234879331 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.63281492 seconds)
    (74/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.089834911 seconds)
    (75/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 6.721713949 seconds)
    (76/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.982929317 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.853597586 seconds)
    (78/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.849266256 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.646487245 seconds)
    (80/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.619218295 seconds)
    (81/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.08213258 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.738813918 seconds)
    (83/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.722114829 seconds)
    (84/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.867270857 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.843428693 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.97060418 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 5.659465151 seconds)
    (88/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.78630877 seconds)
    (89/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.183628208 seconds)
    (90/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.599393997 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.716993078 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.776066126 seconds)
    (93/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.719119906 seconds)
    (94/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.940626342 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.81887628 seconds)
    (96/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.897134275 seconds)
    (97/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.810438495 seconds)
    (98/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.742727539 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 3.161290982 seconds)
    (100/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.82080259 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.036717617 seconds)
    (102/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.837201373 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.733408467 seconds)
    (104/309) benchmarking ("sort", Int8, false)...
    done (took 4.583246633 seconds)
    (105/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.969102372 seconds)
    (106/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.799083057 seconds)
    (107/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.902223543 seconds)
    (108/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.821248608 seconds)
    (109/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.718077366 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 6.152559794 seconds)
    (111/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.859344766 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.020184737 seconds)
    (113/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.27078943 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.724113097 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.977176218 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.859002093 seconds)
    (117/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.874076375 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.234180102 seconds)
    (119/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.765651491 seconds)
    (120/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.729415216 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.067503554 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.742405038 seconds)
    (123/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.02033916 seconds)
    (124/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.828765172 seconds)
    (125/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.86686379 seconds)
    (126/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.720979896 seconds)
    (127/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 7.855111719 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.795747299 seconds)
    (129/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.721100091 seconds)
    (130/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.741866583 seconds)
    (131/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.022722032 seconds)
    (132/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.16237997 seconds)
    (133/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.721101535 seconds)
    (134/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.56395187 seconds)
    (135/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.719095049 seconds)
    (136/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.869185535 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.809820351 seconds)
    (138/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.017408698 seconds)
    (139/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.800479009 seconds)
    (140/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.748991682 seconds)
    (141/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.797323945 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.972232241 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 6.185347182 seconds)
    (144/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.813791584 seconds)
    (145/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.891284044 seconds)
    (146/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.968713198 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.972329073 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 5.98154074 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.764876851 seconds)
    (150/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.91690913 seconds)
    (151/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.858777228 seconds)
    (152/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.72638573 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 3.123805786 seconds)
    (154/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.872233197 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.903009342 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.853093042 seconds)
    (157/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.819372691 seconds)
    (158/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.722798728 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 6.452573367 seconds)
    (160/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.838251217 seconds)
    (161/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.872353485 seconds)
    (162/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.7210483 seconds)
    (163/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.719770783 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.978095405 seconds)
    (165/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.978822177 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.741070303 seconds)
    (167/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.801354261 seconds)
    (168/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.64878183 seconds)
    (169/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.742123913 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.735188828 seconds)
    (171/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.732531616 seconds)
    (172/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.809367688 seconds)
    (173/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.90032914 seconds)
    (174/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.726478214 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.72170354 seconds)
    (176/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.958415595 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.496756623 seconds)
    (178/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 6.723400943 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.797751567 seconds)
    (180/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.852788401 seconds)
    (181/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.727569345 seconds)
    (182/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.720562481 seconds)
    (183/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.19180708 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.939704903 seconds)
    (185/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.725175582 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 8.229784342 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.955875781 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.730715274 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.093163282 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.043713055 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.860633451 seconds)
    (192/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.750660209 seconds)
    (193/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.856927924 seconds)
    (194/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.728832077 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.058750434 seconds)
    (196/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.826831387 seconds)
    (197/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.729490587 seconds)
    (198/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.055431796 seconds)
    (199/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.732478772 seconds)
    (200/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.385042954 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.875599722 seconds)
    (202/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.195339615 seconds)
    (203/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.977822498 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.727727728 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.835993756 seconds)
    (206/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.934966476 seconds)
    (207/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.23686572 seconds)
    (208/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.80486428 seconds)
    (209/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.396282687 seconds)
    (210/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.730771151 seconds)
    (211/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.217207116 seconds)
    (212/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.730634629 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.455269175 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 3.269556488 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.798369542 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 6.728757672 seconds)
    (217/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.906859029 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.047351874 seconds)
    (219/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.732517911 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.859307095 seconds)
    (221/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.728229455 seconds)
    (222/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.868550507 seconds)
    (223/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.792947064 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.956367972 seconds)
    (225/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.857863573 seconds)
    (226/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 6.727980958 seconds)
    (227/309) benchmarking ("sort", Float64, false)...
    done (took 5.479391767 seconds)
    (228/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.734203741 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.76761046 seconds)
    (230/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.892089971 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.864406316 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.161209512 seconds)
    (233/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.479632247 seconds)
    (234/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.930329327 seconds)
    (235/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.186734814 seconds)
    (236/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.84642004 seconds)
    (237/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.743152502 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.829480089 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.732204656 seconds)
    (240/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.758034584 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.727353969 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.375129112 seconds)
    (243/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.795434336 seconds)
    (244/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.765108992 seconds)
    (245/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.734558505 seconds)
    (246/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.733238308 seconds)
    (247/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.970166641 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.860269503 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.778122132 seconds)
    (250/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.756800679 seconds)
    (251/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.563306421 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.065429548 seconds)
    (253/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 6.828979207 seconds)
    (254/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.331666708 seconds)
    (255/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.818835932 seconds)
    (256/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 6.737074977 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.931935268 seconds)
    (258/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.030534171 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.973116564 seconds)
    (260/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.843869784 seconds)
    (261/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.758739531 seconds)
    (262/309) benchmarking ("sort", Float32, false)...
    done (took 5.467585614 seconds)
    (263/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.92842416 seconds)
    (264/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.856144172 seconds)
    (265/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.813656477 seconds)
    (266/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.791106012 seconds)
    (267/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.915819369 seconds)
    (268/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.727452852 seconds)
    (269/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.110909845 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 6.729543279 seconds)
    (271/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.79409701 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.083333361 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.729464511 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.869118065 seconds)
    (275/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.731779723 seconds)
    (276/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.558842396 seconds)
    (277/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 6.732220341 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.769881433 seconds)
    (279/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 6.729411855 seconds)
    (280/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.920379794 seconds)
    (281/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.809791071 seconds)
    (282/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.093611183 seconds)
    (283/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.856403981 seconds)
    (284/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.755108862 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.733761574 seconds)
    (286/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.862886077 seconds)
    (287/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.8549371 seconds)
    (288/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.569021775 seconds)
    (289/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 6.734204818 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 6.779572236 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.610845555 seconds)
    (292/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.73319205 seconds)
    (293/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.957017538 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.070606614 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.738331858 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 4.445749464 seconds)
    (297/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.738398058 seconds)
    (298/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.736666209 seconds)
    (299/309) benchmarking ("perf_sum", Float64, true)...
    done (took 3.220347283 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.788960773 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.398867021 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.74291514 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.733494783 seconds)
    (304/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.916371916 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.954782359 seconds)
    (306/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.730969144 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.920964931 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.224258808 seconds)
    (309/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.851138029 seconds)
  done (took 1100.803402615 seconds)
done (took 1102.531802404 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.76409028 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.754085402 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.737433093 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.756970697 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.851661082 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.783394542 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.749107727 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.740765005 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.786633044 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.786154587 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.731850577 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.780429706 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.739867346 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.738119887 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.735797937 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.754929423 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.037495197 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.758929871 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.759439171 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.747593988 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.752322353 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.736267106 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.787264805 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.781637341 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.741986979 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.740524387 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.742048172 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.756034592 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.850718418 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.740158666 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.744037064 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.748703838 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.037331965 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.757279351 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.737487609 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.758371326 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.750820995 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.749358074 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.744718537 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.770122749 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.124841559 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.768548906 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.74070938 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.739547306 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.739192382 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.74492855 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.741931468 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.744554543 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.753374239 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.754044379 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.117428255 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.783108079 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.744972141 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.740714033 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.754182244 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.737775122 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.745697071 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.754638163 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.762486224 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.757166738 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.024447201 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.769562186 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.745092961 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.759020179 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.748304525 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.154759779 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.7690344 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.747678886 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.124556476 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.775221051 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.155354707 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.781959093 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.743632232 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.757605811 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.774619087 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.039851569 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.757307506 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.739501546 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.750493512 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.737014411 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.750410744 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.756332378 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.745995107 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.739772964 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.754588664 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.790012008 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.752702412 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.738362987 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.750738614 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.762691856 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.750092069 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.757197738 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.745166196 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.73825536 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.751872486 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.744925229 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.743683314 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.744975601 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.744970608 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.751672761 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.123314572 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.79179163 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.73828135 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.73875954 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.741015932 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.755830622 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.124324891 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.772784522 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.76767535 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.79094156 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.740927515 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.024469574 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.766488079 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.759399799 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.753245693 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.743762913 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.738648064 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.023089861 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.143847873 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.787573609 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.743578097 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.739058542 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.758034028 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.744250135 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.739898969 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.042677082 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.762829355 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.756781066 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.864026541 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.7536352 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.775447846 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.740247922 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.746068467 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.78899441 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.757316322 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.776178702 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.745358729 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.759809806 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.762783375 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.739739651 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.754192988 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.757653391 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.741387969 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.750204888 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.739213149 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.790055453 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.758278789 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.75753723 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.761386737 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.866672019 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.74211972 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.026084519 seconds)
done (took 273.982938896 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.82073957 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.737968442 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.8339052 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.739027051 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.831234607 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.819302983 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.738935389 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.74296201 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.738361787 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.233451675 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.740927641 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.747852056 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.738418698 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.739807871 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.811659341 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.744219409 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.744085271 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.179733057 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.741438072 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.824043308 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.739431284 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.740211502 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.741066303 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.229268827 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.741205247 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.739921957 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.827065321 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.740675104 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.176703832 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.741365658 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.740027333 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.176833241 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.824548006 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.76928802 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.751676435 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.747229678 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.836971106 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.750171159 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.819019562 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.812399303 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.836291235 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.774954391 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.740937673 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.740790431 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.747680602 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.744034797 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.742747572 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.770948711 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.741042354 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.74964201 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.182200054 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.747254061 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.748622099 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.743760643 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.744847299 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.771007857 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.744233344 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.74488953 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.827757963 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.746897228 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.814299428 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.229971671 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.236587709 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.743728241 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.740278098 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.739553271 seconds)
  done (took 176.65693551 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.813687433 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.819238531 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.80951629 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.745656292 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.794776585 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.809420854 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.748893175 seconds)
  done (took 14.212796511 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.753273068 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.743496298 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.793704343 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.795067055 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.743892842 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.897743611 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.745369501 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.758125553 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.749284019 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.773026551 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.742078548 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.744708388 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.751722103 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.742866633 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.792992265 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.757491785 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.861485792 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.747057414 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.746967804 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.891208887 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.750475303 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.752413487 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.769062155 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.756396803 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.746229985 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.750581531 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.3388425 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.744725661 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.744931359 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.745279493 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.743691141 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.786343206 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.743800966 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.744852052 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.747503181 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.861538568 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.749607259 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.745971728 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.747632168 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.744641449 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.745319477 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.746559549 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.747373179 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.747991673 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.745035049 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.767824079 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.746519465 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.746211066 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.746443923 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.748615698 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.774785893 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.747948646 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.747938484 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.752562719 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.791098212 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.754087101 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.746240978 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.749219359 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.745946141 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.746020061 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.895380389 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.796810432 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.748609825 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.800563076 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.747089496 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.747593649 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.747205215 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.746082009 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.838419017 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.745460479 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.798503707 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.749862717 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.906684046 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.77084426 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.748365481 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.753489939 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.750254326 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.746405754 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.745750819 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.754927662 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.747216922 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.749890945 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.755978661 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.750530214 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.748406645 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.859674332 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.887531201 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.747900654 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.747999121 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.757459613 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.746127348 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.792152582 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.747212981 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.747704026 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.80827553 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.864196019 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.776072251 seconds)
  done (took 193.738735777 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.758652932 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.758918901 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.751187905 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.764415395 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.747171949 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.747595507 seconds)
  done (took 12.201608709 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.750709898 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.753135985 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.748417398 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.747479288 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.75016621 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.749111724 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.749464974 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.750905903 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.752132633 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.751667038 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.749949995 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.749798534 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.747715624 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.750951326 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.752068246 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.750254468 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.748491701 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.752737337 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.750070393 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.751264269 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.002425478 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.752573464 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.750654433 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.754661498 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.754198634 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.751046332 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.764616017 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.751298348 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.747470978 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.756756371 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.755193401 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.752342824 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.751421206 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.755234253 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.754089204 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.754427805 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.75501347 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.7512511 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.748477754 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.754834643 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.751164467 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.752556134 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.750214269 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.75129313 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.752724396 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.757922887 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.755746951 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.765581617 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.749707953 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.748773563 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.749484837 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.758381561 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.749737739 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.751277979 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.753352861 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.754130303 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.758750504 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.748773612 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.749856381 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.754488567 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.755043584 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.750208789 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.765056624 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.755333168 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.753628944 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.750671553 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.755895292 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.756421974 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.755310345 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.749886402 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.752338439 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.749728481 seconds)
  done (took 129.115699402 seconds)
done (took 527.61133341 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.786055443 seconds)
  done (took 8.46316969 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.820521889 seconds)
  done (took 8.542068404 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.072413145 seconds)
  done (took 9.770588015 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.78546547 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.769176225 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.774009656 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.767154809 seconds)
  done (took 28.811660814 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.015458916 seconds)
  done (took 8.707552778 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.780894108 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.756341062 seconds)
  done (took 15.296575536 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.85729903 seconds)
  done (took 8.551354211 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.070491396 seconds)
  done (took 8.766237972 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.760525602 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.755661184 seconds)
  done (took 15.222522483 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.75928695 seconds)
  done (took 8.445154345 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.994334454 seconds)
  done (took 9.78372109 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.774404855 seconds)
  done (took 8.52948655 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.785227794 seconds)
  done (took 8.470681256 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.819669937 seconds)
  done (took 9.506723291 seconds)
done (took 158.546090977 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.773101029 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.757063453 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.755563659 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.755055002 seconds)
  done (took 28.726581483 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.790096671 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.791908975 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.790057141 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.800535345 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.791820943 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.790532265 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.783929706 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.784089358 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.800941787 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.795312037 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.79272057 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.792399876 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.78892922 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.780848568 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.793846583 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.792643006 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.800670839 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.789959415 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.783686227 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.792206302 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.758831626 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.803730195 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.792678281 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.754880669 seconds)
  done (took 44.623949306 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.946341751 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.827561858 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.912965116 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.810102206 seconds)
  done (took 9.185079627 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.808188271 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.811635308 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.823654131 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.862674418 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.886720273 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.820061212 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.78341142 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.779423066 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.765374691 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.811940247 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.887552081 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.805578522 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.896665401 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.759851479 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.944337454 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.762421212 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.756915514 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.809990301 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.86076699 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.888802048 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.759546565 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.813275165 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.81316409 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.813129366 seconds)
  done (took 45.415790413 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.761679998 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.769285078 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.769320083 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.759443025 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.763990732 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.761498733 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.76770462 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.766285717 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.782557469 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.76353101 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.762789645 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.760409304 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.767773924 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.763038875 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.761212464 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.774360246 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.774770305 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.760662555 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.763640447 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.770319397 seconds)
  done (took 37.012623503 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.757674449 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.605087565 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.103739607 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.011203387 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.761310765 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.754535354 seconds)
  done (took 30.682812479 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.772354217 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.761788927 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.759232256 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.815147605 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.895625286 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.766089322 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.761208205 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.770859266 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.801540497 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.818738645 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.77726395 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.784714291 seconds)
  done (took 23.172276509 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.762962451 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.758160157 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.759230876 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.77346137 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.775325233 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.764921816 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.767224394 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.758462278 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.772588735 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.776386664 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.769131614 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.772102816 seconds)
  done (took 42.90184347 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837410429 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.635705032 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203419596 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.23107681 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.282419594 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.959328433 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.758693422 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.843707195 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.758228618 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.030201221 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.094630326 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245923525 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.014315846 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903036745 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.773785996 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.245645271 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055249011 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977689636 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795786077 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44162237 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875806286 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369813895 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.398586293 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.879106125 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.970731097 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.8946776 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.034698662 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.723248097 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.816617386 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.778373205 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777136103 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.771292641 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04587098 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888937465 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842936022 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776031464 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.18698181 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.479040473 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.780261815 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.391980361 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.239731801 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.890230751 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775285677 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.771084623 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.699777692 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352228169 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865927792 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.772796867 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.473865915 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.772482061 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.775675572 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849014261 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.774257976 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.580985501 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.455941882 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.036628848 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.77593171 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771994991 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.337278918 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779692461 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447578216 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.707015188 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.858880064 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.399309315 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220275294 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.926076195 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.774205693 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.77527598 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701057528 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.414922753 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883771316 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.912481292 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.786375981 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.412678471 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079394954 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.181778542 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.82145362 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037506181 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.636961525 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.707063357 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989034298 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.724032407 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700763578 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.619677563 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.70086764 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980682431 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805338309 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.362387052 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804195107 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.855077721 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.77713526 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788904185 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774089159 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.986554797 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.667736773 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773302781 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.066120311 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.022609877 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788038645 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.85880429 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.6988666 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.772911906 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017371212 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.975600346 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.093694305 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.260606991 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859217876 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.774043323 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.787573388 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.776379118 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.782719858 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.038847554 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832184164 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.785034592 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888423075 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.725993031 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02160757 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79812446 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.873733131 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.129764669 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.011116567 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.105692156 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.017717417 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833479279 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.777208884 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.7788415 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.462809384 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.380247199 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.992797589 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.789272666 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326648427 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.784527411 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.774621618 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711475084 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.617164945 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.102391243 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.847583753 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991480684 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.775641902 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050255383 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702944049 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.913576554 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.766957629 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.987604239 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.412429542 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.853851278 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025862394 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.082572504 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.088942905 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784876109 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790628765 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869399122 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794399177 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.261812768 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.02541555 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.781143321 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.782089819 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.448037869 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.819977877 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780747001 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.779819642 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.32885069 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038733628 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.795878053 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.780815567 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.652938481 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.788803289 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840110173 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780992714 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.779148104 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.332622635 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.282820872 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.781577556 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.471303689 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987122016 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779187541 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.386111379 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943265221 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.792008002 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.035938522 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83901177 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.701783987 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.476864102 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.47561291 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773573996 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.702093372 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.776559346 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779591179 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77906088 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.971207135 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.043252917 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819227198 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.431248498 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.875948924 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779189396 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.778568625 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778167475 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.269930357 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.770266378 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45814552 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.790013791 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904636548 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.788936962 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.703137286 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.77779389 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779681779 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.777180768 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.725043725 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821248168 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.439420747 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982282969 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020967542 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.182647444 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784521319 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.440567146 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.886676518 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.792930659 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.050955558 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.473947773 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.784935314 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852394466 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.78256482 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.44759035 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.505536228 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.342461529 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066603457 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081067279 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113842936 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.325873422 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.993244172 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.861890136 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002744704 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.302508303 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836842073 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.866096659 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717591162 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789458391 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.414228104 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154773356 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788648496 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993121114 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054715981 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.11004571 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906665709 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.978792641 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807446571 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.774063497 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.703046762 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.311422048 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799636758 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.13637375 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976449567 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862020715 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.051705203 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.85316732 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.779623673 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104287304 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814533395 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.482924157 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.134551459 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36312074 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.12232509 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005889081 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.784997551 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.222662653 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120685815 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.012603241 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.930876152 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708529748 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.784581261 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.7886445 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.790760743 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.754054784 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.725765796 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.030015772 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791131715 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011480112 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.968004179 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146690847 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.686563589 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.787670125 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78192893 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028474689 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.500256734 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945147927 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.138749032 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.368314754 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790335956 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.713481669 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709822138 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.485470077 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.79529945 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.752255955 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984869312 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.884798027 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.466271329 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.243729521 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106202084 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.027671713 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.801039613 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.044283825 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058862648 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.277295262 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804539635 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.88156146 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.063796919 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.481976864 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.997977548 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.010577364 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322173291 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.000447843 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2244828 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.751873113 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.786357365 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.994711418 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.000624359 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.12194479 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959446095 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.496763448 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.801636732 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151701418 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843289393 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.130764 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.96395874 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.871956036 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.791756635 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865362478 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787690785 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.789520879 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.789782063 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796874484 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.127820874 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.892899643 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.799357771 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861872857 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78146284 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.353215829 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.78976074 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052104232 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120540959 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.10494265 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.844194088 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.784845985 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787960392 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716228911 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911632771 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.223583956 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057398757 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.906887029 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.917209088 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805491282 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.056640084 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.078743179 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101732809 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059549092 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.672782315 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459538192 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.913608967 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.00343552 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793237276 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.990189794 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994952159 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076401566 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338396269 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.965307248 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.985713339 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057517489 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.147261728 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.787099401 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.368869629 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.797393021 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187869399 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.815232817 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.123703298 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037465434 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790049003 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912544345 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.791061967 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.987697165 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.239333211 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.39894819 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.127509337 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647551228 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.790606255 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055572393 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.107113691 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093081861 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864178127 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79397938 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.479243491 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923924745 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.671080449 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.003310674 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.788568408 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993726557 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.499787709 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.789801154 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052749785 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089491461 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.786724142 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.688395576 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810704141 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.792531946 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.002861295 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0023949 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031042333 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790193143 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.798099468 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.596928771 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057721588 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.848700197 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719308688 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.788542405 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833534793 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.017754993 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.811347303 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.30442273 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.48961329 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064626046 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.692007869 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803499538 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.234552861 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.161601782 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10479144 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.310418605 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994168808 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.337277004 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.663656909 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171053249 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.791198213 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.237360402 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173700008 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.790829428 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.333488355 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905754872 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.048782853 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109383993 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.802839876 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.465828383 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.812343718 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002971979 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.146797474 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.720882437 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.788661442 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.837648589 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.789539314 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.795625304 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.79394182 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.720562734 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267270902 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.631570881 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346528796 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.788671307 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.794998338 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.110401789 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.354252312 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898866737 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807120442 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793402492 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.484967089 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.075871431 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.033892784 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.336301797 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.885353421 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.789826944 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793604188 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.707528226 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.968647598 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.974884954 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061120286 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.172259458 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.901019888 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.787583291 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.996942998 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992893657 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.139833482 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914259272 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.995034156 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9069023 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.727740894 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.49850974 seconds)
  done (took 1619.569530952 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.804884858 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.828790261 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.835311086 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.802168567 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.838882759 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.848951028 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.885664109 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.815209478 seconds)
  done (took 56.378614953 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.78795808 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.947125106 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.795295602 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.792761902 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.78956763 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.789394594 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.943417935 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.799244204 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.789709911 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.796739439 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.792592684 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.787194652 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.095560664 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.808357615 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.791082446 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.799266017 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.829780493 seconds)
  done (took 72.906159575 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.792238023 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.955910151 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.820621958 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.792390337 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.51520422 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.800784827 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.775502105 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.804648954 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.791626774 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.844498684 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.084248505 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.843453586 seconds)
  done (took 88.539509015 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.804527096 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.79114122 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.793352373 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.791851021 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.794102408 seconds)
  done (took 10.702218247 seconds)
done (took 2111.594315998 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.127213576 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.851004502 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.889611967 seconds)
  done (took 5.456830911 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.937750927 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.984374056 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.095321666 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.102555728 seconds)
  done (took 9.847060858 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.103971418 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.160341065 seconds)
  done (took 5.983195773 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.109248683 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.824513054 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.170414571 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.794223418 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.79336594 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.794037414 seconds)
  done (took 22.10700387 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.791407684 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.792776019 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.79316392 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.792920393 seconds)
  done (took 8.889469382 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.791016915 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.501241801 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.791157457 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.801245113 seconds)
  done (took 20.602450757 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.940414494 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.908871193 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.943939822 seconds)
  done (took 7.512513254 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.934850981 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.642132133 seconds)
  done (took 6.296152262 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.933742672 seconds)
  done (took 3.653226211 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.821213469 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.063650635 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.310042546 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.347050872 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.411578504 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.634598188 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.098686341 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.01158694 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.252839835 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.2475611 seconds)
  done (took 23.918582603 seconds)
done (took 129.216362118 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.13229601 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.827726245 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.999064644 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.147724654 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.027676643 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.999681459 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.009353115 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.133812303 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.816539378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.809187318 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.150409994 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.031993655 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.96057001 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.806762979 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.971351619 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.810236424 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.028958578 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.148163526 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.829125845 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.067765531 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.021685211 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.794785423 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.984876161 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.804551902 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.02431531 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.953400503 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.331940971 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.809197899 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.966895617 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.345914478 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.951709396 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.211620612 seconds)
  done (took 165.631313549 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.796112948 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.791323268 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.792215771 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.792313805 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.27768912 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.79272148 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.793780131 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.79340821 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.242232304 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.23197023 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.79377754 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.26446589 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.793836344 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.791624388 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.795592289 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.791399346 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.416851456 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.793248387 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.791473493 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.791434137 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.797267689 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.093333555 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.792064758 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.092286193 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.407593125 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.795147568 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.792673211 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.793175599 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.792505853 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.79068815 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.792797833 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.792473882 seconds)
  done (took 206.783792381 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.68870483 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.79416645 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.796588435 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.793272283 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.794678362 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.793990217 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.795587677 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.792829246 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.553317914 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.544864194 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.793293087 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.793986221 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.792819574 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.793189944 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.793196083 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.794389296 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.794452523 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.733536891 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.793387672 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.793937816 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.797123466 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.394500541 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.794122097 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.398913038 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.795518136 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.799389191 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.793678638 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.794622731 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.794701057 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.795267746 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.795378913 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.793696867 seconds)
  done (took 217.694904189 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.041122112 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.799304176 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.800281051 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.789368982 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.800274389 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.801612221 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.772566322 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.048182999 seconds)
  done (took 18.579163951 seconds)
done (took 610.418608415 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.154216486 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.000437092 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.977809399 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.823083061 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.075150868 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.870870158 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.817391219 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.885396884 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.650055921 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.896398425 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.484321542 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.842811085 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.57659567 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.843206237 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.942639942 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.874914754 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.372805582 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.464838548 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.992933715 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.897400458 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.999403466 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.719730606 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.904796502 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.684276462 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.604572062 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.778278934 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.834620575 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.378831578 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.828599624 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.979495983 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.498150113 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.105668275 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.836292834 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.819303056 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.875140772 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.856091285 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.010261946 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.832908376 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.946917881 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.525881817 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.898780564 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.558517941 seconds)
  done (took 99.64553725 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.81374673 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.807461675 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.807169956 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.808038589 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.814929773 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.807396433 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.807667796 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.807295592 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.808095051 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.807014425 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.807893737 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.815740278 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.805736177 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.817456228 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.807764184 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.808060788 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.806887791 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.814943999 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.806560848 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.806594241 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.808226218 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.80793983 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.802377968 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.80688571 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.807463228 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.806177936 seconds)
  done (took 48.769066262 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.801900156 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.957029338 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.050450221 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.820536174 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.802617857 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.806152212 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.819638177 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.808262169 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.803719262 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.80618443 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.905091319 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.808879637 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.821780964 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.050117162 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.817437307 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.801197642 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.802863167 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.805489006 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.965628278 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.818926504 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.822764493 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.807113902 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.821787479 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.8170866 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.805639669 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.804919685 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.807864824 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.25330659 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.81496226 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.905993135 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.848848638 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.825760012 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.181966206 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.060784111 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.856870179 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.809036009 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.804276116 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.909653483 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.810263277 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.804565614 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.822426291 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.809560458 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.051660463 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.3313921 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.820654691 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.80453532 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.264475397 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.918487223 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.845168689 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.80975279 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.052944647 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.821600435 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.804365395 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.80611279 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.841265878 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.806590638 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.804272291 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.123828349 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.816836031 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.824804091 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.80814029 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.80587983 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.969815084 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.815255091 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.958983822 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.815327629 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.81305973 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.805647853 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.05413762 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.819900531 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.342536793 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.819655082 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.805289036 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.906209347 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.965230882 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.29216106 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.815545344 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.969635326 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.199831671 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.829016995 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.811373716 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.24265833 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.833910849 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.812807959 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.807561148 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.809791112 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.807586289 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.852939218 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.821604643 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.255602894 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.343952286 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.139506429 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.833053698 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.819948985 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.805358906 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.123248206 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.812970498 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.804931206 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.043948461 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.352080437 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.823214492 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.812999392 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.323421502 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.822997495 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.82735424 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.812366242 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.058984307 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.825477182 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.852402508 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.805450561 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.814547994 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.810383573 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.826480739 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.812649714 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.808287388 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.316592352 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.926949386 seconds)
  done (took 224.587020057 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.807590977 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.807801916 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.805067692 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.807154233 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.805976515 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.806791443 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.806522432 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.806329094 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.807027719 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.808421132 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.805698791 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.807230934 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.807941164 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.807604846 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.810851959 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.808571479 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.410801054 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.806067591 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.808248528 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.804361348 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.461348016 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.811621738 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.808755289 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.803881503 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.808054086 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.808403785 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.816711969 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.809132923 seconds)
  done (took 165.611219612 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.809195811 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.920965816 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.828978597 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.839243997 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.812049109 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.809433808 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.904790633 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.827871483 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.814357014 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.808378206 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.809987689 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.870198062 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.816796854 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.907502427 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.842441086 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.917887335 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.914996309 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.818735179 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.809816041 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.809570068 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.837052376 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.815150505 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.869653838 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.929533364 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.827587537 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.923246637 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.828076919 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.810256851 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.809726985 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.923614778 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.830327037 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.872616573 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.837055053 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.828496923 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.927329637 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.926287812 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.915500552 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.916300315 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.819170308 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.810983674 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.811576266 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.811874204 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.923866368 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.828085872 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.812198172 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.926197299 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.828338394 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.811626965 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.812353529 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.812371496 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.823691021 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.830761495 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.874406973 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.936061511 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.845944731 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.833480394 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.907664754 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.940342707 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.812376156 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.910693607 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.821117312 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.924112301 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.832401717 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.814329637 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.813335241 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.814749612 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.841914034 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.914450158 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.918549458 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.823159254 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.909936622 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.847872496 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.817268772 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.812200336 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.814089482 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.924185284 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.929484572 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.848306749 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.847281418 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.837995112 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.817519715 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.812019738 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.813478868 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.832238336 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.81709752 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.926269012 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.9299487 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.82059742 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.814517633 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.81352288 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.813692569 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.836393655 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.931412069 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.848033937 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.918091593 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.880118867 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.883374693 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.82371199 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.827392814 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.815890079 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.877597967 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.824203677 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.825846669 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.106681225 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.871639317 seconds)
  done (took 196.573414168 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.187473079 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.863290209 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.869723851 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.134272442 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.152385933 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.747118135 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.855599415 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.858341525 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.883893312 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.042184022 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.935207739 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.879995996 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.84526926 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.833566744 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.857446525 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.881222168 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.869425642 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.1902422 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.084175462 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.001830435 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.853662338 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.166108465 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.18438445 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.435292802 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.908924959 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.265216231 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.422410938 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.990662619 seconds)
  done (took 59.946591928 seconds)
done (took 796.857772531 seconds)
SAVING RESULT...
DONE!
