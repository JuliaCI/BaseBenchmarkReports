cset: moving following pidspec: 22029
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.230648285 seconds)
loading group "string"... done (took 0.633235072 seconds)
loading group "linalg"... done (took 8.277617109 seconds)
loading group "parallel"... done (took 0.173501295 seconds)
loading group "find"... done (took 1.255327142 seconds)
loading group "tuple"... done (took 1.978716797 seconds)
loading group "dates"... done (took 1.332671513 seconds)
loading group "micro"... done (took 0.203646284 seconds)
loading group "io"... done (took 0.953970848 seconds)
loading group "scalar"... done (took 39.843486434 seconds)
loading group "sparse"... done (took 12.346820281 seconds)
loading group "broadcast"... done (took 0.970642809 seconds)
loading group "union"... done (took 14.069342816 seconds)
loading group "simd"... done (took 4.850484856 seconds)
loading group "random"... done (took 9.368641518 seconds)
loading group "problem"... done (took 1.613724747 seconds)
loading group "array"... done (took 22.144760172 seconds)
loading group "misc"... done (took 1.758143135 seconds)
loading group "sort"... done (took 3.345123429 seconds)
loading group "collection"... done (took 17.578047111 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536579198 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128976355 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140743649 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124021922 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153740848 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.12024919 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12552583 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084254805 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.912587271 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150511309 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114868458 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.439766307 seconds)
done (took 5.477441929 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172378696 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090572054 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079220753 seconds)
  done (took 1.277242211 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06622711 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128445328 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067452584 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068658462 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068022827 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067194491 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067231493 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067435044 seconds)
  done (took 1.642633615 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073455003 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069002528 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066804307 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068728642 seconds)
  done (took 1.386082598 seconds)
done (took 5.667065553 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.796743831 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215475738 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190416679 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.405859871 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135346392 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.179497612 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.654474131 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327736876 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.203128269 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095508519 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11273669 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.360907828 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124011484 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.644303801 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078081595 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09622269 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141423859 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435692349 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072462256 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088060246 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093140074 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131283089 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089414321 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077291114 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149252173 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070966748 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143005273 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083877169 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069042106 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224012622 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.180248676 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655231287 seconds)
  done (took 10.471484136 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101789345 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099494135 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069368587 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125441162 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097771451 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069980426 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075500979 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068259866 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089606372 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128332901 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091786072 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108340267 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066629329 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069900604 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083430763 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.19779312 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080470653 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082162921 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068578748 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079099711 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108144095 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080600547 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080432158 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080639377 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128832538 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170448582 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097427508 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097952267 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067511298 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082074771 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115221393 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12844536 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070819483 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066584881 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125270787 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095107558 seconds)
  done (took 4.597769469 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.107552958 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152663198 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090346166 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140746512 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065617544 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112316164 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066383605 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083035439 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.23755386 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.458835853 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.123482148 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.631020026 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.123246085 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120824803 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105097069 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072250136 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069979578 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069301703 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.265357138 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101949172 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114828737 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083660901 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071065168 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.074625832 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066581213 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072219402 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064547457 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069209225 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088664448 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076835831 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369463237 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126255654 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068926047 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.835930063 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.167139562 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068504648 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106185217 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166047514 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065537207 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093937509 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140942537 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067858519 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064212594 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.295276436 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065495412 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071931217 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067171467 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086043892 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109857466 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119956302 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065893363 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066512103 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.167076168 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068098043 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064473795 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082371856 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.249675059 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152526006 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066559988 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293293365 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094346701 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072018072 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065705312 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.193653888 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.116649525 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.0693819 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067916884 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069396533 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068779064 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364100288 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06635739 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.973039974 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07164983 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.08021064 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07067604 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071988208 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079663514 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079216533 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093278879 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067281921 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064766154 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06724167 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066634295 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067285664 seconds)
    (84/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074386725 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094044577 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.390397656 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07013072 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073244912 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065354497 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094176318 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098657295 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066912349 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066897666 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102237674 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071037118 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066544238 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068259695 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118409578 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070226035 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113228861 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067546077 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.178164258 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097884087 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07019513 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101533964 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076877939 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071350775 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.465852969 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065869655 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074039291 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066477951 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067995662 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067129571 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078005349 seconds)
  done (took 21.983009211 seconds)
done (took 39.270007915 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.241415025 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08295932 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083446597 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083405787 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083389066 seconds)
  done (took 1.774456 seconds)
done (took 2.957272237 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125879615 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102412393 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065042515 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097571714 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064757045 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102485157 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103123844 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083476344 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099513881 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064916275 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097704812 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065165733 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065260442 seconds)
  done (took 2.335215473 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08184405 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083160553 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069148442 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081951163 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062804288 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081598233 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081456942 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088383644 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081121081 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07214689 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062962555 seconds)
  done (took 2.019683718 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081834215 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083937098 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068898199 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081837097 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062600513 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081482356 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081666026 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087187017 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082510092 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074039021 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063575749 seconds)
  done (took 2.015970339 seconds)
done (took 7.541237459 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078519435 seconds)
  done (took 1.235484661 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.529997723 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.663530031 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080123605 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.102450255 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197619261 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.111118727 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.238934843 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085023613 seconds)
  done (took 8.345228059 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.107725088 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071244349 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072605317 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07117441 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07141664 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072282283 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070302627 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.069966283 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070850934 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068888952 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071242278 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071035659 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071710271 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070385433 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069825122 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069199918 seconds)
  done (took 2.410634335 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09702389 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095619802 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075140098 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075662877 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073223904 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072457539 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074139408 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073955412 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07125163 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072704829 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075995335 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073851742 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073242769 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064156117 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074236879 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076324958 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071364724 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074574795 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077313357 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077975193 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077817333 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065411984 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074365741 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074291855 seconds)
  done (took 3.083447659 seconds)
done (took 16.243906834 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116073702 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07751645 seconds)
  done (took 1.362584299 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078928955 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079646853 seconds)
  done (took 1.336539726 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.078173859 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06296156 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083955625 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074081 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063548614 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.062965146 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082446933 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063573645 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063716179 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063574299 seconds)
  done (took 1.876451474 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065040622 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072231608 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069303173 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079128923 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.069929553 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06444028 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068572173 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065619284 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07412856 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063768383 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068470099 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083566975 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068390349 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084627486 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068758456 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068068347 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070747089 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067299326 seconds)
  done (took 2.452537978 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062821836 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063930805 seconds)
  done (took 1.312072252 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066437362 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063610467 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066115521 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065883519 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063659545 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062837097 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063786049 seconds)
  done (took 1.633216752 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.397810044 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.12256807 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.322577488 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072111694 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082272168 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252455658 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065295317 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070112661 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071452599 seconds)
  done (took 2.682450607 seconds)
done (took 13.842207647 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080835265 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085971498 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099917338 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416049334 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095308791 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070527179 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115021032 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.179745431 seconds)
done (took 2.341348916 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211042684 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.816679411 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.47327668 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207669623 seconds)
  done (took 2.684013805 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348489482 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.082746893 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078912745 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069267845 seconds)
  done (took 1.773398465 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067108013 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07246805 seconds)
  done (took 1.332377979 seconds)
done (took 7.197280936 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.179638893 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091142262 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066264761 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.067064179 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065980144 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066932035 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066611965 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066485362 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066473002 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065965039 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066645173 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066715042 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066333708 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066304565 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066533511 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066309593 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066389579 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066863196 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066437452 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066855081 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066760465 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066121573 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066822016 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066445485 seconds)
  done (took 2.959757427 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082235581 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067081418 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068428114 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070560039 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071229111 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070588851 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071097685 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069057336 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070574602 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067847166 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069660786 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069335287 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066777628 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06957565 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066629096 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069093086 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069243556 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067734341 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066927621 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070624561 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070567455 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068676852 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071032333 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070282426 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.0713563 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071325005 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068501776 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068507813 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069993782 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070293814 seconds)
  done (took 3.294464557 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065715933 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060938116 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061903477 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070221359 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060922279 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061856844 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061163841 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061535607 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062286613 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061675035 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062806076 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061392463 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061391367 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061814209 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062063996 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065406821 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078781548 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061506044 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061592013 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061443118 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065301883 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062658308 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062890531 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.0620148 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061941509 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062381548 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065600838 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062855243 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063109782 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062521108 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066911089 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067330964 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062835528 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067739785 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067226483 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062525386 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067009123 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062658882 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063105115 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062466583 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062410519 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062972116 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062539387 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071743802 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06317608 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063769494 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063207546 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064107604 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063371487 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065207886 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061985639 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062974049 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064728745 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06323483 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06667924 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.060869851 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062753706 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061662678 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061695746 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061274133 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06125747 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060948792 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064620577 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061995681 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078898846 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070188339 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061082191 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062990907 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062583141 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064475304 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062762242 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076598885 seconds)
  done (took 5.805658266 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084962112 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086906803 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066531552 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068038498 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062457944 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062222522 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070142849 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062078843 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066905267 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081006658 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062270798 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066321295 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066836305 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066220146 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062221898 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066863581 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070287873 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062639919 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062227428 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066087458 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062460048 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06968154 seconds)
  done (took 2.707268889 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.148592151 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068111883 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106099277 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072292524 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070373673 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072689486 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067998315 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067754183 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068201513 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068648585 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068715252 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068067157 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07085419 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068404129 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068687978 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068340291 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069461419 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069892724 seconds)
  done (took 2.569537579 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078455533 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067794311 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08657967 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066837071 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067326416 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066950673 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071523779 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071911542 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067285724 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06732771 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072010498 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067053024 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067332058 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068193917 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068787079 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069009138 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067956979 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06746749 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0722594 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071124463 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071629769 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073493079 seconds)
  done (took 2.755243753 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078401953 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066232649 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082039458 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068669914 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061922632 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062086394 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077212816 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066414883 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067969356 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06752508 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066495602 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062030348 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069071844 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067029877 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06921033 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067209229 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065979362 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066941306 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066099549 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061957651 seconds)
  done (took 2.5743798 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083500556 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065113885 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065116931 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071879958 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064817957 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064939517 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071321621 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06462855 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06532429 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08578444 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065467952 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065802022 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071131774 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069478888 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065121795 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071075182 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071384253 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071019337 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068013688 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064928995 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085543865 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065476176 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071333824 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064838834 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065179473 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064864308 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06497306 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069055423 seconds)
  done (took 3.148627053 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06546843 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065450797 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06573074 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066196633 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066638205 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066215923 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066469202 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066751369 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066232827 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066902185 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066238733 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066122067 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066326588 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066352114 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066284697 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066295554 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066838196 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067095409 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066276216 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067091114 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066450209 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064592638 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065797192 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06621526 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066295062 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065888277 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066815309 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066271103 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06574177 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06600112 seconds)
  done (took 3.204960978 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074862691 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074053185 seconds)
  done (took 1.366963585 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063752096 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078378158 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06137316 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072119395 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070139983 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065542287 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071087889 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070361647 seconds)
  done (took 1.765551337 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085360928 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075181398 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063788274 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075405345 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074679715 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084734151 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.125810583 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063647413 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074041881 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064820073 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081966812 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066008993 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074218463 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069988976 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074266688 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077682103 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061576092 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069154006 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.064415307 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062044671 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064316903 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076922477 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075300262 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063890297 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071176269 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094161706 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082679586 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065096964 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072125026 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077289019 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074868895 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060774135 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063306985 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.063652472 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062180887 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074907443 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081949981 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070576743 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076378066 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064054666 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071546626 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061627008 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072536244 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074649163 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079570494 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06354669 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06356118 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.0614005 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064394101 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069666851 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06147741 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068220702 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061462554 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076196098 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07136877 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078648424 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062669851 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069342443 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070313727 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070698329 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074872152 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069886049 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073297674 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063109693 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07954435 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073278626 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075571766 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061792237 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061109698 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061739435 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077270985 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091979117 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072799551 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063627277 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064153254 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062812643 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072232167 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064828086 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07241881 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074975984 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063125359 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06808374 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075470349 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06826942 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069990542 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069409922 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.061860884 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067222094 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064404619 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082813451 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062426194 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061399195 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064770653 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078558493 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069916882 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065962783 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064708804 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074909154 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060343043 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06332352 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.063849389 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069350854 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076721071 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067446539 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067447511 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076677184 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072628525 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06884517 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070323339 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060831745 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063830432 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06532325 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074678119 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06035398 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070186846 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067510089 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063422082 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075015915 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06193616 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063240687 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076105255 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074738939 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.061757037 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060538928 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069756701 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062883399 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065310955 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077313358 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06335483 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.0621766 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062334906 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071784348 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063734362 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071690075 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067796228 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069422925 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.184095597 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062705144 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069350604 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07628181 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067285671 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069612985 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074240533 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069780125 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.062443389 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076148493 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070911421 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066201547 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073576838 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068318201 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061509683 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066694852 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070782286 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062421766 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070951951 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065927232 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070501556 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063911165 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062695329 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069613145 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064459333 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065946276 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068842585 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063168289 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078118212 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071118998 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062062046 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061794663 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070821664 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064941028 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06326852 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065573287 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070231371 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064118072 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062491197 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063439781 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06997547 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071817223 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066346721 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06472179 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073354853 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080987696 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063335033 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070816577 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063182828 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064477454 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064185475 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07779737 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074101046 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067690204 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070257937 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061737505 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072678461 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075535668 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066223452 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.061972736 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066041064 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067209947 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075027116 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067069356 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064214719 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062405774 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070322894 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065982306 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070587386 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063250728 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066256629 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068602449 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062116115 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069265689 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064187933 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078202178 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070791048 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062019038 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066174547 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061977781 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074744725 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062187127 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065496251 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066600305 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064361033 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063036954 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070705135 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060983783 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075726019 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076173256 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069161735 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066419576 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063504335 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075804128 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069603599 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07202622 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070678287 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.0733137 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078981526 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065585191 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070532515 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07845094 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063423465 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060914019 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075159625 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062461359 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062655275 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062637255 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06251445 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071044661 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070066608 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073727515 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060885987 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07012596 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062002441 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065769297 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061659437 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071659114 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070375613 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067557736 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075394504 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064156538 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063709771 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070941362 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063197472 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.063810103 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06382572 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070017907 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063795621 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068799978 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065580727 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068584328 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065065179 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060941412 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068334841 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063023023 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06794071 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070754029 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062383659 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068893036 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069371364 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062781288 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.196280132 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067790011 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067272999 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071034182 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070341796 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069840995 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070689751 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061869528 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075588499 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.062937695 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076713874 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068992417 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.0608285 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069085661 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070481574 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068344027 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064639961 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064901334 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069473998 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06402583 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071389526 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075763333 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065223458 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079873543 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074679297 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070145982 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072860145 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070491448 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071265078 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06777413 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070168482 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065785474 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071768486 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065253027 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074199523 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072860996 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071158972 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071928132 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066833914 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071284165 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066641119 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063585607 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068362864 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067774708 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065480679 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078144298 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066109373 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068357696 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064540182 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066133111 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064456826 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062910838 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071911485 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070906022 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064478739 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074245786 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066617821 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069868613 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078911781 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060856718 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062345983 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061668137 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065274367 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076318046 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065143963 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077109948 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068612271 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066119438 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062858504 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065209031 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063276509 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061456211 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063545006 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073796056 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068015876 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064442175 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.0654664 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072078842 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066092318 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078436031 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064811657 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070373595 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065517183 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063431681 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067829814 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067836206 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072689087 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066152413 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066057715 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062783771 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064164287 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067893175 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070340124 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064994521 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071613675 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078473476 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064846027 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071423407 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066706688 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06157632 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070466114 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063724722 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063446448 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066010438 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070754679 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070675568 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064053904 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077510027 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065873276 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069150982 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063523378 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062062162 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063669505 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063689844 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063271069 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065882114 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064196041 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076472916 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062057133 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069929545 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069822048 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069153438 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074718214 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064756699 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069867157 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069212483 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065284118 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070173554 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076704782 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067047835 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070859993 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064559188 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068564407 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072853203 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065701849 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074446388 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068496793 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063472229 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068455726 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063818138 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062114818 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062233632 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062152014 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073845325 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064590055 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.19840879 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066813121 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062575013 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068270807 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066062951 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076817275 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070679249 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071388353 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061695816 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062047674 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064189132 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065157254 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069785247 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070708812 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073822528 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071089736 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068333832 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064810479 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080595279 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075993491 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073466856 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067034811 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073164504 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066314911 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073238094 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070119401 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070691473 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066892203 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074042349 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071974106 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067695178 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075781557 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073310232 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065538332 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071033769 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071444685 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070292553 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062890192 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064063931 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070868608 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072968633 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071183228 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064067846 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079072561 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065103767 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069312246 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066001106 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063351628 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072233462 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062664259 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071973482 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066353858 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066534004 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063668904 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068553479 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067050913 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072149379 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06745251 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062140997 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07909284 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078253557 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069778137 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063159232 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063173985 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063499121 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063679082 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068110151 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066569358 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071702975 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080543105 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067796967 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067794131 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063450732 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065180652 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072855333 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073502149 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063430308 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063798663 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068197062 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071687743 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07700982 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064389444 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065151234 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072295939 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070421808 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062207474 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066461947 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061066556 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071534324 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080106424 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.063825178 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069355644 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073401316 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076196567 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06431716 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061823549 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.063914702 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06991844 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069553441 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064415521 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064295708 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082596699 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070756664 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0662415 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062817207 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070588492 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066443514 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077470935 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064478666 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066558755 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072382141 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070441244 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070650041 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07389583 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074602132 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069697478 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069652763 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062799779 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068443176 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062636955 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066206012 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064434082 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06389881 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068792303 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070160332 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066005176 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078941325 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080413368 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066694209 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062457289 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067794298 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067770745 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062962184 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065487766 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063459602 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063705978 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063449505 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06432128 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071047591 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074511144 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069150153 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064977176 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064481789 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062025819 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07458482 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.203112801 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071908616 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061908006 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064341168 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06575791 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072813737 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066635302 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065712729 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070732666 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06977486 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070206586 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062537294 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075279467 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062972435 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070183596 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067025024 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064427426 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065896525 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073885872 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069615416 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065258897 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071346661 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07268236 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067115797 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063809935 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063106868 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075024618 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063761325 seconds)
  done (took 42.606004732 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099531629 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06408481 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063993145 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064241935 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074010293 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065575211 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064125682 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065478498 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065304985 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067575332 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064669351 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064133061 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072007066 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079441371 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0744067 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068995651 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064709149 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0654583 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064291889 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065096049 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071999278 seconds)
  done (took 2.735852273 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069608185 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078028409 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075237492 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081986451 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073221303 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069139373 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077199136 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069694022 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077880026 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075015553 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077809208 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069502728 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07459957 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075576019 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074817969 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069817068 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077554479 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074208601 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069357858 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077215326 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069553006 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076799643 seconds)
  done (took 2.909933912 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06458875 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062906142 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071020111 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.0630061 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065595942 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063563722 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068168792 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063728046 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067903139 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067147558 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067585085 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067753761 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072319989 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063614963 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068706189 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063204181 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111356924 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067173461 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06359093 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064626614 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062078179 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070393062 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062320951 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062146959 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065569736 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066004657 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064549662 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061907907 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064568351 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067631218 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065307742 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063190233 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071548657 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071038403 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067472821 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067325162 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064532886 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065004906 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066940973 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063710692 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071589093 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063895809 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065450324 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071797154 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063855414 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063504286 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072020703 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064997057 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063824758 seconds)
  done (took 4.561319316 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074089004 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111593663 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088177776 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092415593 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07809191 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070827378 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069274962 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094352745 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065096535 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065897158 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079307068 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079752949 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067235016 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068508201 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071843359 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067172783 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067856258 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066408786 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070255787 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066546975 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070164647 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071728173 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078187659 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079129463 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068450392 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066355102 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066465859 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068323456 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07816548 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070874812 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068691075 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069362284 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078607615 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070204463 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066278312 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06638337 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079722976 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066634141 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066806707 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064674431 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066712633 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068320049 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071152373 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079511929 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067147905 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072000947 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066923528 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064479382 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078497307 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.0673831 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071232473 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07958152 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067718584 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067117262 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068188679 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07827825 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067049594 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06562638 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066970678 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078102767 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.0648323 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067689479 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079087379 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066430612 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070439902 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078230642 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072015254 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068168523 seconds)
  done (took 6.322146563 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072657784 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09303632 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079163045 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078997913 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074766144 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075117847 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075293309 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074827231 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075287481 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079139187 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075505823 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116812616 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071102714 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077072163 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075382536 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075137812 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074718169 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074859431 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075280867 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074901306 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074864309 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081020204 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07467083 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080775557 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077828385 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070527612 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074590179 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074768501 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081355644 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074774399 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077805481 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075388367 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074622345 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081129149 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07815348 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074642669 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064430485 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075077251 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075704821 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074620076 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070833686 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081139268 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074811117 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070606468 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074860611 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074501895 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081193472 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077812034 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076319888 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078365669 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074920771 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080845437 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07463348 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074648589 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081165037 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083623555 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080990189 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081210783 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074786071 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081558432 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080990534 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083818639 seconds)
  done (took 6.118272762 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077352518 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069990083 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081072541 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062077827 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066159911 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074343393 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06353365 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063293554 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072026339 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.071725539 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074281309 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073950207 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07471656 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073017037 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073680901 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076431976 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07366405 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073470695 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072208913 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073510476 seconds)
  done (took 2.757945517 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075742715 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080833772 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068792086 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073675081 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069228911 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073432305 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068514805 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069054221 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069718285 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06917157 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075302937 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075155169 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069771405 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074095806 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075309748 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072792793 seconds)
  done (took 2.465581197 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083271138 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069769473 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077250734 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064882699 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068833326 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064370618 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064469786 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062910382 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063733874 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07786436 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064539854 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07592962 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064924459 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063653114 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064088307 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07058353 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064043407 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064815309 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065334746 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07786906 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072227485 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065937698 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068716002 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064589749 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070953082 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072332024 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06651724 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068777913 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065004167 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065620788 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070890009 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071943152 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064660884 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065447716 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064035714 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064594631 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065412522 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065460012 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070821706 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064927064 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063271691 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070310312 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065428857 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065726699 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063942872 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.08382936 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063835691 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070919443 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065216024 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070351923 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064450676 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06629802 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.0652604 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072408216 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067890823 seconds)
  done (took 5.043998027 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078755181 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068497208 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061594466 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061522326 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066934124 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06896206 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067655509 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069273105 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069961022 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063638491 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070300465 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069274224 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070109457 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069729622 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070122633 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068982917 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063736435 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069119261 seconds)
  done (took 2.546684591 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072607507 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067174187 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071549475 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067033126 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066795665 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066350359 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062026731 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062353029 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063655623 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067627523 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067318376 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066836668 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062144356 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066307201 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067077865 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067003824 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066586754 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063753993 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069191087 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064248848 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06805833 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064161778 seconds)
  done (took 2.769937804 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09559644 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085227326 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143499729 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081292068 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089540147 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074079228 seconds)
  done (took 1.880747032 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09247325 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09794158 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067185009 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066963691 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074060848 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072532329 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072486687 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07250693 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076778776 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077170876 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072424159 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079773124 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076564819 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078765984 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07466421 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074656758 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072268525 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072871281 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068706027 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081738427 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072648468 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07750093 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072456529 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072183914 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0722186 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078969927 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076740515 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077113806 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072454156 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076705755 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074406058 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071453709 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07650956 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077608369 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068884447 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076317847 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072088341 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082431505 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074430351 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078655454 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068832264 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074373328 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076868743 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076075949 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076963367 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072955068 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07584566 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072126869 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072581035 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086813866 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075047106 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07839545 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07448527 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077017011 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076498194 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083692156 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07737585 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078475569 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074761919 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077152592 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077609723 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07408306 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078636077 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07573373 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072627993 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076517804 seconds)
  done (took 6.322523844 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10372233 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067937612 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072720628 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07708211 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078841983 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072468408 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072633049 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072655723 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072617271 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06984107 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108240604 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072825666 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079457828 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079081242 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073172893 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072900174 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072749009 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07910068 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070244227 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084068109 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072656097 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079260145 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079707053 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07893669 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077815813 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074886689 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072476565 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072629085 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07237779 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07250257 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076165175 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072899872 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078791452 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06925074 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077984084 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072126127 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072609317 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076434888 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072275228 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074567922 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078806121 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081818099 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072146527 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070803782 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075256209 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071035523 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071989591 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069583331 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072419918 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069398415 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076756801 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076973127 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075884134 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076352106 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070361562 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070167387 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070340505 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070115583 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070534875 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072737879 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076198481 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070147377 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081004506 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070080482 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070694536 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076364382 seconds)
  done (took 6.290138441 seconds)
done (took 128.680623975 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207704204 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186206888 seconds)
  done (took 1.695471085 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074591795 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104096169 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083636966 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136375176 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071111477 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10505681 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104758351 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083464702 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071275136 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070933348 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071384303 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074620324 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137312672 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07131521 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07117921 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073742552 seconds)
  done (took 2.723779423 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104845555 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.216862703 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10873004 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068849565 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103969928 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077219543 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069259731 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08470935 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075746774 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072029657 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079505076 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078003129 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072790238 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077201244 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07898251 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.078854726 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.07231606 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079267242 seconds)
  done (took 2.92159098 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102465677 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093441449 seconds)
  done (took 1.524015981 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.172210492 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133219048 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201300843 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344619426 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.150009436 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.425138349 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.137947702 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.136903147 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112611918 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.133784151 seconds)
  done (took 3.269649195 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103521031 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.19808408 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298955391 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123910558 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077916194 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.113897085 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125284224 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083856717 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081998943 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.0806697 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080435821 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078006719 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100380144 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076602607 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075680766 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080369428 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105999178 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077074393 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077999755 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078748718 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106402053 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071715143 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078846466 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076889886 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080803408 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080369508 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072503517 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071570087 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078603111 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077524258 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082190795 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11022029 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08027419 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105836546 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074290529 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105855059 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078379869 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074343067 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076062308 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076678673 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079532057 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079856478 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080673302 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080089728 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072890862 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080576817 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072887818 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071612262 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082631265 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073074632 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082202084 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081389099 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107867524 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073433259 seconds)
  done (took 6.244869324 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107954131 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107627237 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071764193 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115371395 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10671364 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07290822 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108271524 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102317214 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110433842 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072349951 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070901186 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072880546 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082078824 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083399633 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115937334 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107423928 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073386964 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070667212 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110986704 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111101256 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072001596 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104757506 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100760324 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109163231 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069060963 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072006682 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071574799 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073095529 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078668834 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080081538 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071985521 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081582398 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087815826 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077281017 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068825488 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069577369 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069643656 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077790576 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078753997 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078037813 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076572085 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068257495 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069605162 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069799922 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069790501 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068852164 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07750566 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078286243 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076972036 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069876883 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071259213 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069413829 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06998025 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078078736 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076159683 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078761171 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078653128 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069197881 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069124753 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072650562 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079132472 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078418264 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077779815 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069952863 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078606935 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069761238 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082045068 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08219231 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069557751 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070261439 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069110045 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068944006 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069710442 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075764039 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075992141 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070400087 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069156721 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069282762 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078315474 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076134022 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069147387 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075527852 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06763364 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068785874 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070104001 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070322818 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075583292 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077637819 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070203633 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069115928 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069481358 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068846066 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067596877 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.0754148 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077814655 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077306567 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076504359 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069723884 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077203863 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076576138 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07032804 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077828768 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068993269 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071330702 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071213209 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078007795 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075789684 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078305246 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06945597 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068883762 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076497165 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081437834 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071187501 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078574717 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080995307 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078691656 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070281481 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.0812945 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070940774 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078313772 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068545227 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.209873112 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070499904 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078339438 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071534978 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072083601 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071428739 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080859198 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074011771 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071498149 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072578201 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071710691 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079714844 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083742405 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073896045 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079619432 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079926327 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073260952 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080037693 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071933555 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081423671 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072018429 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072381801 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071271035 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082929375 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072093736 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071276399 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07218513 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081429596 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069493756 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080089486 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077384707 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070463509 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085428612 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078605174 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07752961 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081879846 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073061759 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071580044 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071313651 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071732385 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07848684 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080266145 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073231962 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071323142 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078880844 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082489366 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070608266 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078232364 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07732718 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077077437 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069918838 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069755322 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080339006 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080101516 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077411031 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078073061 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07758832 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069964202 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078972699 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079148193 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070945204 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085606015 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071759444 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084562134 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.0803078 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078270545 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080405331 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081422298 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082051982 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082357584 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.085075792 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070967258 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069085171 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077511425 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06944523 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069839806 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076650346 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070513912 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070537505 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081503459 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069638999 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078950979 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06960666 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07765686 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068440976 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070759623 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081801382 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06988214 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070854127 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077442411 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071925605 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076186248 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079483375 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076634239 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069143629 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070334112 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07763862 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077624532 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069393609 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069144817 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072161962 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078845173 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078189891 seconds)
  done (took 18.700606889 seconds)
done (took 38.418351548 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210132006 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158455057 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18885304 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115580291 seconds)
  done (took 2.094252919 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.106906795 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098215788 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.088399583 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066096035 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096800291 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068042443 seconds)
  done (took 1.878173329 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.294555386 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.202400605 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180630437 seconds)
  done (took 2.029612077 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208469375 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.200489142 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.469740177 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.287152523 seconds)
  done (took 2.614679528 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.139525297 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08356245 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064669953 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082505415 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.122734433 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.148188265 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092048597 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.116564318 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075514739 seconds)
  done (took 2.332280098 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14727574 seconds)
done (took 12.472435144 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.208932286 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.099558247 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.260123032 seconds)
    (4/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078288092 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071098109 seconds)
    (6/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.20988358 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.150177762 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.10692378 seconds)
    (9/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.21521951 seconds)
    (10/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.234298075 seconds)
    (11/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.238678899 seconds)
    (12/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.231319156 seconds)
    (13/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.214149568 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078374485 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.126477387 seconds)
    (16/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.142512744 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089902175 seconds)
    (18/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.084815421 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075068555 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07526837 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085018553 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085325549 seconds)
    (23/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074939504 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094926028 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074810666 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.232584221 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.09860102 seconds)
    (28/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.174155507 seconds)
    (29/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07890732 seconds)
    (30/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075703119 seconds)
    (31/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.089105049 seconds)
    (32/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.211108967 seconds)
    (33/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077006691 seconds)
    (34/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.130233266 seconds)
    (35/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.165494597 seconds)
    (36/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.1175657 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065499316 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.084875667 seconds)
    (39/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.172939449 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130264906 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.089419501 seconds)
    (42/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.17316634 seconds)
    (43/309) benchmarking ("sort", Bool, false)...
    done (took 0.162880387 seconds)
    (44/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.090309941 seconds)
    (45/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.19442762 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066364005 seconds)
    (47/309) benchmarking ("sort", BigInt, false)...
    done (took 0.246220245 seconds)
    (48/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.193467623 seconds)
    (49/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.079809375 seconds)
    (50/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.200682742 seconds)
    (51/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177527242 seconds)
    (52/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.205490662 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 0.066810201 seconds)
    (54/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07197775 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073280844 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178071774 seconds)
    (57/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.128277004 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065374881 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074484315 seconds)
    (60/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.077566654 seconds)
    (61/309) benchmarking ("sort", Float64, false)...
    done (took 0.130676443 seconds)
    (62/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.173406193 seconds)
    (63/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074962995 seconds)
    (64/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066379922 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.171081038 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091225524 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.193550139 seconds)
    (68/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072213866 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076662277 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089380814 seconds)
    (71/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077878531 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122766595 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.104014377 seconds)
    (74/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077838458 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07141269 seconds)
    (76/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067976302 seconds)
    (77/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.088420065 seconds)
    (78/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.127568546 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067284633 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116140399 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088167494 seconds)
    (82/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07368912 seconds)
    (83/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066612088 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132971236 seconds)
    (85/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065243217 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066224266 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.194688736 seconds)
    (88/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.14063974 seconds)
    (89/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082162353 seconds)
    (90/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.217236096 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103588179 seconds)
    (92/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.179251178 seconds)
    (93/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.157605 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066909292 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067191766 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072862856 seconds)
    (97/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.2167979 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.2120469 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.208394199 seconds)
    (100/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.079657711 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.06823236 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075409833 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090795443 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072528701 seconds)
    (105/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074098364 seconds)
    (106/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078533395 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090249848 seconds)
    (108/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.07928206 seconds)
    (109/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.087770037 seconds)
    (110/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.138169539 seconds)
    (111/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072440117 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065468818 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.084161235 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074851796 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087688296 seconds)
    (116/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066219424 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069164051 seconds)
    (118/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076645296 seconds)
    (119/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.119849235 seconds)
    (120/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.231507698 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.098024101 seconds)
    (122/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.129556935 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116155951 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140430463 seconds)
    (125/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076394204 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.137988452 seconds)
    (127/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076678402 seconds)
    (128/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071467236 seconds)
    (129/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076134031 seconds)
    (130/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.140183939 seconds)
    (131/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069359866 seconds)
    (132/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075275962 seconds)
    (133/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.14167592 seconds)
    (134/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08033429 seconds)
    (135/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067736274 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075786213 seconds)
    (137/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073852579 seconds)
    (138/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.1248615 seconds)
    (139/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066644309 seconds)
    (140/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069343351 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.086866814 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.186220396 seconds)
    (143/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.166244138 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.091943294 seconds)
    (145/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066785188 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074028196 seconds)
    (147/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143825396 seconds)
    (148/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.078399947 seconds)
    (149/309) benchmarking ("sort", Float32, false)...
    done (took 0.135571781 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068395589 seconds)
    (151/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.068090628 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076303822 seconds)
    (153/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.183642564 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127150741 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068289819 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088566588 seconds)
    (157/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.171358082 seconds)
    (158/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068921639 seconds)
    (159/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.079859316 seconds)
    (160/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07580798 seconds)
    (161/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.068744582 seconds)
    (162/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.127597277 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.06665957 seconds)
    (164/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075882801 seconds)
    (165/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069175277 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078809196 seconds)
    (167/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068156356 seconds)
    (168/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068708675 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066983583 seconds)
    (170/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067852952 seconds)
    (171/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.133759898 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067599433 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.068612223 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.091770475 seconds)
    (175/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.070830436 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11406803 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142160938 seconds)
    (178/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077222677 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.228874511 seconds)
    (180/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06607413 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072332732 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091083427 seconds)
    (183/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073929739 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067251987 seconds)
    (185/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066224336 seconds)
    (186/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067661326 seconds)
    (187/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065075804 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135669844 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13026836 seconds)
    (190/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064931389 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065262574 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066871131 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12029666 seconds)
    (194/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.06615608 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085677792 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065290305 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066129469 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117645157 seconds)
    (199/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06411725 seconds)
    (200/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087676771 seconds)
    (201/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.138048752 seconds)
    (202/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.160584971 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065322788 seconds)
    (204/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065204201 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072288326 seconds)
    (206/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.065301739 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064869827 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066375435 seconds)
    (209/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071757601 seconds)
    (210/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.066906331 seconds)
    (211/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.082076907 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066689045 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.235891446 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.226472765 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.079320741 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.076723941 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.087465848 seconds)
    (218/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.124999073 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.131143848 seconds)
    (220/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.069754332 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080306629 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077855531 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141318417 seconds)
    (224/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.070098331 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138077463 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068604239 seconds)
    (227/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.079429456 seconds)
    (228/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.069084962 seconds)
    (229/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080496203 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076131327 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068692495 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081000225 seconds)
    (233/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.068653743 seconds)
    (234/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068844568 seconds)
    (235/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078306588 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092391809 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17490611 seconds)
    (238/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075072655 seconds)
    (239/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076991309 seconds)
    (240/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071557594 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123394229 seconds)
    (242/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067522345 seconds)
    (243/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.081608671 seconds)
    (244/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.068527038 seconds)
    (245/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.081534484 seconds)
    (246/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069364742 seconds)
    (247/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068862612 seconds)
    (248/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074551341 seconds)
    (249/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082520446 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067359835 seconds)
    (251/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174055375 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068109128 seconds)
    (253/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085067931 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131964006 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094343298 seconds)
    (256/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069728468 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093674676 seconds)
    (258/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.068824704 seconds)
    (259/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083069135 seconds)
    (260/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067664907 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06852218 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.1476473 seconds)
    (263/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06907668 seconds)
    (264/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068868652 seconds)
    (265/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.072610612 seconds)
    (266/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.174340799 seconds)
    (267/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071250344 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138521403 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078526424 seconds)
    (270/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.078063371 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179627949 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077890155 seconds)
    (273/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.070277806 seconds)
    (274/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080807808 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075029064 seconds)
    (276/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068974296 seconds)
    (277/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.068993421 seconds)
    (278/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068087707 seconds)
    (279/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.069211127 seconds)
    (280/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068518948 seconds)
    (281/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07669896 seconds)
    (282/309) benchmarking ("sort", Int8, false)...
    done (took 0.171996828 seconds)
    (283/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069578911 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068097298 seconds)
    (285/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069913209 seconds)
    (286/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067295305 seconds)
    (287/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.08212641 seconds)
    (288/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095575432 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174393587 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076952355 seconds)
    (291/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066559673 seconds)
    (292/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073803145 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067464046 seconds)
    (294/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.068165884 seconds)
    (295/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072244393 seconds)
    (296/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.068356346 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074865711 seconds)
    (298/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074732924 seconds)
    (299/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081200709 seconds)
    (300/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068358038 seconds)
    (301/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095512447 seconds)
    (302/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069568752 seconds)
    (303/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094436784 seconds)
    (304/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.068138264 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067624438 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067566087 seconds)
    (307/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.071248923 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088382064 seconds)
    (309/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068243508 seconds)
  done (took 33.426498241 seconds)
done (took 34.793704752 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085187285 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097267798 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075714299 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094322008 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082846446 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097776538 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075678299 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080807881 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082909293 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082476785 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080981423 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07451259 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077395437 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077181185 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075735627 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100568091 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081882718 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076221945 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076216279 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06766506 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076320095 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068633246 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067589497 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074527102 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079650342 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075518808 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07744509 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077250923 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06856662 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.0680859 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072839452 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076722214 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06806929 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080435633 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077001351 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076733393 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078183923 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080261199 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067600202 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068107088 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077611528 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068111848 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075824906 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074628795 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073104639 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074172633 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076206677 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080381929 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099707534 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07272753 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077700843 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078528451 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078945348 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072364558 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070861168 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073782361 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071757613 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096797209 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074277023 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07012414 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075178637 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075007641 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071801472 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073643375 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07381984 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075893021 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078071491 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073668713 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077940904 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074700298 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067669284 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076083883 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072431287 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067722816 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.08144904 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081058411 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067338903 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072258555 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075694325 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076106196 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067751745 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07326965 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067233234 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072284775 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072811378 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074046366 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072840044 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075522711 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067620152 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076362375 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075534762 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075225237 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067466411 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080420423 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067942383 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074173968 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068229114 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06762132 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067178012 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072680575 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066830873 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070899099 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074397311 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064966405 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070165058 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079110919 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065265427 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072803177 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064997365 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065313466 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076720465 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075342029 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065605266 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069820332 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065164302 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071075687 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065152529 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06553973 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065425259 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065269426 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069551415 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065465276 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069841097 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070519884 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077696286 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064799618 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069941287 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069679924 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065116398 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072086176 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065793043 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065476231 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065102419 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078534907 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069649087 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065645966 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070661651 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069672695 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073390253 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064228263 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07333228 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071099862 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069675356 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071206954 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064322029 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075927613 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069597147 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069218497 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064555167 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064932158 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.063744535 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064378883 seconds)
done (took 12.648522447 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069654512 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.118899427 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095445984 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095971057 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085187142 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068606514 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076532249 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.09470449 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070255402 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098478799 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090467199 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090408053 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111660417 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067927042 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068237322 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069534457 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069846335 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080952487 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097240909 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091207841 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.10904891 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068514054 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.088586542 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089701581 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086394979 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090650047 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069532248 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069598107 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071491363 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09218915 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094302358 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071609788 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069670732 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.092685195 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.087707292 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080928334 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067320561 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.074763318 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067551295 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06628739 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069965997 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.088925963 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07577392 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.074768789 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068202244 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074367249 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069362338 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085302868 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089290669 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077532577 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084802436 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.093390142 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072549687 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085429709 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067980645 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084825262 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078114901 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068694641 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069079949 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073992545 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068795603 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070675027 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08011091 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.077833076 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074327421 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081862055 seconds)
  done (took 6.739166681 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083951774 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096515919 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083464431 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083708638 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066139196 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067394804 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066899227 seconds)
  done (took 2.002617305 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067091202 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086895925 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091621105 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091890949 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085932726 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093443359 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076745644 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06914256 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096701902 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066191253 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086297366 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096672139 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070749011 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078072516 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091414058 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067152946 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090892252 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066913669 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067651655 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09075301 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071280981 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093698027 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078163746 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067073633 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080679814 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069479677 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101829479 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077190759 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070296004 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070427955 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070134468 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.096122974 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081598449 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08103197 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07026243 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084509056 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08283704 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073011564 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.079880395 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081473997 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082957942 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070123404 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067676003 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070169537 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071537283 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080535132 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068069333 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070287797 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070083194 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088229983 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.0663876 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080423395 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072900085 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075658631 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075364454 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073918369 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077730287 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070734166 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088831516 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070023216 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086021385 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085684435 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08235644 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085447378 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069010245 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081425072 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082477545 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069775851 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070740722 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070255468 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086038077 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072353045 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071009896 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081278497 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068515078 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093289164 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093574629 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068678693 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082871062 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069468109 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070422648 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.080792083 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093487625 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073936794 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067890357 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071007376 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06895025 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070252184 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066221672 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071301942 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069038764 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07352792 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070191308 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072875604 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071689922 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085891728 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068418651 seconds)
  done (took 8.961058387 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069360758 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067777295 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069265034 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067990367 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06814433 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067997037 seconds)
  done (took 1.892974351 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090500462 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068209762 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080832815 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067733665 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102930669 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.082951521 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08322798 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077137113 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081219028 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079627514 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083306792 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086274188 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088116607 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070086275 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083081163 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069065071 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083112463 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072315004 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079594702 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070014587 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080362207 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070684766 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070317246 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087137966 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071424696 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068863278 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076846705 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079261392 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078729159 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077098385 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069730913 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071957972 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075764708 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076935597 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083014689 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075312417 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070700373 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074082091 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070397351 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071112869 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085239857 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070027676 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070424802 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074450542 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076941736 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075336159 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073837841 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076103732 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082955624 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073913058 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073830787 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068631608 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071295723 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074007366 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075841587 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076645346 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073800604 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.0827059 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069917502 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075211201 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067589474 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071238582 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076556315 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071031371 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.074765108 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073781972 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075232307 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069983454 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070332835 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067764755 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074124635 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06834772 seconds)
  done (took 6.912449836 seconds)
done (took 27.982370074 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.513136135 seconds)
  done (took 1.952324296 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.616987318 seconds)
  done (took 2.086102147 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.549658764 seconds)
  done (took 8.009277947 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.398266404 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.467845061 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.74346081 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134893893 seconds)
  done (took 3.240625613 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.705437034 seconds)
  done (took 2.175411658 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233820344 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225658902 seconds)
  done (took 1.938499871 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.346640193 seconds)
  done (took 1.806357174 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.053786284 seconds)
  done (took 2.517754872 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.236657929 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.15941683 seconds)
  done (took 1.867991284 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.448086681 seconds)
  done (took 1.917685659 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.202471714 seconds)
  done (took 5.676439607 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.242851629 seconds)
  done (took 1.744494666 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233605722 seconds)
  done (took 1.704626934 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.786759748 seconds)
  done (took 3.257603561 seconds)
done (took 41.376324919 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082899739 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084679571 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084359392 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080899687 seconds)
  done (took 1.782073724 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074425917 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071016896 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074434764 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070533125 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074254876 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070251451 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071985283 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073027702 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070120203 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07067825 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070336065 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070264762 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073113557 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072141109 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.068989671 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073376405 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.073948359 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07033484 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073175305 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.070597522 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.068454581 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073323544 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.072851816 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069355848 seconds)
  done (took 3.18959368 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077973926 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073157414 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077237451 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073138523 seconds)
  done (took 1.776517648 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076308053 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087181661 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086173657 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077138956 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.087977332 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.083859388 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.066978897 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.066959114 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068019691 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076697008 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065974442 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092578371 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.085651016 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076464431 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078766363 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06337222 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065267931 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.084755881 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077553532 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078033932 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068109934 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076565127 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066160978 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086878554 seconds)
  done (took 3.315275101 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083310601 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066618473 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083205689 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091499541 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093363903 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066006902 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.081377921 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093048301 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.137105221 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066116597 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071620137 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066002319 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104833975 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066581047 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082626032 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108525016 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112001621 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070254464 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099018371 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067854024 seconds)
  done (took 3.192474941 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083923205 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069571089 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069849689 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065510028 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076550184 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072699565 seconds)
  done (took 1.922034536 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068014871 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067941891 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067681232 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067087197 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072919019 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072220649 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067762252 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069445694 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069204782 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068460131 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068622393 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068682372 seconds)
  done (took 2.305988941 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.207866871 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069371831 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070698855 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066448901 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072190765 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067327238 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081953587 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069311342 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085022542 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066663642 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067049375 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068749929 seconds)
  done (took 2.473781849 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189199233 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073313429 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219414058 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141515265 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10102061 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10816385 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107978265 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106464376 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.131660178 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096388007 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150873042 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157457546 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102127124 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124869551 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086586869 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.118314187 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142200547 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151085781 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098336079 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151447057 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13347108 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118433387 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140112351 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095711386 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100239595 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115278763 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071493689 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077387288 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157127906 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121451804 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134001796 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10364155 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089155841 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167305524 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154436926 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130074199 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137736591 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080580884 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.116498895 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.126002584 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189315633 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086138681 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15021369 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101955244 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076412747 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119354159 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107885368 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11184416 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098039169 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085402851 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269132491 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171378417 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.126502408 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083102549 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114137635 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105251538 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108033458 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109628855 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167944839 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147681535 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117783104 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069609027 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106317036 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143924999 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126402977 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10666209 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.118354722 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089003391 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12235103 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145634472 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123008404 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131090106 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.111300113 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084130262 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112317477 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128967475 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118777779 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156689829 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114461646 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070349238 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114066483 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09385771 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077784353 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140878578 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073420974 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162120788 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094868866 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.119818158 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122152486 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104814958 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103819113 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147858243 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132445473 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099846835 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082979406 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097856491 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113010334 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134684605 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083548844 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102641826 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108478326 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076818116 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124903565 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072311576 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110411507 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091832221 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112529227 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116017059 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075409469 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.254509217 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099356482 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.097427045 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120757314 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146462181 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085165297 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078061767 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153433694 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111980567 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.09884856 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133422492 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146363306 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117230705 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096495634 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139760918 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165427602 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08985564 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153478197 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102148406 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083702186 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.103627947 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114825236 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108303551 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119227713 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079414364 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.111437102 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153331612 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073305847 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092259298 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122902442 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078201943 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078147806 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099855268 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09862871 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.092764773 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.096903134 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.099887856 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128357611 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113214007 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099464252 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116412921 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092977857 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153444365 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084285506 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.096718699 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100215348 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070213838 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.124492445 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143073015 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075864349 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1481939 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.114796901 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108390208 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110903206 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080153668 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128307875 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075662653 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070674847 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130357354 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10495948 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102388621 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.138242327 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252960625 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118047821 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.111126756 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122787874 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120635597 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.120495443 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101695309 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086231801 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107222729 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121209784 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.070901763 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.087650638 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079207195 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098282392 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090107809 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082168318 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133519805 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117368454 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106809439 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110048056 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095762626 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140195356 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07780041 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117244317 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.113823573 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092896847 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.1441843 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14222523 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124620382 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09927071 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130711834 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073000848 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074637529 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086922209 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116269111 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081146926 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080569567 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107263932 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139072293 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118441192 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12755565 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115515301 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110692996 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145875405 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.0703608 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115152961 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134427823 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111652116 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100472631 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087803611 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09378643 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132156621 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098288035 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167925803 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106384835 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114668855 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143855827 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097141056 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076969167 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097695554 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120978912 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240626418 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135546872 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094917584 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083589046 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102805165 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075757482 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095185583 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118351587 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110516996 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127247737 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.106066148 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120967246 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074986677 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106283009 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113276984 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113850004 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081016461 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109882474 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154124158 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092953186 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109847954 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139924399 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076132128 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.131177113 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160233887 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133896387 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08333692 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101629915 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112430741 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118645031 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11157412 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129586691 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099093236 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127410573 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104344152 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083878375 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082851249 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091284462 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09858369 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108123559 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.099936298 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.106148031 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.091669131 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121393959 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097830799 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104037612 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110360582 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096474623 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093274408 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092190738 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160606873 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109053276 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155902619 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.094201247 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.132648985 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147408957 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072398501 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075257048 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07683927 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127011135 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080193294 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262417607 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10575179 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11134521 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117710584 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130273217 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092443622 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069555706 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10424019 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126138309 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114903629 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093079404 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099178944 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147291834 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115070414 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077191585 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109097936 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111945175 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102635071 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164855736 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081312433 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104575769 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074559957 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078254216 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118891536 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140707446 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083656223 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100397961 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111736053 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105651344 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11939244 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093762261 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103845753 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122269453 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137554282 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120402646 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086451009 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105526367 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120821132 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143089842 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100459094 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096721735 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16198415 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140598559 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.150537134 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084565598 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106839626 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107005867 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103301592 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126207698 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080772986 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148532337 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079878037 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126431959 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096413661 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087283635 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120056985 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.104196498 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083809672 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133919299 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106069272 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078243554 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223920001 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106686158 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11073605 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098102004 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072762545 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128587859 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071481351 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124079225 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155101957 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077794786 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099517522 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091343204 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080614075 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098167099 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097410404 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08261395 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.09606894 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15828279 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084307533 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13631098 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124039542 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104395828 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128760413 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099178201 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639002182 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079508831 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144707621 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11265983 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167969769 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098082551 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114235747 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107662342 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116835147 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135036978 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098137591 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175832192 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12178851 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.10910741 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07638007 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097223273 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098214474 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085287784 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101935911 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106430502 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107246524 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091204678 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.108757548 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114411859 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079493175 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092059722 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142459311 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109699791 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132411554 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129130809 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080623995 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109158222 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124361275 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076763882 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.109916283 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289363008 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101076042 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09618449 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079990027 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.096841506 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157667154 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071108774 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147480708 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11032373 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103708483 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105822381 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.104215063 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11924849 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098428192 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111461864 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08995408 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.103700954 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105181999 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080262147 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076318218 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099414095 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10455618 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126748065 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092505332 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096186845 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139536559 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070162051 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093696055 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107402776 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1339748 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15819067 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.101279153 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080755799 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112674349 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112573689 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.105670249 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111943334 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078518658 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077981966 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.078783617 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.097534501 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119276614 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105586559 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11058979 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103804702 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149253118 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.0808733 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221675836 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091917692 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099185413 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.085829203 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077488617 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091849117 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091981791 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098457834 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103498808 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158409087 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.090066548 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086416975 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088325824 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072138217 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079652575 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117794133 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102929596 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106253618 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097838292 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.078506525 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096717077 seconds)
  done (took 55.843635076 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.105417891 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.077463115 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097064669 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144606125 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120647723 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19924959 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150290877 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188183414 seconds)
  done (took 2.691694972 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068082221 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093898875 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101978107 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083083089 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066497767 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067935419 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227671559 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08213303 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068276329 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090019881 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076710351 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068056951 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.452672087 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068166345 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068673261 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076081031 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067083489 seconds)
  done (took 3.3928241 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.374624059 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.60656506 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.350923401 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07778818 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.871368314 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091903695 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.177811695 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140133112 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080925176 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.519278409 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367685025 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132708114 seconds)
  done (took 18.374709141 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082607574 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076923847 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091060363 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.092326906 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.08074324 seconds)
  done (took 2.083007346 seconds)
done (took 103.836967886 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082167704 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.207935438 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070700505 seconds)
  done (took 1.882561407 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092285598 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089512205 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090875444 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.089462381 seconds)
  done (took 1.940323241 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075207501 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077148293 seconds)
  done (took 1.727736667 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233040087 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.178401301 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096895057 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083912677 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081429931 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08408321 seconds)
  done (took 1.834062961 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073099842 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073347535 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073900598 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077719011 seconds)
  done (took 1.878695107 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07147232 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.068163521 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069719348 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072424882 seconds)
  done (took 1.861793806 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085486985 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085108242 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080105564 seconds)
  done (took 1.830585892 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102017416 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095381739 seconds)
  done (took 1.776909762 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081747559 seconds)
  done (took 1.66299306 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092829667 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102311106 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13143821 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113992069 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141571948 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.121302399 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086748272 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089832779 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078870673 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08578945 seconds)
  done (took 2.62483721 seconds)
done (took 21.189054106 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07962987 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.37355156 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361362283 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091723552 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673868364 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358290621 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.995946484 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093068252 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108442103 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069673102 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087171464 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652018365 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.98643052 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.331875546 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.975823525 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330806108 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656080489 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06954445 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068674308 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070007773 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.981657405 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068601435 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069696911 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06935793 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650804545 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374588259 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07057851 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.331582225 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069409659 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074504828 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.36029324 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07129815 seconds)
  done (took 16.188704503 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071098602 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123005534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073412918 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085353549 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071104843 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070752194 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072200948 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06999542 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11823871 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071383292 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087818665 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069165039 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073392214 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070645901 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090087065 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070265506 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072717742 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070651893 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070138985 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070920509 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08939736 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070058457 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071181238 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070502095 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071010519 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083973528 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07162504 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070390187 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070404047 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074383893 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075451013 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071783089 seconds)
  done (took 4.060427429 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11831947 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127039982 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075809622 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107659749 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121489859 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074213174 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149039274 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096288901 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125930653 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072482607 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089027069 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069723084 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10413284 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071598661 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091500366 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.0731032 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070865166 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069903391 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070819346 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090133527 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069843524 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070855313 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070814159 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071094622 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.0849703 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071610771 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070077606 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070376815 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07433619 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076154556 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071618552 seconds)
  done (took 4.34109456 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07135419 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073618925 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.0813821 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082255722 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068572802 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070628533 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072417833 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069045698 seconds)
  done (took 2.191824168 seconds)
done (took 28.376232234 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079708794 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069311753 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072752863 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087735796 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074779177 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079727899 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066430004 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07719368 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075051836 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075638341 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076859403 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072724521 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073230976 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067003189 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072838252 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06765874 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081687579 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071432183 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080766056 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082397848 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070760429 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07344384 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075880938 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081650137 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081330175 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08141734 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077035377 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073402025 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068693605 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071464944 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.0709814 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079825193 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.0815549 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083378076 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069100851 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069431747 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075291161 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072060953 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085974329 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079449876 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07212247 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079239544 seconds)
  done (took 4.754858504 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085028723 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089927814 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082896399 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080145143 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090410515 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083306981 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086903776 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07840999 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078108127 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086406116 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074358732 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081706608 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079360616 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073220145 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077675264 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075272279 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079898098 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074521819 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077623448 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078354629 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087256252 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073441716 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08803872 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080158311 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075661924 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080897286 seconds)
  done (took 3.702921497 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074193682 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085762066 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092785978 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144845996 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115047748 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083930092 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084668237 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093929653 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097623201 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069476115 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074609756 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094522472 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096552796 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077665841 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.114648427 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086320037 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084949153 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071159376 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075840814 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098381402 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091867593 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088592974 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098552179 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088574471 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071354104 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074435657 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076077897 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.088350829 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074371538 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083517172 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074683195 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076202812 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073063587 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082582183 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07445177 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070858763 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096798783 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082804638 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084020062 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071555284 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080252476 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070706124 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094895458 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132219783 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070554877 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075289008 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074294176 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080311438 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06935135 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097261813 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08062317 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068256257 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069380692 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068028229 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068155196 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071039271 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070602899 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070927631 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079094255 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.0754835 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090431322 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073782609 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085956469 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068119716 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078642363 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067976448 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069793901 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069686811 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100079823 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072682013 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115848194 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071351567 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069728791 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082212078 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081362195 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077079424 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070407601 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088485825 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08251588 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075037314 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078602679 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072721411 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072724323 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099564754 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068958858 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068150282 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06702882 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074430327 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072343921 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069623325 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080943802 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068225366 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072189475 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086161395 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068842699 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069313028 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072306365 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070779876 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068489632 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079134291 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072481223 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069653643 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078889891 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069199273 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072510595 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081943276 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075604533 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067546229 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070667575 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072256787 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070019913 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070213976 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073544471 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070783585 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07517062 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075215233 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074295424 seconds)
  done (took 10.921053276 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165006283 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161639487 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074604381 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153398621 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079703956 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08331629 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155780064 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099242011 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071403491 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073502784 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072002652 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113972814 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109741924 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.123003111 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084933951 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072498924 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.097281177 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119234439 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158580335 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149905277 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093594271 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077633666 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072267173 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070712731 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070637612 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078583188 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086217887 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077691525 seconds)
  done (took 4.492598647 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078369492 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104616645 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075535976 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094195739 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091404771 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072304641 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073925986 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073092137 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087792327 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08061589 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07216347 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077146032 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074240055 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073580833 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070494843 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075708693 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076434106 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071570137 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075551998 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077140068 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081712883 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096394087 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075623663 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071966258 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074389537 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071522243 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.080000239 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084311494 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071486564 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.107030809 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068033445 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076015826 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086032644 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071252321 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071444189 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07232602 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071086824 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071769438 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072897323 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070292863 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.07018709 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07541372 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.07063212 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079207008 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083266826 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.07134724 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071390908 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07203699 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07207202 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066884834 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072297104 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072191942 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072406697 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076722781 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073765954 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072150065 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06995563 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095515294 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075279478 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06924061 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06810422 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068348658 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071891843 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.08034541 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087047102 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074168593 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068907248 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069654682 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082593564 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082172837 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068714155 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073687507 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066820093 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07180743 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07302261 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071730431 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070196298 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068050565 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069266488 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069583771 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070821225 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069295793 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068677164 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072079561 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06769138 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068018295 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069510116 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074092547 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080136893 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068754364 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072925293 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070115908 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068339993 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072264119 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075054468 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072670299 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079927306 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079846535 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069858354 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068396796 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082898891 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071738237 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068808172 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075019999 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074278352 seconds)
  done (took 9.501614506 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091960843 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069507921 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085769388 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092738347 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079174962 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074597517 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079215675 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069028851 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085421181 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074219417 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077087636 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067492806 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079861967 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07890277 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070132468 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080217874 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073741197 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08717513 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084688616 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068324781 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077680826 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081576654 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081462581 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084174815 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083215587 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087263481 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08383152 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081762131 seconds)
  done (took 3.885339751 seconds)
done (took 38.85769789 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.680165187 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.850167251 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.670161628 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.881047618 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.937671635 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.690271 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.754915119 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.665758541 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.813293509 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.711573231 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.942184541 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.126204974 seconds)
done (took 64.467876645 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.709241802 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.818186208 seconds)
    (2/2) benchmarking "String"...
    done (took 1.900945847 seconds)
  done (took 5.325589596 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.870480614 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.336522678 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.908634404 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.666836532 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.672850319 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.926809497 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.450599601 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.137150477 seconds)
  done (took 29.707496907 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.852390901 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.892346192 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.370911281 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.399802994 seconds)
  done (took 15.165265735 seconds)
done (took 61.475233859 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.677093305 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.719358911 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.710516744 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.667619325 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.760756259 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.679834748 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.78698776 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.685227905 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.667435207 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.680221483 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.671601285 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.088516207 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.674842167 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.832305679 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.670085077 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.669934629 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.685138462 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.140101329 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.821280686 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.684865457 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.674490596 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.704897173 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.674746653 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.807877204 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.722358203 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.669382121 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.079868599 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.671607988 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.2713277 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.674056641 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.703501746 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.031334068 seconds)
  done (took 200.265579193 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.669328858 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.652281507 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.746602516 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.696804286 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.134527973 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.861722485 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.770882473 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.159105275 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.675142646 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.696734588 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.8551371 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.674858586 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.891703645 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.620410718 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.706950627 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.67936559 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.775043839 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.884916286 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.712985076 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.815609808 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.696675847 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.740204424 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.672056672 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.839814812 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.72022219 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.760013306 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.690714204 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.67770346 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.858651301 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.760965215 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.683525804 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.715446236 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.86983824 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.540011329 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.691560491 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.681138468 seconds)
  done (took 165.886370388 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.854689251 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.674016453 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.672608661 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.671217033 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.678007491 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.672746836 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.797162523 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.792795631 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.33418145 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.32195517 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.673078022 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.723428571 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.670146098 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.427693878 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.66876869 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.734652807 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.681396374 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.671000275 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.684763102 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.697994916 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.669480907 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.671108717 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79164868 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.686838489 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.669771308 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.680373893 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.670885814 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.676800627 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.05956658 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.670712108 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.738806448 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.675214534 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.677397893 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.913261795 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.67249923 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.671810484 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.500496399 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.717437792 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.670290174 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752185145 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.6728321 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.677635483 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.672588168 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.88834126 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.671523717 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.672398079 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.671965438 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.673377504 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.788313917 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.672403907 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.801197756 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.672034814 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.146143971 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.673087266 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.672281524 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.673241704 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.162074478 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.506725529 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.674617404 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.675411056 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.672782126 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.672151922 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.684953861 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.235727057 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.749285534 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.674997911 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.674723357 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.67810895 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.672950124 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.884309157 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.676172601 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.639797342 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.684265442 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.905943429 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.793798508 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.67696766 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.73790108 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.765493024 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.673057585 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.673049039 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.673096036 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.672966427 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.755174716 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.674346837 seconds)
    (84/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.674783865 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.787337133 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.684139082 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.676446773 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.729386933 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.742626266 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.674275415 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.497762142 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.678737955 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.67444746 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.921741615 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.738151384 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.674666096 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.674553299 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.762293876 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.796573312 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.399453851 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.679326715 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.033581724 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.758209088 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.675272203 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.793454621 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.678968214 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.754741942 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.681295031 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.676766824 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.709767454 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.675290225 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.686485306 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.675234366 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.048323376 seconds)
  done (took 390.747942194 seconds)
done (took 760.420669228 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.269890587 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.239419681 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.336162511 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.252269107 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.227821349 seconds)
  done (took 12.938222929 seconds)
done (took 14.553389035 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.75772667 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.761198757 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.694897193 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.756919657 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.691962051 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.756799398 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.740752362 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.698379499 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.727822385 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.698988277 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.72677882 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.697813872 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.684719136 seconds)
  done (took 24.008570208 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.899439157 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.898509647 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.740567329 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.896603476 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.717789151 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.903528674 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.831848743 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.815200116 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.814041549 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.685907855 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.683023918 seconds)
  done (took 21.500785407 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.918236161 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.909571714 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.74767083 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.908005061 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.718721743 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.902068484 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.835483378 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.821189516 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.81519827 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.686608775 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.683814784 seconds)
  done (took 21.560490827 seconds)
done (took 68.68554067 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.680513621 seconds)
  done (took 3.295936944 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.698778286 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.855434211 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.680706981 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.680625985 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.680732607 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.679104261 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.681841593 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.679611741 seconds)
  done (took 15.25323083 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.680029503 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.680260601 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.680962626 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.679384834 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.680290835 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.68176234 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.681017175 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.680512887 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.681106913 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.680892455 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.680790832 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.681182695 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.680124112 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.682093904 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.681077109 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.680678823 seconds)
  done (took 28.508240119 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.68262161 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.679978157 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.680243472 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.679218899 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.680156871 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.680977373 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.679828443 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.679320397 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.680153016 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.679181734 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.679531031 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.678253951 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.680009926 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.679337411 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.67966114 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.679504347 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.680103439 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.679200053 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.684400152 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.679537958 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.680167309 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.679756274 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.680485356 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.680257508 seconds)
  done (took 41.942104051 seconds)
done (took 90.616785127 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.436155902 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.289289676 seconds)
  done (took 9.341377304 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.68410325 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.680877949 seconds)
  done (took 5.049952341 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.680938972 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.681462459 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.681108528 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.680434284 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.68115094 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.681940352 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.681573585 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.681024354 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.681280522 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.681636354 seconds)
  done (took 18.428675098 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.682348757 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.681470002 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.681978147 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.68075975 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.682257752 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.681762284 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.682119484 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.681195255 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.681095444 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.682165532 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.682931186 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.681485012 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.681710326 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.68254884 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.682867981 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.682460049 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.682871843 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.681794596 seconds)
  done (took 31.893512257 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.682452382 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.68212185 seconds)
  done (took 4.982332084 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.682649159 seconds)
    (2/7) benchmarking "second"...
    done (took 1.682332448 seconds)
    (3/7) benchmarking "month"...
    done (took 1.68248643 seconds)
    (4/7) benchmarking "year"...
    done (took 1.682808843 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.681879494 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.682107325 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.682885223 seconds)
  done (took 13.394835419 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.682453265 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.832334932 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.89469022 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.346042468 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.683991176 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.684091831 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.592546613 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.684940993 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.685854119 seconds)
  done (took 18.705246413 seconds)
done (took 103.413796991 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.542031304 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.680785164 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.9660942 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.787453099 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.70220762 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.019054206 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.699322364 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.97331679 seconds)
done (took 41.990925926 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.754757 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.372771788 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.405655981 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.712982362 seconds)
  done (took 15.110424967 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.680420116 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.991862988 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.703821926 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.547867376 seconds)
  done (took 21.546127096 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.046487917 seconds)
    (2/2) benchmarking "read"...
    done (took 2.028306264 seconds)
  done (took 5.698114385 seconds)
done (took 50.731255737 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.683317153 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.682839361 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.682937666 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.684580852 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.683507565 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.683744275 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.682887409 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.683864934 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.684298152 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.683961646 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.684742366 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.683633432 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.684899847 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.683547598 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.684331009 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.683535419 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.683431024 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.684350022 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.685466543 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.684535044 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.685161296 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.684397525 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.684089007 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.684500979 seconds)
  done (took 42.036195523 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.684561092 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.685433814 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.683569207 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.684433284 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.684554326 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.68646586 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.684545258 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.685840743 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.685284906 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.684357819 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.686012855 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.68659655 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.684958607 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.686225101 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.686468362 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.685580401 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.685170757 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.686768499 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.685622741 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.684978 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.684033811 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.685079582 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.684845008 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.687465627 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.686622777 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.685995024 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.685529071 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.687583435 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.686344459 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.687751021 seconds)
  done (took 52.189571891 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.687063818 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.687880454 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.687018189 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.688259525 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.68665726 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.686536711 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.685260595 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.684822779 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.685757712 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.686542804 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.686390684 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.686318683 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.686287 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.686504504 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.686096723 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.686827587 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.687751696 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.687313858 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.686952262 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.685751107 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.68645878 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.68808721 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.686932294 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.687438809 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.687259373 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.68674685 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.687575968 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.688767106 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.687457231 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.68835313 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.687571174 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.687870926 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.688035569 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.688630842 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.687826272 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.687537773 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.687769644 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.687699732 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.688817261 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.689467045 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.687958437 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.689075458 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.686671964 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.688419658 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.688224253 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.688669384 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.688313857 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.687898373 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.688386761 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.688342682 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.687842005 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.690105042 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.688420497 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.689028249 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.689440627 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.688041736 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.688938365 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.689278904 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.689366543 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.689086431 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.68908837 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.68945187 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.68807506 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.690677694 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.689618734 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.688803763 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.689472237 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.688873591 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.688576849 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.690636498 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.688252118 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.689112585 seconds)
  done (took 123.154944369 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.689561069 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.688548053 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.690044805 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.690108175 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.688530602 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.688429864 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.690099872 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.689326467 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.690905569 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.689686476 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.691032158 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.690571661 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.691006924 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.690894965 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.688169752 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.690020112 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.691141807 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.690573766 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.690796711 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.690402254 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.690373422 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.690865952 seconds)
  done (took 38.805893836 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.690112109 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.690049702 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.691513848 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.691000899 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.690784989 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.691134667 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.690753926 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.69105153 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.691180554 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.690201836 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.690163271 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.690892985 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.691656842 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689356654 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.691027341 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.692367043 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.691364497 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.690178633 seconds)
  done (took 32.061859374 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.691646938 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.690660392 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.690857591 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.691250197 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.690911391 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.691567516 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.690900521 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.691846839 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.691310723 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.690861297 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.692232065 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.690463301 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.691778263 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.691688097 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.690943939 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.69118696 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.69128656 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.691377199 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.691007412 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.693010649 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.693186416 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.691376917 seconds)
  done (took 38.837832138 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.690390093 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.691574367 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.693747905 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.692236245 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.691094363 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.692188734 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.692398376 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.691088184 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.693119194 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.69219401 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.692661573 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.692581853 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.692881192 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.692315417 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.693579865 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.693861046 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.692602048 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.69291283 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.693315584 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.691615889 seconds)
  done (took 35.476077423 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.69357776 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.693627836 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.693712301 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.693832651 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.694771351 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.696992901 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.693675606 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.693738614 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.693864469 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.694311451 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.694594262 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.694517828 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.694534413 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.693640061 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.693804481 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.694299252 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.696100983 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.693610157 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.692710508 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.693853512 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.694854915 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.694836967 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.694802986 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.695199447 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.69434131 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.695192411 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.694632767 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.694683898 seconds)
  done (took 49.072927858 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.695456595 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.695176683 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.694389565 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.69446437 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.694621033 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.69371994 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.695204779 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.694122751 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.694173664 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.694531133 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.694922529 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.695627758 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.694689571 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.694042089 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.693958351 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.694418917 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695316334 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.697671294 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.697469154 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.696556457 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.695825776 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.695845811 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.696027208 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.696043768 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69550564 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.69594518 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.695922509 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.697415124 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.695797597 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.69679156 seconds)
  done (took 52.492221741 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.716630362 seconds)
    (2/2) benchmarking "in"...
    done (took 1.716672945 seconds)
  done (took 5.063038764 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.695495141 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.697323803 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.696364816 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.696250773 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.696190207 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.695724083 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.696306372 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.696308007 seconds)
  done (took 15.200790976 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.697102187 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.696538125 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.695646112 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.697851326 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.697309389 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.697811276 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.70365744 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.696549585 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.69900647 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.698876944 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.704770911 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.706544588 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.700933917 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.69806658 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.698995719 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.700230568 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.696839988 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.697210756 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.697545006 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.697511877 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.697897707 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.70195287 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.700586136 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.696559027 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.699670282 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.709121566 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.70261801 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.69846744 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.699946732 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.704468975 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.698194513 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.69722979 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.698256338 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.699183583 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.697952612 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.69894417 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.708235178 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.700263633 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.704927911 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.699560065 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.698660653 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.698942582 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.700894616 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.702016966 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.701731236 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.700869703 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.700316627 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.698210856 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.699540037 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.70296911 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.707539777 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.700489733 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.698493724 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.703781445 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.701792571 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.706126021 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.701298105 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.702303048 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.708882136 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.709035021 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.711560002 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.708247581 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.705203641 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.700074425 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.709203602 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.724311748 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.707854145 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.700010653 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.700873468 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.700103912 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.708092293 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.711857569 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.709724744 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.70012229 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.700769537 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.699206435 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.702554157 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.700496269 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.707573169 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.705526856 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.702519635 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.701681671 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.709918983 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.723226996 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.700977206 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.701400146 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.70222781 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.701277379 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.701845138 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.712913375 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.702110662 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.700780562 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.704234885 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.703583526 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.703554315 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.702031244 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.702916167 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.707026404 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.702241491 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.702545911 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.702769762 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.705163856 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.710806877 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.703385783 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.701310391 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.709774865 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.702474092 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.703396773 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.710294294 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.703759873 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.702740407 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.703761369 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.710163658 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.701556534 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.705912305 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.711835347 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.703160433 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.704661221 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.702316472 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.702843525 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.712074461 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.731683982 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.703112957 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.702972782 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.70741928 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.713206649 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.703146868 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.708449534 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.702849797 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.702873882 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.703239594 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.706076744 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.702776048 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.705642428 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.703325167 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.705899086 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.702773202 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.703467154 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.703805303 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.705379024 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.70491939 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.705041197 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.705639675 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.706532715 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.705769236 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.706791279 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.711532348 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.704878116 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.706880216 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.705720228 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.705140681 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.703190448 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.707617661 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.704175206 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.705608962 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.704631459 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.706582168 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.703462809 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.705400767 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.704394873 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.705254348 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.706320825 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.712051537 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.704724704 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.711221183 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.70716008 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.704753148 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.705137414 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.706209114 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.704914606 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.705280411 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.706143892 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.708686867 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.712876621 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.705189284 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.705417824 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.707681938 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.705550792 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.705647521 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.706645561 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.708618514 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.71374093 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.706223615 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.711388854 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.705344678 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.708057574 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.705832242 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.707650792 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.70618577 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.705575888 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.709015737 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.713991571 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.718787049 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.716896733 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.70751847 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.70964752 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.707355411 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.710294585 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.710963801 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.705738913 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.70741513 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.706119197 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.706628705 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.707001994 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.70934532 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.706663689 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.70611666 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.705239058 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.706392339 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.70688701 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.706357048 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.707664562 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.709857697 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.706696302 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.707613244 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.708271991 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.708018604 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.706785279 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.706605004 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.707983795 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.707822632 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.707483692 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.715528708 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.707920918 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.709229924 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.710232554 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.71010234 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.707899216 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.707926573 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.711914867 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.708283314 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.715234246 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.709877065 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.709579418 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.715884128 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.709613844 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.707333004 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.711643001 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.707860464 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.707205688 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.712317755 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.715717022 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.70854486 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.707267191 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.710378739 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.709208477 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.708061433 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.715089367 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.708764562 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.709705294 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.708145765 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.710791913 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.708040932 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.710668895 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.710709406 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.710085395 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.712611225 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.708898479 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.707996231 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.710664841 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.709609547 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.709749375 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.709216882 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.712375744 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.717343323 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.714802436 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.711196006 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.712551221 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.711571858 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.712846395 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.712059118 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.709788668 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.7100118 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.723838864 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.718156811 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.718170493 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.712711591 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.70955925 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.717106133 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.713286648 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.714700426 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.711799158 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.71242393 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.711756898 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.71203257 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.709689653 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.715531124 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.709691659 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.714242562 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.713135255 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.712935845 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.711507516 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.711795395 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.711748518 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.712414842 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.712463968 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.712843888 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.712367122 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.715401168 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.714902019 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.710826012 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.711975496 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.719599898 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.711458396 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.711937051 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.710364764 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.709978111 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.710748741 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.71345899 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.711586567 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.715234262 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.71809054 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.715495992 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.720962092 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.713705915 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.722346147 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.711873229 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.715156348 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.71955642 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.711383919 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.711988031 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.712037071 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.71296447 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.720363519 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.71280816 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.713227683 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.717108589 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.712473551 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.712507135 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.712036582 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.712542801 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.711686879 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.712394321 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.72265329 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.715006215 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.718297876 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.715423725 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.713526674 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.714310603 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.712931328 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.713152981 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.717601823 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.713856679 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.716134194 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.713859157 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.714799585 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.713112868 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.712252756 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.713720621 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.713442414 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.712418803 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.721172017 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.714301773 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.717211081 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.712797932 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.722080351 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.713846787 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.72135465 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.715322019 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.714904642 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.713267352 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.715367345 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.716099304 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.714438158 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.715025919 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.713593866 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.715689805 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.717944856 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.714470131 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.717243551 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.715999745 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.715872012 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.715203365 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.722687845 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.737177266 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.716405949 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.718522489 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.713125787 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.718536515 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.719522877 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.715181682 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.715487743 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.71701777 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.725988275 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.723758898 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.715811915 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.715877904 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.717069592 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.71500412 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.714714791 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.715542918 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.715692994 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.715577345 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.717896551 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.716401207 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.72007702 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.716080931 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.716362384 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.720027616 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.71734909 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.727795191 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.716642085 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.71747833 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.715956316 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.715554615 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.717547944 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.717233155 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.716457279 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.717843481 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.716774562 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.717540875 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.724432239 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.724367841 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.721206415 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.716567409 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.717126505 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.718888691 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.717624573 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.715780448 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.71675174 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.717655284 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.718889519 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.716924249 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.718536216 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.716149344 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.716970231 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.717043246 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.716175205 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.720422565 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.725925004 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.718189409 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.716071899 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.71740711 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.717459993 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.717790652 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.717804804 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.725868273 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.721035361 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.728279272 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.726273927 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.721221136 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.719068169 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.721579034 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.726590055 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.718025567 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.720179828 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.717009871 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.720836952 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.72208151 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.722470171 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.718939953 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.7254409 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.719381065 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.71907766 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.728083351 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.722490022 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.719680218 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.721452665 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.72321867 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.720352693 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.718465774 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.718076551 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.720414233 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.726762794 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.722061423 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.720472294 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.721472453 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.717949289 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.722075348 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.723133571 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.718302763 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.722474758 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.719054783 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.72122625 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.719384678 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.718744723 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.719759787 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.720391026 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.719148848 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.722191362 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.727013298 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.71837755 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.72249345 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.720339818 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.721492956 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.719954691 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.719726513 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.719968308 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.719579739 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.720228547 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.720099862 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.720979219 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.722694854 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.720214963 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.72171649 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.722973818 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.721064985 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.723575291 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.732314195 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.7275186 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.720783908 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.721362756 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.723228795 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.725525632 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.720754858 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.720717528 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.724269694 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.723153793 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.719645613 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.720995168 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.720697902 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.725071092 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.739868314 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.720586899 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.722385328 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.723704799 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.726793348 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.721294697 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.722532097 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.720685896 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.724200339 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.725958488 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.728999376 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.723224979 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.729526743 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.722870049 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.723276812 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.725897377 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.725871046 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.73142558 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.725750757 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.721671807 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.722349317 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.726361822 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.739275421 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.723334665 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.731314501 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.75310533 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.724592892 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.724200347 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.722682974 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.724057185 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.722795239 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.7256712 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.722766183 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.721431317 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.722680694 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.722076624 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.723319255 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.730995983 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.725221332 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.722546699 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.722575556 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.721969099 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.724025435 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.722840889 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.721172237 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.723286869 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.723871181 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.722823575 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.723712381 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.725046171 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.735594204 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.733738745 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.722896962 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.724179807 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.723574389 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.728490366 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.728006245 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.735701711 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.73118142 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.723688451 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.722960377 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.726354254 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.724728827 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.724264014 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.725621884 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.724113002 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.725742745 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.723604725 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.736939296 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.731863376 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.730887846 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.725212407 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.72454604 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.724791601 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.727464013 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.724678458 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.724198777 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.727762519 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.726418179 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.728190834 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.72395176 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.724632274 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.728198829 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.732341428 seconds)
  done (took 1022.904659304 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.724740249 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.724225571 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.724596684 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.724612035 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.724639207 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.724425717 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.724291056 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.725674721 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.725124753 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.724118729 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.725429986 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.725264491 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.725935348 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.726248761 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.726003722 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.725385465 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.725141132 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.725210827 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.725639202 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725955624 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.726153241 seconds)
  done (took 37.888508867 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.726098889 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.725811818 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.7260879 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.725250291 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.726256363 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.727139629 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.727514927 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725775922 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.726671187 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.72653699 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.725975217 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726730157 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.726216145 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.725939298 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725835723 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.727085812 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.726677922 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.72767083 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.7285194 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.726191143 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.72722111 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.725961418 seconds)
  done (took 39.644337811 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.727411941 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.727191997 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.727870077 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.727651955 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.726753154 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.727506197 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.728370743 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.727382699 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.726813029 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.727542436 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.727093127 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.728624382 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.73521188 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.734525723 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.729408035 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.727866354 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.874446134 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.728720558 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.727918433 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.728714756 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.728562544 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.734985413 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.728437437 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.728007585 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.72752809 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.7284276 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.728380424 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.727187545 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.728527023 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.729759383 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.73239356 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.728419558 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.731769293 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.73358998 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.729972726 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.730652323 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.73407836 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.730630565 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.728728283 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.728000983 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.739852262 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.753004102 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.73030802 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.737994469 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.729925814 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.729145976 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.732652438 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.738196402 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.727524838 seconds)
  done (took 86.595845697 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.727724792 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.728383624 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.729557696 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.727708796 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.72989826 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.729395945 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.728741015 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.728192724 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.730179901 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.728576308 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.729112063 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.730483067 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.729789884 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.728590924 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.729805869 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.729468967 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.728854941 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.730378822 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.729084941 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.729927809 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.729746468 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.731011648 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.730823332 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.729186999 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.728652894 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.729865995 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.729398631 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.730513916 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.730039402 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.730550321 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.729785304 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.730290202 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.730229373 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.730550123 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.730456949 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.729693179 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.730150067 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.730887316 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.730945963 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.731229283 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.730635698 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.731240424 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.731061888 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.732188732 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.73089999 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.732579448 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.731847459 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.732079859 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.730184589 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.730928077 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.731291001 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.731311202 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.732267165 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.732667914 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.731834047 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.732079892 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.732903695 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.732385745 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.731666039 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.733231117 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.731314479 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.731100304 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.732032278 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.732957217 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.731746647 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.731799953 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.730961581 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.73081695 seconds)
  done (took 119.340358396 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.731747518 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.732837871 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.73251595 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.731132904 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.731964462 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.733351986 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.731735275 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.731924936 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.731724738 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.731614901 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.732089611 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.731627803 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.730957062 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.73116146 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.731142901 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.730773539 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.730254875 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.730865494 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.731783715 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.731065693 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.731518601 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.730495006 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.729608071 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.731165229 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.730750635 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.730857431 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.730752403 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.731219349 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.730810016 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.730906857 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.729681486 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.730841483 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.731876878 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.730980652 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.732106912 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.728209334 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.728980313 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.728612108 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.729623466 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.72890021 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.728984889 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.725810649 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.725883136 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.725491273 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.726539199 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.726601353 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.726245165 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.721709467 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.721875248 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.723018402 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.723019069 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.722349149 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.72289718 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.72295937 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.720924826 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.721213668 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.722129811 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.722090771 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.72144794 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.722091213 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.723206853 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.722265555 seconds)
  done (took 108.826280292 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.721929946 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.723181416 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.72237191 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.720962614 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.719880302 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.720244562 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.720167707 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.719679477 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.720713417 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.719352763 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.721221902 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.721761734 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.723139252 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.719290558 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.720883478 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723199779 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.721577924 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.72117323 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.721518277 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.721330348 seconds)
  done (took 36.080935379 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.72148307 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.722023897 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.721495527 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.721838111 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.721533397 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.721350384 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.72193979 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72272358 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.722816762 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.720846312 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.722337548 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.723486818 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.722149739 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.722289044 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.722383553 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.722010431 seconds)
  done (took 29.208495029 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.722948644 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.721951298 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.723510889 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.724578267 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.722638922 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.723432337 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.721358656 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.722733637 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.722821904 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.72310496 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.723442037 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.722573734 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.722726065 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.722671906 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.722028655 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.724857438 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.722622855 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.721866874 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.723574945 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.724637625 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.723680001 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.724431785 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.722320737 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.723779176 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.72359926 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.723965207 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.723231624 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.722520298 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.722177291 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.722604271 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.722427137 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.722912686 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.723245504 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.722557786 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.723342482 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.721243909 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.722929315 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.721611275 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.72153748 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.722060063 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.722977778 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.72272204 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.722855143 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.7218776 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.722558578 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.721337556 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.72108757 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.72208585 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.722448486 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.72223979 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.718604156 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.7174348 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.716705402 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.717990568 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.717201829 seconds)
  done (took 96.384291738 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.714726199 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.715855571 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.716858286 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.716200929 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.714639631 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.716638038 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.714899723 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.7151976 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.715266638 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.715506244 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.715753869 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.716500916 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.715944299 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.715180585 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.714852864 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.716691648 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.715020165 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.716788836 seconds)
  done (took 32.534760485 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.716710195 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.715227303 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.714677011 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.715572576 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.715232963 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.715627669 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.714696223 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.715195323 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718806809 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.71413531 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.714842533 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.715431083 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.71557342 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.714862504 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.715720651 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716712459 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.714728109 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.714244448 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.715294625 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.715113424 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.716102414 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.71535658 seconds)
  done (took 39.388580421 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.7155382 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.715389981 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.730330755 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.737372008 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.73614272 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.750221403 seconds)
  done (took 12.034788559 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716314462 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715184618 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.715270458 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715260913 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716279398 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716296982 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715238557 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715584506 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716292491 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716530327 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.716873649 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716904187 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716644947 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715857499 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715881159 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717825674 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716918422 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716529396 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716963201 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717293638 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71811397 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714420466 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715064746 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716135447 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71709152 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714373901 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717598419 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713119073 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715076539 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712510354 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713617073 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713526581 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713835463 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710798112 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711417013 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710541795 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711020591 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711309696 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711347132 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708621418 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.709837912 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710608263 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709826994 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710424906 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711624746 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709320922 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708927688 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709898947 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709267858 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709990182 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710011217 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70911362 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708822632 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708795596 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709921535 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709528828 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708285639 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708073983 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708391986 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709103534 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709499246 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709864436 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707470776 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708042069 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707923318 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708661252 seconds)
  done (took 114.688009586 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70844507 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.707883987 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707379395 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708506318 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707458354 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707241041 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708848733 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707690326 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707553284 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708125781 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707176687 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706518415 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707223344 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707566514 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707207435 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708811114 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70778649 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707685067 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707889856 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707692842 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707933336 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707618427 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707976972 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708231454 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708635957 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706965245 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707293681 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707752186 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708153957 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708810975 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707539474 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705837459 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707723305 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.707464098 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707314685 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708535927 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707309776 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706748141 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706591712 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708067056 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706660103 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707972549 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706386493 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707187737 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707786288 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70841778 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707917333 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706745614 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707294883 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707984505 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707585147 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707369767 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707631792 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708595657 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708131555 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706830124 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708955941 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708000856 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708117709 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708637133 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708484704 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706903157 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.709556316 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707479882 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708630833 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708470097 seconds)
  done (took 114.355230289 seconds)
done (took 2375.890791347 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.800970302 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.781523854 seconds)
  done (took 15.223685703 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.873858643 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.823097693 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.706143563 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.745357013 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.706139451 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.733820054 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.709898456 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.706558088 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.707282102 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.707215545 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.707804318 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.891046869 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.713401442 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.70636593 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.706656511 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.799431992 seconds)
  done (took 49.59077624 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.711475223 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.709475955 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.719339375 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.712935551 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.709449216 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.721814115 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.739509358 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.71259649 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.744366154 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.72071169 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.779459712 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.721523953 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.708537725 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.759075389 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.721936412 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.725062698 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.802360541 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.784987772 seconds)
  done (took 32.844937067 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.786842632 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.721338014 seconds)
  done (took 10.15587156 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.71986607 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.710296159 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.733107997 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.732657235 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.719045806 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.73476458 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.712002245 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.742960429 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.744718949 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.718424619 seconds)
  done (took 68.910229818 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.71148324 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.710282474 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.709546777 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.70637091 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.706246361 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.710677838 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.705737157 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.705613266 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.363700933 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.741586348 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.715215193 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.713051007 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.706413905 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.709621679 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.704922966 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.729454156 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.823042011 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.703537733 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.704339061 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.712097654 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.706143664 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.761570994 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.719412886 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.707825624 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.73757237 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.364373699 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.713347674 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.711819572 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.819140938 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.703068083 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.705508361 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.891068634 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.708272501 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.16420845 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.979447673 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.71124122 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.71878635 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.712546149 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.704909456 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.816868689 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.707007633 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.712323119 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.624022918 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.959140127 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.80721608 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.749670865 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.005041779 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.721754468 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.706338974 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.735475999 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.708683533 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.706382829 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.719526626 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.21547099 seconds)
  done (took 123.769070361 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.704993105 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.050969722 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.868186827 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.705401234 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98504297 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.910529763 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.705934717 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.75230826 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.70714058 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.931221882 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.954889498 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.806890862 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.707254016 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.704822877 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.703110301 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.705163675 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.857670288 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.774946329 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.708159261 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.704072323 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.732002945 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.944615736 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.826004997 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.707889219 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.732193605 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.914069209 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.825919039 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.808675675 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.482353976 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.70705792 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.768128086 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.707753269 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.702920989 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.704535884 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.859534504 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.798476192 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.787446008 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.707935167 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.704516553 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.704987073 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.447061243 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.902405728 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.798801999 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.833718684 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.956835793 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.907454516 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.480593069 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.704813617 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.435455741 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.866339178 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.932593995 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.933422504 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.827463794 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.707880925 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.235613306 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.704800387 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.705625453 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.954143016 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.927451967 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.801964128 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.708333853 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.706780424 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.704702398 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.996566923 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.708546208 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.799759577 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.707778644 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.707202352 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.801406871 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.805081634 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.935089629 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.91870844 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.735735268 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.045488665 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.220496424 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.951235858 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.772104894 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.959411318 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.708983252 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.705991364 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.784390576 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.545872667 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.961866947 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.98906427 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.951080093 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.740612946 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.426221275 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.710071692 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.931390848 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.926360837 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.970070513 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.950255519 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.944869282 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.029070913 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.70678328 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.707780999 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.934688187 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.830671898 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.716745311 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.055896697 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.945520464 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.23293426 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.732676431 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.008224222 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.841809215 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.711062186 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.336487913 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.708630095 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.93468085 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.74535003 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.712295954 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.709798087 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.925483439 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.693603462 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.708861993 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.677646177 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.769379402 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.709337642 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.939731098 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.711427885 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.974316048 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.71561961 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.943262662 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.146860474 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.738930874 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.935722228 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.953868453 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.715731466 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.94675306 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.950465027 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.825509932 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.9832323 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.608526736 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.713693897 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.993253978 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.712960851 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.708896278 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.87701786 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.711610859 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.850852142 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.71260743 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.001127038 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.729404071 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963399453 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.713571417 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.96093346 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.742334194 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.758938621 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.713266215 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.841417819 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.711219707 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.540646844 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.865710835 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.714753448 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.710616432 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.473067806 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.712382588 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.859837109 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.93811555 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.149165177 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.781378309 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.375374387 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.712910189 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.790843624 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.735089695 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.100576337 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.7144819 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.96047463 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.717237008 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.710278023 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.710841946 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.999195161 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.948694062 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.715130419 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.713979189 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.619761679 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.714952546 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.714291995 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.895038645 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.059710098 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.715394288 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.916169613 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.717526251 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.841860012 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.722621383 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.790464101 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.05574058 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.717230831 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.717586048 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.719929008 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.716004045 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.714757305 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.977234716 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.737537952 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.206737892 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.848989946 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.983357966 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.025668481 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.953000731 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.75480888 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.716232927 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.966231112 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.715238379 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.77539206 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.717358157 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.736344718 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.940104259 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.71755635 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.924739246 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.983475672 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.561758717 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.761804772 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.717392137 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.715777101 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.714196343 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.857210219 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.793602102 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.713871129 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.714620546 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.826212943 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.832422694 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.924189255 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.713998252 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.77657129 seconds)
  done (took 868.116912557 seconds)
done (took 1170.25590702 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.711977592 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.713333215 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.71399542 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.717978348 seconds)
  done (took 28.505751878 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.715706905 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.714902319 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.714601734 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.716029152 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.716946966 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.716179479 seconds)
  done (took 11.942054315 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.725737886 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.713693107 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.71624857 seconds)
  done (took 20.804618417 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.78442737 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.098497155 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.846282901 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.126121207 seconds)
  done (took 9.50372858 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.715953405 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.715224804 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.715460528 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.71548681 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.716291396 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.715706995 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.716758776 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.716046034 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.71754474 seconds)
  done (took 17.096086156 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.852972458 seconds)
done (took 93.354596882 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.736054353 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.792546506 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.256447888 seconds)
    (4/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.727894207 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 3.046262032 seconds)
    (6/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.852269688 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.731908378 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 3.647869116 seconds)
    (9/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.923981906 seconds)
    (10/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.039958259 seconds)
    (11/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.059645488 seconds)
    (12/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.176147248 seconds)
    (13/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.730411297 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.768494492 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.846459872 seconds)
    (16/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.255096134 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.618982301 seconds)
    (18/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.885876908 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.894864521 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.749058428 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.981794727 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.970200436 seconds)
    (23/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.86449125 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.50149338 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.822161181 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.732689442 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.436389732 seconds)
    (28/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.919959252 seconds)
    (29/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.731462961 seconds)
    (30/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.330054661 seconds)
    (31/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.530576084 seconds)
    (32/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.948988883 seconds)
    (33/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.903038741 seconds)
    (34/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.828419676 seconds)
    (35/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.845436444 seconds)
    (36/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.614532433 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.840760123 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.865098435 seconds)
    (39/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.605492421 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.834323741 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.036600059 seconds)
    (42/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.879169918 seconds)
    (43/309) benchmarking ("sort", Bool, false)...
    done (took 1.955952359 seconds)
    (44/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.733902944 seconds)
    (45/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.91312094 seconds)
    (46/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.950180171 seconds)
    (47/309) benchmarking ("sort", BigInt, false)...
    done (took 6.732215441 seconds)
    (48/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.128682324 seconds)
    (49/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.911708199 seconds)
    (50/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.478603163 seconds)
    (51/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.730973185 seconds)
    (52/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.885824907 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 5.386773263 seconds)
    (54/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.824304419 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.979400352 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.727580191 seconds)
    (57/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.833959145 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.888589632 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.748458583 seconds)
    (60/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.858357237 seconds)
    (61/309) benchmarking ("sort", Float64, false)...
    done (took 5.492620359 seconds)
    (62/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.897596574 seconds)
    (63/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.826853638 seconds)
    (64/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.814609912 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.964438649 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.76743111 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.058037919 seconds)
    (68/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.798504536 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.731401614 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.117610805 seconds)
    (71/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.751862599 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.733696354 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.444633369 seconds)
    (74/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.740857575 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.884924093 seconds)
    (76/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.911449378 seconds)
    (77/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.057498366 seconds)
    (78/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.815383346 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.046934494 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.862484629 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.700126491 seconds)
    (82/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.768939903 seconds)
    (83/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.729319897 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.910213193 seconds)
    (85/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.822456609 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.062493541 seconds)
    (87/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.107199526 seconds)
    (88/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.937938528 seconds)
    (89/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.296087517 seconds)
    (90/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.742033746 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.936554377 seconds)
    (92/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.916292358 seconds)
    (93/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.01302792 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.043045764 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.738938679 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.841634806 seconds)
    (97/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.729832746 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.478850513 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.052677588 seconds)
    (100/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.876660515 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.061808673 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.818836923 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.070983664 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.741546701 seconds)
    (105/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.751707996 seconds)
    (106/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.860355609 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.400292771 seconds)
    (108/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.983737637 seconds)
    (109/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.121848075 seconds)
    (110/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.986776374 seconds)
    (111/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.738698213 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.906871521 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.927007538 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.749737039 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.700508951 seconds)
    (116/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.916286566 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.985356754 seconds)
    (118/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.754318157 seconds)
    (119/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.742235799 seconds)
    (120/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.799445219 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.708202096 seconds)
    (122/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.813933082 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.864762687 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.729843098 seconds)
    (125/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.759872905 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.765808228 seconds)
    (127/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.878934912 seconds)
    (128/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.791423847 seconds)
    (129/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.751246218 seconds)
    (130/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.865113725 seconds)
    (131/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.870708575 seconds)
    (132/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.957698101 seconds)
    (133/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.913551276 seconds)
    (134/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.739294254 seconds)
    (135/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.151798909 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.770288245 seconds)
    (137/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.809675321 seconds)
    (138/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.023502026 seconds)
    (139/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.065406474 seconds)
    (140/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.948994133 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.983855221 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.731335587 seconds)
    (143/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.734099311 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.895791387 seconds)
    (145/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.294939795 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.98648283 seconds)
    (147/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.731103716 seconds)
    (148/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.196436127 seconds)
    (149/309) benchmarking ("sort", Float32, false)...
    done (took 5.436220406 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.924439236 seconds)
    (151/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.849368111 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.758453732 seconds)
    (153/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.895039222 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.865969873 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.395090149 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.656427889 seconds)
    (157/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.97826272 seconds)
    (158/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.530593547 seconds)
    (159/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.874170832 seconds)
    (160/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.83548076 seconds)
    (161/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.087772474 seconds)
    (162/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.838703846 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.753361363 seconds)
    (164/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.811577961 seconds)
    (165/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.996206978 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.739810803 seconds)
    (167/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.095140477 seconds)
    (168/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.060374395 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.073826991 seconds)
    (170/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.737639677 seconds)
    (171/309) benchmarking ("sort", BigFloat, false)...
    done (took 8.141753832 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.348581415 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.735207419 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.148125241 seconds)
    (175/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.951238675 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.86490643 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.734151626 seconds)
    (178/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.736446584 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.84447592 seconds)
    (180/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.821489791 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.202999673 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.736182172 seconds)
    (183/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.279825276 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.76145003 seconds)
    (185/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.838517162 seconds)
    (186/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.912226515 seconds)
    (187/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.813701441 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.868150589 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.858531675 seconds)
    (190/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.864132982 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.062713373 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.735745606 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.084573163 seconds)
    (194/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.642181257 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.895489268 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.005543301 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.740749778 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.94104374 seconds)
    (199/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.959734906 seconds)
    (200/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.743592816 seconds)
    (201/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.734510701 seconds)
    (202/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.922542389 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.153952489 seconds)
    (204/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.850503595 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.807259266 seconds)
    (206/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.826221178 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.004156155 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.742114027 seconds)
    (209/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.485092453 seconds)
    (210/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.742871875 seconds)
    (211/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.840421531 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.366627233 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.715142578 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.196284425 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.754190308 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.967566107 seconds)
    (217/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.737295928 seconds)
    (218/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.788378012 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.872706506 seconds)
    (220/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.817298571 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.392513428 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.955586271 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.736052641 seconds)
    (224/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.994038246 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.740343618 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.08387247 seconds)
    (227/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.198130367 seconds)
    (228/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.990576635 seconds)
    (229/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.742117988 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.812823913 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.737065866 seconds)
    (232/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.308785512 seconds)
    (233/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.85180944 seconds)
    (234/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.742003725 seconds)
    (235/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.856381471 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.673736938 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.867435704 seconds)
    (238/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.830195364 seconds)
    (239/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.737118112 seconds)
    (240/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 3.117484532 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.767247907 seconds)
    (242/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 3.20348028 seconds)
    (243/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.002901526 seconds)
    (244/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.856240546 seconds)
    (245/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.976747573 seconds)
    (246/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.141954642 seconds)
    (247/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.742263349 seconds)
    (248/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 3.291702168 seconds)
    (249/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.255514336 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.848037354 seconds)
    (251/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.924058956 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.029935217 seconds)
    (253/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.590452201 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.87680746 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.524597075 seconds)
    (256/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.055519476 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.367382278 seconds)
    (258/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.826168516 seconds)
    (259/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.587662158 seconds)
    (260/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.748650383 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.135472163 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.740938105 seconds)
    (263/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.11684753 seconds)
    (264/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.502545199 seconds)
    (265/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.953440927 seconds)
    (266/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.932071103 seconds)
    (267/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.832321986 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.761684004 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.749051487 seconds)
    (270/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.73824562 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.803582089 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.060368192 seconds)
    (273/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.751295528 seconds)
    (274/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.526969878 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.761086471 seconds)
    (276/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.91807604 seconds)
    (277/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.855666488 seconds)
    (278/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.129779933 seconds)
    (279/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.195428536 seconds)
    (280/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.740965947 seconds)
    (281/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.82493402 seconds)
    (282/309) benchmarking ("sort", Int8, false)...
    done (took 4.641115712 seconds)
    (283/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.739652672 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.146000177 seconds)
    (285/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.834723874 seconds)
    (286/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.894198392 seconds)
    (287/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.638370978 seconds)
    (288/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.775558999 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.743295921 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.553138536 seconds)
    (291/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.819271642 seconds)
    (292/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.7526799 seconds)
    (293/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.951913163 seconds)
    (294/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.828480597 seconds)
    (295/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.880031227 seconds)
    (296/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.841303549 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.783171788 seconds)
    (298/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.759878875 seconds)
    (299/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.424586412 seconds)
    (300/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.745678324 seconds)
    (301/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 3.294533182 seconds)
    (302/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.773826699 seconds)
    (303/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.841986142 seconds)
    (304/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.197223423 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.960107855 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.144472261 seconds)
    (307/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.052745157 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.676329729 seconds)
    (309/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.131742576 seconds)
  done (took 964.928150218 seconds)
done (took 966.880672991 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.770646908 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.760455002 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.745724668 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.767242441 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.858231991 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.792542645 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.758490054 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.748528979 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.795130622 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.795419099 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.743546416 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.789642862 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.745513308 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.746433331 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.745227331 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.762354785 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.058718968 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.778851807 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.764610589 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.756696928 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.763787569 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.745860227 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.794886568 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.790407192 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.74862203 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.749351595 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.749809724 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.765791433 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.860328209 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.749465301 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.750625303 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.7591419 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.056717442 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.774780931 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.743427981 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.767394015 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.758825824 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.758663616 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.751244463 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.781097188 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.143138206 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.786979698 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.748324882 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.748078828 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.746733531 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.753624469 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.74781876 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.755140424 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.763633503 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.763356649 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.133924705 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.803742459 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.751350392 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.748347785 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.761180669 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.748944997 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.751198995 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.764258498 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.76697511 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.764222406 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.043695314 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.783551939 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.750376997 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.767207943 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.757621216 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.173667858 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.786324041 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.754211036 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.143910938 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.794610049 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.173233686 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.798453449 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.749226034 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.763556835 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.781107334 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.05875805 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.776255674 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.74695876 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.757976728 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.74673537 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.759748054 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.763220375 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.75313474 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.748851946 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.764251708 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.794341366 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.760594554 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.749596396 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.759482128 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.768492195 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.758019531 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.761595134 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.753673256 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.746604615 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.759532416 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.753383843 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.754549619 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.75234233 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.755007732 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.762081056 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.142569579 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.807145486 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.746739946 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.748461271 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.74944736 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.765630121 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.144172998 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.790875388 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.771367641 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.799781998 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.751012308 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.045559136 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.7814877 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.767967899 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.762048751 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.752463504 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.747694853 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.045684041 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.169882041 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.805270584 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.75020391 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.749481351 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.766463683 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.751809454 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.747454394 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.064024853 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.783952323 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.767299972 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.874812299 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.763233414 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.783685417 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.74976113 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.754688194 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.800551224 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.767664342 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.784599559 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.754238104 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.766944646 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.769064557 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.748453622 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.764229882 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.764792188 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.751272052 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.76015083 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.749242644 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.801689259 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.767190638 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.766664491 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.772576876 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.875382958 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.749747242 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.047604274 seconds)
done (took 275.595351148 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.829945855 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.750418176 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.843989607 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.751710614 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.843412266 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.827291824 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.750402525 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.752039946 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.752102892 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.244044682 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.750307539 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.756047948 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.750243265 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.750684206 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.82366913 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.751229782 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.75170699 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.189514792 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.751587557 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.832465904 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.751647894 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.751291761 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.75096956 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.237072601 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.752584716 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.75064914 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.832536541 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.751032701 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.185439687 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.754015685 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.751704225 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.186853715 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.831048161 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.779476121 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.759908024 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.757723738 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.843815997 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.764038038 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.822265358 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.822236176 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.846191911 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.78529988 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.752901935 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.750628386 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.755655148 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.752677546 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.753314648 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.784820741 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.75215318 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.760707233 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.190732986 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.758563474 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.759649312 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.753128484 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.753529772 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.78009172 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.752605666 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.754640499 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.834698067 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.752965345 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.825372153 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.239123219 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.246096029 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.753713145 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.754400038 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.752670519 seconds)
  done (took 177.33070685 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.819534872 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.836783752 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.819137504 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.759108823 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.803491437 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.822183287 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.759885579 seconds)
  done (took 14.305174276 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.761054912 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.75437963 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.803613009 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.803920881 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.754176805 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.911132308 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.75454451 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.76649162 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.759068041 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.781421508 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.755184213 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.754171272 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.762383117 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.754850171 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.804570695 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.767978712 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.872687634 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.756724482 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.755649052 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.904273475 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.759670005 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.762320158 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.779777485 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.766767749 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.75662733 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.762665923 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.335361526 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.755087126 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.755620547 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.75632502 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.75594522 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.798014962 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.757275172 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.756018588 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.755415772 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.869755627 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.756221707 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.756078798 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.756394708 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.755044583 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.757236248 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.756283348 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.756723368 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.755447107 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.756211719 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.778289629 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.756704795 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.756269029 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.757254707 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.756663352 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.783388522 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.757692842 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.758199905 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.762789912 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.800980587 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.766470269 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.759099253 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.758573308 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.757818513 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.757241556 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.907218083 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.806986691 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.758288897 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.80806956 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.757312928 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.758702511 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.757816001 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.757698121 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.847218005 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.757795543 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.806873927 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.757371713 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.916297195 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.77987722 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.759518309 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.762647581 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.761532771 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.758400734 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.758889582 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.764574856 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.758033539 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.760403481 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.765380799 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.762224943 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.75836809 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.87282041 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.898575324 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.75865572 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.759229581 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.765617012 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.758860423 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.80264962 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.757852346 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.758166074 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.816149869 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.874804601 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.787162178 seconds)
  done (took 194.740957508 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.766010283 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.766346825 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.761216746 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.775898499 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.759223102 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.761609118 seconds)
  done (took 12.280694609 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.762135417 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.763430144 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.759929327 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.761042753 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.759726104 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.760536778 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.76064537 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.761278652 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.764878414 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.758836117 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.760568202 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.761311486 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.759271717 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.761235397 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.760489962 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.761229262 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.760211277 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.760933217 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.761836214 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.76293455 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.013901267 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.761238155 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.760967597 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.764080856 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.766277536 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.759041246 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.774769775 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.75818199 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.760254452 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.768695764 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.764181158 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.760075678 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.763899843 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.768696429 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.764773713 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.764486284 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.763699928 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.761053168 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.760775859 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.761384732 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.762890511 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.761302754 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.761067292 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.762985241 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.763958152 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.769579643 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.768041593 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.776728259 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.761897324 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.762511286 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.765746712 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.762744758 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.76302509 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.762532254 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.76476875 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.768091337 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.765947918 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.761864813 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.761650206 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.76659687 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.766815334 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.763261414 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.766011822 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.764822624 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.769707246 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.762056527 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.765306322 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.766670712 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.763265302 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.763159662 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.764088537 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.762899785 seconds)
  done (took 129.908716224 seconds)
done (took 530.268712615 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.057073808 seconds)
  done (took 8.751193688 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.960767645 seconds)
  done (took 8.716085626 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.25522103 seconds)
  done (took 9.952879552 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.772293013 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.778113973 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.772437592 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.76650027 seconds)
  done (took 28.809145817 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.05413677 seconds)
  done (took 8.748463053 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.783618846 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.761105655 seconds)
  done (took 15.312364737 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.847282483 seconds)
  done (took 8.543104547 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.081536901 seconds)
  done (took 8.786986737 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.786021357 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.765820574 seconds)
  done (took 15.269465557 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.764402396 seconds)
  done (took 8.460361518 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.953435405 seconds)
  done (took 9.754753295 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.789333845 seconds)
  done (took 8.556857028 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.763486391 seconds)
  done (took 8.45884478 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.861593706 seconds)
  done (took 8.556205783 seconds)
done (took 158.373202047 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.76594081 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.765540117 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.766587966 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.766010453 seconds)
  done (took 28.758971644 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.798210481 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.797129988 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.797813519 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.806478322 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.798724427 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.795056043 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.789440401 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.789919468 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.808362743 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.799201936 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.79863912 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.800546095 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.796349446 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.789429197 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.799823158 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.799488289 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.808504276 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.799125826 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.789490352 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.799269583 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.764512277 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.806796496 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.799991667 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.765786479 seconds)
  done (took 44.794382052 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.954961769 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.836183026 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.917774252 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.819082577 seconds)
  done (took 9.224247882 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.816110015 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.817812799 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.829309714 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.868388949 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.891459492 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.826024681 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.78984728 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.785230119 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.772088985 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.819214222 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.893982091 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.813317672 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.907678499 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.763990049 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.945775934 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.766240868 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.76654169 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.817361948 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.868943943 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.88180955 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.769438912 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.819691156 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.821391979 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.813009661 seconds)
  done (took 45.561996055 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.766680961 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.776950008 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.774393967 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.767422021 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.766633828 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.767558167 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.774359041 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.770739761 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.789526576 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.769492728 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.765535068 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.768272542 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.775040253 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.767500255 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.766013233 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.780581085 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.781298997 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.767195597 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.772383874 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.775513508 seconds)
  done (took 37.142940142 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.766110541 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.611548437 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.110100141 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.018140847 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.764228125 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.767787108 seconds)
  done (took 30.736437222 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.779252365 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.77315503 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.768164206 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.824282492 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.91093276 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.778345874 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.769291212 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.779312773 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.814934103 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.834838404 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.788466864 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.797551846 seconds)
  done (took 23.316901044 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.7691663 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.770146322 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.769857784 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.783605333 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.777656187 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.774500219 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.775364412 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.766237609 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.781477997 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.785800101 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.775202112 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.780076866 seconds)
  done (took 43.012736999 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844150379 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.641038049 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216846532 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.230984615 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.289490444 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.970386068 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.768716729 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.850909008 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.768831915 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.040336154 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.169955842 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977688421 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.010899109 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.494070299 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.773260923 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.289724987 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060585547 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985886328 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799550748 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.430461786 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881602415 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.266413604 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.489452952 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.882587564 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.9719238 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.890588051 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.026194328 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.717402998 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.816159295 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772630795 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773133498 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.768927633 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.043224175 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887826996 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839757506 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773635606 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.184504365 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.477921788 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.816421564 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.495146815 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.389661244 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.896867066 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771748609 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.77213371 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.696442093 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.261317947 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85830267 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.77193259 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.474106697 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.769611082 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.775159685 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84412342 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.77079054 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.579389735 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.45392302 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.038541782 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.769483298 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771722888 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.333335304 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822143128 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366945167 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.703621251 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.855260521 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.506697509 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240013509 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.929019567 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.77184062 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770665054 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698291682 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.499837826 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888351494 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908867753 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.786903832 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410937009 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068473132 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.258750371 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.835078803 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045311778 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.60906625 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.703651581 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988210913 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.719007342 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.696859199 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.6186667 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.696884028 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986679745 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805996027 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.399873693 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806915633 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.853904023 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.776237645 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78691405 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774109792 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.986422136 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.664156012 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.774165619 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.121434261 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.031979381 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789863883 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.856327114 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700544708 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.773777301 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016794292 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.974921702 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.983553144 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.300966111 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862168811 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.692010576 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.785945982 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.659413163 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.781655341 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.049314697 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837494595 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.83803748 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895819793 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.72296097 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027774937 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.710387929 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.872802048 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.204289848 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.018757796 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.140269276 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.018903858 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834366995 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.778019433 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.774522454 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.516246972 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390092579 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.990543572 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.786057436 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.233444638 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.784474037 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.776456996 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710399122 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.396526343 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.208378016 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.863926384 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.988382683 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.707189563 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.050595792 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.699639085 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.911030985 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.753521018 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.987548489 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.433024027 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.867133935 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022239676 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.988486867 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.973970456 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782271092 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787656824 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866420109 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790829057 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.165920667 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.022113552 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.775868119 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.776661323 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.508715688 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.83598239 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.77888866 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.776339216 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.302402117 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054517315 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.806928203 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.781959604 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.65122852 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.787066809 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837364948 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.778909296 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.779028738 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.291275271 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.278091875 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.779894499 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.418246341 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99283392 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77936474 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.503325705 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963828693 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.788449679 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05217568 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.845443716 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.703332088 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.477916632 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.478068056 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777470158 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.702815169 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.777797484 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77904759 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78141748 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.964812787 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.060754806 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831072197 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.458846699 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.886957241 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781684017 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.779687848 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777488529 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.291665051 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.842577335 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373064781 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.782909451 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907480279 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.789550901 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.703463461 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.777966589 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7788565 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.776043024 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.725205674 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824165376 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.462977798 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986022246 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025549055 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.181257905 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784984632 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.459165829 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.897523657 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.792156455 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.142455778 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277720988 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.86959672 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835164811 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.783877333 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.455476244 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.513822228 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.33916065 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080456805 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10082433 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133628103 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.12567675 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.095340541 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.867413044 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004209927 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.299438204 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.833425421 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.871997572 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716333115 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793044429 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.437680992 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138148516 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787811742 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995593627 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073299312 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.204978915 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918319892 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981265768 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80817216 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.55875685 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.801793071 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.314961674 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795871898 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.315305188 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989146691 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860632628 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.140622315 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.871755972 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.779031142 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12744821 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821793947 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.48175952 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.133318436 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.148579411 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.321306113 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007748628 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.787215216 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.219825714 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135318025 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.933080541 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.89480986 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707180009 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.785600176 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.784538864 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.792963665 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.750445787 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.624701386 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.022216093 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784590671 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005905954 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.864697916 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147148922 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.688765361 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.783191198 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781147673 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028709619 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422229539 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929007535 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.057525956 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.343865643 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792414952 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.709697382 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708416235 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.482564479 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.790009851 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.747936004 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994155654 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.882923391 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.459307493 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.122135751 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083689747 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.025506235 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.79342533 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.057651533 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058042741 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.272159205 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803644856 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.877896347 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.171622971 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.500477438 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.994819466 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.007807706 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310948396 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.997637251 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232449463 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.75538536 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.782630266 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.988971053 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.997915232 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.226064413 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961622048 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.493957722 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.794756568 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135120222 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846996881 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.225536578 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.974764033 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.869043958 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790105105 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86002737 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787614085 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.790181193 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.789880112 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795219207 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.222314334 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907745585 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.793829388 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859195476 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852971192 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.353341918 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.791395201 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061524843 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138525193 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.124753904 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.849763152 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.784495211 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786812168 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71081063 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913771216 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.224235866 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055009457 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.901152888 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.921541824 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804961343 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.160053174 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.003571347 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087170369 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057370274 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.66777211 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452236557 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.898106258 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.000879971 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789834175 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.987842028 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001552298 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091827914 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34601376 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.889622234 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.969604505 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055704354 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.149753186 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.786362966 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364009392 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.800079325 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182697994 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.820794183 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.225177275 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047899297 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789253296 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905839926 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.789271811 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.989630163 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.236989801 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.516160394 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.13654301 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.640035534 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.789347122 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063650164 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.122871878 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093848235 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861698466 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.792426558 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.474485872 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919149876 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.669480751 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.017686714 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.786142121 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989710971 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.49708267 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.789822039 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06469616 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09337765 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.786671604 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.705096083 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820177443 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.790189595 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.000695452 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011354094 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.033865461 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790033441 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.794267502 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.593513921 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068548762 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.850657587 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714536151 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.787907953 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832624821 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.015168466 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.805650892 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.301712227 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.488926667 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067655583 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.6966585 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803808349 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.155757128 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.164187709 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127940461 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.312048496 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008764017 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.343743169 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.607376371 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157004841 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.789408438 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.199267007 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159911849 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.790109766 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.255534104 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892250228 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.062890239 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116194761 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.800798398 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.578283079 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.825241974 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002565219 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.144986616 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.720314219 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.794073 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.837471662 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.789173008 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.771114652 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.79814935 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.741925006 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.202646795 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.625010384 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346817172 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.794575793 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.968110365 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.215362942 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.335720735 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891500538 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8057561 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794076835 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.481596051 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.073075693 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.03198081 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.255200789 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.875709323 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.792896168 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790435916 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.709393052 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.974171871 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.977986484 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073749976 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.092539356 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.892473068 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.791968774 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.998240467 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992114363 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.23208761 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929982019 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.878490327 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897332157 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.731188403 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.4987136 seconds)
  done (took 1619.291298598 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.824954459 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.8400664 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.809458407 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.851236274 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.822508946 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.811560945 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.845242677 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.888720438 seconds)
  done (took 56.417016694 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.792724179 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.950684388 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.796061076 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.7947677 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.798145517 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.813692281 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.950689735 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.804897627 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.797623818 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.798855806 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.795439614 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.793317274 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.06680703 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.816606964 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.79316234 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.244962524 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.798272005 seconds)
  done (took 73.340005925 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.79645559 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.176352202 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.825271858 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.796323204 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.590768281 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.808201107 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.812693725 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.845374024 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.79815086 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.846604005 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.09509517 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.803769326 seconds)
  done (took 88.922384827 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.80829698 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.79720616 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.798526482 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.797523966 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.797854226 seconds)
  done (took 10.733982927 seconds)
done (took 2112.970770156 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.025575262 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.85341815 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.896393867 seconds)
  done (took 5.475785275 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.943934424 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.989253113 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.100689982 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.10698411 seconds)
  done (took 9.874510322 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.102474157 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.174957926 seconds)
  done (took 6.004358138 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.116611963 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.814283904 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.182707847 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.799735459 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.800754751 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.802722753 seconds)
  done (took 22.137268426 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.798071102 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.797020645 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.796291776 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.796756132 seconds)
  done (took 8.91542196 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.795743827 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.504066099 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.798257612 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.808091165 seconds)
  done (took 20.63415683 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.945530212 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.912864178 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.939845285 seconds)
  done (took 7.526344623 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.996644046 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.902702304 seconds)
  done (took 6.628347669 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.935226763 seconds)
  done (took 3.663101789 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.825416931 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.067341559 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.283600771 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.31469948 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.372941928 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.68105547 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.11691439 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.020813312 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.241806063 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.254606223 seconds)
  done (took 23.908085477 seconds)
done (took 129.636727673 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.142699604 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.82784129 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.003089205 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.156778682 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.052601766 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.999133646 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.018795181 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.146719546 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.834528539 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.822851767 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.159795292 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.048495662 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.964433975 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.820771226 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.972580175 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.820071739 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.032387703 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.161301634 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.84300744 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.055690208 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.033093198 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.800174777 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.996706701 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.814423916 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.038484021 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.950318411 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.343078183 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.825985013 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.975125208 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.356401457 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.956282347 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.193230316 seconds)
  done (took 165.897812389 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.800672107 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.799955264 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.800433263 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.801699386 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.325882845 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.801950613 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.801072853 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.800950465 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.19793662 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.195951469 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.801310461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.322924826 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.80094509 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.800526132 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.800630618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.800647591 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.361631685 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.800442777 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.800937617 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.799974136 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.802139224 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.159851963 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.802131304 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.163328133 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.355865629 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.802928206 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.800538132 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.801475527 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.801474175 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.801237475 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.8034923 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.802079497 seconds)
  done (took 207.04695146 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.800711451 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.802869089 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.804258502 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.802916654 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.802837006 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.805070354 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.804192749 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.802420829 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.422235168 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.413370797 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.802367385 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.804398468 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.803381047 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.802749917 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.803688807 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.80361075 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.802825778 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.803603864 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.804238356 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.805392379 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.803966567 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.52467026 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.803504232 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.530506444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.803765434 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.804349252 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.803366835 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.803539869 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.802587165 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.802706159 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.803693052 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.804093939 seconds)
  done (took 218.120333409 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.045369359 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.804010451 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.804714414 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.713560865 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.805122347 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.80370556 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.798384942 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.048263132 seconds)
  done (took 18.558091421 seconds)
done (took 611.364232727 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.170670678 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.010240711 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.976789716 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.828433904 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.084508987 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.869687529 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.82383675 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.888119136 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.643827685 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.898742603 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.478659129 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.847156422 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.575077379 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.853313343 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.94450192 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.882371303 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.411884577 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.518049031 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.999949276 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.893647103 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.001128662 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.723228295 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.907386637 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.664400819 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.606931961 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.776922384 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.836624324 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.41013275 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.836762807 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.981993743 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.510883999 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.079360019 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.841828702 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.823538353 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.879297994 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.85522615 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.014298011 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.837687191 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.951998846 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.52350071 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.916253329 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.550763647 seconds)
  done (took 99.865259243 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.819271937 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.812230667 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.811680859 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.811371686 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.818296417 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.810393608 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.810442172 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.810696335 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.811321654 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.811484033 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.811383122 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.819912718 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.811097054 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.819830736 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.812004184 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.811957804 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.811749461 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.82084245 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.811047107 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.812580325 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.81074432 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.811033945 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.808008746 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.812710732 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.812812642 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.811848388 seconds)
  done (took 48.888600253 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.807478418 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.957834878 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.049813128 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.828397774 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.808397434 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.811495288 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.826222074 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.813412158 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.810208875 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.811550971 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.899392245 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.813866501 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.826024092 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.054123604 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.825565053 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.808625781 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.809621635 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.809002128 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.967336233 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.824817021 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.828003198 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.813244038 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.828171703 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.823534216 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.810945109 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.810033516 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.812481175 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.247355847 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.818163364 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.899474261 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.854678171 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.833116487 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.19822048 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.061640346 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.86549777 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.818981713 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.80801237 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.904211445 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.815392309 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.810477536 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.827697281 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.815674996 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.052492408 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.339913849 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.824445326 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.809065261 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.254960709 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.911580199 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.85136704 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.820421845 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.053506885 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.828003743 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.810416964 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.81089564 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.846854763 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.818169472 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.809364545 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.138301978 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.821654907 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.82790298 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.814829409 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.811942435 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.977944996 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.818935493 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.961355879 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.819972683 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.816744278 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.812057121 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.053727895 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.827804746 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.352597128 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.824822075 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.810312491 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.902173391 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.966953871 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.282790039 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.824213921 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.980912875 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.217014639 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.834932818 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.819091502 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.232530001 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.839155512 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.817644212 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.812734178 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.813137491 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.809987308 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.854554531 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.82813777 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.264922445 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.352326447 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.151888629 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.838013551 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.826083875 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.812199026 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.132967832 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.820255482 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.810814653 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.046718842 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.357653079 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.824748973 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.818352009 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.330790975 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.828391456 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.831064489 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.821189104 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.061823888 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.828382358 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.856401752 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.811319941 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.819001012 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.814314705 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.830743581 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.81948623 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.813716492 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.32294721 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.920630875 seconds)
  done (took 225.144509187 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.814446038 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.81588579 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.811189358 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.81582141 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.811970147 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.813867448 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.812567698 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.811830967 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.812241801 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.810846199 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.811878797 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.812345456 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.814096833 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.818161761 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.817646127 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.813697695 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.416219148 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.812672923 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.811627207 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.812817978 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.453123317 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.818545372 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.81276452 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.812718891 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.814852885 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.815219182 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.820491605 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.816150454 seconds)
  done (took 165.780741946 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.813414382 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.926230893 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.836382952 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.843232154 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.82272158 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.813979391 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.912005356 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.834063843 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.821269329 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.813881827 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.81445557 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.874026519 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.826230876 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.912459879 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.848186627 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.921598677 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.920866785 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.823847388 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.814135031 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.814341779 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.844476335 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.82264938 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.876516806 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.939712891 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.833698452 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.928414357 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.836004953 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.81667832 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.817017297 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.928145477 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.836358198 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.87556365 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.84705495 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.835341994 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.935868312 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.933086365 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.923416035 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.923257838 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.823840178 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.816468631 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.815632217 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.818298288 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.930216402 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.835036885 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.817893529 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.930997803 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.83572568 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.816973996 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.81589448 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.817318495 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.829485182 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.83609311 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.882143027 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.946486518 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.85268329 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.840330476 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.914809431 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.942942472 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.818602299 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.914140844 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.825858114 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.929356063 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.839897187 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.818381707 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.819110947 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.819733687 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.84625626 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.921809643 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.923891604 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.827761876 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.915336228 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.854633011 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.82538951 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.817820927 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.818691715 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.931258196 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.934834417 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.854362988 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.854172193 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.849461655 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.82823723 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.818541568 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.819090073 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.83410043 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.823354907 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.931529416 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.937086432 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.825016749 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.819133685 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.818309877 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.819731958 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.84310546 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.940499137 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.859463694 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.922884788 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.886428691 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.893601696 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.833951081 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.830883723 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.823557515 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.884395799 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.832551556 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.83003161 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.105384511 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.878347275 seconds)
  done (took 197.227882175 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.190194651 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.869728968 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.874524577 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.129441277 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.17445223 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.719595495 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.862235302 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.86536604 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.893842297 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.052919908 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.942113635 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.885162203 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.854570008 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.841499198 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.864961579 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.892332232 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.873530642 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.194257577 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.089234654 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.98169276 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.856386968 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.16996146 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.174209688 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.457491754 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.915049599 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.273705453 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.423352176 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.995523676 seconds)
  done (took 60.073120779 seconds)
done (took 798.717544436 seconds)
SAVING RESULT...
DONE!
