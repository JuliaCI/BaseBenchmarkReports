cset: moving following pidspec: 23380
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.390638665 seconds)
loading group "string"... done (took 0.508619113 seconds)
loading group "linalg"... done (took 8.453372953 seconds)
loading group "parallel"... done (took 0.174067372 seconds)
loading group "find"... done (took 1.371645703 seconds)
loading group "tuple"... done (took 1.960120464 seconds)
loading group "dates"... done (took 1.333823095 seconds)
loading group "micro"... done (took 0.210726468 seconds)
loading group "io"... done (took 0.570109793 seconds)
loading group "scalar"... done (took 41.558038829 seconds)
loading group "sparse"... done (took 12.931522634 seconds)
loading group "broadcast"... done (took 1.026649154 seconds)
loading group "union"... done (took 14.304511803 seconds)
loading group "simd"... done (took 4.934113006 seconds)
loading group "random"... done (took 9.806535276 seconds)
loading group "problem"... done (took 2.05849927 seconds)
loading group "array"... done (took 23.153002807 seconds)
loading group "misc"... done (took 1.059353134 seconds)
loading group "sort"... done (took 3.466122333 seconds)
loading group "collection"... done (took 20.690166593 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.572944492 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.132797125 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.143252491 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.171724595 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206312952 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.137592544 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157027591 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.460402595 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.05000048 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.212254374 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141944173 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.52925152 seconds)
done (took 5.653078492 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224073085 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.072168761 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125541829 seconds)
  done (took 0.882105961 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073698698 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.170774636 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090035476 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.106709695 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.108493347 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.092234203 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.109342463 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109869357 seconds)
  done (took 1.474787003 seconds)
done (took 3.354267775 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.75796019 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.836005225 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.488170251 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.121887031 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.155165721 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.131154269 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.303645388 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.160629822 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.106315965 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.114457871 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174255129 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.353719324 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.477843465 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.935842279 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.107341489 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127427061 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.080078417 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.708125189 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078898358 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129742584 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.500321895 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.108099768 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113810866 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123993635 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.212153418 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.114542623 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.189745271 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.106100289 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.669185974 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100901297 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.179784058 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.09631323 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160493686 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.225722149 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.077419936 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.107382036 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674785254 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.189499535 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.110332171 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.092279982 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679168398 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.077885024 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.199086209 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105716189 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109650888 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.196973866 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115207782 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.074613807 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097677602 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087155663 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.170071848 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.46651632 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.102397004 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.141237131 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091531157 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.696393385 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091151799 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152866275 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12301521 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.105855155 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.09395008 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089051098 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.180452836 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095851005 seconds)
  done (took 19.572507091 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114350961 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139546182 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.093028246 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137190317 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138872492 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095454282 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082204534 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.092207286 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107837326 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181397072 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135375102 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.143602758 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072047092 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.094535229 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114401467 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232140516 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.117871026 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118079669 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.080012007 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104169593 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122455545 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.110651036 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107134176 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093181266 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168353324 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206240214 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.121365354 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122888938 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.077095255 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112831025 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140662909 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.160593909 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074408456 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091347122 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178322652 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.10439297 seconds)
  done (took 5.087315988 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195862723 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119087891 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.185759419 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.174632846 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146360292 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167919239 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116725832 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.261652175 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.222319486 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179552401 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12794597 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097993046 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093493979 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07882911 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.129381704 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07500361 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.748525544 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166630133 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.146411074 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122066041 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100577147 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083361409 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.372470353 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09783216 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07929406 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099424451 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.069529784 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168866328 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100345564 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.19891377 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119543637 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085391525 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133627972 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214167646 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126371343 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.115756821 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101721809 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077493283 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.213891592 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08907964 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.096334272 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075110396 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119778656 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132834524 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117502489 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097860372 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.106611387 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.226273686 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097861203 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09540642 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.032520286 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.210473911 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093444167 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094711435 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.338977437 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096448214 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10170636 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078058613 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.2859492 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131000522 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.078397833 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075226919 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100881481 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.126440068 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077267396 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385462679 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103047224 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.938400821 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079172047 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.154468428 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098031857 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102143825 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08404685 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100203943 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098957534 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.09476101 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077924281 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094871781 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076548984 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098816207 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.097510773 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100160619 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076265152 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161919983 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.119056522 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097516374 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123960598 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.081774155 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094241328 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125595547 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.08019905 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077105776 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099404436 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136415391 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083801576 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115101455 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098511384 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140315739 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.078966014 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.180266339 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.077606176 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121505407 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097623659 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111087332 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117274697 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094950673 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081376497 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.092490051 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077274918 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.156332889 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078469833 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077348384 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098937811 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.106885668 seconds)
  done (took 23.269950682 seconds)
done (took 48.617045461 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.380285871 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109465113 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.109613156 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108745516 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106927702 seconds)
  done (took 1.575212148 seconds)
done (took 2.312889631 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.32074619 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200446812 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084205985 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191480765 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084543892 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.179583371 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.181766555 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098370138 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.207994476 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080035451 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.168745447 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.098924149 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101477177 seconds)
  done (took 2.762411683 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087458627 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114605051 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078686389 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087007559 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090196357 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087329804 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104474197 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116119183 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102828935 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081587108 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089770414 seconds)
  done (took 1.775189379 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086509051 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112414071 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07733414 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087445566 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089594499 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08748196 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105127039 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097902642 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105732874 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081696735 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092107774 seconds)
  done (took 1.760081054 seconds)
done (took 7.029002814 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.108462035 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.46058674 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118109416 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.167359652 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.333639539 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.194079443 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.611338871 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.13236851 seconds)
  done (took 16.0584121 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.108358142 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.112142921 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078935591 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094816454 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076740661 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.094078838 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079929191 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092945607 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07576261 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092759061 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.076952774 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094907702 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.080048522 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.093587628 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078871507 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078294008 seconds)
  done (took 2.211419187 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111015409 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11108874 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.100079627 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084526715 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098429808 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079942757 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101137488 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09851662 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.080079259 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096703295 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.085712352 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100230698 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.083793887 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094823079 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.082744423 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.102608638 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.079092729 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099618849 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.100051301 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.084135382 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101388316 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.080864 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.099955451 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.084794254 seconds)
  done (took 3.086476921 seconds)
done (took 22.093920365 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160415452 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081964632 seconds)
  done (took 0.984698035 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095283195 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115394133 seconds)
  done (took 0.961976213 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101728485 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093808211 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133063369 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095035117 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.095486728 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077961175 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127019298 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.095927325 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078032515 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095064866 seconds)
  done (took 1.744492807 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080884557 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096988821 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.085548889 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115744049 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.08917144 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097396253 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083575885 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099434668 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08380472 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093711024 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102102263 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098191114 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.102310976 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114182163 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.083260544 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.100583468 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087319434 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098123957 seconds)
  done (took 2.462784388 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076054227 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078492029 seconds)
  done (took 0.906936014 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.078814359 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091489689 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080946991 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096492163 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076806196 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092879197 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.075710546 seconds)
  done (took 1.345838578 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.466906066 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.182884699 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.324828747 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110907343 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.131327061 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.343756247 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.130015547 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.109544496 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.109567024 seconds)
  done (took 2.705322665 seconds)
done (took 11.862853758 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.086462951 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.128652743 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.478510589 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11303773 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.075069193 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.155297109 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.257944773 seconds)
done (took 2.048909995 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335708648 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119923036 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084620691 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.076814034 seconds)
  done (took 1.36661063 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075127655 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081605688 seconds)
  done (took 0.913627534 seconds)
done (took 3.037704288 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074306035 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.125624757 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074395831 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.09209858 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07482691 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.072375113 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.092582984 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.072969682 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.094799264 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.075183805 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.074847105 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092112359 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.074938605 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092677035 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.072457649 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089184361 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073023643 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07446053 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.210368772 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072548271 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090141003 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075352685 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.073079842 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089973379 seconds)
  done (took 2.891313658 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099372632 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093901036 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080989702 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099400395 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080125375 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.098074029 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.080959089 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.0931671 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.098115708 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.078113201 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096517812 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07960749 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094944653 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.080033889 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09538153 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.080121752 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.098451987 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076224442 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094961737 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.079633473 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.098478806 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075691554 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.097620368 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08119512 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.097167498 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079393134 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.095560177 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.075578348 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098498833 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097304346 seconds)
  done (took 3.434661949 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080630972 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.0708203 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.09017506 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.084819665 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090975206 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078133199 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.090571335 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.073901706 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095432486 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.073383177 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078389325 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090183832 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.073372366 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094557398 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077974263 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097409718 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.090836958 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.090048722 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.073200646 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077089519 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097021509 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.072785243 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093926911 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.073177485 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09015708 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072939085 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.073326896 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.090615159 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.073710019 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090327228 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.078847288 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.098092516 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073676118 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.10400601 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.079788422 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.073384687 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099532897 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07270082 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09566045 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.072941172 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.09123865 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0733977 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.09055129 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08505313 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.076533028 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093078237 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.073649403 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096061506 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078089487 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09728672 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07293378 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.073521769 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097657031 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078026133 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.096418046 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072893496 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091762724 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072930268 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095051529 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073103125 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072529155 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08955684 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.079449538 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091757477 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097240476 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.102977297 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.073013704 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.096233533 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.077906975 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098960113 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.079021406 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109576528 seconds)
  done (took 6.857444884 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077031105 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10028455 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075492338 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.075559473 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090103277 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073897265 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098347009 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074365774 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093457988 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091906777 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091292715 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075434431 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094228477 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077717746 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091967054 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.075823615 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101724581 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072077592 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091728171 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077657179 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075124262 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098779617 seconds)
  done (took 2.640393435 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214081571 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102450169 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.13776353 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093305761 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11246757 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10999483 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.081163123 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10038655 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081225189 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101558292 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101685112 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08217976 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112396344 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101386877 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084545021 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103529534 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081055681 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103455812 seconds)
  done (took 2.674623939 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087808829 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093858426 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10034457 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09446157 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.077004385 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096936526 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083312414 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109889534 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.079341019 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094073423 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087887894 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097201803 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.079700355 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093631467 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079387546 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094863142 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.078758173 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094684904 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087483648 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101389054 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101620752 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087335652 seconds)
  done (took 2.7705479 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090828068 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094668059 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097859516 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099388482 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075257538 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095785416 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084599317 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094337397 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089460527 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.096749373 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077396927 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096460884 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085015853 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094396987 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.084119798 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094797632 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079809214 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095763414 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079006084 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094230438 seconds)
  done (took 2.573360315 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116277094 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10903682 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092194106 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121284203 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113320829 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092467812 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121298617 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091781053 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109813058 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124157498 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092715938 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109938014 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103902625 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117319943 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109945782 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104070312 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121832749 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12064189 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092125964 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110391094 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10542927 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109904964 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121630116 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092646929 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110071748 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092504776 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110526287 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099861454 seconds)
  done (took 3.789834451 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075358307 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075608175 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092452731 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.074980426 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093652434 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.074832109 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.074496456 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09221015 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076886089 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092550127 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.076438776 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094134887 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077481949 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.076328864 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094496073 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.076899838 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094788525 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.074651321 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074557658 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092514782 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.077031477 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09474324 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.077875403 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09237014 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07454045 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.077698732 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093144848 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074633091 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095073358 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075355593 seconds)
  done (took 3.265371174 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083227166 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099302979 seconds)
  done (took 0.960857973 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.073473491 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110512588 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07526333 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081017014 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102293133 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077930045 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105757095 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100761125 seconds)
  done (took 1.503410277 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099810036 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114865321 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084143858 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108692379 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097672819 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.114762793 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160836614 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084719683 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103844052 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078908229 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.115932816 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.0782156 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.10496496 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083210184 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10647182 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093882663 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096655206 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088468941 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104232821 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081559825 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102596661 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095587833 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107118006 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.085412945 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099568744 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090922253 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11116402 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10829526 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083000228 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10946123 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085916269 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090400531 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083356826 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101511976 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.07916235 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.114252486 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09604461 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102587089 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.087898437 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102731245 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087448653 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095052355 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088423084 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104300882 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091222161 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101777688 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084218576 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094540456 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.079285661 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.099914646 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076515218 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099603668 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.072304515 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10588462 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.08752551 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115468969 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080682164 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101711036 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.082927602 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099837575 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.085859624 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10093047 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089610016 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100389173 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088620045 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.106170713 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086991637 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095145409 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07135948 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097168937 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.088627505 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122034901 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089949403 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10209592 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084552211 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097886637 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084213061 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102884042 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087077765 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107906226 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08393886 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103843479 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089033359 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101189592 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.082051452 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.103659984 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.080396787 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100461515 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079162228 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116362241 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08081276 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097540379 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079728046 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107436008 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.082454708 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099743166 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079967611 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105902001 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.072026822 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102497186 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084487991 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105152505 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091030533 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102300047 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085107943 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106188381 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089451236 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101882331 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.081856664 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09321867 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084176757 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099306339 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086500178 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090288953 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084009181 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.100890882 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084369483 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107521911 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08010879 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102052407 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089716565 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10882986 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081028141 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092561446 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.083436152 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101787257 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089105977 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108960294 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.081261503 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095080562 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.076806112 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105860455 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083192958 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103804208 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084947326 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102325666 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07310644 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097935329 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083717692 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108073068 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.082104418 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.103683113 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.088467731 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.104337225 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081638892 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107964925 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.0816217 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.097421282 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088622732 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102054178 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076840341 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10758568 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.082929907 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.100142654 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.083383173 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107618046 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.083793249 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102996459 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080963362 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.10273246 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085165657 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.096818225 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084331087 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081087049 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110193761 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101614981 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077382241 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.074900187 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.103929168 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079411062 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100806869 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.078834794 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101962762 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084578258 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09839975 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081885325 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100942402 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095173775 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110758895 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084934152 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.104835679 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090060217 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102022294 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085885105 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10196196 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085769336 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103181226 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.087876919 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105267109 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084826966 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101616033 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076646295 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104261759 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089487048 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098207978 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080053202 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.098279243 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08329636 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10896868 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083368696 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10300425 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081282147 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105069084 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089320685 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101989035 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083283628 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.09774399 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.083802297 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.087382925 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.104154021 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085129254 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.109384326 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103057698 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.0776415 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1069343 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080919486 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105450427 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077531644 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.07997626 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098579716 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084946063 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102974793 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.082935977 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09080716 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088619951 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108445949 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084358505 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.098247709 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083882177 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11133567 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.082889847 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105758751 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.083877339 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105828636 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097521707 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098075725 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.083551848 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110258659 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.083348638 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092097118 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087551017 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100363847 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.078093938 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100885929 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081117881 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112429903 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085975438 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104373683 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.072605834 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.101546267 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082292707 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079543156 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096763868 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107309965 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.084728629 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102098085 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093032756 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104549992 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.084574815 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104228623 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083764828 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103545265 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085490733 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103252417 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084978961 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.101215447 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.079539721 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102231458 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.079727094 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079405459 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101049527 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084085757 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104141236 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086178399 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101391845 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089293268 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.102779843 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084775889 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.121802737 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.099897344 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.080808864 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104044289 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087262169 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102298936 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.083550985 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097190532 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089302024 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102417683 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090389089 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102081614 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.075749663 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.103983125 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084150274 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.10429792 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086267532 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.1048139 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083413259 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083333356 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103067745 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11247824 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080575599 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110127716 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086391025 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105579523 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084029443 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.105097782 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083558319 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098567101 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083596705 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104085945 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084706879 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101647221 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087000768 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103635685 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083799827 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081820026 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105132126 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.0847518 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106047297 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.073556477 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.098784486 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.080788887 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103768813 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088588523 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104134494 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08288726 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101659936 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0866233 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101248193 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.076019761 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.106150278 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08643859 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104590304 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094257705 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.0995631 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084140609 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114138818 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.073786413 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.1004013 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080366759 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099513499 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089632756 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104579171 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.089886785 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103999161 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080532852 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.076037648 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.104818663 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082482233 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.093463941 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080404464 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106671824 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.0822421 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101670415 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085616211 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105978943 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086445326 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10803066 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083327261 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10323333 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084856357 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095395721 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081015194 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099166974 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084636975 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104525064 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080575125 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.076547572 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102608106 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084546287 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.103594715 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084622432 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102188477 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090041304 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102620915 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085333862 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109171899 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.074332091 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104062511 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084300172 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102770096 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080344391 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105523429 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085749456 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105828727 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089943835 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103743277 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086532819 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103196952 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080342996 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103140999 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083777662 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103819838 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.080430755 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104945077 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091088734 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099263893 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085651205 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103673726 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.081978032 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.086168667 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105443177 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084647237 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10637627 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.084456071 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105218312 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.087703634 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104282628 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086117125 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105844052 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08267464 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108475038 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.080125004 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110373522 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085600835 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106128282 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08329578 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100969356 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083634135 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102946586 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083185077 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109509165 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086739779 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10004406 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081274371 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100846818 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085502297 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109394138 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091954242 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104543267 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08643967 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097873059 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.077392544 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106124911 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.082130306 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.102437173 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088454164 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108355448 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085417567 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10152531 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083265876 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109419987 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090132964 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106754601 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082371765 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106961139 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086063232 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104308115 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.082597362 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103108572 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086635851 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106984727 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.083622475 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100297095 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095030332 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.110007208 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087907679 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103384799 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087700232 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104750098 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079908269 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105993739 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085492972 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107656481 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085898676 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104014355 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096124471 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.099423321 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084317524 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109790426 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084194794 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109451357 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079118332 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105579771 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087745709 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10572605 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079419484 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10000893 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081427144 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104986727 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08082346 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078378499 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115291725 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109221727 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08644898 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103091014 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083133895 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077988395 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098442023 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080733241 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106140096 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084190287 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.112467768 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080155619 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100148971 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.07945943 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103851026 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086595202 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10668158 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.077845618 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098367636 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081689607 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104996478 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092501615 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102338119 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085818384 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105785012 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.085463816 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100080053 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091731788 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095931599 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08688695 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116214296 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087139242 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107544547 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088677532 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111005024 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086555651 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099208645 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086806108 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104915309 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086995721 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106032649 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090400579 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120440497 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086411166 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100820425 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084002599 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105421999 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.081469446 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11168804 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087540299 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105597411 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088053045 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.103666312 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087548355 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111684013 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087951615 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105310939 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086078666 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102983838 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084703274 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102650209 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083483315 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10683688 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087217953 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104082375 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.087900468 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.100961457 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095827979 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111111096 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08719976 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096511123 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081168303 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.100947756 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079700876 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106677167 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.078886186 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082776811 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.103296841 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084547493 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107702345 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088123998 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105695747 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086971717 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104714235 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.075317903 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108980441 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087124009 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107844021 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.0782845 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105386149 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087869921 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.109907405 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090919556 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10347619 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085966312 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104959317 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088403826 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09908513 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089959954 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104278407 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.084558415 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101332577 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085283222 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.08677503 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106969518 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086230121 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108216708 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085459563 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11022873 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107880513 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.078629967 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.077509522 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108857642 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081780297 seconds)
  done (took 56.898357057 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142719676 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085078741 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075800731 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096562926 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122528015 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081184901 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095938269 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081504536 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100033293 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090585616 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096275947 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077037049 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117531039 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123846771 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120983969 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091143331 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096203625 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080595054 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095795974 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081988725 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117664517 seconds)
  done (took 2.900722881 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.09844854 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110883867 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11047181 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098862997 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106853697 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115471594 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.092996568 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113602212 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.118321102 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088884878 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118148281 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114735805 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.088904037 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108875932 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109286538 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092544221 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117166758 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087112218 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115738862 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112993958 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091525011 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113682585 seconds)
  done (took 3.152053614 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.0859615 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081234448 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.10649645 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.073586356 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104085388 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.076359532 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.1093494 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.078849668 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10877136 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.085396484 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.102359321 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.085433926 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10922718 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.075708525 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.08319971 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099050587 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089670046 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10377324 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08615607 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09876286 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.124994701 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.079305215 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.078426431 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.102331689 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.093729505 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106781447 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.084474697 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105545678 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.082821418 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104857482 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.078742896 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107210055 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088811307 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.102131806 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.082765058 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104317508 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084562361 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.078171214 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101344864 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088465067 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.099819272 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085887492 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.111750545 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.081807558 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.098173373 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087970601 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105182177 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.076406029 seconds)
  done (took 5.301518366 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.112851721 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.151611139 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08151828 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143019868 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119526582 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094664578 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.106209002 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144376863 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.078956259 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.10525845 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12409397 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.098325844 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106598497 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09152883 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109007393 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104906312 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087647948 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100396269 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089741186 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103891939 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.09011779 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.107918079 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119014802 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.096927203 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109798794 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103215196 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.081217942 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110228844 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097004497 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.112195698 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110968313 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092447916 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119755973 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106546787 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084281812 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107786938 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.101397578 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105084078 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087811119 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099073744 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087491573 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11041561 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.107358448 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101775499 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106174861 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.085941922 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106751417 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.077893873 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117214669 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.107841157 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095443323 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118888546 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109783134 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085994683 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111266697 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120697996 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086014409 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103392277 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088826938 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117336902 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.078250098 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110473933 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117653964 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.08718552 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114462734 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.118821811 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.086137951 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110289596 seconds)
  done (took 8.044285725 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108734456 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106466741 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098503351 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122964495 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110509185 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.090351524 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110613917 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.110023594 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090298873 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117486989 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089952774 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.158367816 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.10797267 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096395796 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111340407 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109981682 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.090782597 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110076661 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090835755 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110322971 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090712671 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121805455 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110264093 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12155277 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103849713 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107958799 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089923446 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111903356 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121900809 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091103289 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124848029 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.109819801 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090711261 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122021007 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122906388 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091852048 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104871119 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090326847 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.109091784 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10646077 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084740194 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118946281 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088224459 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108151966 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08996078 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112151175 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121879287 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123780676 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09700974 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11813162 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110521054 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102675079 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110741359 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090458294 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122739682 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.130986141 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122267329 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121978726 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090259829 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.122454157 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122731518 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13062384 seconds)
  done (took 7.566461487 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110308525 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113342105 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118432216 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.073779525 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097525565 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08610283 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098259902 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.079233691 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.117780615 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.116837048 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100113615 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110656217 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113480663 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100276616 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110599101 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113605438 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09030848 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110497712 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096400899 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110448202 seconds)
  done (took 2.908430155 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087461787 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118935298 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.079195273 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107142007 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.083612253 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110080951 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.084446316 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105667597 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08218463 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105330658 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095579367 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115803723 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101981644 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089485616 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116366093 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11058764 seconds)
  done (took 2.438316514 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09940281 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120091522 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124755199 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087135953 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.101776523 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.086731764 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.08402782 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100064286 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.078126492 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.111561098 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088609219 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109250666 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085239256 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100966967 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.079662122 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105173892 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.075655684 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.102974436 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.081808656 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.122699433 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.084296608 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102780314 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.082466343 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104233217 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.082650801 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.107184353 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105541017 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076537159 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.09737779 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082579983 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.101707551 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.08832429 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.095354237 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084876907 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.076476219 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.096411724 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.080852275 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102366284 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.084341999 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102463489 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.076305043 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.101661095 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081076331 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.100144471 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075181674 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102570991 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075090946 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.103683363 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081251615 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101292124 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.081469221 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106424204 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085324888 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109813262 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.08878824 seconds)
  done (took 5.998672916 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093959769 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10256711 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08375978 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096416964 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082929525 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106509398 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083615394 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.101169197 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082312183 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096154178 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081629913 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102758571 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080931535 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102803185 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082561417 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105251877 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078876366 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.082584127 seconds)
  done (took 2.496195467 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08468466 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078881812 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.1067156 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078201805 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.098954092 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081712831 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09469731 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.077474233 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096691588 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.079632238 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097930914 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.081666903 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096571643 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.081217027 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078660862 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098900454 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.080452747 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097116458 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079367 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094301654 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081885594 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097323916 seconds)
  done (took 2.795054517 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.096557961 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.130904445 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.096273089 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.146703098 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.108191863 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.087104306 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.117513626 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.08747534 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.126129566 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.08621398 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.107206438 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.086918463 seconds)
  done (took 2.126775103 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102770034 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135290877 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079893994 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102737397 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094113768 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109969912 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107293898 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088378123 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122648276 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123235143 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088453743 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122756139 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122465708 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099309469 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118562334 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117336625 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088263031 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108947323 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083620776 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131175977 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109290498 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123232816 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088031954 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10912783 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08838449 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120539401 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123143503 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12278338 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088811682 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123447145 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118204067 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088669985 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123089243 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122520745 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08612497 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122591318 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08894931 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132326186 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118510761 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120163345 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085983859 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117432307 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123085062 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096139285 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1240937 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109070522 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096663533 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109267207 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08881745 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138275942 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118666786 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121234777 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096286594 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12461139 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124143425 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138536317 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122579096 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118551637 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097475349 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120172151 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118766297 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097583799 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120945591 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122125309 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116323034 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097780831 seconds)
  done (took 8.166631114 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11801434 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102325253 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08400251 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118699054 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116964287 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104107873 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085318302 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104722817 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08526929 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102099262 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15246611 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084873788 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117589553 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117794891 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087766516 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108157338 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084118896 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119125071 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102305267 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134559445 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088245001 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117021774 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116642156 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118059272 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09904142 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115317063 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106598808 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08616276 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105485149 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086488039 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113970392 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084463746 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119805262 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102280365 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096137906 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109077933 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10526443 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092018298 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10520782 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092259559 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117280332 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128382242 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107665893 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086721196 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121718011 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109454345 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088967413 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106703706 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088807379 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106953216 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123618849 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102712567 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123733877 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121694679 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08897348 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109773655 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108710805 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089354291 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110596341 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097468147 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121553593 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10985977 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139287157 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089862295 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110660344 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121742111 seconds)
  done (took 7.884189365 seconds)
done (took 152.797470941 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097343825 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137361761 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098836483 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16793062 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080279069 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.135820988 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.113525861 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.115776835 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.081097554 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.105022273 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.084774205 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.108612402 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.150658983 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.079677762 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101093347 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.082989494 seconds)
  done (took 2.595458137 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.175446658 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.288082567 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104050875 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112634904 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090614676 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108876304 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088795985 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112916868 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086080643 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.118393469 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.085912802 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.109009645 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.095436531 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109843953 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.085255515 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.109087036 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.11684251 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089783614 seconds)
  done (took 2.951865485 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110296177 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144374557 seconds)
  done (took 1.124169443 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.115600039 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182638685 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297332973 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15980814 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.348665845 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.123237971 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156149437 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.099901942 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.223758484 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.109635139 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.131634112 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.113161598 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.116732451 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.119302631 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114955616 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.090928521 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140279257 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092957988 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114303764 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.092261849 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138392568 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.113153998 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096482732 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113610259 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.188746561 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12702631 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.092597252 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.113797278 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.092356034 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113264999 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.096624835 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127313712 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128549032 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.171165709 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.117847829 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.167082288 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119956606 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090080113 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113717069 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089696654 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117112666 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116379639 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.106108954 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.112045582 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.091813621 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.12019782 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.092329189 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.113582645 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.119919868 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.100482611 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.120815907 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.095992216 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.18548454 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099063469 seconds)
  done (took 7.807266717 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795333429 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.152370969 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09090418 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.904418337 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138507689 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101747448 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.793286426 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129045076 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.240256888 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.790355191 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125678277 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121345751 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.203373141 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.269690445 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.120561134 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.332268449 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.699526194 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101307867 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.136391651 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.147036192 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092544621 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135326224 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.125377675 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.448340878 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.086674311 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107211195 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090994833 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120160675 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.155386538 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106759205 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090042845 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197537219 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.261349737 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.178309609 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108037803 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084842742 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106099393 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.165643267 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266486315 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191823939 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.171555507 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103274674 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084805168 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.119563873 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126635027 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.082150023 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1592686 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.19212341 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172957591 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089047196 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12089835 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117184334 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100912066 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.182563707 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.086168604 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.332000216 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.337584114 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085271775 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117273433 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107347807 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270510629 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112377049 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205192724 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135961247 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216888655 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089815183 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.831340384 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163211882 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.083290261 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117365884 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11523174 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093930419 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123545243 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171080073 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394917994 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12736815 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096123233 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111403193 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21064381 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.088577305 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113178179 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.168297397 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111675981 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094109258 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123286499 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120354234 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167666745 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248310292 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122462192 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093231077 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113607358 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119605107 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.087032479 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210710773 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215294396 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.155658259 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212506601 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120946998 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.160501809 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184798961 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098404426 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167360448 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115696703 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126182209 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097533157 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.213494183 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.141616108 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.109784753 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09196349 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.114328775 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14059993 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089046551 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114612235 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165095873 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478329661 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.161414253 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107529295 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089994664 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116312091 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163924456 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120681188 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.251216953 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120596001 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169942218 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121165734 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086369403 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122371175 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.167730526 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127844864 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099519215 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127621865 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121088159 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.254231116 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227534015 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107288405 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24518306 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.181821419 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100683887 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200304924 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099319142 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172372234 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12411442 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124910944 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092727819 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.832627174 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122471406 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096039303 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115707217 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195863406 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085461803 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108540118 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085725208 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.080939442 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.84148352 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109901308 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083657555 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085941301 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117726 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.115110418 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091928876 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112236481 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158991481 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23126252 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120274499 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093196238 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.106292541 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157633668 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.087944257 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107470784 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08537182 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10754683 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095140763 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111400743 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087471507 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169127595 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177872148 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.193445608 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.576992005 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083784807 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10798381 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226490897 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085446533 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301435513 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114716329 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.199643978 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187137896 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083611977 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.333819131 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166804332 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.193129232 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.087789424 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191402725 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.082566275 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.113117813 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.158977922 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084753554 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115677165 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.154628496 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124245202 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121237506 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.121795638 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107279226 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228431464 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.081359284 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188493622 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087576997 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120621435 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.302143634 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085637909 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127453238 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.159098093 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111588268 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086566307 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.700028038 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108073223 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095546184 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118670225 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221359623 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161567241 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115320514 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093072289 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122591657 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158560284 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210498775 seconds)
  done (took 43.634383917 seconds)
done (took 58.973036641 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301425357 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.255613039 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.277525735 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189437808 seconds)
  done (took 1.985204632 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172479237 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.145211089 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118501557 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.103941202 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.146773884 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.082570019 seconds)
  done (took 1.659942828 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.426042519 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.382141883 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.307666553 seconds)
  done (took 2.008950199 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.243193695 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.263436053 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.316982637 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.420065162 seconds)
  done (took 2.237575613 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.199198952 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.125499103 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.094956485 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.133919003 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.163451144 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.169163238 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.137615019 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.145048566 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.102859886 seconds)
  done (took 2.209703599 seconds)
done (took 10.993749749 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.280238536 seconds)
    (2/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.254001257 seconds)
    (3/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.272756632 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.218991636 seconds)
    (5/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.161733988 seconds)
    (6/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.263645748 seconds)
    (7/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.229098106 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.131386263 seconds)
    (9/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.113256643 seconds)
    (10/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.226312218 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122261675 seconds)
    (12/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.209382645 seconds)
    (13/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.194921476 seconds)
    (14/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.200702838 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.089836173 seconds)
    (16/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.184722507 seconds)
    (17/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.25986286 seconds)
    (18/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.11621207 seconds)
    (19/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.198908174 seconds)
    (20/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.128048267 seconds)
    (21/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.185465303 seconds)
    (22/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.203735386 seconds)
    (23/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.201533569 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.190198213 seconds)
    (25/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.224417258 seconds)
    (26/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.100904268 seconds)
    (27/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.143441134 seconds)
    (28/286) benchmarking ("sort", BigInt, false)...
    done (took 0.225527849 seconds)
    (29/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.190897874 seconds)
    (30/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.172593903 seconds)
    (31/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.09917219 seconds)
    (32/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.108874612 seconds)
    (33/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110372176 seconds)
    (34/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075270523 seconds)
    (35/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.114279943 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.114537861 seconds)
    (37/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.188251603 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.155783569 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 0.217999414 seconds)
    (40/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.123889596 seconds)
    (41/286) benchmarking ("sort", Float64, false)...
    done (took 0.147832421 seconds)
    (42/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.204299081 seconds)
    (43/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.209837931 seconds)
    (44/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.113832223 seconds)
    (45/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.151166239 seconds)
    (46/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116694837 seconds)
    (47/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.100434074 seconds)
    (48/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110463119 seconds)
    (49/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.075277818 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.138522271 seconds)
    (51/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150006332 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088699803 seconds)
    (53/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.095773227 seconds)
    (54/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.072139987 seconds)
    (55/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133302665 seconds)
    (56/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175169418 seconds)
    (57/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.152589032 seconds)
    (58/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.104974857 seconds)
    (59/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.148852864 seconds)
    (60/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.090986324 seconds)
    (61/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.135292998 seconds)
    (62/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.180889905 seconds)
    (63/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.123060266 seconds)
    (64/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.119169205 seconds)
    (65/286) benchmarking ("sort", Int8, false)...
    done (took 0.185922908 seconds)
    (66/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.085221177 seconds)
    (67/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112693575 seconds)
    (68/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.225495366 seconds)
    (69/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.08925851 seconds)
    (70/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.128785779 seconds)
    (71/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.07143764 seconds)
    (72/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.095620312 seconds)
    (73/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091621029 seconds)
    (74/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123603623 seconds)
    (75/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.088592393 seconds)
    (76/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121065473 seconds)
    (77/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.071502618 seconds)
    (78/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.109800556 seconds)
    (79/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.071839441 seconds)
    (80/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.143871643 seconds)
    (81/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.098894547 seconds)
    (82/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.116397023 seconds)
    (83/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.240707389 seconds)
    (84/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134838662 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090102075 seconds)
    (86/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.12121125 seconds)
    (87/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09082689 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 0.105259698 seconds)
    (89/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091218281 seconds)
    (90/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.090507261 seconds)
    (91/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.110131916 seconds)
    (92/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.08191162 seconds)
    (93/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.12181864 seconds)
    (94/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.090232988 seconds)
    (95/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.111218816 seconds)
    (96/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.131798938 seconds)
    (97/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.122876095 seconds)
    (98/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121889758 seconds)
    (99/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.071379022 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.13827149 seconds)
    (101/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.07404862 seconds)
    (102/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10595676 seconds)
    (103/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.19216975 seconds)
    (104/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097083074 seconds)
    (105/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132228194 seconds)
    (106/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.071240804 seconds)
    (107/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.176035957 seconds)
    (108/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.145054114 seconds)
    (109/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.088211205 seconds)
    (110/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118854462 seconds)
    (111/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09069236 seconds)
    (112/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.15312154 seconds)
    (113/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.072341207 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.133965337 seconds)
    (115/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.143578422 seconds)
    (116/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.088817252 seconds)
    (117/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.118438961 seconds)
    (118/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.096949652 seconds)
    (119/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.110867412 seconds)
    (120/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.179894526 seconds)
    (121/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.135460112 seconds)
    (122/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.185499583 seconds)
    (123/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.101826145 seconds)
    (124/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.071981531 seconds)
    (125/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.106433568 seconds)
    (126/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.109756221 seconds)
    (127/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.094405653 seconds)
    (128/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.071977197 seconds)
    (129/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.108264786 seconds)
    (130/286) benchmarking ("sort", Bool, false)...
    done (took 0.19401273 seconds)
    (131/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098433825 seconds)
    (132/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.098994442 seconds)
    (133/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095063878 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.121048209 seconds)
    (135/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.090341104 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.110592908 seconds)
    (137/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087638928 seconds)
    (138/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118026307 seconds)
    (139/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.08919425 seconds)
    (140/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.186573494 seconds)
    (141/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.070643182 seconds)
    (142/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.17386972 seconds)
    (143/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.11655664 seconds)
    (144/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.075110186 seconds)
    (145/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.134757526 seconds)
    (146/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.095475412 seconds)
    (147/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.192809188 seconds)
    (148/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.121265172 seconds)
    (149/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.09403984 seconds)
    (150/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.183102609 seconds)
    (151/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107883575 seconds)
    (152/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.081229374 seconds)
    (153/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.090291868 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111834979 seconds)
    (155/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.175735094 seconds)
    (156/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.127384167 seconds)
    (157/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.104833606 seconds)
    (158/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.0948884 seconds)
    (159/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.111277101 seconds)
    (160/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.122105105 seconds)
    (161/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.114499328 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.189990773 seconds)
    (163/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.071873903 seconds)
    (164/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.112371893 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089643793 seconds)
    (166/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.105836505 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089540887 seconds)
    (168/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.096420343 seconds)
    (169/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.073492599 seconds)
    (170/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110651014 seconds)
    (171/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.08631732 seconds)
    (172/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.101126028 seconds)
    (173/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.09245819 seconds)
    (174/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.12518143 seconds)
    (175/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.072294782 seconds)
    (176/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14516267 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.090811477 seconds)
    (178/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.108168604 seconds)
    (179/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.077713063 seconds)
    (180/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.114542742 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.095621384 seconds)
    (182/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.113225592 seconds)
    (183/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.07907332 seconds)
    (184/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.160307039 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090347734 seconds)
    (186/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.095604124 seconds)
    (187/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.098364379 seconds)
    (188/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.112247054 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 0.214795907 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085640161 seconds)
    (191/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114184547 seconds)
    (192/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.1697252 seconds)
    (193/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.075059595 seconds)
    (194/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119972653 seconds)
    (195/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093890316 seconds)
    (196/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.095552631 seconds)
    (197/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.083470323 seconds)
    (198/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.078635143 seconds)
    (199/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.098492801 seconds)
    (200/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087737988 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122826953 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118249934 seconds)
    (203/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.122268246 seconds)
    (204/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.101903685 seconds)
    (205/286) benchmarking ("sort", BigInt, true)...
    done (took 0.242711042 seconds)
    (206/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.083699012 seconds)
    (207/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.129841405 seconds)
    (208/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075161348 seconds)
    (209/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.175309948 seconds)
    (210/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.077704319 seconds)
    (211/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.094674783 seconds)
    (212/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096458889 seconds)
    (213/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.102592238 seconds)
    (214/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.073099269 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.108230526 seconds)
    (216/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112050447 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109087041 seconds)
    (218/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.071348806 seconds)
    (219/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.17764285 seconds)
    (220/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086144036 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.120998517 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.175371581 seconds)
    (223/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.08542128 seconds)
    (224/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11955185 seconds)
    (225/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.072084953 seconds)
    (226/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.125525728 seconds)
    (227/286) benchmarking ("sort", Int8, true)...
    done (took 0.214338286 seconds)
    (228/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.072042275 seconds)
    (229/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.122533076 seconds)
    (230/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.137379798 seconds)
    (231/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.1120738 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089800566 seconds)
    (233/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.105745008 seconds)
    (234/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.110032493 seconds)
    (235/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.110921993 seconds)
    (236/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.072723454 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107381533 seconds)
    (238/286) benchmarking ("sort", Float64, true)...
    done (took 0.224065306 seconds)
    (239/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097662437 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.114191952 seconds)
    (241/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.187534068 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090261032 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.113391693 seconds)
    (244/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091356527 seconds)
    (245/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.095099482 seconds)
    (246/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.089642925 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119617257 seconds)
    (248/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.157572341 seconds)
    (249/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.11141881 seconds)
    (250/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.074137145 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.114714591 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08922815 seconds)
    (253/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.096530954 seconds)
    (254/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089720614 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.113622398 seconds)
    (256/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.130768347 seconds)
    (257/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.074536199 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.092160377 seconds)
    (259/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.095368532 seconds)
    (260/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.072728801 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.106854947 seconds)
    (262/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.089347817 seconds)
    (263/286) benchmarking ("sort", Float32, false)...
    done (took 0.170365267 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084442395 seconds)
    (265/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.073077793 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097220613 seconds)
    (267/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.098340214 seconds)
    (268/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.096709532 seconds)
    (269/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.1198203 seconds)
    (270/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.077786537 seconds)
    (271/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.102456761 seconds)
    (272/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088002923 seconds)
    (273/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11061523 seconds)
    (274/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.074372314 seconds)
    (275/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107025749 seconds)
    (276/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091578564 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.109864623 seconds)
    (278/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.070970088 seconds)
    (279/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.070700258 seconds)
    (280/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.11200684 seconds)
    (281/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.081775125 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.107872131 seconds)
    (283/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.154117896 seconds)
    (284/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.072007436 seconds)
    (285/286) benchmarking ("sort", Float32, true)...
    done (took 0.224644515 seconds)
    (286/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088440189 seconds)
  done (took 36.26427901 seconds)
done (took 37.164625817 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101434833 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150662877 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09414025 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136224845 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.096364766 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.121963761 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.115643307 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.095415407 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.119972507 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.09821466 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.119239676 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.078373285 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.11721009 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.093956852 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.118355304 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114750618 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120711746 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.090516554 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.109292942 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085882366 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.10964914 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086733737 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110856204 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.078342764 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.11734018 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092187327 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.112993239 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.094262808 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.11041078 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.084059808 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.108084315 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.090345017 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.108620731 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.096622251 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.111870116 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.086522599 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.117603089 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.092585535 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111232098 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087376017 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.114658621 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087013349 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11276825 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.090976534 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11004242 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.085836205 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.08673331 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.120188592 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138487012 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087445117 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.115214387 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.093435164 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.117793618 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.089956586 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.108357361 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.086535525 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.110410666 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114500694 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.109766957 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087998719 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.115661027 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.090296947 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.10879436 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.086492988 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.085936112 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.116313681 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.117494224 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.085492064 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.116508842 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.089730628 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.083104722 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.110477262 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.084372126 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.10823333 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.092599024 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.117884051 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081640528 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.109925133 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.090874262 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.112205408 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.085817248 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108278863 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.087929713 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.1106386 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084915815 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.078414337 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.10781311 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.089546323 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108494164 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.086536323 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11279715 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089423798 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111716363 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.094446239 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110577072 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.087075863 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110879336 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086541851 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112036703 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.085197153 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105680291 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085472309 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.114377661 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.084455617 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.110399183 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.096353876 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.108139738 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.089159883 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.109063171 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.085506563 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.122924372 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.093388967 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.11081579 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087781911 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.107047198 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.089874778 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.107631507 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.084662936 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085209466 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110045896 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.087496217 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110486192 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085219314 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.113115713 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.097093882 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.106478714 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.085553283 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125985402 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087012576 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.113180305 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.08735299 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.10818291 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.086009583 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.105160182 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085142131 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.108057466 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09025625 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085430759 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.109899878 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.086193763 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.110840941 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.087540061 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.111161599 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.087615002 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.10712088 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.079666968 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111489273 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085048501 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11246806 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08730535 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110372114 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082509012 seconds)
done (took 16.29232103 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.098235624 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182665082 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.143666674 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.146543134 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.143269002 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.104102111 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122405352 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.141700174 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.095462372 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.139785903 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.14245515 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.107868729 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148421283 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.122428763 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.128028427 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093293668 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117079793 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103067242 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.154298798 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.144337406 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.122042945 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.117876205 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.138368375 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137017204 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093102118 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.13722415 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.120783011 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093708647 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.120178396 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.110989165 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133598735 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.097131414 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.119637194 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.130008317 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101215439 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.116672695 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.103877412 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113599988 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.117908134 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.094440079 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132559037 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104881577 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.114698718 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.125120476 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095458995 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121081426 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.094400817 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118059471 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096571138 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112527392 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.097713262 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139286514 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.11828541 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.095557515 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.120575503 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121404769 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.097592619 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.124178428 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.09621703 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121426247 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.117345382 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.096413148 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.123149648 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.133976333 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093489531 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119419009 seconds)
  done (took 8.781324753 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.112977319 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.146388991 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.123592747 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.100071398 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.12098543 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08309081 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108667446 seconds)
  done (took 1.758209272 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090287599 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.138485037 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116849286 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140380112 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132315949 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.1195555 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124927528 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.084855026 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131902495 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.118451099 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111728288 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163780643 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.085301408 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120319357 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.143406404 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087053908 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144373924 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090245966 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.123718852 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.149993739 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096811785 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.138474581 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.104505867 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112300445 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105358775 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.110297146 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.172682964 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095658816 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108510787 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.089936515 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114105646 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.178513216 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105341242 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119020698 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082333195 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137957828 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129756559 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089074731 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.133008646 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.089757077 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130409832 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091411568 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117928676 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.090129159 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116744291 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099179554 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120786697 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116883978 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.089532273 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.137812317 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.098466482 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.13481789 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092341068 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115389565 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.096782437 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11571361 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098819604 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114212259 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112375785 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115458079 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135986428 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110984481 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129734146 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135018526 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101565802 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.130620734 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105421698 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115567492 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092138252 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118918429 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13541549 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087621084 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.119845272 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100059443 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117329292 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112221824 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136951596 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089109184 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.122507882 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088522871 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112350966 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085545723 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.125347899 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088003813 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112108619 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101672804 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121943183 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113994542 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089165318 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.130832021 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088616399 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.121714824 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096227241 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113076304 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12489646 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111736331 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.12017448 seconds)
  done (took 12.040849674 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089785978 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086429835 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.115406441 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.088234814 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.110880593 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.086815649 seconds)
  done (took 1.550411812 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.120278239 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.113550327 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10131704 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.116957533 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.152676002 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.109044876 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.134330729 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095207426 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.129358205 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12490446 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.109384773 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.135192353 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.114734319 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.117105128 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.133230673 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.092621958 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.134292928 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.090030291 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.124901152 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089220346 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.127653806 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.092824664 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114395723 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108286998 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11866086 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.118168311 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093273129 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124944569 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.099641264 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.120031701 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.092202555 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118117372 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.093622382 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.119083476 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.134460785 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.093046504 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112593744 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.09517744 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119367463 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.093711433 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.136352154 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.092270848 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124588077 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095461442 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.119845655 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.118190024 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095843928 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117076341 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.109741446 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120624544 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095613095 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.117774656 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.093800908 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120641535 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.093871208 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119836495 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119664245 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110564839 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.117716886 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.093079536 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.115229466 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094054258 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120757575 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.093987382 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119155465 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095550489 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.118782241 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.089790286 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114640673 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.092595753 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120000207 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.089790596 seconds)
  done (took 8.977459828 seconds)
done (took 34.068695238 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.671732469 seconds)
  done (took 1.641279166 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.836164278 seconds)
  done (took 1.810120445 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.095069135 seconds)
  done (took 18.095837722 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.466167142 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.556811114 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.999462955 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.162423673 seconds)
  done (took 3.155514875 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.956983633 seconds)
  done (took 1.94717939 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297948133 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230809501 seconds)
  done (took 1.506211132 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.803951675 seconds)
  done (took 1.792087129 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.521122127 seconds)
  done (took 2.500983405 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.340205636 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.193978056 seconds)
  done (took 1.528242746 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.575455651 seconds)
  done (took 1.558156204 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.954711841 seconds)
  done (took 15.948232697 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239521805 seconds)
  done (took 1.234694559 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.295227066 seconds)
  done (took 1.281068151 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.507481832 seconds)
  done (took 4.49344353 seconds)
done (took 59.478016396 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102466424 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.099183855 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.123428064 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.095864871 seconds)
  done (took 1.404295484 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.105896294 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121907136 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.096497287 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118007479 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10069624 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118518613 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.092033586 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.161946177 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118218017 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.094700489 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118239346 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09254933 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.120622664 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.092632631 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116559328 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.094242915 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121700571 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.093251468 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.119692292 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.093485731 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11504965 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09375271 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.119753893 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092113857 seconds)
  done (took 3.605147174 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101391388 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090179629 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117403249 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089137814 seconds)
  done (took 1.395235845 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103375776 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131726035 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105083571 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12364378 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.1064537 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.130050204 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.113779706 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.088405159 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.090881307 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12420723 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09063168 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.134196756 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131177328 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.08447475 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.125655165 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.086406714 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.112257459 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.105541719 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123729787 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100115011 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.112985688 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.098593537 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.121059869 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.103372265 seconds)
  done (took 3.643861159 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172135909 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125967273 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137125836 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095113839 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162566102 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140086505 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087246351 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.138909906 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087432512 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.124875791 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.092169553 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.163923496 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.12256323 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.090507592 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113976169 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.093895714 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122779678 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.097462757 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.115382513 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103280669 seconds)
  done (took 3.386423361 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100142893 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.113653401 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.085392857 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.08790407 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121056687 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.090819412 seconds)
  done (took 1.598402679 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.089757173 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.08453554 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.110540417 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.083812638 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.113967822 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084873333 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083443454 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.109675445 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084440077 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.110242477 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.084352998 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.108398536 seconds)
  done (took 2.147607314 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.376849761 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.112562509 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.112549286 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089125238 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.09357114 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113087809 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.126289412 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.087684032 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142695403 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08830796 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.112072507 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090716003 seconds)
  done (took 2.540604611 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204310129 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093186946 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255826708 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.344952265 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151737744 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161084089 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273873733 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158791594 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.178233566 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134907733 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188392066 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152226589 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14908462 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172557363 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109412272 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.170692869 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169054223 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194336337 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144262742 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199460829 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15859109 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162936892 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173789228 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146836535 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133158082 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127405698 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115498565 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097519063 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192849495 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164102389 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168517914 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143532704 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108977957 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220114546 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209434366 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175231285 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299446469 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127931688 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.184872544 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.176599548 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247172899 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109946422 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218462478 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131485769 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135328585 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186961398 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163331642 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.186902862 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134429461 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117211808 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180662674 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177159321 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.207758632 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113354024 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31956534 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119021577 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143915183 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17799957 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182277958 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184330132 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163682742 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.117836438 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181623397 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174960577 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173074071 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141132912 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162414102 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093834058 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170132534 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189372092 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200732759 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132160485 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.208701243 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131250418 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158507336 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163212837 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121261717 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174506997 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156722112 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118948558 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118741143 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133728521 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124782793 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.156002836 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120598246 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200395239 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137877702 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.185124292 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198845287 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155138254 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164580907 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168212222 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16975737 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123693412 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.123948115 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122492423 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.165773639 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153927364 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130111364 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154486329 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119281928 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.132116827 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157005395 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09964128 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162124638 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.137114836 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170443644 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169087425 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.105429859 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168059412 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155240078 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.162146778 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172818472 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188995276 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109298213 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137524577 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197647807 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165235639 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.111274334 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178043859 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183771712 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.16708312 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143811266 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175043623 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195720945 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147867176 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191568179 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142887862 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105727362 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.145484476 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155978709 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153355576 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.158968757 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105485803 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.151255019 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19401897 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.130915282 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110669647 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17026626 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12458952 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099066312 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140740753 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133341515 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111151453 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.1443484 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134282586 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154381685 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154285817 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124367987 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15515783 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140401808 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187526538 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139069619 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.165490092 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124459959 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.125055174 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.183605291 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189651636 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133856869 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197371481 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.167415101 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19458949 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160267581 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128544832 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173495205 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097569292 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117033316 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164957223 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16524491 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166628153 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.187498432 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200647181 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.168078736 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.157494201 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152191357 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164669588 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.149103907 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15931801 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.148708265 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161295871 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170293705 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12668635 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.099215921 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126030066 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117363095 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131528275 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108749275 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21472203 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168208943 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195446441 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164804793 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146600318 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157918432 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130892767 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169999835 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176380286 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143770494 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.1879837 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185387235 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172642734 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11928393 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179153895 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.125913347 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10024341 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.138344001 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170551585 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1379813 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110745517 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149637676 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186899024 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178997294 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155069336 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209027619 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169792006 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195676609 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.126529784 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.139200417 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174106527 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161392998 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.188026529 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138661964 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.134771172 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176415491 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1419081 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188939403 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165811961 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17379058 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202955884 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.162439913 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135098121 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151782396 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140045935 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139152384 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163760329 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14384687 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110645748 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153070947 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137714201 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101308573 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210519152 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12009252 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210430104 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.132613246 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198919274 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103351045 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14788468 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168450974 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122199571 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.121436487 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174539107 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190821335 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150476471 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163602956 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179256281 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10650316 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.314485435 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188562335 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210578669 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112517193 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147773831 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166270893 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163461747 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168335623 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153237576 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147439525 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182856305 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162160946 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.148749789 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112444086 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149666416 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152639826 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.153060104 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105961714 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150301201 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142157101 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185052079 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146476965 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159057806 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132371085 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.1449391 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146153697 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115868027 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222812373 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126114237 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173332661 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.155545592 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165153594 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194301271 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12333556 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097103948 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.125360214 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174927535 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101201937 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155773857 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.20607904 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19495337 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158053281 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167796085 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106250301 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.117462349 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154289046 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118192807 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220375173 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138220847 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103944849 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183490644 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.146079589 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126491813 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130959722 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305469667 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11417427 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170618628 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.113996421 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.271324369 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09453498 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125091537 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156000944 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167395054 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.113960425 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.17778189 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159219657 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140616424 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126906751 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133495785 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185085029 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227068688 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168118722 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173291716 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.110411773 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154034605 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160937374 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172029599 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140348437 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141097059 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129879832 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17683118 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.209646446 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.100932911 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159539218 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160185928 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15638762 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170104974 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129004464 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193244932 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099575357 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16392873 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141121422 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126940753 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156435687 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.180126051 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104510015 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167714931 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15458882 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129664023 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094866754 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148792497 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157017688 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139778935 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098527814 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171612902 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124037186 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160075632 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173295147 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098545806 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150856364 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140935647 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106661586 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140515933 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144866285 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103890807 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163966964 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174842845 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127333316 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170025051 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172876171 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159956487 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155876848 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111580427 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664040822 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.123340491 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175954856 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114661838 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179260589 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14377739 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164085681 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164317413 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148927976 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164336881 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12242432 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.220706006 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169962454 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.164410483 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136316259 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121272576 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146434559 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129575536 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123376674 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162344864 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13862039 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133591479 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.125214312 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140731208 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.141497057 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106106164 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176983574 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143532502 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176294574 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177498143 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133067385 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163096887 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17009267 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1259388 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.127834685 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165181684 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137586816 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148213933 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.128662004 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102552445 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177436383 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123485158 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128114122 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156040575 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159273826 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163060316 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131349434 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125956218 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137689947 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158653859 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127962442 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.120963319 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151562936 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128624717 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.095246136 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149844856 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155967813 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.156980773 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093491801 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.16529214 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175207322 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.093063972 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131080687 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283853551 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151163724 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189368474 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.156608001 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139306221 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119805982 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15159182 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151440376 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161165217 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.102124358 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132624924 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.098583779 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.177091682 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.146826698 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152323676 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183470394 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162001504 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202419625 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136973409 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231843699 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136731472 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15648565 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.100851971 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12785471 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143200495 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1028784 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139381392 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189558269 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175050906 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.152668872 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.143888603 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095546935 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.123331653 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101490468 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157217316 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150710535 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154269441 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111350934 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.115033984 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140040503 seconds)
  done (took 75.557806302 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.148697145 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.127643448 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.144573593 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.191384162 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161905075 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237106966 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.201790224 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.220934284 seconds)
  done (took 2.520274354 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.103239908 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.153535738 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.13667052 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.120789867 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.088400148 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.328281075 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.140217273 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118439057 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.115268341 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.156494966 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.088862948 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.523802929 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120969509 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.119555633 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.083615104 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.11051515 seconds)
  done (took 3.587365184 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.168006532 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.525939581 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.84075789 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.236689199 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.21836562 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.146997069 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.740258729 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.153014047 seconds)
  done (took 12.117732608 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.125992098 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135796885 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.130915682 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.157805948 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.115231405 seconds)
  done (took 1.761286353 seconds)
done (took 116.251737014 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099245652 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123878854 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.092164798 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.122267613 seconds)
  done (took 1.515711896 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.11193606 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.084612324 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.11392337 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075964689 seconds)
  done (took 1.47115054 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.432541649 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.107619529 seconds)
  done (took 1.667814492 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.117940214 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129948507 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103310499 seconds)
  done (took 1.440673202 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10516004 seconds)
  done (took 1.200502034 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100177918 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095950933 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.136548801 seconds)
  done (took 1.426492634 seconds)
done (took 9.816071466 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115733592 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.432360951 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.382230617 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132677473 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.738390305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.376205585 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.043362278 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123965588 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.161573531 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115183499 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104307 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.716078203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.994488354 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.36622593 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.98092141 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.366173285 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.685734088 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116373248 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094947745 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116150846 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.98858679 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114005306 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088564478 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117154503 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.678034152 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418573584 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088185721 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.378795273 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087104932 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.120707312 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.373583053 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.114564381 seconds)
  done (took 16.811588547 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.098528097 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17453023 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.095559443 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117061938 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.091795624 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116676374 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097903667 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.128791907 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177644716 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.086967389 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133851658 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.08730224 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121262712 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088505121 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135008788 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087371194 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118013722 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090343325 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121972852 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090006898 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134340297 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087245148 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116770333 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090171705 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114472957 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100327418 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088770713 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12757043 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114397044 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093593395 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.089773275 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115656653 seconds)
  done (took 4.623464525 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145680466 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183483243 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.124065805 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121770673 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.164548938 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089040529 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198187282 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154847749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179593117 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117989688 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105611033 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.115162666 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122421711 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.115948884 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.108102281 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.114890346 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090509958 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117729461 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094616489 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11736403 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107239098 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114145358 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089533618 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118476055 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087773765 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129676806 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087506182 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.128301859 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087696014 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122319059 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090663332 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115988708 seconds)
  done (took 4.960317749 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.100806275 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123834187 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10391686 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.131819591 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.090198039 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122411937 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09522301 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118152068 seconds)
  done (took 1.981160052 seconds)
done (took 29.470439684 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111367955 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.092586655 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.1295834 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099636458 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.125552111 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101805447 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.114418355 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099399011 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.127898472 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.095638402 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131033518 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.086900699 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.088423953 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.11405383 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.099784533 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12017098 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.103873252 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.124995194 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.106934519 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132455326 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.087760808 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.126969838 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.09639133 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.136984382 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107757392 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135370128 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13084965 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.094665693 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088105318 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.116705387 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.101422901 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.138536387 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.096266156 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.134033232 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093467392 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.120098601 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.088337322 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.117447006 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.102310358 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.126482022 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.092895751 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.126274117 seconds)
  done (took 5.755814233 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.120421571 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.160495075 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.092916195 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.117715959 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.088923264 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.155231628 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.15604994 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.08861481 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.088700582 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.141040534 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.145310947 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.08945144 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.116667014 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.089531046 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.087669092 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.117421768 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.11114755 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.143466327 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.150294432 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.118392587 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.161585892 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.154770267 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.121516899 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.140808486 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.157205728 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.122072629 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.138597344 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.152694028 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.114925543 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.11560661 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.119429017 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.147501984 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.088606926 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.11801641 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.128548482 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.151704259 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.145303315 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.155954771 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.11876126 seconds)
  done (took 6.038792432 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102280054 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.101116911 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137199859 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.180183577 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.125941457 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.125275841 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098091387 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134962674 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.103660872 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117831304 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.091376112 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147121479 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105534133 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125739967 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.0884369 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131922882 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.107834997 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.119097282 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.092739861 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136434511 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.10624502 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130499696 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100157512 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.127477484 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.087967155 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125980633 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.091509113 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.132373062 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.094391633 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.124880956 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.092137508 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.121483384 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.091321036 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129411831 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.092687218 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.124988031 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.10951584 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125461594 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.096946764 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118517283 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099003997 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122366925 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.109066837 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.155260961 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.088608418 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.124384035 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094950259 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.125481455 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.08729147 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135585204 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097955433 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.117055312 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.103678886 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117197726 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.087390101 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131198458 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.089589378 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.12020807 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.096425037 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094687285 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137705081 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12160568 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102438923 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089211322 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123337381 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.088694216 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.117838419 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093949233 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.13945809 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.091868543 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.156794502 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.088365894 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123950917 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.096781388 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124924036 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097860129 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.117533834 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10159379 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129174565 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.09337785 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127124479 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.091562713 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.121200172 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.105588806 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.131990191 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095049984 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122796656 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.09385474 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.12069098 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089299051 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131754772 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091157413 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120488993 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.104656945 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117202685 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091691581 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.12421035 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093436947 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.087179244 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131961069 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.121838653 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088735415 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.097861372 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117918494 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.092884474 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.126438415 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.092261902 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.118416889 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.093374712 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124629988 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.088902829 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.119917884 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.092778195 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120093258 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.101388209 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.124801474 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.090745958 seconds)
  done (took 14.157092971 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.239169074 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215336495 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190217585 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.297547956 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.139453018 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11451975 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210392466 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.163289967 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089921923 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157292036 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177191469 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.184561965 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.173646462 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18386829 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172362718 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120088079 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.107310107 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.171512918 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213260223 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.294461989 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.10822323 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133244936 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16085734 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157849612 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.108096556 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133934121 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142810904 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.111515142 seconds)
  done (took 5.800822025 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.110498361 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155935861 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096584696 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144205849 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145993342 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.089471648 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.124047067 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.089555213 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101872388 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135556009 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.120364936 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.096902641 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.124340795 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.099039687 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.119165724 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.099646867 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.129064174 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.098622379 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.120945256 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.092473104 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132035865 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.106188273 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125263557 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092079413 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13703016 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.091822137 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.121395626 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141665084 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.097522755 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.144322135 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.086159214 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128057893 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.103815149 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.119064351 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.092792546 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.121919081 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.091807292 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.091002687 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12090401 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.087567772 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.119702788 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.080244889 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120758609 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.103948043 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127398968 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088782749 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124579658 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.093523545 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126081538 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085920219 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.090558516 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12343205 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09349963 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132314522 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.092620146 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126920349 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092599146 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.122318015 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099357849 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12202598 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086552443 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121029958 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.095699697 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.124082793 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.097404602 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.12647975 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094674108 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.121515637 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09897153 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.095949033 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.12473833 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.098475992 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.116740692 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.096945496 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.13588238 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.106123197 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.123737873 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094613198 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123011614 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.091662845 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077410493 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.120530708 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076955517 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124452576 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088493933 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120893035 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.091891534 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12422117 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.105016528 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129675962 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103149945 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.125446096 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.098386934 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.124243063 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087426179 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.123325366 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.107886194 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138960966 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089004255 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.116633894 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.104807843 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.121273924 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.087300013 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.081380132 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130945703 seconds)
  done (took 12.703775552 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137361819 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.179528705 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127686016 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.108835346 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154578182 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.168712959 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101984037 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.096813671 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.122039688 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114204675 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12750234 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.099733568 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.12384153 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.108645425 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165060253 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.135564613 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.096943735 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103197067 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125948613 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.175133248 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.115974777 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.159468639 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.167060094 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093346982 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.124588004 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.156419309 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.133537973 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.133841897 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.101844054 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.164055109 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.133434979 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.133228185 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.165547942 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.131715016 seconds)
  done (took 5.628300468 seconds)
done (took 51.178880187 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.228886697 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.409663743 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.190584714 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.210890549 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.24537926 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.209909518 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.19206223 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.391570869 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.915980258 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.182391527 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.196495317 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.208736497 seconds)
done (took 27.708420914 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.265425679 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.363674744 seconds)
    (2/2) benchmarking "String"...
    done (took 1.615252771 seconds)
  done (took 4.101124207 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.196140011 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.197280809 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.442191555 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.197381929 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.191483798 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.206672693 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.212486995 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.19988061 seconds)
  done (took 15.768140753 seconds)
done (took 25.453261605 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.267248068 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.379581915 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.441415624 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.209191907 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.207329245 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.19202882 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.191102438 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.233981593 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.199181849 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.214755536 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.184567195 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.480161923 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.220138909 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.58889219 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.204677477 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.205220977 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.222154964 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.43875373 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.198978761 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.18175295 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.206682508 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.180551934 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.197433191 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.226818287 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.201242656 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.198456113 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.208639498 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.193627428 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.3874259 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.22715717 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.235565063 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.195228462 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.208163371 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.19594767 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.297044764 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.227566045 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.374070435 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.197918361 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.184714414 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.192796528 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.394457629 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.578603118 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.191323488 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.19395041 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.20414387 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.250836747 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.179384574 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.902788432 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.196970519 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.211076079 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.220309657 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.574521161 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.20368616 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.20141024 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.204058499 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.448859867 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.213055791 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.210511668 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.2269099 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.203943254 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.207129738 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.191716741 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.213803031 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.194801851 seconds)
  done (took 142.940548016 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.197457443 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.198747783 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.193779596 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.253589252 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.197311397 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.198443071 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.19759648 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.197276229 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.198122917 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.201379271 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.198693549 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.192626613 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.205606199 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.153419613 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.198350691 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.218147468 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.194458318 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.193841393 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.210367391 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.198761774 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.201649512 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.198779564 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.206380091 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.193387397 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.234148561 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.282322463 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.229232116 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.219522079 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.197261264 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.199413434 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.228591768 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.257843925 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.76453038 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051665827 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.211191543 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.205954551 seconds)
  done (took 80.003115682 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.1992271 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.198630846 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19917252 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.228734536 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.19463753 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.728116809 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.728204693 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.907235696 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.645467262 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.424668506 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.416795392 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.19335807 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290987373 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.206405794 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.194122095 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.198753497 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.215236151 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.223737707 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200374035 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198599553 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.71761723 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.206945042 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.28874669 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.375162252 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.206109433 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228463868 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.590313914 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192570595 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227433872 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.521106189 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.236006909 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.193377512 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.525114581 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.43044046 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.3086317 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.193832706 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227084032 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.195576953 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.477043846 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190518571 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.195784875 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.19766029 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.201533361 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.823267232 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.194619433 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.708374185 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197562668 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.087614775 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.192372483 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.197386145 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.246236021 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.777559623 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.208707155 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.19248797 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.19517308 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.194047782 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.194177657 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.223952353 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.346550257 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.298615065 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.193144255 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.197272703 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.223185482 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.193937165 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.193982712 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.346268033 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194297522 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.406096744 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.259418953 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.40806201 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.685047073 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.187597001 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287843527 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304198224 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.187899258 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.191594704 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19144337 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.192738965 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.299234594 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.187284259 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.566087261 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.351975504 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.20353278 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.28487043 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.287147262 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.188579644 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.503613675 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.194169465 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.191631947 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.863675749 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.189058191 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.286474043 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.189631554 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.192038591 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194178179 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.567178131 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.679561206 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.365632031 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.194042746 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.675222069 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.197338192 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.577953992 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.672060111 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.806783966 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.194761834 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305897246 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.351746473 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.201993112 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.194050456 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.283981977 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.195513947 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.256552557 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.18880778 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.589132387 seconds)
  done (took 362.842899459 seconds)
done (took 586.910317102 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.829533566 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.819437517 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.928369956 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.814792813 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.779252416 seconds)
  done (took 10.290456197 seconds)
done (took 11.40891727 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.368451241 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.363351114 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.247470163 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.370199531 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.672875424 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.384356857 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.35419402 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.217138071 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.292502647 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.267125629 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.291054197 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247047479 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22891097 seconds)
  done (took 18.424731505 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.524154672 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.197230938 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273687613 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.530648108 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235425175 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515212134 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.400105083 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.211972738 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.386114089 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.212520184 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210275423 seconds)
  done (took 17.818821373 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536151089 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.198912547 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27618041 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.506479233 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238432805 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.509322874 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40909694 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.212606323 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.403092195 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.212694673 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.209868234 seconds)
  done (took 17.833869145 seconds)
done (took 55.19777732 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.235696839 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.356305276 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.218340201 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.211613212 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.207289189 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.208465949 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.211784579 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.207020962 seconds)
  done (took 10.979233182 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.201349102 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.206190393 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.204656906 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.201070939 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.203078745 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.201108614 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.204132784 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.201370584 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.201494069 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.200696631 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.20454479 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.205660086 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.202778059 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.205245264 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.203905114 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.206747611 seconds)
  done (took 20.376973669 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.207488693 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.202530708 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.203508791 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.203755896 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.203815039 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.202275324 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.202653774 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.203183001 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.20304009 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.20334982 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.2047374 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.203364713 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.202022864 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.20236232 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.205017955 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.205144966 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.203552209 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.203560731 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.209806909 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.203025332 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.204776716 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.204790302 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.20273722 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.204751292 seconds)
  done (took 30.019104984 seconds)
done (took 62.497924024 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.200739879 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.19966659 seconds)
  done (took 5.522788041 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.264310551 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.26626912 seconds)
  done (took 3.655852721 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.208201283 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.207098783 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.206734948 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.205406707 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.205644754 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.206473639 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.207175043 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.20700484 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.206079741 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.207465198 seconds)
  done (took 13.191378223 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.206891222 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.205857012 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.204952415 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.20753593 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.206967458 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.205386307 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.207758473 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.208367664 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.206641558 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.206179172 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.208280633 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.20513683 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.208776057 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.208695739 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.209126178 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.206861109 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.205955463 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.205538058 seconds)
  done (took 22.850087986 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.220461367 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.229404111 seconds)
  done (took 3.574916465 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.33588244 seconds)
    (2/7) benchmarking "second"...
    done (took 1.248776468 seconds)
    (3/7) benchmarking "month"...
    done (took 1.31715402 seconds)
    (4/7) benchmarking "year"...
    done (took 1.303944177 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.249069105 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.227746404 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.248059528 seconds)
  done (took 10.056459482 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.210175703 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.408355603 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.501569971 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.798769906 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.211616353 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.211958217 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.044250158 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.213483366 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.215892581 seconds)
  done (took 13.941773691 seconds)
done (took 73.916645582 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.202006181 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.220771236 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.206042818 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.229715087 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.547333799 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.231580783 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.204139019 seconds)
done (took 15.967736443 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.196069286 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.19467591 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.198618748 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.199221875 seconds)
  done (took 9.914912826 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.148785297 seconds)
    (2/2) benchmarking "read"...
    done (took 1.521640196 seconds)
  done (took 4.797464979 seconds)
done (took 15.840433255 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211418475 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.211007889 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.210623127 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.20836118 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.212631725 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.208979343 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.211288059 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.207873683 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.21136382 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.211468236 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.21255036 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.210950419 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.211901989 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211490504 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.209534494 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209710724 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209050285 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211357494 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.210393057 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208279745 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208577462 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210775568 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.208258293 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.209496374 seconds)
  done (took 30.176464143 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.212071244 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.208567239 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.211895161 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.212417688 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.209975359 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.212870688 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.212456071 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.209724861 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.210872579 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.212035631 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209051561 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.210100819 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.212807993 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.21146608 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213583788 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.212178627 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.213294329 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209919761 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211769883 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.210936552 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.213626068 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212139264 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.210571106 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213878799 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.211865559 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211280805 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.214616085 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.213422998 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217483497 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.214107356 seconds)
  done (took 37.4908737 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.218718563 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.220592426 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.214816991 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.215537994 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.214393259 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.215062783 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.214305654 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.215196353 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.214886978 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.214378303 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.213833943 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.21381023 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.215055931 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.21630108 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.215350448 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.217524708 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.216743202 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.215320334 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.215952334 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.21478182 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.215984734 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.216703786 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.216614063 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.216557696 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.216300079 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.216952195 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.21614766 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.216443128 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.216459828 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.215279505 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.216765935 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.217411643 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.216171601 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.215706688 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.21585698 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.21670851 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.221524315 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.224898072 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.216786537 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.216750459 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.217318057 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.218278833 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.216740838 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.217899936 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.217413855 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.217377809 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.217366886 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.218461399 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.216979182 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.217887751 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.217053058 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.216313882 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.217460246 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.21751527 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.218758127 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.218063691 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.218036967 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.218503769 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.217766619 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.217750352 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.216570323 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.217190988 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.217894737 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.216903938 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.218914085 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.218252139 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.217757895 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.21917517 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.218085538 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.218959256 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.217436819 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.220091537 seconds)
  done (took 88.757299685 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.218748631 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.2182654 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.217225712 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217533734 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216582254 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.219383858 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.215475808 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220204886 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216882302 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.219687168 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219102426 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.217619595 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216893498 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220523315 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219354614 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.215053497 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.220145068 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216656501 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.217987317 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.219126813 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219581453 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.216796557 seconds)
  done (took 27.933427467 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220343857 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.223539432 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.217182067 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221482849 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219907214 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219890516 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219798624 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.221052131 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220669313 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218837588 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217555961 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220893715 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.2191028 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219405954 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217946744 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22060184 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221501457 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220791584 seconds)
  done (took 23.095981218 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.219936611 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.218357955 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.221306706 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.21935993 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.218514473 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.222181454 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219819722 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.216732439 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.217480831 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.215577672 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.217783876 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217653371 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.218393822 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215856552 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22086165 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.20964496 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.211063713 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209094049 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210813767 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208347388 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.209400694 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212975807 seconds)
  done (took 27.889631177 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211346914 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.203061119 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.202738778 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.201919286 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.202362531 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.203164746 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.204137057 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.201023945 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.203286645 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.197640024 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197663166 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.199117889 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.198195678 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.197670408 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.197725627 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.198369232 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.202738622 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.189136098 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.195206681 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.192522207 seconds)
  done (took 25.1272628 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.193414844 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.197051439 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.196407425 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.196177217 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196397486 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.194773702 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.195175797 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.194279544 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.195143433 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.195491111 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.193622802 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.19410288 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.194978454 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.191993303 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.193728206 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.194280648 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.194276285 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.193646257 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.19256643 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.192749369 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.193110857 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.19309542 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.19338568 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.192384872 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.192435235 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.191142005 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.193070929 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.192324391 seconds)
  done (took 34.545892927 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.19300481 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.190746116 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.186611057 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.188187154 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.190419121 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.187988678 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.188859622 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.189587192 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.192795477 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.185085994 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.183421049 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.189810752 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.189953806 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.186711389 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.188051376 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.190797037 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.189084723 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.190516339 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.189573316 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189216537 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.189296836 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.187681768 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.188216792 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.188090035 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.18612166 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.189900476 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.186351882 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.189504132 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.18808552 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.187900226 seconds)
  done (took 36.774658999 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.228189993 seconds)
    (2/2) benchmarking "in"...
    done (took 1.232542698 seconds)
  done (took 3.569706248 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.187759417 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.189329137 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.190574739 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.188634315 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.189825268 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.191947361 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.191521346 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.188953702 seconds)
  done (took 10.627083502 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.191743889 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.190540204 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.191626465 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.190969735 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.190129106 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.191284805 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.197166874 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.213573966 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.196288692 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.192407357 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.197939755 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.196962645 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.194780051 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.19428595 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.195808441 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.196030855 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.196358805 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.182516097 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.183421433 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.187133363 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.184467569 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.181293648 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.187239538 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.183991145 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.187005173 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.186563904 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.180346894 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.176927461 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.178942759 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.183989741 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.180726723 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.173549243 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.176258032 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.179260531 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.179750689 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.182350613 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.188873362 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.199821459 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.191524452 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.179233458 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.181143687 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.180643535 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.178203091 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.180830458 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.179511475 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.179253658 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.184596575 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.180180723 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.178458938 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.183670046 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.186050095 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.181456177 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.178897149 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.187950668 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.18924818 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.191243967 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.205129824 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.184342925 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.188877702 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.186651411 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.193949873 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.206681364 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.182236295 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.179080644 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.191337063 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.199335603 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.188630041 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.198367641 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.178007313 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.180124437 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.186088874 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.193250626 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.204432019 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.180704977 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.179766188 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.182232604 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.180519212 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.179074571 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.184980461 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.201462454 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.182512419 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.183413172 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.189653659 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.20053965 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.18032441 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.180541314 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.178877916 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.182141369 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.179107194 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.189017768 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.199929455 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.18402856 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.178338791 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.179720337 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.184029699 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.179725425 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.183065475 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.184474407 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.178125192 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.180562841 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.181538883 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.182639958 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.190960592 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.182626317 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.18042253 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.186260547 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.181824224 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.179724289 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.188711421 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.185488073 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.182295581 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.187570877 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.186467395 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.179035206 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.185198239 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.188015171 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.183442422 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.186125156 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.184772564 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.178559785 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.187124153 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.205885885 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.185284585 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.185648413 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.189148196 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.192947191 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.181878843 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.189534641 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.185591102 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.178303957 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.183851987 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.184062678 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.188303843 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.18594458 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.184304706 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.184288802 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.183643842 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.183114387 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.183264938 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.185279111 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.185222394 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.185568215 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.187395939 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.1874074 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.185537471 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.184251067 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.188372088 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.183078205 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.183575814 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.183819871 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.181093957 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.188095282 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.187264423 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.186920677 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.186514874 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.182428855 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.185365426 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.187818597 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.183125687 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.184862897 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.188962088 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.184729002 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.187470617 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.19091577 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.189265848 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.187711224 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.184076308 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.186056429 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.188420509 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.185957277 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.185025078 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.191571199 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.188117249 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.189320932 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.182286595 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.18353986 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.187336771 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.185548837 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.185122347 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.18478399 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.184587466 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.192345638 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.188840152 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.191417305 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.188275643 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.185800282 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.186817683 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.18637441 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.187734235 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.184830371 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.188082217 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.195587509 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.197011261 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.212853015 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.188697865 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.189124059 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.183233086 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.188978674 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.19032424 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.189624656 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.186156538 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.189487818 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.186240589 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.188140002 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.185249173 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.188620291 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.184679211 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.188918716 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.191767627 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.186690917 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.18718408 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.186397352 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.189821681 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.184560052 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.190102779 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.18793735 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.184993677 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.182657471 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.187515682 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.186755899 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.185928363 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.184023238 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.190274193 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.187802491 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.190667917 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.191377884 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.190191727 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.183151692 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.187034939 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.186345524 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.186655475 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.190509839 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.205164444 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.187484068 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.19260343 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.204174456 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.184437327 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.188139956 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.189236795 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.186751361 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.185898206 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.191524503 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.185741146 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.184586536 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.184681317 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.185689267 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.184849587 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.192008974 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.182497564 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.184890634 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.184741767 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.186475785 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.183198615 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.187844697 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.185930523 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.186123929 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.186941545 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.190587727 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.185635027 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.188838321 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.187948326 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.186956874 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.188154251 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.19236507 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.194375319 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.192199625 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.188843193 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.190625176 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.186284001 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.190453479 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.187885994 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.186272748 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.188745752 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.198446795 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.211319256 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.193179358 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.205789719 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.192114521 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.19255522 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.211352091 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.191968662 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.185652485 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.185346569 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.185987227 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.185161524 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.18701781 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.186515746 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.185566103 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.188467933 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.190391322 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.18922811 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.188534615 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.189080679 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.188115603 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.186474475 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.18626052 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.186618841 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.186889343 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.191595697 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.19056734 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.185234752 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.186849448 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.197594306 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.207673283 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.188362578 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.190554007 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.19023341 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.187762918 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.186790808 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.187512603 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.189615287 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.192577958 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.192980991 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.197190128 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.1886681 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.197757576 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.189160539 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.191542579 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.195468405 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.186996855 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.187471827 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.188919412 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.189494994 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.19567384 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.205372598 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.191876843 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.192558496 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.190386217 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.189735547 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.190267102 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.190364064 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.189496404 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.189307857 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.195422031 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.21077961 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.193800941 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.193315767 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.18946504 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.189436345 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.189171264 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.188850739 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.192866517 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.188434158 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.190977287 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.190028564 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.190985472 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.189583449 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.188931705 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.191685373 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.186928731 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.190638524 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.196672909 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.208036524 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.195113745 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.191666775 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.19762411 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.192398482 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.197510054 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.210194442 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.19100594 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.189532596 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.193751775 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.19261787 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.19015735 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.192568496 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.191324394 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.19144031 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.194915431 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.192374703 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.193647511 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.192563425 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.190775293 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.191632351 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.19898073 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.213527102 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.192999407 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.198254293 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.190937489 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.192730264 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.196115556 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.192985737 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.190823162 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.19514263 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.200694773 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.201318608 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.194448424 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.191271835 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.19557139 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.191882007 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.193846739 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.193969578 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.19325079 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.195349277 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.191138639 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.194593226 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.194047762 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.192216672 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.194399407 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.19519677 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.195404576 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.202308352 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.196160629 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.1931871 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.192683899 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.194863796 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.193957114 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.196273242 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.191897231 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.193993183 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.193328301 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.195117025 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.20087478 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.199089214 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.19507158 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.191837366 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.196441551 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.192932441 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.195288367 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.194299674 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.192437194 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.194266419 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.19456877 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.196192408 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.193312576 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.193754924 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.194646745 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.193268265 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.192940331 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.197289276 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.199023435 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.193053151 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.190451376 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.192840099 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.193968814 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.195218143 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.195929114 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.201515864 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.196752048 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.203181708 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.202731323 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.198130684 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.195997665 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.196972384 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.201728044 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.195378804 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.194364327 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.19402314 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.195931037 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.196319785 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.198083491 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.199131721 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.201155074 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.195460981 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.1957306 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.202145254 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.215374266 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.195726103 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.197145288 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.200002452 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.194707231 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.195498098 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.19770461 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.196279684 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.203012295 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.215168851 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.199437548 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.197850389 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.200895935 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.202498919 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.199497079 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.197159587 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.196966716 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.192898098 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.197988451 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.198062011 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.200281334 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.19671206 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.195659101 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.197852434 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.200824704 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.202313811 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.196125187 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.198557986 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.197715296 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.196650676 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.20016621 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.199724417 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.19564442 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.19497208 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.197592057 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.199030938 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.197049424 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.20164594 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.196279036 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.198452246 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.198322468 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.19784556 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.201935794 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.207899775 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.206101168 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.197164244 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.196833799 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.197661924 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.201672132 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.200192497 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.197915487 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.197991352 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.200073414 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.197396841 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.200337996 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.198166387 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.20135916 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.215193959 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.218079688 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.200365798 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.201538734 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.203250514 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.201100379 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.196753787 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.199267585 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.20281786 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.202046753 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.204842667 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.199668315 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.210660486 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220732489 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.200959865 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.203371459 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.202424208 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.205366977 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.202732086 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.199622376 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.200142261 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.205407176 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.213323361 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.200860863 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.211257427 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.227674439 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.219530299 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.202918093 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.202336311 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.20060583 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.20375406 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.202699797 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.200792351 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.200624269 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.201809173 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.200730347 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.204641839 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.207916071 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.201717939 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.204214268 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.202622537 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.201231759 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.202123992 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.202370169 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.203365421 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.204777175 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.205076642 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.203846254 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.203174929 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.202848343 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.21232943 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.227281544 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.202030116 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.203176612 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.200652384 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.206328461 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.204942974 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.212967333 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.207903794 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.202106772 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.202370176 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.205950067 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.203250043 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.203188704 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.203208598 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.20183337 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.203583606 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.201559333 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.213166834 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.226829929 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.209134544 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.203181226 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.204129146 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.204132783 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.204851442 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.205403263 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.205172301 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.205614054 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.208533558 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.206695217 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.204871719 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.204000253 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.207870535 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.209245815 seconds)
  done (took 712.055070369 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.201766493 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201803045 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.201197806 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.203478653 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20205422 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.20214059 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.202076642 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.202707786 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.204103144 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.203147381 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.201629949 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203473305 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.20455195 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.204308351 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205306654 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.202639963 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203514783 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.203237356 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.202244228 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204317629 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.204012012 seconds)
  done (took 26.392405518 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.208319653 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.205115932 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.204802792 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.205564663 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204813594 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.207905832 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.205873886 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20544466 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.205272422 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205601306 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.207131794 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206354012 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.204589814 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.204881776 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205762 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208232487 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.206456517 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203594073 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.205556409 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.205093609 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.206139686 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.204542355 seconds)
  done (took 27.660244499 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.208660336 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.208503827 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.207792349 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.204840014 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.207521495 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.202750143 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.206766579 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.206860027 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.207525539 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.208623539 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.206291601 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.209588769 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.212089008 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.214615841 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.209242761 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.207253024 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.208455393 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.211501265 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.208027527 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.207884283 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.214239557 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.205699797 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.208689768 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.207654851 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.21191046 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.208631265 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.208876231 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.209333771 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.212696567 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.211328569 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.210795769 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.209569133 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.211578215 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.209413191 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.210599414 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.212762114 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.212327404 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.207231768 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.208991153 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.218940049 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.226388352 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.211815263 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.216429331 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.230738081 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.214248484 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.213404388 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.216290368 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.206869704 seconds)
  done (took 59.244427203 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.212366194 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.209981882 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.208175871 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.211486009 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.210760862 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.21047462 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.209661517 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.212708998 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.207973444 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.207730943 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.211202134 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.208793335 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.209004177 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.209877209 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.21225274 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.207747966 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.207062236 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.20965132 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.207627884 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.20758151 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.210281773 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.211461387 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.212346483 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.209933034 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.211180369 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.211707694 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.20992647 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.211704112 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.212782937 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.208357696 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.212093045 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.210369661 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.214120681 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.210906638 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.212315824 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.213585981 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.213479249 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.210693198 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.21470326 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.209540888 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.214723712 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.213840157 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.21513448 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.216250898 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.212266572 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.210741833 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.211651525 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.21033281 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.211431222 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.213143714 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.211560588 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.210859273 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.21454867 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.212034856 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.214859426 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.214814106 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.214661303 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.211274624 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.215347469 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.212971004 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.213166647 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.214290816 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.211553924 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.216032218 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.217502535 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.211486928 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.213584055 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.21644396 seconds)
  done (took 83.537807824 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.220510018 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.216221768 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.215112061 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216316481 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.216516447 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.213877159 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.214510553 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.215344004 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.216203396 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.21622344 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.213849157 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.21338324 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.214478042 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.216028313 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.216814972 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.214637698 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.214412527 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.216835701 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.217844385 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215847581 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.214837425 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.219386599 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.216081138 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.218174539 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.216813643 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.217891792 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.217316242 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.217995337 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215283149 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.218498978 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.216468961 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.217193854 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.216077158 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.217233274 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.216577309 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.215243197 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.215982582 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.217832068 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.219032006 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.218175822 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.216553006 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.218470157 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.217770979 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.216717298 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.217733474 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.219740363 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.21988236 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.216020797 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.218637105 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.218325716 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.21737692 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.218825801 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.217986025 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.221440848 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.220119357 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.218931987 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219715225 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220040482 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220712612 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.221310178 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221295983 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.220737671 seconds)
  done (took 76.618269373 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225752467 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218335065 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.216066458 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.216406452 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221592068 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217529899 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221713991 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.219762132 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219571534 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.218687083 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219587381 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219246716 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21733922 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223119443 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219348161 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219037346 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217311128 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.218551442 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222528521 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.221679723 seconds)
  done (took 25.541861813 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.223331918 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.222845499 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.220259473 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.221048357 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.21925284 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.220672904 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.221196249 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221174505 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217674368 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22234158 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.224810197 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220653486 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220664411 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.218788309 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.220904326 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.221119914 seconds)
  done (took 20.689513942 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.226534969 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.225503922 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.222036164 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.223463599 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.221969024 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.2211304 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.22452953 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.222937623 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.22429471 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.223833149 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.225502988 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.225025142 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.224497109 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.222317214 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.219230415 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.225219158 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.223367952 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.222072079 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.225590078 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.226102379 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.225462441 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.224879004 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.225311333 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.223450525 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.223849945 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.22851395 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.222045001 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.221027771 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.222587392 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.224992512 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.226125694 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.22361702 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.221145863 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.2203103 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.224712009 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.22154964 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.224869087 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.228831481 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.225569574 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.225582087 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.226269829 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.222372467 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.224538709 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.225728877 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.220946108 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.225849379 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.221518305 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.222757395 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.222072918 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.222040795 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.226155338 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.227296534 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.225946826 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.225416166 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.22401707 seconds)
  done (took 68.469458905 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228836394 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.226089531 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.222128988 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.225651414 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.223970385 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.222151377 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.224859156 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.226731573 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221639006 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.223473618 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.220748052 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.227091732 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223558248 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.224451332 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.223345291 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225734431 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.224107025 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.222027901 seconds)
  done (took 23.185891992 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.225657722 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.225593334 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.226051266 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.224453599 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.228137882 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.230621136 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222335765 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.226998305 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226005804 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.22439623 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22517008 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.224625049 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227990668 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.2285082 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.223814347 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222724002 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.227334189 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228127855 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.225244712 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224837801 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227350802 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227839446 seconds)
  done (took 28.122670196 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.230820604 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.226616551 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.225472817 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.239996465 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.24078802 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.227158214 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.226386791 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.225784533 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.248843834 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.275672421 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.268469561 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.241073711 seconds)
  done (took 16.029734843 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22709822 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227884439 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.222604253 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229810464 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228492261 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226525817 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226733074 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227529027 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23103328 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225974556 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226539795 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229148972 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229564964 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227845456 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229822862 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229445926 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226240741 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226485604 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228920099 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228086582 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227153047 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229531003 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228128444 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228018683 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227173139 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227753665 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231851467 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229478173 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231152816 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231989777 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233028651 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232764056 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234013994 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230688291 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233968887 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235050153 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229154537 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232911422 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233126305 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231041972 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.231391103 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232912236 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231906998 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231501642 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235296405 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231711879 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232555719 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232790579 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231308677 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233512066 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233800199 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232260301 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233216013 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232127664 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233333208 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233405928 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234520953 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233753722 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234563317 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23283165 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234042249 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234437764 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232901458 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23326143 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237394373 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232794755 seconds)
  done (took 82.387925522 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236989554 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.231340513 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233526495 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233241892 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23072784 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233167029 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233334956 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233554052 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234011121 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23454994 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233612597 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233889214 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233023833 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235137133 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239598021 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234516428 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232124827 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236759895 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234530868 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236328336 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234215969 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232527599 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232758175 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235658781 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234359972 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23676968 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23482137 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233897043 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23403733 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236853445 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23511995 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237272795 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238291047 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.239958471 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23731183 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238601056 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238619614 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240566582 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23776813 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237726323 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234443659 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23938903 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236100028 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236594951 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237654794 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235317757 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234957235 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237929429 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.240772657 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237530649 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234674932 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239373539 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.238428321 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239610251 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23749966 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234223017 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235037906 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236754726 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236551498 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238270665 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238804512 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.242936472 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241197395 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240147292 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239466596 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244052382 seconds)
  done (took 82.757305719 seconds)
done (took 1679.809754776 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.405816675 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.356730112 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.243305155 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.243323634 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.236484232 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.257304034 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.248478351 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.236711965 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.239051418 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.241201224 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.240429723 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.427670104 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.231373478 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.239592415 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.243134653 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.335944223 seconds)
  done (took 25.592261372 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.269948955 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.245803997 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.353558209 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.270142889 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.273491441 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.419246367 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.299692037 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.253640427 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.404126341 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.292923022 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.243387753 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.275689366 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.25188666 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.244754352 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.267929875 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.417219717 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.479699527 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.249601629 seconds)
  done (took 27.679663062 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.661886288 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.271643853 seconds)
  done (took 5.097959334 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.264426162 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.249899453 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.248673262 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.245339668 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.23924123 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.239258866 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.246052201 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.242960175 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.239652688 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.367212778 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.256525229 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.2557572 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.267405886 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.249980695 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.243647614 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.28356912 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.4238377 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.244406146 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.24361098 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.256279153 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.246774682 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.348255953 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.290559506 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.251695246 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.362889813 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.242767359 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.260062337 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.252193514 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.379848428 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.24684852 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.248419489 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.247558442 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.252815027 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.116734425 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.746609179 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.239515788 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.273442784 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.256335308 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.250323369 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.391212247 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.250997799 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.261288297 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.246509335 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.738119196 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.388582725 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.364530578 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.261603737 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.25553034 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.257730223 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.310206056 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.256769575 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.254595066 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.292071144 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.033958953 seconds)
  done (took 80.549312496 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.246798833 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.240651558 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.422604953 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.262462202 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.242501596 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.260082761 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.249605625 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.508782722 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.261729766 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.259344982 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.563436356 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.781321816 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.276871889 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.294181446 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.096120968 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.307434755 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.244902855 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.246209811 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.264763179 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.245101882 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.77904254 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.248693269 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.250944292 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.504132723 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.282128894 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.728890799 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.249696973 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.247565233 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.253822397 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.244451943 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.734360155 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.271275409 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.312954765 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.247230321 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.498064982 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.607406812 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.575682768 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.256362935 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.294778035 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.247089104 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.259786263 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.717016927 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.581218698 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.242281167 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.263468642 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.728822257 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.242366583 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.251965352 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.252294548 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.489501324 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.252066736 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.254948111 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.244713405 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.250340386 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.250612772 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.316896624 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.35047006 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.72393401 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.245839669 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.247144075 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.292949185 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.24872101 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.246570641 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.247422826 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.253427422 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.585151604 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.499090337 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.250725582 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.586097214 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.733067363 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.261160544 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.803370906 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.267812921 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.293695323 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.269119709 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.259442409 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.244616535 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.72652881 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.275148106 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.244518406 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.567334854 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.250117146 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.558126227 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.264572652 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.265324509 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802796655 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.260948083 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.259229926 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.246113706 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.256336653 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.245844566 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.251683173 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.508657706 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.265753807 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.247861804 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.251481804 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.267543171 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.2570254 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.248144864 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.249825177 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.796426551 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.277294457 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.251765209 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.254972221 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.248426087 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.254660367 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.249949121 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.254364116 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513366905 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.257681713 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.260203068 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.25190245 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.248554535 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.265559518 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.499043531 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.258658473 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.539847177 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.250658442 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.250148978 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.258430782 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.250732397 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.265633243 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.249543324 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.261635381 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.149383804 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.547212476 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.27293281 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.248690069 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.255030916 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.2517532 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.249213622 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.251077635 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.277856671 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.251336332 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.97738721 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.295243007 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.280626324 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.250935804 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.265111291 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.254943647 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.252036417 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.251478905 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.542070937 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.520125123 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.495858708 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.251744689 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.248746649 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.963977652 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.31583479 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.428640239 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.270933468 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.25207453 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.492284115 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.525235131 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.2527278 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.250350866 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.249645959 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505909821 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.257971081 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.555551194 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.772954144 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.277657872 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.265111645 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.986973487 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.978452058 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.260530887 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.253971394 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.569724451 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.272692393 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.249666136 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.252922044 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.25187551 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.252072524 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.274233536 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.253423076 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.248808311 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.250050708 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.384358438 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.437904999 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.268372675 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.256674354 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.726446897 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.250846717 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.2533726 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.255065617 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.249945641 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.249177633 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.308609871 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.25488971 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.284490233 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.251710447 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.258983814 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.790143458 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.250132772 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.258809947 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.438949032 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.899166891 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.277044352 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.254520148 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.2520401 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.141170186 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.751539421 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.277703473 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.542045839 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.259012502 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.289164968 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.251612479 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.276155048 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.755862028 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.255908465 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.253541353 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.875383158 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.273101054 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.820244832 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.254423685 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.254931452 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.813516972 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.275241606 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.255051298 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.253475772 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.262496474 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.546765966 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.252046614 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.284120171 seconds)
  done (took 479.258329729 seconds)
done (took 619.34194973 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.258687705 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.259922492 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.245395614 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.263896322 seconds)
  done (took 10.213115153 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.273507142 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.266506611 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.26757611 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.265600104 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.266949565 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.267585204 seconds)
  done (took 8.793982466 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.262526409 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.266229077 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.263222292 seconds)
  done (took 7.980392626 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.454331209 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.287567422 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.570335169 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.284365457 seconds)
  done (took 8.783779632 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.271285604 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.271116141 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.269726575 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.270308118 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.277983853 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.279120459 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.277016012 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.274920283 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.276721397 seconds)
  done (took 12.654569615 seconds)
done (took 49.602721532 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.257703081 seconds)
    (2/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.250213454 seconds)
    (3/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.27472186 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.254434827 seconds)
    (5/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.389194414 seconds)
    (6/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.171258451 seconds)
    (7/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.250239835 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.514723886 seconds)
    (9/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.418930277 seconds)
    (10/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.257320185 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.309481148 seconds)
    (12/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.26356954 seconds)
    (13/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.257482162 seconds)
    (14/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.259316197 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.294858218 seconds)
    (16/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.254455701 seconds)
    (17/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.252949297 seconds)
    (18/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.988680748 seconds)
    (19/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.264686199 seconds)
    (20/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.2683757 seconds)
    (21/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.872209161 seconds)
    (22/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.439773671 seconds)
    (23/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.253418626 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.667001687 seconds)
    (25/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.275754214 seconds)
    (26/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.292098012 seconds)
    (27/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.26509314 seconds)
    (28/286) benchmarking ("sort", BigInt, false)...
    done (took 2.271257262 seconds)
    (29/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.255534917 seconds)
    (30/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.293500773 seconds)
    (31/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.258311155 seconds)
    (32/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.284787096 seconds)
    (33/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.333139319 seconds)
    (34/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.255438969 seconds)
    (35/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.31032453 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.071510015 seconds)
    (37/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.256941825 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.267427366 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 2.268159223 seconds)
    (40/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.305553228 seconds)
    (41/286) benchmarking ("sort", Float64, false)...
    done (took 2.262497218 seconds)
    (42/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.592218759 seconds)
    (43/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.258132277 seconds)
    (44/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.335031466 seconds)
    (45/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.254918199 seconds)
    (46/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.38088753 seconds)
    (47/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.255345332 seconds)
    (48/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.333859566 seconds)
    (49/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.273422838 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.263972173 seconds)
    (51/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.252241115 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.604425987 seconds)
    (53/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.276282547 seconds)
    (54/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.258940136 seconds)
    (55/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.282878024 seconds)
    (56/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.260380997 seconds)
    (57/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.995104746 seconds)
    (58/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.261034136 seconds)
    (59/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.262311839 seconds)
    (60/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.467148898 seconds)
    (61/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.536199984 seconds)
    (62/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.255961823 seconds)
    (63/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.825066094 seconds)
    (64/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.475376543 seconds)
    (65/286) benchmarking ("sort", Int8, false)...
    done (took 2.27156496 seconds)
    (66/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.270037963 seconds)
    (67/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.297262877 seconds)
    (68/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.259335777 seconds)
    (69/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.347022068 seconds)
    (70/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.268384232 seconds)
    (71/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.261597037 seconds)
    (72/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.256423734 seconds)
    (73/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.266088908 seconds)
    (74/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.283304574 seconds)
    (75/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.299331844 seconds)
    (76/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.296728916 seconds)
    (77/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.260650503 seconds)
    (78/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.296873684 seconds)
    (79/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.18791943 seconds)
    (80/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.833776186 seconds)
    (81/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.279169523 seconds)
    (82/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.368513439 seconds)
    (83/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.275074403 seconds)
    (84/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.321716093 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.27366121 seconds)
    (86/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.284997514 seconds)
    (87/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.297268137 seconds)
    (88/286) benchmarking ("sort", Int64, false)...
    done (took 2.269949757 seconds)
    (89/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.017333422 seconds)
    (90/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.298384334 seconds)
    (91/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.360648177 seconds)
    (92/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.987815543 seconds)
    (93/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.420333736 seconds)
    (94/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.298103665 seconds)
    (95/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.473058004 seconds)
    (96/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.298166858 seconds)
    (97/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.585438925 seconds)
    (98/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.276005866 seconds)
    (99/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.172715396 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.101223358 seconds)
    (101/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.263945939 seconds)
    (102/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.084344112 seconds)
    (103/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.262261048 seconds)
    (104/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.287977777 seconds)
    (105/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.295482346 seconds)
    (106/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.263094481 seconds)
    (107/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.52864714 seconds)
    (108/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.820439364 seconds)
    (109/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.276793705 seconds)
    (110/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.28919801 seconds)
    (111/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.304438648 seconds)
    (112/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.595705609 seconds)
    (113/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.264710263 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.490073779 seconds)
    (115/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.282215473 seconds)
    (116/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.69725565 seconds)
    (117/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.389594987 seconds)
    (118/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.379000406 seconds)
    (119/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.294578974 seconds)
    (120/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.257449453 seconds)
    (121/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.271869369 seconds)
    (122/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.270418875 seconds)
    (123/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.968225841 seconds)
    (124/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.259183745 seconds)
    (125/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.354221247 seconds)
    (126/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.301636585 seconds)
    (127/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.256191095 seconds)
    (128/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.29238459 seconds)
    (129/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.288587332 seconds)
    (130/286) benchmarking ("sort", Bool, false)...
    done (took 1.792271514 seconds)
    (131/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.298844182 seconds)
    (132/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.260252253 seconds)
    (133/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.52958086 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.868812397 seconds)
    (135/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.04045669 seconds)
    (136/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.994701056 seconds)
    (137/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.292216964 seconds)
    (138/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.53906642 seconds)
    (139/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.290603306 seconds)
    (140/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.733876764 seconds)
    (141/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.262677867 seconds)
    (142/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.270241805 seconds)
    (143/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.409877547 seconds)
    (144/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.264850142 seconds)
    (145/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.27443493 seconds)
    (146/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.274127128 seconds)
    (147/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.31019697 seconds)
    (148/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.005367681 seconds)
    (149/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.324835319 seconds)
    (150/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.259998315 seconds)
    (151/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.009795725 seconds)
    (152/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.420788464 seconds)
    (153/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.301704886 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.146449475 seconds)
    (155/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.302337874 seconds)
    (156/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.591260473 seconds)
    (157/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.263986596 seconds)
    (158/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.314279575 seconds)
    (159/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.400196523 seconds)
    (160/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.594628809 seconds)
    (161/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.281367636 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.26163923 seconds)
    (163/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.753724665 seconds)
    (164/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.283022825 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.650003958 seconds)
    (166/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.770163012 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.143447744 seconds)
    (168/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.265176684 seconds)
    (169/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.283563359 seconds)
    (170/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.342403127 seconds)
    (171/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.358288298 seconds)
    (172/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.269846039 seconds)
    (173/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.360293181 seconds)
    (174/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.28504707 seconds)
    (175/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.998151917 seconds)
    (176/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.168232113 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.296441139 seconds)
    (178/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.382143129 seconds)
    (179/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.276585079 seconds)
    (180/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.272112096 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.328149635 seconds)
    (182/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.296475241 seconds)
    (183/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.262657923 seconds)
    (184/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.296356344 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.278431757 seconds)
    (186/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.264873391 seconds)
    (187/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.271818637 seconds)
    (188/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.355622366 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 2.268261169 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.328407953 seconds)
    (191/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.273709232 seconds)
    (192/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.352530865 seconds)
    (193/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.272154626 seconds)
    (194/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.322828204 seconds)
    (195/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.397197311 seconds)
    (196/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.262288029 seconds)
    (197/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.78439977 seconds)
    (198/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.963672248 seconds)
    (199/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.256433787 seconds)
    (200/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.275382939 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.202170958 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.476087334 seconds)
    (203/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.084688693 seconds)
    (204/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.26619411 seconds)
    (205/286) benchmarking ("sort", BigInt, true)...
    done (took 2.2747368 seconds)
    (206/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.101605665 seconds)
    (207/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.087887317 seconds)
    (208/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.279409906 seconds)
    (209/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.119953458 seconds)
    (210/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.283548095 seconds)
    (211/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.417595787 seconds)
    (212/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.379525916 seconds)
    (213/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.262093283 seconds)
    (214/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.262058497 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.293309291 seconds)
    (216/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.31864349 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.318054433 seconds)
    (218/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.262703819 seconds)
    (219/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.375078883 seconds)
    (220/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.357877061 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.595431551 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.391623175 seconds)
    (223/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.302197375 seconds)
    (224/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.2755795 seconds)
    (225/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.780643515 seconds)
    (226/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.289279397 seconds)
    (227/286) benchmarking ("sort", Int8, true)...
    done (took 2.269554669 seconds)
    (228/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.102360073 seconds)
    (229/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.357716712 seconds)
    (230/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.274653304 seconds)
    (231/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.287164361 seconds)
    (232/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.81372146 seconds)
    (233/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.269848839 seconds)
    (234/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.089184439 seconds)
    (235/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.339136693 seconds)
    (236/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.262971616 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.47976995 seconds)
    (238/286) benchmarking ("sort", Float64, true)...
    done (took 2.298428665 seconds)
    (239/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.288237263 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.667097401 seconds)
    (241/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.284180776 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.154399472 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.304028789 seconds)
    (244/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.302483861 seconds)
    (245/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.262923303 seconds)
    (246/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.315883692 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.656535079 seconds)
    (248/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.417505456 seconds)
    (249/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.286445744 seconds)
    (250/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.264412262 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.165959008 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.883346451 seconds)
    (253/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.274557938 seconds)
    (254/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.384345683 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.656161224 seconds)
    (256/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.306074978 seconds)
    (257/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.26440334 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.362885458 seconds)
    (259/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.514703452 seconds)
    (260/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.177597524 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.382640888 seconds)
    (262/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.364618182 seconds)
    (263/286) benchmarking ("sort", Float32, false)...
    done (took 2.278260794 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.390150829 seconds)
    (265/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.265123619 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.278087781 seconds)
    (267/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.25991458 seconds)
    (268/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.295818166 seconds)
    (269/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.010886139 seconds)
    (270/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.628613681 seconds)
    (271/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.267324728 seconds)
    (272/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.36400274 seconds)
    (273/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.342991845 seconds)
    (274/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.270330072 seconds)
    (275/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.292514867 seconds)
    (276/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.287046204 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.315966572 seconds)
    (278/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.423911321 seconds)
    (279/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.265186157 seconds)
    (280/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.389559926 seconds)
    (281/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.277484534 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.302543757 seconds)
    (283/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.400073781 seconds)
    (284/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.765925939 seconds)
    (285/286) benchmarking ("sort", Float32, true)...
    done (took 2.280476901 seconds)
    (286/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.52419413 seconds)
  done (took 547.068124264 seconds)
done (took 548.256699081 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.318729762 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.309109881 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.291036056 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.314513395 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.404269262 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.466944586 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.303318728 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.297038012 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.341558352 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.34213697 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.290504096 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.468551353 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.292829426 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.291230882 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.291411012 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.309534675 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.292046624 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.286587126 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.30852049 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.303470054 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.308503266 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.293365812 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.343641778 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.469496028 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.296837123 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.295854124 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.295373142 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.314952119 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.407492961 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.296972498 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.29659287 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.306989111 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.290560363 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.283086258 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.291635986 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.314641849 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.304876012 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.30502846 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.298426277 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.325359594 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.288181869 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.293328105 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.295208948 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.295804024 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.296216738 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.296836002 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.294075693 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.300815368 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.307410937 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.312135852 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.287231113 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.311185794 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.300021235 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.293580558 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.30704992 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.296660957 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.300581656 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.309722829 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.314045473 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31599812 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.282452037 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.293694344 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.296878332 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.311827397 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.304106971 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.294512784 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.290308535 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.29993162 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.291655073 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.301001926 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.2958194 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.306854488 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.297469876 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.309429358 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.329563226 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.292869008 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.286209727 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.297128655 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.302621107 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.295541121 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.30708283 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.313097091 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.303436591 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.295944101 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.310716931 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.471697239 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.305644233 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.296802263 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.306640848 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.317318701 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.305803169 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.30804011 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.30159709 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.293518146 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.307313113 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.298659932 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.299032639 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.297549584 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.302567646 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.308688738 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.289085986 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.313951244 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.2943945 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.297101304 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.296975596 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.310885167 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.289269205 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.298725685 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.322080611 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.348233138 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.302526028 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.294419968 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.301455316 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.319338448 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.309292932 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.301088427 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.295556657 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.296696199 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.291891344 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.316496542 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.300997124 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.295782175 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.315556698 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.301902411 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.295157189 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.288223673 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.301044857 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.314387518 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.417988118 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.311427682 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.33194867 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.298691504 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.302784968 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.330336849 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.318206123 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.332223587 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.302988283 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.314548853 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.315440344 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.294912847 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.309744626 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.309836172 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.30107951 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.307191796 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.296917415 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.332653261 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31523244 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.315398475 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.323170463 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.421089587 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.298829803 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.295638041 seconds)
done (took 216.516331433 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.357201885 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.294970586 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.381364877 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.296948423 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.395000103 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.396090511 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.29410639 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.295694104 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.295363811 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.67641346 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.294935607 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.294888782 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.296312706 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.296803895 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.383439774 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.299640322 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.297036615 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.636782728 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.297200206 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.369823011 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.292760853 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.296406286 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.299612309 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.677085865 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.297502446 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.29084214 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.37136569 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.299650998 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.64232073 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.291964172 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.291772464 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.640152845 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.388256463 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.316743085 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.307241412 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.304951211 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.400128303 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.316349294 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.381618665 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.380723094 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.383736993 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.336940282 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.294824884 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.294590433 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.298737267 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.299953356 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.297806512 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.324110842 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.297657129 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.297709753 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.639618669 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.310350256 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.298055845 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.298029243 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.296583708 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.326410798 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.297712614 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.29893122 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.393530692 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.298615042 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.361911048 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.679429813 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.678007818 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.301366917 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.298200518 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.298937991 seconds)
  done (took 102.047916192 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.363533561 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.376443472 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.407941549 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.301688589 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.351925122 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.41515631 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.301282188 seconds)
  done (took 10.727488092 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.308583489 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.301066755 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.347466404 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.348852114 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.299249836 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.515515494 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.303820077 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.313560063 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.299837729 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.378834477 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.303590214 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.303105135 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.31019788 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.299114262 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.351772497 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.316068883 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.415346596 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.303992735 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.303403122 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.455904955 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.299926697 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.307281235 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.376501368 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.313926165 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.30406038 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.308950637 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.248719895 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.301682388 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.29978279 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.303247734 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.301590804 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.402962746 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.305204415 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.299623462 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.299738959 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.460518293 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.302097784 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.300275821 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.304326993 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.295750569 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.303766858 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.305558079 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.304076214 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.302874063 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.30377997 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.327730651 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.304328294 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.302608789 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.30199962 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.30649465 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.379728396 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.304332168 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.302521918 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.301740018 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.382647698 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.310007774 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.303451411 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.302638643 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.30507498 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.3022874 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.45512174 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.354858292 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.303791916 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.352693017 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.305543953 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.306020626 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.30638306 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.304351238 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.396696584 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.305313585 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.354717634 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.303026596 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.532563644 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.327209865 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.307433515 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.30621783 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.308538478 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.305340854 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.30147717 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.312853225 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.302228258 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.305834043 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.311235141 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.304354519 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.305415872 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.489053873 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.463037824 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.304150324 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.317619894 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.315260494 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.305228169 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.379798748 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.305821193 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.304629671 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.356447378 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.423686291 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.38551292 seconds)
  done (took 135.217080756 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.312485031 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.31256088 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.305267895 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.327203722 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.302574293 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.305395998 seconds)
  done (took 9.081864988 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.305836799 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.304742569 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.306725599 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.308959234 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.306250508 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.308211776 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.307117738 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.307675527 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.308081571 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.307607565 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.307328331 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.309729218 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.308941429 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.308429204 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.306923249 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.30450578 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.305552308 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.304359967 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.303512577 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.307359327 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.302662402 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.305399923 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.305251934 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.306204371 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.304977934 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.299911307 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.313185983 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.30699894 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.301952738 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.310100938 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.325833089 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.30487392 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.304050505 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.311203944 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.309430783 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.303878262 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.308401555 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.305833675 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.302155058 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.306191447 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.303679816 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.308957271 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.307168933 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.310163859 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.310303866 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.312177099 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.307070054 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.316875736 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.308219755 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.308855072 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.30838965 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.308397074 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.30800671 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.307101808 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.311294586 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.327665197 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.313023335 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.311500055 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.310909783 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.307790154 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.30709069 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.311697169 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.310604587 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.313629406 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.307252416 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.307004032 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.310182682 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.305692044 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.308670463 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.307332493 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.308265677 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.306012236 seconds)
  done (took 96.407073965 seconds)
done (took 354.687390817 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.724760262 seconds)
  done (took 3.946605721 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.326697131 seconds)
  done (took 3.550086157 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.459422317 seconds)
  done (took 21.681689974 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.342662386 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.314613105 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.313304986 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.306976506 seconds)
  done (took 10.498261568 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.513541936 seconds)
  done (took 3.736551801 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.307941991 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.294608987 seconds)
  done (took 5.824022792 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.541976732 seconds)
  done (took 3.76214181 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.591480745 seconds)
  done (took 3.813980832 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.324136537 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.316623504 seconds)
  done (took 5.869819998 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.29931261 seconds)
  done (took 3.521675602 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.267500395 seconds)
  done (took 16.491800262 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.316344548 seconds)
  done (took 3.539988447 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.321012314 seconds)
  done (took 3.541331958 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.717166688 seconds)
  done (took 5.940260228 seconds)
done (took 96.939843871 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.301570363 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.307609305 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.300251366 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.30114667 seconds)
  done (took 10.433645164 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.36644035 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.345624654 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.346903865 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.352879435 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.346676297 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.341266411 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.338537702 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.33798577 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.358351685 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.346525045 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.34655721 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.347279776 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.34590194 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.337626684 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.346298115 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.362009323 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.354461997 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.363504075 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.333169709 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.348928537 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.312298125 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.351645773 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.350278253 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.314913857 seconds)
  done (took 33.520898391 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.823392123 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.384777696 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.46832894 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.366417062 seconds)
  done (took 7.267836511 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.366940333 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.36611717 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.376411835 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.418819613 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.456026515 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.377209748 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.341362839 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.335257163 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.322342487 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.368243991 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.440970316 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.382546702 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.456742381 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.313924374 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.496859969 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.310697439 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.311644468 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.365452509 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.414438051 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.436015531 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.308510317 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.365140055 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.368072312 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.385397624 seconds)
  done (took 34.310025088 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.309650936 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.332562843 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.315628703 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.314566806 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.323193866 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.311786147 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.312477818 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.313595133 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.30879811 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.318221719 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.310162073 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.327102488 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.313902887 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.30897134 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.318065705 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.315421981 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.320554061 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.314333713 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.311499797 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.321016666 seconds)
  done (took 27.547684542 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.308258505 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.309269622 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.662060098 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.560997191 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.310626203 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.310445942 seconds)
  done (took 13.688285806 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.379339933 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.517708833 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.318293951 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.657189817 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.737256236 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.317835749 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.315178287 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.54653258 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.858958681 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.832928423 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.37096729 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.383555217 seconds)
  done (took 19.464065751 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.32045755 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.312172985 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.319355947 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.328851055 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.368467903 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.320919582 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.321025936 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.311117491 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.369479773 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.374377021 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.321141215 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.36962625 seconds)
  done (took 21.267228488 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398183761 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.303971597 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31564958 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329786714 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312213029 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.516964497 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3193394 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.013267327 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.328417314 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583635787 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310358443 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404101189 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.56574107 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318688 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313646678 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.307747794 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537918372 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789877208 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315289961 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31147575 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337796573 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309356723 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314771488 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.519474463 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.527748632 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306663357 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.573985921 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.311116673 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592067897 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.32884814 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320457193 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314197664 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589678356 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956856897 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431121984 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521334407 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326768611 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307163619 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.31605253 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.309128431 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319009982 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315212632 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318195504 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309061194 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310526972 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309843255 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.028316633 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.335705084 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.312800507 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.312508267 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56610074 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410081435 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.321724167 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314186924 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340359749 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311422583 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.3183777 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407466582 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8907086 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319142705 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315804898 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.318921271 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320315155 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327160466 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934828808 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.323887978 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.318595599 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.321616542 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311098588 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311533596 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335687811 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316203585 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.333368418 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317633116 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001383829 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321395998 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313051033 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879563185 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330388093 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.319052746 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548049098 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312478386 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31634152 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.311997847 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318310194 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025273137 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32976592 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.316644402 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341594554 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.022047225 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.541104276 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337156361 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339077248 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.542566859 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.299461942 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316953518 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.312834801 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338834769 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33579825 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.033623995 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332710016 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.317154797 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573833641 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.525798245 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318703216 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.318297768 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793141866 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332135886 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.352539952 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.31974654 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.546025579 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.891656495 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335645997 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325676524 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342324137 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.322379481 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052245678 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322948137 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.342174024 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325126371 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582633206 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.104606081 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322257796 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388931271 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325860981 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.31815688 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326401124 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321608839 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.316102282 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.521213141 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345387924 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.332945823 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.31554525 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31376475 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.320863613 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329195744 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.32451956 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.539660558 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314814296 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614472518 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318958457 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31526174 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315246585 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.538360963 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.313896793 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.344869134 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579432817 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317668279 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.322967848 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.335654111 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343266366 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421184009 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343730577 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.335425604 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.582210556 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.322959635 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.328065076 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324415302 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.326200684 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331694996 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.330612802 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326714514 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894814745 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30370621 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326611634 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.216021579 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.339235436 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395637787 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.331937641 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.532353879 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.325643786 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342370704 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.325413505 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.330245902 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548079236 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.331159617 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.324865523 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407546395 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.795982071 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.906691919 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339456878 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.324932751 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.317495923 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.324997122 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325195628 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325704873 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326345796 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534013736 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34234974 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.328075294 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.892412763 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330201024 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327453196 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.333493997 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339919736 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.332703876 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32929245 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.327463688 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335801242 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340763186 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.339546215 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471254089 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.341941256 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.32832291 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.841203248 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.334689144 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.32782777 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322636371 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361756791 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.333572862 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133604333 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580156938 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338382855 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57304236 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.332213438 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.34726809 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.326966646 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326362719 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345038617 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.339845381 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354320243 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.34047852 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.336077932 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332592873 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89503968 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050746644 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856483046 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330806363 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.34400365 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331077075 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.044909553 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342221223 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32711876 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560082917 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.042283253 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342759042 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796453914 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.34072857 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066730533 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582428379 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559992234 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326013946 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.350959041 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.59176569 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.544952684 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363562344 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342946406 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33129005 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.30986381 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881078203 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355475573 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41283115 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041133005 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344795419 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.334718332 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.361155236 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.330893982 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750607659 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352559309 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32946243 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.32104687 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343134489 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138193835 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.33095294 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327598307 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962961311 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341710594 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.804623048 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344734725 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.540583913 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.343953447 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.334526101 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.328100904 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.342610243 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.591742903 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576809348 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333974537 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338786588 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859529678 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.19141387 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.336639637 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332160268 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078192174 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349070703 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611019842 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.340974118 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.341385998 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331488977 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.331784418 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328157081 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.32409035 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.338845564 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308649663 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809908818 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.330478976 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355834607 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344279353 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181061877 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.58451899 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.342417104 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.901526776 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557459996 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339165011 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356878414 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.329164478 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338352589 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.319650046 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.332017278 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.567557651 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364102589 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.558520735 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.339020681 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.322026536 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.404112136 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560749 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331066814 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347612988 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573823467 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.330997222 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.347005636 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051914897 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360320998 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340148061 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33801254 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330874367 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355444721 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399019195 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540522082 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.343374993 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.346830197 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734360758 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347616257 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359656552 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.340160351 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424712683 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347600599 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.347637922 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.109407465 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91083685 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061500007 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.915588436 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593720342 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.338403278 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339456992 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335283648 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478528713 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33566492 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609766869 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336435582 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.332090746 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361240524 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347233139 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350784698 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547387769 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607487017 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337045334 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337459055 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357316482 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.335472923 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348048194 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.54879369 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822146775 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890752023 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33843145 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.341924985 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.055544467 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62543759 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337066395 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337335954 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335625862 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.359815876 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.356768742 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.345984367 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338706915 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489189253 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586006124 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997591319 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.361500534 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.368016819 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.113650331 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349607655 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594748323 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334438772 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.547793693 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91538095 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.028587747 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606146482 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405198954 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550298448 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.337393011 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48710035 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.347496147 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.341078322 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337335535 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185661377 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.331653826 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.350964273 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927410032 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605912855 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.34189509 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.344924207 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362146545 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.34310489 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.562028461 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046013811 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563834462 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.344201747 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350366225 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340889294 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91994575 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60309475 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343438231 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.335023624 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577455703 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.579376113 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362095153 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.794308773 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.332639662 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903269975 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.316114007 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358903908 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337223486 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.034413075 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924167433 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.342568735 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830873597 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34549407 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351359012 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619593969 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.344315942 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340119451 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620759449 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.346707175 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348131346 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553552395 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.92324364 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090559145 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.365199714 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362174746 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.345353378 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341415548 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413612823 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357690096 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344718098 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.764968738 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357019793 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343910977 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347709786 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.340672523 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349912413 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.342882932 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342536553 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.341208999 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.342904774 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.33144341 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343621119 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439728924 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903531852 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360042906 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.017381268 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.666278682 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.596784048 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351828375 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.333971644 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.346349076 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344686422 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34562158 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334917185 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.339796844 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924027607 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.361393538 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.357373993 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349789197 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.561899337 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556657114 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.33783198 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558959967 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361520781 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358941699 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.327330606 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340926101 seconds)
  done (took 949.28726311 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.355684708 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.33990671 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.36456537 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.37767805 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.355596457 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.38676461 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.350157706 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.361061724 seconds)
  done (took 20.150610355 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.347726562 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.35459291 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.349848746 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.357451379 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.341638899 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.810418692 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.363739125 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.346397879 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.351762221 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.345725265 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.353661268 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.00788361 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.36850963 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.347028764 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.347036273 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.355241461 seconds)
  done (took 32.008031437 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.256861851 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.461624644 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.133178584 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.3637318 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.373716436 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.339554462 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.552593776 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.35457046 seconds)
  done (took 26.097792341 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.356386779 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.354947319 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.355344106 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.363246693 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.359153925 seconds)
  done (took 8.052297014 seconds)
done (took 1204.320675416 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.350871217 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.353417468 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.34799782 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.344945692 seconds)
  done (took 6.659509454 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.335532565 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.330486828 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.337016901 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.351642731 seconds)
  done (took 9.618315579 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.032444667 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.983171973 seconds)
  done (took 5.279356675 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.348114609 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.10727789 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.079513547 seconds)
  done (took 7.797575419 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.630568695 seconds)
  done (took 2.892612885 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.767162997 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.713683969 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.530234926 seconds)
  done (took 6.274507997 seconds)
done (took 39.784745406 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.356706172 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.592357143 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.506538119 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.344452847 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.541319071 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.50310284 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.083222073 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.34307156 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.3428063 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.342758406 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.346752736 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.531227565 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.061887009 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.591955295 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.068809349 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.594267393 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.503794114 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.351723629 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.354607064 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.349538666 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.075209551 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.346912267 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.342826834 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.35030686 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.503203813 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.487870832 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.345401034 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.58903022 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.343136661 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.347382372 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.486187456 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.341967381 seconds)
  done (took 81.534337588 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.348589741 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.359773174 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.344687843 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.350916667 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.343186187 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.350566297 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.346634692 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.342441774 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.343917302 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.349446555 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.344449339 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.356403878 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.342810969 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.347147589 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.342045763 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.345025945 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.340920116 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.346124061 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.366069348 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.343357231 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.345430274 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.34131985 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.342891944 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.360202208 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.351360835 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.342511287 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.359757065 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.344938727 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.344814069 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.363699832 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.346379433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.359643175 seconds)
  done (took 76.419641431 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.344714293 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.346092872 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.361097524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.345283028 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.359656904 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.347670409 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.346292723 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.357003579 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.353102059 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.352080412 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.347562057 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.345848019 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.363265345 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.345396541 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.344524457 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.346543431 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.346853877 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.35408874 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.344154113 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.355569094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.344568267 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.346299282 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.345548348 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.344943137 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.352358671 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.34833663 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.345112091 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.346817156 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.367337431 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.346317565 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.346811832 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.346082363 seconds)
  done (took 76.452239411 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.544921284 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.35544592 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.354876232 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.291092547 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.354541375 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.355792697 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.350024371 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.54430119 seconds)
  done (took 14.415117914 seconds)
done (took 250.0839364 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.351598541 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.350307086 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.563857675 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.379452747 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.347801106 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.382417456 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.377057984 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.566582521 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.322686795 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.58975569 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.3741582 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.391746812 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.347779713 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.388589384 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.621847568 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.495290644 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.265739745 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.362597152 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.681578364 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.372577686 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.615471978 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.360695018 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.61236122 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.309789356 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.37198999 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.378366415 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.347989546 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.255942398 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.398849729 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.685323031 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.360021437 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.346094127 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.459506082 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.460550084 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.56850357 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.508981068 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.346742741 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.439533962 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.584422498 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.349346466 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.346698291 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.121306461 seconds)
  done (took 82.032159635 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.362640701 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.479505127 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.359569708 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.357606353 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.356554745 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.478540817 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.453083244 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.357023154 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.357810477 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.359107441 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.355559256 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.355573945 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.356652534 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.357062236 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.355512345 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.354653422 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.354323945 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.356775097 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.356538414 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.406165823 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.480007285 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.379883256 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.351754249 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.357244038 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.461988307 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.501250809 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.356974542 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.351711329 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.398677381 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.358365775 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.356716518 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.404684384 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.356402989 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.356273023 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.474371282 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.458932811 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.357178795 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.356002578 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.478532248 seconds)
  done (took 55.400351365 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.360691565 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.598313976 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.770159988 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.372415618 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.359462096 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.361165735 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.432934451 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.361012564 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.363587149 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.36388232 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.508060379 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.362556987 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.390788183 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.80081941 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.370551144 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.358392816 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.357005384 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.356381717 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.610719596 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.369747945 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.458510589 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.367897569 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.434711322 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.369198958 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.380127299 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.358770853 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.364088847 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.930283391 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.363162139 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.511792623 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.116255127 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.441220746 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.911442727 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.778774955 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.12543984 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.368275821 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.360791179 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.512849029 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.360995073 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.360171899 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.434155572 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.363391099 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.776740264 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.046073411 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.384931957 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.361291264 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.954167061 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.518104819 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.597516289 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.378995917 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.803395743 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.374110793 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.360878807 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.362201691 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.597067973 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.3732557 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.364334859 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.968425147 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.394172461 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.434957002 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.362437648 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.359619316 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.614930706 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.361707997 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.600324731 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.362871184 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.367411428 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.376912641 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.779535459 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.365035466 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.058154279 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.376853827 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.357224888 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.504142382 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.59988068 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.980394402 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.361078433 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.617802075 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.924735151 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.436481705 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.361073393 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.918463502 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.443821551 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.364789749 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.361204664 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.359088674 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.356757925 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.407139586 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.430175906 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.993854205 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.045306668 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.991479897 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.460696298 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.368940243 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.356050577 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.961646951 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.385372014 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.355995482 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.776531715 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.060930177 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.385941115 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.363940407 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.063003746 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.387048484 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.436036962 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.363612464 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.790048669 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.367071919 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.405878063 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.359361156 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.368108475 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.382754474 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.433990711 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.367868115 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.358744586 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.021114744 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.534833053 seconds)
  done (took 179.746431292 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.354577475 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.35187722 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.351776282 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.351362154 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.352538961 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.360069394 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.350738784 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.351409773 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.359679451 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.352720131 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.351436762 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.354659628 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.353141283 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.359775523 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.364897955 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.360502564 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.353735889 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.358513411 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.353517764 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.352787089 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.352731731 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.373990575 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.35401427 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.35592003 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.35401447 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.356230138 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.353312631 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.35633927 seconds)
  done (took 63.233923994 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.362728077 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.903909909 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.368545933 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.487376199 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.382318859 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.35859809 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.487227376 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.414969523 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.362325681 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.35991487 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.359507618 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.652971219 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.368948838 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.859476276 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.553351098 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.487948254 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.865879099 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.387272254 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.359192044 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.358538074 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.491148777 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.372145478 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.653572091 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.915368864 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.370899502 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.90674158 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.359158552 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.362746062 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.361253642 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.909379542 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.366808648 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.652473841 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.436066542 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.419863802 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.905122915 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.858296675 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.87720016 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.505085966 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.363100732 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.361781926 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.361189985 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.353174414 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.907542585 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.365157448 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.364540377 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.902536975 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.38093884 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.364342867 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.36892466 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.360901072 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.420909365 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.419549776 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.659462683 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.919451295 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.443596635 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.377066268 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.490721559 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.743263231 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.369003209 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.860579843 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.374299862 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.942299434 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.386982205 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.35502555 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.36496496 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.369162217 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.510449499 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.491120136 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.865084713 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.391224976 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.863718677 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.53161652 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.363903476 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.364558937 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.36699682 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.914608558 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.871372766 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.533666182 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.495821964 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.554197822 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.357677036 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.366118405 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.358492036 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.439540325 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.36628597 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.917034605 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.886428585 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.390121149 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.367657765 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.368782524 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.367571782 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.534633697 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.939774385 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.447054185 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.858620267 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.678874457 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.668740247 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.375705808 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.423237979 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.381972865 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.664441855 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.372882897 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.420892127 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.806809037 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.672004868 seconds)
  done (took 162.244954804 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.600491943 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.398324098 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.456166992 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.51472543 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.963160045 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.947856088 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.36150439 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.494292322 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.473549972 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.615742495 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.376761979 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.464654441 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.576545638 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.443811783 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.05944385 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.445660736 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.457789411 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.541080056 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.506779932 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.36289622 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.006768 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.672671656 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.553396383 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.384427101 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.496574277 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.127467377 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.93719914 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.88698721 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.534743612 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.369902544 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.878040754 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.369574666 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.283360932 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.029186154 seconds)
  done (took 63.871660825 seconds)
done (took 607.79420744 seconds)
SAVING RESULT...
DONE!
